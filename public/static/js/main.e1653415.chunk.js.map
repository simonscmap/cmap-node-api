{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","Enums/spatialResolutions.js","Utility/mapSpatialResolutionToNumber.js","Utility/GenerateSpatialArray.js","Utility/flattenArray.js","Utility/splitData.js","Utility/mergeArraysAndComputeMeans.js","Utility/mergeArrays.js","Enums/visualizationSubTypes.js","Classes/SpaceTimeData.js","Enums/storedProcedures.js","Classes/TimeSeriesData.js","Classes/DepthProfileData.js","Classes/SectionMapData.js","Classes/SparseData.js","api.js","Redux/sagas.js","Redux/store.js","Enums/colors.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/TopNavBar.js","Components/Home.js","Components/GridDetail.js","Components/ConnectedTooltip.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/regionRenderModes.js","Enums/validation.js","Components/TableStatsDialog.js","Enums/temporalResolutions.js","Utility/mapTemporalResolutionToNumber.js","Components/DataRetrievalForm.js","Utility/utcDateStringToLocal.js","Components/VizControlPanel.js","Components/ChartComponents/PaletteControls.js","Components/ChartComponents/ZValueControls.js","Components/ChartComponents/ChartControlPanel.js","Components/ChartComponents/SpaceTimeChart.js","Components/ChartComponents/TimeSeriesChart.js","Components/ChartComponents/DepthProfileChart.js","Components/ChartComponents/SectionMapChart.js","Components/ChartComponents/SparseMap.js","Components/Charts.js","Components/CruiseSelector.js","Components/MapContainer.js","Utility/cleanSPParams.js","Utility/localDateToString.js","Components/Visualization.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/LoadingOverlay.js","Components/GlobalUIComponentWrapper.js","Components/LandingPage.js","Components/NavDrawer.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","CRUISE_TRAJECTORY_REQUEST_SEND","CRUISE_LIST_REQUEST_SEND","initialState","catalog","snackbarIsOpen","snackbarMessage","loadingMessage","showHelp","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","getCruiseTrajectoryRequestState","cruiseTrajectory","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","cruiseList","getCruiseListRequestState","showChartsOnce","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","trajectory","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","setLoadingMessage","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addChart","cruiseTrajectoryRequestSend","id","visualizationActionTypes","cruiseTrajectoryRequestSuccess","cruiseTrajectoryRequestProcessing","cruiseListRequestSend","cruiseListRequestSuccess","cruiseListRequestFailure","cruiseListRequestProcessing","triggerShowCharts","apiUrl","spatialResolutions","irregular","halfDegree","quarterDegree","twentyFifthDegree","fourKm","twelfthDegree","seventyKm","oneDegree","mapSpatialResolutionToNumber","resolution","_map","defineProperty","generateSpatialArray","start","end","arr","i","push","flattenArray","flattenedArray","length","j","splitData","changeInterval","numDistinct","Math","floor","mergeArraysAndComputeMeans","mergeTargetDistance","nextMergeStartDistance","numArraysPerMerge","mergedArrays","travelDistance","subArray","sum","count","k","mergeArrays","subTypes","sectionMap","timeSeries","histogram","depthProfile","heatmap","contourMap","sparse","SpaceTimeData","_this","this","classCallCheck","generateCsv","dates","Array","from","depths","hasDepth","csvArray","parameters","fields","variableValues","lats","lons","isNaN","join","metadata","Set","lonStart","latStart","lonCount","latCount","zMin","zMax","extent","depthIndexAdjust","next","row","parseFloat","add","value","finalValue","undefined","spatialResolution","Spatial_Resolution","lonMax","lon2","Lon_Max","latMax","lat2","Lat_Max","lonsList","latsList","quantile1","quantile","quantile2","toPrecision","subType","splitByDate","splitByDepth","_this2","size","variableValueSubsets","depthInterval","dateInterval","map","subset","vizSubTypes","storedProcedures","spaceTime","TimeSeriesData","stds","lat","lon","depth","csvString","DepthProfileData","SectionMapData","orientation","latsDistinct","lonsDistinct","zonalPlotDepths","meridionalPlotDepths","depthsList","splitBySpace","spaceCount","lonInterval","latInterval","SparseData","Depth_Min","variableIndex","times","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","reduce","queryString","key","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","csvParser","response","reader","readerIsDone","chunk","wrap","_context","prev","TextDecoder","CSVParser","columns","on","record","read","sent","ok","abrupt","getReader","done","write","decode","stop","keyRetrieval","_callee2","_context2","json","keyCreation","_ref3","_callee3","description","_context3","trim","_x","apply","arguments","visualization","storedProcedureRequest","_ref4","_callee4","vizData","_context4","t0","spName","console","log","e","_x2","getTableStats","_ref5","_callee5","tableName","_context5","_x3","cruiseTrajectoryRequest","_ref6","_callee6","_context6","_x4","_callee7","_context7","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","queryRequest","cruiseListRequest","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","watchCruiseTrajectoryRequest","watchCruiseListRequest","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_marked6","_marked7","_context8","visualizationActions","query","_marked8","_context9","delay","finalize","_marked9","_context10","_marked10","_context11","_marked11","_context12","takeLatest","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","_context22","_marked22","_context23","all","_marked23","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","colors","orange","backgroundGray","aqua","withStyles","theme","centered","position","top","props","classes","react_default","createElement","CircularProgress","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleClick","handleChange","event","setState","target","wrapper","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","warningCaption","Grid","container","alignItems","justify","spacing","item","TextField","margin","name","onChange","placeholder","descriptionField","Button","disabled","color","onClick","Components_LoadingSpinner","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","fontSize","useEffect","Link","component","RouterLink","to","pathname","toggleShowHelp","TopNavBar","handleLogOut","clearState","username","password","handleNavigate","route","history","handleOutsideNavigate","url","open","_this$props","navWrapper","navLink","rightNavLink","withRouter","appBar","backgroundColor","boxShadow","toolBar","zIndex","paddingLeft","textAlign","boxSizing","cursor","marginRight","&:hover","textDecoration","fontWeight","display","float","rightLinkWrapper","Home","Fragment","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","height","infoCard","padding","gridClass","gridItem","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","variableDetailTable","marginLeft","variableDetailTableRow","variableDetailTableCell","borderBottomColor","xs","src","imageSource","alt","Dataset_Description","Data_Source","Distributor","tooltip","palette","secondary","main","opacity","Tooltip","placement","popper","children","detailCellRendererParams","template","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","handleColumnRowGroupChanged","forEach","column","setColumnVisible","colId","render","gridPaper","Components_ConnectedTooltip","gridSearch","autoFocus","label","InputLabelProps","shrink","gridWrapper","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","firstName","optional","lastName","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","regionRenderModes","draw","form","validation","depthOneIsLower","depthOneOutOfBounds","depthTwoOutOfBounds","negative","date","dateOneIsLater","dateOneOutOfBounds","dateTwoOutOfBounds","latOneIsHigher","latOneOutOfBounds","latTwoOutOfBounds","lonOneIsHigher","lonOneOutOfBounds","lonTwoOutOfBounds","dataIsIrregular","dateRangeRequired","depthRangeRequired","surfaceOnlyDataset","irregularOnly","dataSizeTooLarge","generic","invalid","dataSizeWarning","dataSizePrevent","Dialog","onClose","DialogTitle","Variable","DialogContent","DialogContentText","Long_Name","Sensor","Temporal_Resolution","Time_Min","slice","Time_Max","Lat_Min","Lon_Min","Depth_Max","temporalResolutions","threeMinutes","sixHourly","daily","weekly","monthly","annual","monthlyClimatology","threeDay","eightDayRunning","eightDays","mapTemporalResolutionToNumber","reactWindowListRef","React","createRef","MenuList","componentDidUpdate","prevProps","prevState","findIndex","child","isFocused","current","scrollToItem","options","maxHeight","_getValue","getValue","slicedToArray","initialOffset","indexOf","dist_index_esm","style","itemCount","itemSize","initialScrollOffset","ref","_ref","DropdownIndicator","chunk_5d200a41_browser_esm","ArrowDropDown","SingleValue","assign","Option","DataRetrievalForm","search","addDocuments","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","handleVisualizationSpeedDialClose","visualizationSpeedDialOpen","handleVisualizationSpeedDialOpen","handleVisualizationSpeedDialClick","getSelectOptionsFromCatalogItems","items","onAutoSuggestChange","searchString","searchField","estimateDataSize","_this2$props","dt1","dt2","lat1","lon1","selectedVizType","date1","Date","date2","res","dayDiff","checkStartDepth","surfaceOnly","depth1","depth2","replace","toFixed","checkEndDepth","checkStartDate","checkEndDate","checkStartLat","checkEndLat","checkStartLon","checkEndLon","checkHeatmap","irregularSpatialResolution","checkContour","checkSection","checkHistogram","checkTimeSeries","checkDepthProfile","checkSparseMap","checkGeneralWarn","checkGeneralPrevent","JsSearch","searchIndex","addIndex","_this3","_this$state","_this$props2","_validations","fill","_validations2","startDepthMessage","endDepthMessage","startLatMessage","endLatMessage","startLonMessage","endLonMessage","heatmapMessage","contourMessage","sectionMapMessage","histogramMessage","timeSeriesMessage","depthProfileMessage","sparseMapMessage","generalWarnMessage","generalPreventMessage","parametersAreInvalid","some","showUI","displayNone","Components_TableStatsDialog","dataRetrievalFormPaper","shortenHeight","react_select_browser_esm","isLoading","components","IndicatorSeparator","isClearable","onInputChange","filterOption","variableSelect","escapeClearsValue","updateFields","styles","menu","provided","input","fontFamily","control","border","borderColor","&:focus-within","noOptionsMessage","option","_ref2",":active","&:after","singleValue","paddingRight","primary25","primary","IconButton","LibraryBooks","datePickerGridSection","material_ui_pickers_esm","format","minDate","maxDate","autoOk","handleStartDateChange","inputVariant","handleEndDateChange","FormControl","InputLabel","htmlFor","OutlinedInput","aria-describedby","labelWidth","FormHelperText","handleLatLonChange","vizTypeSelectFormControl","Select","inputProps","MenuItem","onVisualize","generalMessage","dataRetrievalFormField","retrieveDataButton","visualizationSpeedDial","visualizeButton","borderRadius","visualizeButtonText","dominantBaseline","textAnchor","vizSelect","utcDateStringToLocal","utcString","utcYear","getUTCFullYear","utcMonth","getUTCMonth","utcDate","getUTCDate","newDate","setFullYear","clearCharts","ArrowRight","formatOptionLabel","meta","context","VizControlPanel","handleOpenControlPanel","showControlPanel","handleCloseControlPanel","stopPropagation","showCharts","handleShowCharts","handleShowGlobe","closePanelChevron","aria-label","ChevronLeft","openPanelChevron","ChevronRight","Drawer","drawer","paper","drawerPaper","anchor","ButtonGroup","groupedButtons","depressed","Language","InsertChartOutlined","clearChartsButton","Delete","valueContainer","borderBottom","tableStatsButton","KeyboardButtonProps","datePickerInputAdornment","formGridItem","InputProps","padLeft","fullWidth","bottom","navDrawerWidth","controlPanelForm","borderLeft","fontVariant","colorscaleOptions","colorscaleMenu","iconButtonWrapper","_useState","useState","_useState2","paletteAnchorElement","setPaletteAnchorElement","handleOpenPalette","iconButton","Palette","currentTarget","Menu","anchorEl","keepMounted","handlePaletteChoice","popover","paddingBottom","zValues","handleZValueConfirm","SwapVert","_React$useState","_React$useState2","popoverAnchorElement","setPopoverAnchorElement","_React$useState3","_React$useState4","localZMin","setLocalZMin","_React$useState5","_React$useState6","localZMax","setLocalZMax","handleClose","validations","zMinMessage","zMaxMessage","Popover","anchorOrigin","vertical","horizontal","transformOrigin","chartWrapper","buttonBlock","onToggleSplitByDate","onToggleSplitByDepth","downloadCsv","DateRange","Waves","CloudDownload","ChartComponents_ZValueControls","ChartComponents_PaletteControls","plots","_props$chart","chart","setSplitByDate","_useState3","_useState4","setSplitByDepth","_useState5","_useState6","subTypeState","_useState7","_useState8","setPalette","_useState9","_useState10","setZValues","_zValues","subSets","generatePlotData","subsets","infoObject","variableName","react_plotly_default","zauto","zmin","zmax","x","y","z","connectgaps","autocolorscale","colorscale","contours","coloring","showlabels","labelfont","family","labelformat","colorbar","text","Unit","exponentformat","layout","font","xaxis","yaxis","paper_bgcolor","annotations","xref","yref","yshift","showarrow","handleContourMap","zsmooth","handleHeatmap","handleHistogram","ChartComponents_ChartControlPanel","setTimeout","requestAnimationFrame","values","csv","blob","Blob","URL","createObjectURL","document","setAttribute","appendChild","click","removeChild","error_y","array","visible","line","distinctMeridiansOrParallelsForSplitting","xAxisLabel","spaceTitle","handleSectionMap","plot","mapbox","center","config","mapboxAccessToken","handleSparseMap","Charts","chartsContainer","ChartComponents_SparseMap","ChartComponents_SpaceTimeChart","ChartComponents_TimeSeriesChart","ChartComponents_DepthProfileChart","ChartComponents_SectionMapChart","cruiseTrajectoryClear","esriFonts","CruiseSelector","getSelectOptionsFromCruiseList","list","Nickname","handleCruiseSelect","selection","ID","selectedCruise","outerDiv","getCruiseListState","cruiseSelect","menuList","cruiseInfo","cruiseInfoCell","Name","Start_Time","Chief_Name","Ship_Name","maxWidth","borderStyle","DrawButton","drawButton","helpText","cancelButton","polygonSymbol","symbolLayers","material","outline","UiComponents","shouldComponentUpdate","nextProps","nextState","view","esriModules","regionLayer","setShowHelp","drawMode","sketchModel","SketchViewModel","layer","defaultUpdateOptions","toggleToolOnClick","tool","getElementById","updateDomainFromGraphicExtent","Utils","webMercatorToGeographic","graphic","geometry","graphics","addEventListener","removeAll","create","mode","cancel","ui","remove","TrajectoryController","memo","trajectoryLayer","cruiseTrajectoryGeometry","paths","Graphic","symbol","cap","xSize","xmax","xmin","ySize","ymax","ymin","graphicSize","zoom","goTo","maxDuration","speedFactor","MapContainer","_this3$props","regionRenderMode","spParams","polygon","rings","esm","mapProperties","basemap","viewProperties","MapContainer_UiComponents","updateDomainFromMap","measurementPositions","globeUIRef","Components_CruiseSelector","GraphicsLayer","cleanSPParams","localDateToString","year","getFullYear","month","getMonth","day","getDate","toString","mapVizType","vizType","_mapping","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","completedShowCharts","Visualization","filteredData","_this$state$spParams","mapping","Table_Name","toggleShowUI","coordinates","newCoordinates","min","max","esriModuleNames","loadModules","loadedModules","accumulator","currentValue","currentIndex","background","Components_DataRetrievalForm","Components_VizControlPanel","toggleChartView","Components_MapContainer","Components_Charts","userLoginRequestSend","LoginDialog","handleLogin","aria-labelledby","onSubmit","preventDefault","DialogActions","snackbarClose","centerText","Snackbar","autoHideDuration","loader","right","loaderContent","flexDirection","alignItem","spinnerText","spinner","dist","fadeIn","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","Components_LoginDialog","Components_SnackbarWrapper","Components_LoadingOverlay","inlineBlock","LandingPage","landingWrapper","welcomeMessage","primaryTypographyProps","nestedPrimaryTypographyProps","PermanentDrawerLeft","handleOpenDRForm","showDataRetrievalForm","handleCloseDRForm","List","ListItem","ListItemIcon","esm_Home","ListItemText","AccountCircle","CollectionsBookmark","Collapse","in","timeout","unmountOnExit","disablePadding","dense","nestedListItem","inset","drForm","drFormPaper","drFormHead","flexShrink","logo","moveRight","createMuiTheme","typography","useNextVariants","contrastText","default","overrides","MuiIconButton","MuiListItemIcon","MuiListItem","gutters","MuiToolbar","MuiOutlinedInput","&$focused","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","MuiFilledInput","inputSelect","adornedEnd","App","vizRef","utils","DateFnsUtils","MuiThemeProvider","react_router_dom","Components_GlobalUIComponentWrapper","react_router","exact","path","LicenseManager","setLicenseKey","rootElement","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1653415.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    case interfaceActionTypes.SET_LOADING_MESSAGE: return {...state, loadingMessage: action.payload.message}\r\n    \r\n    case interfaceActionTypes.TOGGLE_SHOW_HELP: return {...state, showHelp: !state.showHelp}\r\n    \r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\n\r\nexport const GET_TABLE_STATS = 'GET_TABLE_STATS';\r\nexport const GET_TABLE_STATS_REQUEST_PROCESSING = 'GET_TABLE_STATS_REQUEST_PROCESSING';\r\nexport const STORE_TABLE_STATS = 'STORE_TABLE_STATS';\r\n\r\nexport const CRUISE_TRAJECTORY_REQUEST_SEND = 'CRUISE_TRAJECTORY_REQUEST_SEND';\r\nexport const CRUISE_TRAJECTORY_REQUEST_SUCCESS = 'CRUISE_TRAJECTORY_REQUEST_SUCCESS';\r\nexport const CRUISE_TRAJECTORY_REQUEST_FAILURE = 'CRUISE_TRAJECTORY_REQUEST_FAILURE';\r\nexport const CRUISE_TRAJECTORY_REQUEST_PROCESSING = 'CRUISE_TRAJECTORY_REQUEST_PROCESSING';\r\nexport const CRUISE_TRAJECTORY_CLEAR = 'CRUISE_TRAJECTORY_CLEAR';\r\n\r\nexport const CRUISE_LIST_REQUEST_SEND = 'CRUISE_LIST_REQUEST_SEND';\r\nexport const CRUISE_LIST_REQUEST_SUCCESS = 'CRUISE_LIST_REQUEST_SUCCESS';\r\nexport const CRUISE_LIST_REQUEST_FAILURE = 'CRUISE_LIST_REQUEST_FAILURE';\r\nexport const CRUISE_LIST_REQUEST_PROCESSING = 'CRUISE_LIST_REQUEST_PROCESSING';\r\n\r\nexport const TRIGGER_SHOW_CHARTS = 'TRIGGER_SHOW_CHARTS';\r\nexport const COMPLETED_SHOW_CHARTS = 'COMPLETED_SHOW_CHARTS';","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n    loadingMessage: '',\r\n    showHelp: false,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    getCruiseTrajectoryRequestState: null,\r\n    cruiseTrajectory: null,\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    cruiseList: [],\r\n    getCruiseListRequestState: null,\r\n    showChartsOnce: null\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';\r\n\r\nexport const SET_LOADING_MESSAGE = 'SET_LOADING_MESSAGE';\r\n\r\nexport const TOGGLE_SHOW_HELP = 'TOGGLE_SHOW_HELP';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING: return {...state, getCruiseTrajectoryRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS: return {...state,\r\n            cruiseTrajectory: action.payload.trajectory,\r\n            getCruiseTrajectoryRequestState: states.succeeded\r\n        }\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR: return {...state, cruiseTrajectory: null}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE: return {...state, getCruiseTrajectoryRequestState: states.failed}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING: return {...state, getCruiseListRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS: return {\r\n            ...state,\r\n            getCruiseListRequestState: states.succeeded,\r\n            cruiseList: action.payload.cruiseList\r\n        }\r\n\r\n        case visualizationActionTypes.TRIGGER_SHOW_CHARTS: return {...state, showChartsOnce: true}\r\n        case visualizationActionTypes.COMPLETED_SHOW_CHARTS: return {...state, showChartsOnce: false}\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})\r\n\r\nexport const setLoadingMessage = (message) => ({\r\n    type:interfaceActionTypes.SET_LOADING_MESSAGE,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const toggleShowHelp = () => ({\r\n    type: interfaceActionTypes.TOGGLE_SHOW_HELP\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const getTableStats = (tableName) => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS,\r\n    payload: {\r\n        tableName\r\n    }\r\n})\r\n\r\nexport const getTableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storeTableStats = (tableStats) => ({\r\n    type: visualizationActionTypes.STORE_TABLE_STATS,\r\n    payload: {\r\n        tableStats\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSuccess = (trajectory) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS,\r\n    payload: {\r\n        trajectory\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseTrajectoryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const cruiseTrajectoryClear = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR\r\n})\r\n\r\nexport const cruiseListRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SEND,\r\n})\r\n\r\nexport const cruiseListRequestSuccess = (cruiseList) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS,\r\n    payload: {\r\n        cruiseList\r\n    }\r\n})\r\n\r\nexport const cruiseListRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseListRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const triggerShowCharts = () => ({\r\n    type: visualizationActionTypes.TRIGGER_SHOW_CHARTS\r\n})\r\n\r\nexport const completedShowCharts = () => ({\r\n    type: visualizationActionTypes.COMPLETED_SHOW_CHARTS\r\n})","export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\n// export const apiUrl = 'https://simonscmap.dev';","const spatialResolutions = {\r\n    irregular: 'Irregular',\r\n    halfDegree: '1/2° X 1/2°' ,\r\n    quarterDegree: '1/4° X 1/4°' ,\r\n    twentyFifthDegree: '1/25° X 1/25°' ,\r\n    fourKm: '4km X 4km',\r\n    twelfthDegree: '1/12° X 1/12°',\r\n    seventyKm: '70km X 70km',\r\n    oneDegree: '1° X 1°'\r\n}\r\n\r\nexport default spatialResolutions;","import spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nconst mapSpatialResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [spatialResolutions.halfDegree] : .5,\r\n        [spatialResolutions.quarterDegree] : .25,\r\n        [spatialResolutions.twentyFifthDegree] : .04,\r\n        [spatialResolutions.fourKm] : .041672,\r\n        [spatialResolutions.twelfthDegree] : .083333,\r\n        [spatialResolutions.oneDegree] : 1,\r\n        [spatialResolutions.seventyKm] : .25\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapSpatialResolutionToNumber;","const generateSpatialArray = (start, resolution, end) => {\r\n    let arr = [];\r\n\r\n    for(let i = start; i <= end; i += resolution){\r\n        arr.push(i);\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nexport default generateSpatialArray;","// Flattens an array by 1 level\r\n// [[[],[]], [[],[]], [[],[]]] => [[], [], [], [], [], []]\r\n\r\nconst flattenArray = (arr) => {\r\n    let flattenedArray = [];\r\n\r\n    for(let i = 0; i < arr.length; i++){\r\n        for(let j = 0; j < arr[i].length; j++){\r\n            flattenedArray.push(arr[i][j]);\r\n        }\r\n    }\r\n\r\n    return flattenedArray;\r\n}\r\n\r\nexport default flattenArray;","// Interval number of indices between changes in this parameter, or in order words\r\n// how many times will we see the same value for this parameter in a row before it changes\r\n// as we iterate through the values array.\r\n// We use modulo for cases where data.length / interval is larger than the number of \r\n// distinct values for that parameter.\r\n\r\nconst splitData = (data, changeInterval, numDistinct) => {\r\n    var splitData = [];\r\n\r\n    for(let i = 0; i < numDistinct; i++){\r\n        splitData.push([]);\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        let index = Math.floor(i / changeInterval) % numDistinct;\r\n        splitData[index].push(data[i]);\r\n    }\r\n\r\n    return splitData;\r\n}\r\n\r\nexport default splitData;","// mergeTargetDistance - number of hops between arrays being merged\r\n// mergeTargetNumber - number of arrays being merged - implicit\r\n// nextStartDistance - once a merge is complete how many hops to next start\r\nconst mergeArraysAndComputeMeans = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n    \r\n    // Find each merging start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        // Iterate through each value in the first array of this merge. Count\r\n        // the number of values summed so we can ignore nulls and compute a mean.\r\n        for(let j = 0; j < data[i].length; j ++){\r\n            let sum = 0;\r\n            let count = 0;\r\n\r\n            // Aggregate values of all merge targets\r\n            for(let k = i; k < i + (mergeTargetDistance * numArraysPerMerge); k += mergeTargetDistance){\r\n                if(data[k][j] !== null) {\r\n                    sum += data[k][j];\r\n                    count ++;\r\n                };\r\n            }\r\n            subArray.push(count < 1 ? null : sum / (count));\r\n        }\r\n\r\n        mergedArrays.push(subArray)\r\n    }\r\n\r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArraysAndComputeMeans;","const mergeArrays = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n\r\n    // Find each merge start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        for(let j = i; j <= i + travelDistance; j += mergeTargetDistance){\r\n            subArray = [...subArray, ...data[j]];\r\n        }\r\n\r\n        mergedArrays.push(subArray);\r\n    }\r\n   \r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArrays;\r\n\r\n","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    heatmap: 'Heatmap',\r\n    contourMap: 'Contour Map',\r\n    sparse: 'Sparse'\r\n}\r\n\r\nexport default subTypes;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/mergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\n\r\nclass SpaceTimeData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = null;\r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n        this.lonStart = null;\r\n        this.latStart = null;\r\n        this.lonCount = null;\r\n        this.latCount = null;\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n        this.depthIndexAdjust = null;\r\n        this.next = null;\r\n    }\r\n\r\n    add(row) {\r\n        // Only on first row\r\n        if(this.hasDepth === null) {\r\n            this.hasDepth = row.length === 5;\r\n            this.lonStart = parseFloat(row[2]);\r\n            this.latStart = parseFloat(row[1]);\r\n            this.depthIndexAdjust = this.hasDepth ? 1 : 0;\r\n        }\r\n\r\n        if(this.hasDepth){\r\n            this.depths.add(row[3]);\r\n        }\r\n\r\n        this.dates.add(row[0]);\r\n\r\n        let value = parseFloat(row[3 + this.depthIndexAdjust]);\r\n        let finalValue = isNaN(value) ? undefined : value;\r\n        this.variableValues.push(finalValue);\r\n    }\r\n\r\n    finalize() {\r\n        const spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n\r\n        // Simple arrays of lats and lons\r\n        let lonMax = parseFloat(this.parameters.lon2) > parseFloat(this.metadata.Lon_Max) ? this.metadata.Lon_Max : this.parameters.lon2;\r\n        let latMax = parseFloat(this.parameters.lat2) > parseFloat(this.metadata.Lat_Max) ? this.metadata.Lat_Max : this.parameters.lat2;\r\n\r\n        let lonsList = generateSpatialArray(this.lonStart, spatialResolution, lonMax);\r\n        let latsList = generateSpatialArray(this.latStart, spatialResolution, latMax);\r\n\r\n        this.lonCount = lonsList.length;\r\n        this.latCount = latsList.length;\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n        this.extent = extent(this.variableValues);\r\n\r\n        // Expanded arrays to be used in plots\r\n        let lats = [];\r\n        let lons = []\r\n\r\n        for(let i = 0; i < latsList.length; i ++){\r\n            for(let j = 0; j < lonsList.length; j++){\r\n                lats.push(latsList[i]);\r\n                lons.push(lonsList[j]);\r\n            }\r\n        }\r\n\r\n        this.lats = lats;\r\n        this.lons = lons;\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        if(this.depths.size === 0) this.depths.add('Surface');\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const latInterval = this.lonCount;\r\n        const depthInterval = latInterval * this.latCount;\r\n        const dateInterval = depthInterval * this.depths.size;\r\n\r\n        // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n        variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, depthInterval, this.depths.size));\r\n        variableValueSubsets = flattenArray(variableValueSubsets);\r\n\r\n        // Contour and heatmap compute mean variable values per lat and lon\r\n        // when not split by date and/or time\r\n        if(subType === vizSubTypes.contourMap || subType === vizSubTypes.heatmap) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    this.depths.size, \r\n                    this.depths.size\r\n                    );\r\n    \r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    this.depths.size, \r\n                    1, \r\n                    this.dates.size\r\n                    );\r\n    \r\n            } else {\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    variableValueSubsets.length, \r\n                    variableValueSubsets.length\r\n                    );            \r\n            }\r\n        } \r\n        \r\n        // Histograms split and aggregate without computing means\r\n        else if (subType === vizSubTypes.histogram) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets, \r\n                    1,\r\n                    this.depths.size,\r\n                    this.depths.size\r\n                    );\r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets,\r\n                    this.depths.size,\r\n                    1,\r\n                    this.dates.size\r\n                );\r\n            } else {\r\n                variableValueSubsets = [this.variableValues];\r\n            }\r\n        }\r\n\r\n        // Nothing here yet\r\n        else {}\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i]},${depths[Math.floor(i / (this.variableValues.length / (dates.length * depths.length))) % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SpaceTimeData;","const storedProcedures = {\r\n    sectionMap: 'uspSectionMap',\r\n    timeSeries: 'uspTimeSeries',\r\n    spaceTime: 'uspSpaceTime',\r\n    depthProfile: 'uspDepthProfile'\r\n}\r\n\r\nexport default storedProcedures;","class TimeSeriesData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.dates = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depth = null;\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.depthIndexAdjust = row.length === 6 ? 1 : 0;\r\n            this.lat = row[1];\r\n            this.lon = row[2];\r\n            this.depth = row.length === 6 ? row[3] : false;\r\n        }\r\n\r\n        this.variableValues.push(row[3 + this.depthIndexAdjust]);\r\n        this.stds.push(row[4 + this.depthIndexAdjust]);\r\n        this.dates.push(row[0]);\r\n    }\r\n\r\n    finalize() {\r\n        if(this.depth === false) this.depth = 'Surface';\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }    \r\n\r\n    generateCsv() {\r\n        let csvString = `time,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.dates[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default TimeSeriesData;","class DepthProfileData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depths = [];\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.lat = parseFloat(row[0]);\r\n            this.lon = parseFloat(row[1]);\r\n        }\r\n\r\n        this.variableValues.push(parseFloat(row[2]));\r\n        this.stds.push(parseFloat(row[3]));\r\n        this.depths.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        // pass\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }\r\n    \r\n    generateCsv() {\r\n        let csvString = `depth,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default DepthProfileData;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\n\r\nclass SectionMapData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        \r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n        \r\n        this.lonStart = null;\r\n        this.latStart = null;\r\n        this.lonCount = null;\r\n        this.latCount = null;\r\n        \r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.orientation = null;\r\n        \r\n        this.latsDistinct = null;\r\n        this.lonsDistinct = null;\r\n\r\n        this.lats = null;\r\n        this.lons = null;\r\n        this.zonalPlotDepths = null;\r\n        this.meridionalPlotDepths = null;\r\n    }\r\n\r\n    // time, lat, lon, depth, value\r\n    add(row) {\r\n        // Only on first row\r\n        if(this.latStart === null) {\r\n            this.latStart = parseFloat(row[1]);\r\n            this.lonStart = parseFloat(row[2]);\r\n        }\r\n\r\n        this.depths.add(row[3]);\r\n        this.dates.add(row[0]);\r\n\r\n        this.variableValues.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        const spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n\r\n        // Simple arrays of lats and lons\r\n        let lonsList = generateSpatialArray(this.lonStart, spatialResolution, this.parameters.lon2);\r\n        let latsList = generateSpatialArray(this.latStart, spatialResolution, this.parameters.lat2);\r\n\r\n        this.lonCount = lonsList.length;\r\n        this.latCount = latsList.length;\r\n\r\n        this.lonsDistinct = lonsList;\r\n        this.latsDistinct = latsList;\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        // Expanded arrays to be used in plots\r\n        let lats = [];\r\n        let lons = []\r\n\r\n        for(let i = 0; i < latsList.length; i ++){\r\n            for(let j = 0; j < this.depths.size; j++){\r\n                lats.push(latsList[i]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < lonsList.length; i ++){\r\n            for(let j = 0; j < this.depths.size; j++){\r\n                lons.push(lonsList[i]);\r\n            }\r\n        }\r\n\r\n        this.lats = lats;\r\n        this.lons = lons;\r\n\r\n        let zonalPlotDepths = [];\r\n        let meridionalPlotDepths = [];\r\n        let depthsList = Array.from(this.depths).map(depth => parseFloat(depth));\r\n\r\n        for(let i = 0; i < this.latsDistinct.length; i++){\r\n            for(let j = depthsList.length - 1; j > -1; j--){\r\n                meridionalPlotDepths.push(depthsList[j]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < this.lonsDistinct.length; i++){\r\n            for(let j = depthsList.length - 1; j > -1; j--){\r\n                zonalPlotDepths.push(depthsList[j]);\r\n            }\r\n        }\r\n\r\n        this.zonalPlotDepths = zonalPlotDepths;\r\n        this.meridionalPlotDepths = meridionalPlotDepths;\r\n        \r\n        this.orientation = this.lonCount > this.latCount ? 'zonal' : 'meridional';\r\n    }\r\n\r\n    // Direction is meridional or zonal\r\n    generatePlotData(orientation, splitByDate, splitBySpace) {\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const lonInterval = this.depths.size;\r\n        const latInterval = lonInterval * this.lonCount;\r\n        const dateInterval = latInterval * this.latCount;\r\n\r\n        // // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n\r\n        // either latCount or lonCount depending on orientation\r\n        let spaceCount;\r\n\r\n        if(orientation === 'zonal') {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, latInterval, this.latCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = this.latCount;\r\n        }\r\n\r\n        else {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, lonInterval, this.lonCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = this.lonCount;\r\n        }\r\n\r\n        if(splitByDate && splitBySpace){\r\n            // pass\r\n        } else if (splitByDate){\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                spaceCount,\r\n                spaceCount\r\n            )\r\n        } else if (splitBySpace) {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                spaceCount,\r\n                1,\r\n                this.dates.size\r\n            )\r\n        } else {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                variableValueSubsets.length,\r\n                variableValueSubsets.length\r\n            )\r\n        }\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i]},${depths[i % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SectionMapData;","import { quantile, extent } from 'd3-array';\r\n\r\nclass SparseData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = Boolean(payload.metadata.Depth_Min);\r\n        this.variableIndex = payload.metadata.Depth_Min ? 4 : 3;\r\n        this.depths = [];\r\n        this.times = [];\r\n        this.variableValues = [];\r\n        this.lats = [];\r\n        this.lons = [];\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n    }\r\n\r\n    add(row) {\r\n        if(row[this.variableIndex]){\r\n            this.times.push(row[0]);\r\n            this.lats.push(parseFloat(row[1]));\r\n            this.lons.push(parseFloat(row[2]));\r\n            if(this.hasDepth) this.depths.push(parseFloat(row[3]));\r\n            this.variableValues.push(parseFloat(row[this.variableIndex]));\r\n        }\r\n    }\r\n\r\n    finalize() {\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n\r\n        this.extent = extent(this.variableValues);\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        return this.variableValues;\r\n    }\r\n\r\n    generateCsv(){\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SparseData;","import CSVParser from 'csv-parse';\r\n\r\nimport { apiUrl } from './config';\r\nimport SpaceTimeData from './Classes/SpaceTimeData';\r\n\r\nimport storedProcedures from './Enums/storedProcedures';\r\nimport TimeSeriesData from './Classes/TimeSeriesData';\r\nimport DepthProfileData from './Classes/DepthProfileData';\r\nimport SectionMapData from './Classes/SectionMapData';\r\nimport SparseData from './Classes/SparseData';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            catalog.push(record)\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(payload) => {\r\n    const decoder = new TextDecoder();\r\n    var vizData;\r\n\r\n    switch(payload.parameters.spName) {\r\n        case storedProcedures.spaceTime:\r\n            if(payload.subType === 'Sparse') vizData = new SparseData(payload);\r\n            else vizData = new SpaceTimeData(payload);\r\n            break;\r\n\r\n        case storedProcedures.timeSeries:\r\n            vizData = new TimeSeriesData(payload);\r\n            break;\r\n\r\n        case storedProcedures.depthProfile:\r\n            vizData = new DepthProfileData(payload);\r\n            break;\r\n\r\n        case storedProcedures.sectionMap:\r\n            vizData = new SectionMapData(payload);\r\n            break;\r\n\r\n        default:\r\n            console.log('Unknown sproc name');\r\n    }\r\n\r\n    let response = await fetch(apiUrl + '/api/data/sp?' + storedProcedureParametersToUri(payload.parameters), fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            vizData.add(record);\r\n        }\r\n    })\r\n\r\n    csvParser.on('error', (e) => {\r\n        console.log(e);\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;\r\n}\r\n\r\napi.visualization.cruiseTrajectoryRequest = async(payload) => {\r\n    const cruiseId = payload.id;\r\n    const decoder = new TextDecoder();\r\n    let trajectory = {lats: [], lons: []};\r\n\r\n    let response = await fetch(apiUrl + '/api/data/cruisetrajectory?' + `id=${payload.id}`, fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            trajectory.lats.push(parseFloat(record[1]));\r\n            trajectory.lons.push(parseFloat(record[2]));\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return trajectory;\r\n}\r\n\r\napi.visualization.cruiseList = async() => {\r\n    let response = await fetch(apiUrl + '/api/data/cruiselist', fetchOptions);\r\n\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;   \r\n}\r\n\r\nexport default api;","import { put, takeLatest, all, call, delay } from 'redux-saga/effects';\r\n// import { eventChannel } from 'redux-saga';\r\nimport Cookies from 'js-cookie';\r\n// import worker from '../worker';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    \r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){    \r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    \r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    \r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(action){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    \r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    \r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    \r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload);\r\n    yield delay(50);\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'));\r\n    yield delay(70);\r\n    \r\n    // Result will be an object containing variable values and describing date shape\r\n    if(!result){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen(\"Request failed\"));\r\n    } else {\r\n        if(result.variableValues.length > 0){\r\n            result.finalize();\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            // yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            yield put(visualizationActions.triggerShowCharts());\r\n            yield put(visualizationActions.addChart({subType: action.payload.subType, data:result}));\r\n           \r\n        } else {\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges. Try selecting a different date or depth range.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* cruiseTrajectoryRequest(action) {\r\n    yield put(visualizationActions.cruiseTrajectoryRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Cruise Data'));\r\n    let result = yield call(api.visualization.cruiseTrajectoryRequest, action.payload);\r\n\r\n    if(!result || !result.lats.length){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(interfaceActions.snackbarOpen(`Unable to Fetch Cruise Data`));\r\n    } else {\r\n        yield put(visualizationActions.cruiseTrajectoryRequestSuccess(result));\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n    }\r\n}\r\n\r\nfunction* cruiseListRequest() {\r\n    yield put(visualizationActions.cruiseListRequestProcessing());\r\n    let cruiseList = yield call(api.visualization.cruiseList);\r\n\r\n    if(!cruiseList) {\r\n        yield put(visualizationActions.cruiseListRequestFailure());\r\n    } else{\r\n        yield put(visualizationActions.cruiseListRequestSuccess(cruiseList));\r\n    }\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\nfunction* watchCruiseTrajectoryRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND, cruiseTrajectoryRequest);\r\n}\r\n\r\nfunction* watchCruiseListRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_LIST_REQUEST_SEND, cruiseListRequest);\r\n}\r\n\r\n// function createWorkerChannel(worker) {\r\n//     return eventChannel(emit => {\r\n//         worker.onmessage = message => {\r\n//             emit(message);\r\n//         }\r\n\r\n//         const unsubscribe = () => {\r\n//             worker.teminate();\r\n//         }\r\n      \r\n//         return unsubscribe;\r\n//     })\r\n// }\r\n\r\n// function* watchWorkerChannel(){\r\n//     const workerChannel = yield call(createWorkerChannel, worker);\r\n\r\n//     while (true) {\r\n//         const message = yield take(workerChannel);\r\n//         yield put(message.data.type, message.data.payload);\r\n//         //   yield put({ type: INCOMING_PONG_PAYLOAD, payload })\r\n//         //   yield fork(pong, socket)\r\n//       }\r\n// }\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        watchCruiseTrajectoryRequest(),\r\n        watchCruiseListRequest()\r\n        // watchWorkerChannel(),\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","const colors = {\r\n    orange: '#FF8000',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9'\r\n}\r\n\r\nexport default colors;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    },\r\n    warningCaption: {\r\n        color: colors.orange,\r\n        fontSize: '11px',\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    wrapper: {\r\n        marginTop: theme.spacing(16)\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            \r\n            <div className={classes.wrapper}>\r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Key\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                        <Typography variant='caption' className={classes.warningCaption}>\r\n                            This API key is a unique identifier, and should not be shared.\r\n                        </Typography>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"body2\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n                </Paper>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires a user account. Please <Link component={RouterLink} to={{pathname: '/apikeymanagement'}} onClick={() => props.showLoginDialog()}> log in\r\n            </Link> or <Link component={RouterLink} to={{pathname: '/register'}}> register\r\n            </Link>.\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen, toggleShowHelp } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    appBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    toolBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    navWrapper: {\r\n        position: 'fixed',\r\n        width: '100vw',\r\n        top: '0px',\r\n        backgroundColor: 'transparent',\r\n        zIndex: 50,\r\n        paddingTop: '10px',\r\n        paddingLeft: '20px',\r\n        textAlign: 'left',\r\n        boxSizing: 'border-box'\r\n    },\r\n\r\n    navLink: {\r\n        cursor: 'pointer',\r\n        marginRight: 20,\r\n        color: 'white',\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        },\r\n        fontSize: '13px',\r\n        fontWeight: 100,\r\n        display: 'inline-block'     \r\n    },\r\n\r\n    rightNavLink: {\r\n        float: 'right'\r\n    },\r\n\r\n    rightLinkWrapper: {\r\n        display:'inline-block',\r\n        textAlign: 'right'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen,\r\n    toggleShowHelp\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    handleNavigate = (route) => {\r\n        this.props.restoreInterfaceDefaults()\r\n        this.props.history.push(route);\r\n    }\r\n\r\n    handleOutsideNavigate = (url) => {\r\n        window.open(url, '_blank')\r\n    }\r\n\r\n    render(){\r\n        const { classes, history, showHelp } = this.props;\r\n        const { pathname } = history.location;\r\n\r\n        return (\r\n            <div className={classes.navWrapper}>\r\n                <Typography variant='caption' onClick={() => this.handleNavigate('/')} className={classes.navLink}>Home</Typography>\r\n                <Typography variant='caption' onClick={() => this.handleNavigate('/catalog')} className={classes.navLink}>Catalog</Typography>\r\n                {pathname !== '/visualization' && <Typography variant='caption' onClick={() => this.handleNavigate('/apikeymanagement')} className={classes.navLink}>API Keys</Typography>}\r\n                {pathname !== '/visualization' && <Typography variant='caption' onClick={() => this.handleNavigate('/visualization')} className={classes.navLink}>Visualization</Typography>}\r\n                {this.props.user && <Typography variant='caption' onClick={() => this.handleLogOut()} className={`${classes.navLink} ${pathname === '/visualization' ? '' : classes.rightNavLink}`}>Log Out</Typography>}\r\n                {/* <Typography variant='caption' onClick={this.props.toggleShowHelp} className={classes.navLink}>{showHelp ? 'Hide Help' : 'Help(beta) '}</Typography> */}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' onClick={() => this.props.showLoginDialog()} className={`${classes.navLink} ${classes.rightNavLink}`}>Log In</Typography>}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' onClick={() => this.handleNavigate('/register')} className={`${classes.navLink} ${classes.rightNavLink}`}>Register</Typography>}\r\n            </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user ? <ApiKeyManagement/> : <LoginRequiredPrompt/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'Variable'],\r\n    ['Spatial Resolution', 'Spatial_Resolution'],\r\n    ['Temporal Resolution', 'Temporal_Resolution'],\r\n    ['Unit', 'Unit'],\r\n    ['Process Level', 'Process_Level'],\r\n    ['Study Domain', 'Study_Domain'],\r\n    ['SQL Table Name', 'Table_Name']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        margin: '-10px auto 0px auto',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(2),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing(2),\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        width: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={8} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={imageSource + 'viz_sample.png'} alt=\"Sample Visualization\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.Dataset_Description}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.Data_Source}\r\n                        </Typography> <br></br>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.Distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable} size='small'>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = theme => ({\r\n  tooltip: {\r\n      color: theme.palette.secondary.main,\r\n      opacity: 1\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst ConnectedTooltip = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    if(!showHelp) {\r\n        return (\r\n            <React.Fragment>\r\n                {props.children}\r\n            </React.Fragment>\r\n        )}\r\n    else {\r\n        return (\r\n            <Tooltip \r\n                placement={props.placement} \r\n                open={showHelp} \r\n                title={props.title} \r\n                className={classes.tooltip}\r\n                classes={{\r\n                    popper: classes.tooltip\r\n                }}\r\n            >\r\n                {props.children}\r\n            </Tooltip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(ConnectedTooltip));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst detailCellRendererParams = {\r\n  template:\r\n    '<div style=\"height: 100%; box-sizing: border-box\" class=\"testClass\">' +\r\n      '  <div style=\"height: 10%;\">Call Details</div>' +\r\n      '  <div ref=\"eDetailGrid\" style=\"height: 90%;\"></div>' +\r\n    \"</div>\"\r\n}\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"Long_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"Variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"Table_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"Dataset_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"Make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"Sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"Study_Domain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"Process_Level\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"Spatial_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"Temporal_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"Unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'Keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '60vh', \r\n    width: '90%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '60px 5vw',\r\n    padding: '30px'\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n        <Paper elevation={12} className={classes.gridPaper}>\r\n          <ConnectedTooltip placement title='Enter one or more search terms.' placement='top'>\r\n            <TextField\r\n              className={classes.gridSearch}\r\n              autoFocus={true}\r\n              margin=\"normal\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              variant='outlined'\r\n              name='filterText'\r\n              value={this.state.filterText}\r\n              onChange={this.handleChange}\r\n              label=\"Variable Search\"\r\n              InputLabelProps={{\r\n                  shrink: true,\r\n              }}\r\n            />\r\n          </ConnectedTooltip>\r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              suppressDragLeaveHidesColumns= {true}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n              detailCellRendererParams={detailCellRendererParams}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog) return <AGGridWrapper catalog={this.props.catalog}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n        else if(this.props.catalogRequestState === states.failed) return <p>Failed to get catalog. Have you tried turning it off and then on again?</p>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const regionRenderModes = {\r\n    draw: 'draw',\r\n    form: 'form'\r\n}\r\n\r\nexport default regionRenderModes;","const validation = {\r\n    depth: {\r\n        depthOneIsLower: 'Start cannot be larger than end',\r\n        depthOneOutOfBounds: 'Start must be smaller than $',\r\n        depthTwoOutOfBounds: 'End must be larger than $',\r\n        negative: 'Depth cannot be negative'\r\n    },\r\n\r\n    date: {\r\n        dateOneIsLater: 'Start cannot be later than end',\r\n        dateOneOutOfBounds: 'Start must be before $',\r\n        dateTwoOutOfBounds: 'End must be after $'\r\n    },\r\n\r\n    lat: {\r\n        latOneIsHigher: 'Start cannot be larger than end.',\r\n        latOneOutOfBounds: 'Start must be less than $',\r\n        latTwoOutOfBounds: 'End must be greater than $'\r\n    },\r\n\r\n    lon: {\r\n        lonOneIsHigher: 'Start cannot be larger than end.',\r\n        lonOneOutOfBounds: 'Start must be less than $',\r\n        lonTwoOutOfBounds: 'End must be greater than $'\r\n    },\r\n\r\n    type: {\r\n        dataIsIrregular: '$ is not available for sparse data',\r\n        dateRangeRequired: '$ requires a range of dates',\r\n        depthRangeRequired: '$ requires a range of depths',\r\n        surfaceOnlyDataset: '$ contains only surface data',\r\n        irregularOnly: 'Sparse map is only available for sparse data',\r\n        dataSizeTooLarge: 'Data set is too large for this visualization type.'\r\n    },\r\n\r\n    generic: {\r\n        invalid: 'Invalid input',\r\n        dataSizeWarning: 'Wait time and application performance may be poor due to size of data.',\r\n        dataSizePrevent: 'Data set is too large. Please reduce date range or area size.'\r\n    }\r\n}\r\n\r\nexport default validation;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    const { data } = props;\r\n\r\n    if(!data) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{data.Variable}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {data.Long_Name}\r\n                </DialogContentText>\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{data.Sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{data.Spatial_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{data.Temporal_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{data.Time_Min ? data.Time_Min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{data.Time_Max ? data.Time_Max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lat_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lat_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lon_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{data.Depth_Min ? `${data.Depth_Min}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{data.Depth_Max ? `${data.Depth_Max}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);","const temporalResolutions = {\r\n    threeMinutes: 'Three Minutes',\r\n    sixHourly: 'Six Hourly',\r\n    daily: 'Daily',\r\n    weekly: 'Weekly',\r\n    monthly: 'Monthly',\r\n    annual: 'Annual',\r\n    irregular: 'Irregular',\r\n    monthlyClimatology: 'Monthly Climatology',\r\n    threeDay: 'Three Days',\r\n    eightDayRunning: 'Eight Day Running',\r\n    eightDays: 'Eight Days '\r\n}\r\n\r\nexport default temporalResolutions;","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nconst mapTemporalResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [temporalResolutions.threeMinutes] : 1,\r\n        [temporalResolutions.sixHourly] : 1,\r\n        [temporalResolutions.daily] : 1,\r\n        [temporalResolutions.weekly] : 7,\r\n        [temporalResolutions.monthly] : 30,\r\n        [temporalResolutions.annual] : 365,\r\n        [temporalResolutions.irregular] : null,\r\n        [temporalResolutions.monthlyClimatology]: 30,\r\n        [temporalResolutions.threeDay]: 3,\r\n        [temporalResolutions.eightDayRunning]: 8,\r\n        [temporalResolutions.eightDays]: 8\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapTemporalResolutionToNumber;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { ArrowDropDown, LibraryBooks } from '@material-ui/icons';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend } from '../Redux/actions/visualization';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    dataRetrievalFormPaper: {\r\n        width: '1000px',\r\n        height: '260px',\r\n        padding: theme.spacing(2.5),\r\n        position:'fixed',\r\n        top: '10px',\r\n        left: '50%',\r\n        marginLeft: '-600px',\r\n        zIndex: 2,\r\n        paddingTop: theme.spacing(1.5),\r\n    },\r\n\r\n    dataRetrievalFormField: {\r\n        padding:`0px ${theme.spacing(1)}`\r\n    },\r\n\r\n    retrieveDataButton: {\r\n        margin:'10px auto'\r\n    },\r\n\r\n    variableSelect: {\r\n        margin: '0 30px 20px 30px'\r\n    },\r\n\r\n    visualizationSpeedDial: {\r\n        position: 'relative',\r\n        top: '5px',\r\n        left: '30px'\r\n    },\r\n\r\n    visualizeButton: {\r\n        borderRadius:'10%',\r\n        width: '100px',\r\n        height:'40px',\r\n        margin: 'auto 0',\r\n        backgroundColor: theme.palette\r\n    },\r\n\r\n    visualizeButtonText: {\r\n        dominantBaseline: \"middle\",\r\n        textAnchor: \"middle\"\r\n    },\r\n\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    datePickerGridSection: {\r\n        paddingLeft: '40px !important',\r\n        paddingRight: '40px !important'\r\n    },\r\n\r\n    shortenHeight: {\r\n        height: '60px'\r\n    },\r\n\r\n    vizSelect: {\r\n        minWidth: 120\r\n    },\r\n\r\n    gridItem: {\r\n        height: '48px'\r\n    },\r\n\r\n    generalMessage: {\r\n        textAlign: 'left'\r\n    },\r\n\r\n    vizTypeSelectFormControl: {\r\n        width: 150\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend\r\n}\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nconst reactWindowListRef = React.createRef();\r\nclass MenuList extends Component {\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if(!(this.props.children && this.props.children.length)) return;\r\n        let index = this.props.children.findIndex(child => child.props && child.props.isFocused);\r\n        reactWindowListRef.current.scrollToItem(index);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <ReactWindowList\r\n                style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length === 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <ArrowDropDown />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nclass DataRetrievalForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('Variable');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            visualizationSpeedDialOpen: false,\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.Variable,\r\n            label: item.Variable === item.Long_Name ? (item.Variable.length > 48 ? item.Variable.slice(0,45) + '...' : item.Variable) : (item.Variable.length > 23 ? item.Variable.slice(0,23) : item.Variable) + ' : ' + (item.Long_Name.length > 38 ? item.Long_Name.slice(0,35) + '...' : item.Long_Name),\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Histogram');\r\n        return '';\r\n    }\r\n\r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Depth Profile');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = () => {\r\n        if(this.estimateDataSize() > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = () => {\r\n        if(this.estimateDataSize() > 50000000) return validation.generic.dataSizePrevent;\r\n        return ''\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartDate(),\r\n                this.checkEndDate(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(),\r\n                this.checkGeneralPrevent()\r\n            ];\r\n        } else validations = Array(17).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startDateMessage,\r\n            endDateMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage\r\n        ] = validations;\r\n\r\n        const parametersAreInvalid = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage\r\n        ].some(message => message.length);\r\n\r\n        return (\r\n            <div className={this.props.showUI ? '' : classes.displayNone} id='drf'>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n                <Paper className={classes.dataRetrievalFormPaper}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={11} className={classes.shortenHeight}>\r\n                            <Select\r\n                                isLoading = {catalogRequestState === states.inProgress}\r\n                                components={{\r\n                                    IndicatorSeparator:'',\r\n                                    DropdownIndicator,\r\n                                    Option,\r\n                                    MenuList,\r\n                                    SingleValue,\r\n                                }}\r\n                                isClearable\r\n                                onInputChange={this.onAutoSuggestChange}\r\n                                filterOption={null}\r\n                                className={classes.variableSelect}\r\n                                autoFocus\r\n                                escapeClearsValue\r\n                                name=\"fields\"\r\n                                label=\"Variables\"\r\n                                options={options}\r\n                                onChange={this.props.updateFields}\r\n                                value={fields}\r\n                                placeholder=\"Variable Search\"\r\n                                styles={{\r\n                                    menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                                    input: provided => ({...provided,\r\n                                        color: 'white',\r\n                                        fontFamily: '\"Lato\", sans-serif'\r\n                                    }),\r\n\r\n                                    control: provided => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        border: '1px solid #333333',\r\n                                        '&:hover': { borderColor: 'white' },\r\n                                        '&:focus-within': { borderColor: colors.orange },\r\n                                    }),\r\n\r\n                                    placeholder: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        fontSize: '14px'\r\n                                    }),\r\n\r\n                                    noOptionsMessage: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        backgroundColor: colors.backgroundGray\r\n                                    }),\r\n\r\n                                    option: (provided, { data, isFocused }) => {\r\n                                        return ({...provided,\r\n                                        backgroundColor: isFocused ? '#383838' : '#424242',\r\n                                        color: data.data.Sensor === 'Satellite' ? '#1acf02' : data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        '&:hover': { backgroundColor: '#383838' },\r\n                                        ':active': { backgroundColor: '#383838' },\r\n                                        '&:after': { \r\n                                            content: data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            float: 'left'\r\n                                        },\r\n                                    })},\r\n\r\n                                    singleValue: (provided, state) => ({...provided,\r\n                                        fontFamily: state.data.data.Sensor === 'Satellite' ? 'Font Awesome 5 Free': '\"Lato\", sans-serif',\r\n                                        color: state.data.data.Sensor === 'Satellite' ? '#1acf02' : state.data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        paddingRight: '20px',\r\n                                        '&:after': { \r\n                                            content: state.data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            fontSize: '18px',\r\n                                            position: 'relative',\r\n                                            left: '8px',\r\n                                            top: '3px'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n                                    colors: {\r\n                                    ...theme.colors,\r\n                                    // Background color of hovered options\r\n                                    primary25: '#e0e0e0',\r\n                                    primary: '#212121',\r\n                                    },\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={1}>\r\n                            <IconButton\r\n                                disabled={!fields}\r\n                                onClick={this.handleTableStatsDialogOpen}\r\n                            >\r\n                                <LibraryBooks/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel htmlFor=\"depth1-input\" >Start Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth1-input\"\r\n                                        value={depth1}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth1-error\"\r\n                                        labelWidth={105}\r\n                                        name='depth1'\r\n                                    />\r\n                                    <FormHelperText id=\"depth1-error\">{startDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"depth2-input\" >End Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth2-input\"\r\n                                        value={depth2}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth2-error\"\r\n                                        labelWidth={95}\r\n                                        name='depth2'\r\n                                    />\r\n                                    <FormHelperText id=\"depth2-error\">{endDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat1-input\" >{'Start Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat1-input\"\r\n                                        value={lat1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lat1'\r\n                                    />\r\n                                    <FormHelperText id=\"lat1-error\">{startLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat2-input\" >{'End Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat2-input\"\r\n                                        value={lat2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lat2'\r\n                                    />\r\n                                    <FormHelperText id=\"lat2-error\">{endLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon1-input\" >{'Start Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon1-input\"\r\n                                        value={lon1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lon1'\r\n                                    />\r\n                                    <FormHelperText id=\"lon1-error\">{startLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon2-input\" >{'End Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon2-input\"\r\n                                        value={lon2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lon2'\r\n                                    />\r\n                                    <FormHelperText id=\"lon2-error\">{endLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={2}>\r\n                                <FormControl variant='outlined' className={classes.vizTypeSelectFormControl}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        labelWidth={35}\r\n                                        value={selectedVizType}\r\n                                        variant='outlined'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'outlined'\r\n                                        }}\r\n                                        >\r\n                                        <MenuItem disabled={Boolean(heatmapMessage)} value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>\r\n                                        <MenuItem disabled={Boolean(contourMessage)} value={vizSubTypes.contourMap}>Contour</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sectionMapMessage)} value={vizSubTypes.sectionMap}>Section Map</MenuItem>\r\n                                        <MenuItem disabled={Boolean(histogramMessage)} value={vizSubTypes.histogram}>Histogram</MenuItem>                                    \r\n                                        <MenuItem disabled={Boolean(timeSeriesMessage)} value={vizSubTypes.timeSeries}>Time Series</MenuItem>\r\n                                        <MenuItem disabled={Boolean(depthProfileMessage)} value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sparseMapMessage)} value={vizSubTypes.sparse}>Sparse Map</MenuItem>\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2}>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={() => this.props.onVisualize()}\r\n                                    disabled={!selectedVizType || parametersAreInvalid || !fields}\r\n                                >\r\n                                    Visualize\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <Typography variant='caption' color='error' className={classes.generalMessage}>\r\n                                    {generalPreventMessage || generalWarnMessage}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataRetrievalForm));","const utcDateStringToLocal = (utcString) => {\r\n    let date = new Date(utcString);\r\n    let utcYear = date.getUTCFullYear();\r\n    let utcMonth = date.getUTCMonth();\r\n    let utcDate = date.getUTCDate();\r\n\r\n    let newDate = new Date();\r\n    newDate.setFullYear(utcYear, utcMonth, utcDate);\r\n    return newDate;\r\n}\r\n\r\nexport default utcDateStringToLocal;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { LibraryBooks, ArrowRight, ChevronLeft, ChevronRight, InsertChartOutlined, Language, Delete } from '@material-ui/icons';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend, clearCharts } from '../Redux/actions/visualization';\r\n\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst navDrawerWidth = 230;\r\n\r\nconst styles = theme => ({\r\n  drawer: {\r\n    width: navDrawerWidth,\r\n    // height: 'calc(100% - 120px)',\r\n    top: 32,\r\n    bottom: 'auto',\r\n    overflow: 'visible'\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: navDrawerWidth,\r\n    height: '540px',\r\n    top: 'calc(50% - 270px)',\r\n    borderRadius: '0 4px 4px 0',\r\n    boxShadow: '2px 2px  2px 2px #242424',\r\n    border: 'none',\r\n    overflow: 'visible'\r\n  },\r\n\r\n  openPanelChevron: {\r\n    position: 'fixed',\r\n    left: '5px',\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  closePanelChevron: {\r\n    position: 'fixed',\r\n    left: navDrawerWidth + 5,\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  groupedButtons: {\r\n      width: '50%',\r\n      border: '1px solid #313131',\r\n      borderRadius: 0\r\n  },\r\n\r\n  controlPanelForm: {\r\n      marginTop: theme.spacing(1)\r\n  },\r\n\r\n  tableStatsButton: {\r\n      borderRadius: 0,\r\n      paddingTop: '11px',\r\n      backgroundColor: '#3C3C3C'\r\n  },\r\n\r\n    formGridItem: {\r\n        borderLeft: '1px solid #313131',\r\n        backgroundColor: '#3C3C3C'\r\n    },\r\n\r\n  vizTypeSelectFormControl: {\r\n      width: '100%'\r\n  },\r\n\r\n  depressed: {\r\n      boxShadow: 'inset 1px 1px 5px #1c1c1c'\r\n  },\r\n\r\n  padLeft: {\r\n      padding: '6px 0 2px 7px'\r\n  },\r\n\r\n  visualizeButton: {\r\n      height: '56px',\r\n      borderRadius: 0,\r\n      backgroundColor: '#3C3C3C',\r\n      color: theme.palette.primary.main,\r\n      fontVariant: 'normal',\r\n      '&:hover': {backgroundColor: '#874400'}\r\n  },\r\n\r\n  datePickerInputAdornment: {\r\n      padding: 0\r\n  },\r\n\r\n  clearChartsButton: {\r\n      borderRadius: 0\r\n  }\r\n\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend,\r\n    clearCharts\r\n}\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nconst reactWindowListRef = React.createRef();\r\nclass MenuList extends Component {\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if(!(this.props.children && this.props.children.length)) return;\r\n        let index = this.props.children.findIndex(child => child.props && child.props.isFocused);\r\n        reactWindowListRef.current.scrollToItem(index);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <ReactWindowList\r\n                style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length == 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n    <components.DropdownIndicator {...props}>\r\n        <ArrowRight/>\r\n    </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}></components.SingleValue>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nconst formatOptionLabel = (option, meta) => {\r\n    return meta.context === 'value' ? option.value : option.label;\r\n}\r\n\r\nclass VizControlPanel extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: '',\r\n            showControlPanel: true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search});\r\n        }\r\n    }\r\n\r\n    handleOpenControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: true})\r\n    }\r\n\r\n    handleCloseControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: false})\r\n    }      \r\n    \r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.Variable,\r\n            label: item.Variable === item.Long_Name ? (item.Variable.length > 48 ? item.Variable.slice(0,45) + '...' : item.Variable) : (item.Variable.length > 23 ? item.Variable.slice(0,23) : item.Variable) + ' : ' + (item.Long_Name.length > 38 ? item.Long_Name.slice(0,35) + '...' : item.Long_Name),\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Histogram');\r\n        return '';\r\n    }\r\n\r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Depth Profile');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = () => {\r\n        if(this.estimateDataSize() > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = () => {\r\n        if(this.estimateDataSize() > 50000000) return validation.generic.dataSizePrevent;\r\n        return ''\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField, showControlPanel } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly,\r\n            showCharts,\r\n            handleShowCharts,\r\n            handleShowGlobe,\r\n            handleChange,\r\n            handleLatLonChange\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartDate(),\r\n                this.checkEndDate(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(),\r\n                this.checkGeneralPrevent()\r\n            ];\r\n        } else validations = Array(17).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startDateMessage,\r\n            endDateMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage\r\n        ] = validations;\r\n\r\n        const parametersAreInvalid = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage\r\n        ].some(message => message.length);\r\n\r\n        return (\r\n            <div>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n\r\n                { showControlPanel ? \r\n\r\n                        <IconButton \r\n                            className={classes.closePanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleCloseControlPanel}>\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                :\r\n                    \r\n                        <IconButton \r\n                            className={classes.openPanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleOpenControlPanel}>\r\n                            <ChevronRight />\r\n                        </IconButton>\r\n                }\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={showControlPanel}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >\r\n                    <ButtonGroup>\r\n                        <Tooltip title='Show Globe' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${!showCharts && classes.depressed}`} \r\n                                onClick={handleShowGlobe}\r\n                                color='inherit'\r\n                            >\r\n                                <Language/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        \r\n                        <Tooltip title='Show Charts' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${showCharts && classes.depressed}`}\r\n                                onClick={handleShowCharts}\r\n                                color='inherit'\r\n                            >\r\n                                <InsertChartOutlined/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ButtonGroup>\r\n\r\n                    <Tooltip title='Clear Charts' placement='right'>\r\n                        <IconButton color='inherit' onClick={this.props.clearCharts} className={classes.clearChartsButton}>\r\n                            <Delete/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <form>\r\n                        <Grid container>\r\n                            <Grid item xs={10}>\r\n                                <ConnectedTooltip placement='top' title='Enter one or more search terms.'>\r\n                                    <Select\r\n                                        formatOptionLabel={formatOptionLabel}\r\n                                        handleTableStatsDialogOpen={this.handleTableStatsDialogOpen}\r\n                                        isLoading = {catalogRequestState === states.inProgress}\r\n                                        components={{\r\n                                            IndicatorSeparator:'',\r\n                                            DropdownIndicator,\r\n                                            Option,\r\n                                            MenuList,\r\n                                            SingleValue,\r\n                                        }}\r\n                                        onInputChange={this.onAutoSuggestChange}\r\n                                        filterOption={null}\r\n                                        className={classes.variableSelect}\r\n                                        escapeClearsValue\r\n                                        name=\"fields\"\r\n                                        label=\"Variables\"\r\n                                        options={options}\r\n                                        onChange={this.props.updateFields}\r\n                                        value={fields}\r\n                                        placeholder=\"Variable Search\"\r\n                                        styles={{\r\n                                            menu: provided => ({\r\n                                                ...provided, \r\n                                                zIndex: 1300, \r\n                                                top: '-8px',\r\n                                                left: '230px',\r\n                                                width: '580px',\r\n                                                borderRadius: '4px',\r\n                                                boxShadow: '2px 2px  2px 2px #242424',\r\n                                                overflow: 'hidden'                                \r\n                                            }),\r\n\r\n                                            valueContainer: provided => ({\r\n                                                ...provided,\r\n                                                padding: '0 0 0 6px',\r\n                                                fontWeight: 100\r\n                                            }),\r\n\r\n                                            input: provided => ({...provided,\r\n                                                color: 'white',\r\n                                                fontFamily: '\"Lato\", sans-serif'\r\n                                            }),\r\n\r\n                                            control: provided => ({...provided,\r\n                                                backgroundColor: '#3C3C3C',\r\n                                                border: 'none',\r\n                                                borderBottom: '1px solid #333333',\r\n                                                borderRadius: 0,\r\n                                                '&:hover': { borderColor: 'white' },\r\n                                                '&:focus-within': { borderColor: colors.orange },\r\n                                                height: '56px'\r\n                                            }),\r\n\r\n                                            placeholder: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                fontSize: '14px',\r\n                                                fontWeight: 300\r\n                                            }),\r\n\r\n                                            noOptionsMessage: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                backgroundColor: colors.backgroundGray\r\n                                            }),\r\n\r\n                                            option: (provided, { data, isFocused }) => {\r\n                                                return ({...provided,\r\n                                                    fontWeight: 400,\r\n                                                    fontSize: '16px',\r\n                                                    backgroundColor: isFocused ? '#383838' : '#424242',\r\n                                                    // color: data.data.Sensor === 'Satellite' ? '#1acf02' : data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                                    '&:hover': { backgroundColor: '#383838' },\r\n                                                    ':active': { backgroundColor: '#383838' },\r\n                                                    '&:after': { \r\n                                                        content: data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                                        float: 'left'\r\n                                                    },\r\n                                            })},\r\n\r\n                                            singleValue: (provided, state) => ({...provided,\r\n                                                color: 'white',\r\n                                                fontWeight: 400\r\n                                            })\r\n                                        }}\r\n                                        theme={theme => ({\r\n                                            ...theme,\r\n                                            colors: {\r\n                                            ...theme.colors,\r\n                                            // Background color of hovered options\r\n                                            primary25: '#e0e0e0',\r\n                                            primary: '#212121',\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                </ConnectedTooltip>\r\n                            </Grid>\r\n                            <Grid item xs={2} className={classes.tableStatsButton}>\r\n                                <IconButton \r\n                                    size='small' \r\n                                    onClick={this.handleTableStatsDialogOpen}                                     \r\n                                    disabled={!fields}\r\n                                >\r\n                                    <LibraryBooks/>\r\n                                </IconButton>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? utcDateStringToLocal(fields.data.Time_Min) : ''}\r\n                                    maxDate={fields ? utcDateStringToLocal(fields.data.Time_Max) : ''}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? utcDateStringToLocal(fields.data.Time_Min) : ''}\r\n                                    maxDate={fields ? utcDateStringToLocal(fields.data.Time_Max) : ''}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat1-input\"\r\n                                    error={Boolean(startLatMessage)}\r\n                                    label={\"Start Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat1}\r\n                                    onChange={handleLatLonChange}\r\n                                    helperText={startLatMessage}\r\n                                    name='lat1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat2-input\"\r\n                                    error={Boolean(endLatMessage)}\r\n                                    label={\"End Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat2}\r\n                                    onChange={handleLatLonChange}\r\n                                    helperText={endLatMessage}\r\n                                    name='lat2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon1-input\"\r\n                                    error={Boolean(startLonMessage)}\r\n                                    label={\"Start Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon1}\r\n                                    onChange={handleLatLonChange}\r\n                                    helperText={startLonMessage}\r\n                                    name='lon1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon2-input\"\r\n                                    error={Boolean(endLonMessage)}\r\n                                    label={\"End Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon2}\r\n                                    onChange={handleLatLonChange}\r\n                                    helperText={endLonMessage}\r\n                                    name='lon2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    disabled={!fields || surfaceOnly}\r\n                                    id=\"depth1-input\"\r\n                                    error={Boolean(startDepthMessage)}\r\n                                    label=\"Start Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth1}\r\n                                    onChange={handleChange}\r\n                                    helperText={startDepthMessage}\r\n                                    name='depth1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    disabled={!fields || surfaceOnly}\r\n                                    id=\"depth2-input\"\r\n                                    error={Boolean(endDepthMessage)}\r\n                                    label=\"End Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth2}\r\n                                    onChange={handleChange}\r\n                                    helperText={endDepthMessage}\r\n                                    name='depth2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <FormControl variant='filled' className={classes.vizTypeSelectFormControl} disabled={!fields}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        value={selectedVizType}\r\n                                        variant='filled'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'filled'\r\n                                        }}\r\n                                        >\r\n                                        <MenuItem disabled={Boolean(heatmapMessage)} value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>\r\n                                        <MenuItem disabled={Boolean(contourMessage)} value={vizSubTypes.contourMap}>Contour</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sectionMapMessage)} value={vizSubTypes.sectionMap}>Section Map</MenuItem>\r\n                                        <MenuItem disabled={Boolean(histogramMessage)} value={vizSubTypes.histogram}>Histogram</MenuItem>                                    \r\n                                        <MenuItem disabled={Boolean(timeSeriesMessage)} value={vizSubTypes.timeSeries}>Time Series</MenuItem>\r\n                                        <MenuItem disabled={Boolean(depthProfileMessage)} value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sparseMapMessage)} value={vizSubTypes.sparse}>Sparse Map</MenuItem>\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Button\r\n                                    className={classes.visualizeButton}\r\n                                    variant='contained'\r\n                                    onClick={() => this.props.onVisualize()}\r\n                                    disabled={!selectedVizType || parametersAreInvalid || !fields}\r\n                                    fullWidth\r\n                                >\r\n                                    Visualize\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>                    \r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));\r\n\r\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\r\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   root: {\r\n//     display: 'flex',\r\n//   },\r\n//   appBar: {\r\n//     transition: theme.transitions.create(['margin', 'width'], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//   },\r\n//   appBarShift: {\r\n//     width: `calc(100% - ${drawerWidth}px)`,\r\n//     marginLeft: drawerWidth,\r\n//     transition: theme.transitions.create(['margin', 'width'], {\r\n//       easing: theme.transitions.easing.easeOut,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//   },\r\n//   menuButton: {\r\n//     marginRight: theme.spacing(2),\r\n//   },\r\n//   hide: {\r\n//     display: 'none',\r\n//   },\r\n//   drawer: {\r\n//     width: drawerWidth,\r\n//     flexShrink: 0,\r\n//   },\r\n//   drawerPaper: {\r\n//     width: drawerWidth,\r\n//   },\r\n//   drawerHeader: {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     padding: theme.spacing(0, 1),\r\n//     ...theme.mixins.toolbar,\r\n//     justifyContent: 'flex-end',\r\n//   },\r\n//   content: {\r\n//     flexGrow: 1,\r\n//     padding: theme.spacing(3),\r\n//     transition: theme.transitions.create('margin', {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//     marginLeft: -drawerWidth,\r\n//   },\r\n//   contentShift: {\r\n//     transition: theme.transitions.create('margin', {\r\n//       easing: theme.transitions.easing.easeOut,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//     marginLeft: 0,\r\n//   },\r\n// }));\r\n\r\n// export default function PersistentDrawerLeft() {\r\n//   const classes = useStyles();\r\n//   const theme = useTheme();\r\n//   const [open, setOpen] = React.useState(false);\r\n\r\n//   const handleDrawerOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleDrawerClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Drawer\r\n//         className={classes.drawer}\r\n//         variant=\"persistent\"\r\n//         anchor=\"left\"\r\n//         open={open}\r\n//         classes={{\r\n//           paper: classes.drawerPaper,\r\n//         }}\r\n//       >\r\n//         <div className={classes.drawerHeader}>\r\n//           <IconButton onClick={handleDrawerClose}>\r\n//             {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n//           </IconButton>\r\n//         </div>\r\n//         <Divider />\r\n//         <List>\r\n//           {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n//             <ListItem button key={text}>\r\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n//               <ListItemText primary={text} />\r\n//             </ListItem>\r\n//           ))}\r\n//         </List>\r\n//         <Divider />\r\n//         <List>\r\n//           {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n//             <ListItem button key={text}>\r\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n//               <ListItemText primary={text} />\r\n//             </ListItem>\r\n//           ))}\r\n//         </List>\r\n//       </Drawer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// import React from 'react';\r\n// import { connect } from 'react-redux';\r\n\r\n// import { withStyles } from '@material-ui/core/styles';\r\n\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Tooltip from '@material-ui/core/Tooltip';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import { InsertChartOutlined, Delete, Web, Language } from '@material-ui/icons';\r\n\r\n// import { clearCharts } from '../Redux/actions/visualization';\r\n\r\n// const mapStateToProps = (state, ownProps) => ({\r\n//     charts: state.charts\r\n// })\r\n\r\n// const mapDispatchToProps = {\r\n//     clearCharts\r\n// }\r\n\r\n// const styles = (theme) => ({\r\n\r\n//     panelPaper: {\r\n//         width: '27px',\r\n//         // height: '240px',\r\n//         padding: theme.spacing(0.3),\r\n//         position:'fixed',\r\n//         left: '80vw',\r\n//         bottom: '15px',\r\n//         zIndex: 2,\r\n//         textDecoration:'none',\r\n//         cursor: 'pointer',\r\n//         borderRadius: '5%',\r\n//         backgroundColor: 'transparent'\r\n//     },\r\n\r\n//     iconButton: {\r\n//         padding: theme.spacing(0.4),\r\n//         marginLeft: '-2px',\r\n//         marginTop: '-1px'\r\n//     }\r\n// })\r\n\r\n// const VizControlPanel = (props) => {\r\n//     const { classes } = props;\r\n\r\n//     return (\r\n//         <div>\r\n//             <Paper className={classes.panelPaper}>\r\n//                 <Grid container direction='column'>\r\n\r\n//                     <Tooltip title={props.showUI ? 'Hide UI' : 'Show UI'}>\r\n//                         <IconButton color='secondary' onClick={props.toggleShowUI} className={classes.iconButton}>\r\n//                             <Web/>\r\n//                         </IconButton>\r\n//                     </Tooltip>\r\n\r\n//                     {props.showCharts? \r\n//                         <Tooltip title='Show Globe'>\r\n//                             <IconButton color='secondary' onClick={props.toggleChartView} className={classes.iconButton}>\r\n//                                 <Language/>\r\n//                             </IconButton>\r\n//                         </Tooltip>                \r\n//                     :\r\n//                         <Tooltip title='Show Charts'>\r\n//                             <IconButton color={props.charts.length ? 'primary' : 'secondary'} onClick={props.toggleChartView} className={classes.iconButton}>\r\n//                                 <InsertChartOutlined/>\r\n//                             </IconButton>\r\n//                         </Tooltip>            \r\n//                     }\r\n\r\n//                     <Tooltip title='Clear Visualizations'>\r\n//                         <IconButton color='secondary' onClick={props.clearCharts} className={classes.iconButton}>\r\n//                             <Delete/>\r\n//                         </IconButton>\r\n//                     </Tooltip>\r\n\r\n//                 </Grid>\r\n//             </Paper>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));\r\n","import React, { useState } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Palette } from '@material-ui/icons';\r\n\r\nconst styles = theme => ({\r\n    colorscaleMenu: {\r\n        maxHeight: '400px'\r\n    },\r\n\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst colorscaleOptions = [\r\n    'Greys', \r\n    'YlGnBu', \r\n    'Greens', \r\n    'YlOrRd',\r\n    'Bluered',\r\n    'RdBu',\r\n    'Reds',\r\n    'Blues',\r\n    'Picnic',\r\n    'Rainbow',\r\n    'Portland',\r\n    'Jet',\r\n    'Hot',\r\n    'Blackbody',\r\n    'Earth',\r\n    'Electric',\r\n    'Viridis',\r\n    'Cividis'];\r\n\r\nconst PaletteControls = (props) => {\r\n\r\n    const { classes, disabled } = props;\r\n\r\n    const [paletteAnchorElement, setPaletteAnchorElement] = useState(null);\r\n\r\n    if(disabled){\r\n        return (\r\n            <Tooltip title='Change Palette'>\r\n                <div className={classes.iconButtonWrapper}>\r\n                <IconButton disabled={disabled} color='secondary' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                    <Palette/>\r\n                </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    let handleOpenPalette = (event) => {\r\n        setPaletteAnchorElement(event.currentTarget);\r\n    }\r\n\r\n    let handlePaletteChoice = (option) => {\r\n        setPaletteAnchorElement(null);\r\n        props.handlePaletteChoice(option);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title='Change Palette'>\r\n                <IconButton disabled={disabled} color='secondary' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                    <Palette/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={paletteAnchorElement}\r\n                keepMounted\r\n                open={Boolean(paletteAnchorElement)}\r\n                onClose={() => setPaletteAnchorElement(null)}\r\n                className={classes.colorscaleMenu}\r\n            >\r\n                {colorscaleOptions.map((option, index) => (\r\n                    <MenuItem onClick={() => handlePaletteChoice(option)} key={index}>{option}</MenuItem>\r\n                ))}\r\n                \r\n            </Menu>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PaletteControls);","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { SwapVert } from '@material-ui/icons';\r\n\r\nconst styles = theme => ({\r\n    popover: {\r\n        width: '470px',\r\n        height: '110px',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5)\r\n    },\r\n\r\n        iconButtonWrapper: {\r\n            display: 'inline-block'\r\n        }\r\n\r\n})\r\n\r\nconst ZValueControls = (props) => {\r\n\r\n    const { classes, extent, zValues, handleZValueConfirm, disabled } = props;\r\n\r\n    if(disabled){\r\n        return (\r\n            <Tooltip title='Change Colorscale Range'>\r\n                <div className={classes.iconButtonWrapper}>\r\n                <IconButton disabled>\r\n                    <SwapVert/>\r\n                </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    const [popoverAnchorElement, setPopoverAnchorElement] = React.useState(null);\r\n    const [localZMin, setLocalZMin] = React.useState(zValues[0]);\r\n    const [localZMax, setLocalZMax] = React.useState(zValues[1]);\r\n\r\n    const handleClose = () => {\r\n        setPopoverAnchorElement(null);\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        handleZValueConfirm([localZMin, localZMax]);\r\n        handleClose();\r\n    }\r\n\r\n    const checkLocalZMin = () => {\r\n        if(localZMin < extent[0]) return `Minimum value is ${extent[0]}`;\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMin)) return 'Invalid value';\r\n    }\r\n\r\n    const checkLocalZMax = () => {\r\n        if(localZMax > extent[1]) return `Maximum value is ${extent[1]}`;\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMax)) return 'Invalid value';\r\n    }\r\n\r\n    const validations = [\r\n        checkLocalZMin(),\r\n        checkLocalZMax()\r\n    ];\r\n\r\n    const [\r\n        zMinMessage,\r\n        zMaxMessage\r\n    ] = validations;\r\n\r\n    const open = Boolean(popoverAnchorElement);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title='Change Colorscale Range'>\r\n                <IconButton disabled={disabled} color='secondary' onClick={(event) => setPopoverAnchorElement(event.currentTarget)}>\r\n                    <SwapVert/>\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={popoverAnchorElement}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMinMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-min-input' >Min</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-min-input'\r\n                                    value={localZMin}\r\n                                    onChange={(event) => setLocalZMin(event.target.value)}\r\n                                    aria-describedby='local-zmin-error'\r\n                                    labelWidth={50}\r\n                                    name='local-zmin'\r\n                                />\r\n                                <FormHelperText id='local-zmin-error'>{zMinMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-max-input' >Max</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-max-input'\r\n                                    value={localZMax}\r\n                                    onChange={(event) => setLocalZMax(event.target.value)}\r\n                                    aria-describedby=\"local-zmax-error\"\r\n                                    labelWidth={50}\r\n                                    name='local-zmax'\r\n                                />\r\n                                <FormHelperText id=\"local-zmax-error\">{zMaxMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={7}>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleConfirm}\r\n                                disabled={Boolean(zMinMessage || zMaxMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ZValueControls);","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { DateRange, Waves, CloudDownload } from '@material-ui/icons';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport PaletteControls from './PaletteControls';\r\nimport ZValueControls from './ZValueControls';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst ChartControlPanel = (props) => {\r\n\r\n    const { \r\n        classes, \r\n        handlePaletteChoice, \r\n        onToggleSplitByDate, \r\n        onToggleSplitByDepth, \r\n        downloadCsv, \r\n        splitByDepth, \r\n        splitByDate,\r\n        handleZValueConfirm,\r\n        zValues,\r\n        extent\r\n    } = props;\r\n\r\n    return (\r\n        <div className={classes.buttonBlock}>\r\n\r\n            <Tooltip title={splitByDate ? 'Merge Dates' : 'Split By Date'}>\r\n                <div className={classes.iconButtonWrapper}>\r\n                    <IconButton color='secondary' className={classes.iconButton} \r\n                        disabled={!Boolean(onToggleSplitByDate)} \r\n                        onClick={onToggleSplitByDate}\r\n                    >\r\n                        <DateRange/>\r\n                    </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n\r\n            <Tooltip title={splitByDepth ? 'Merge Depths' : 'Split By Depth'}>\r\n                <div className={classes.iconButtonWrapper}>\r\n                    <IconButton color='secondary' className={classes.iconButton} \r\n                        disabled={!Boolean(onToggleSplitByDepth)} \r\n                        onClick={onToggleSplitByDepth}\r\n                    >\r\n                        <Waves/>\r\n                    </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n\r\n            <Tooltip title='Download CSV'>\r\n                <div className={classes.iconButtonWrapper}>\r\n                    <IconButton color='secondary' onClick={downloadCsv} className={classes.iconButton} >\r\n                        <CloudDownload/>\r\n                    </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n\r\n            <ZValueControls\r\n                disabled={!Boolean(handleZValueConfirm)}\r\n                zValues={zValues}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                extent={extent}\r\n            />\r\n            \r\n            <PaletteControls\r\n                disabled={!Boolean(handlePaletteChoice)}\r\n                handlePaletteChoice={handlePaletteChoice}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ChartControlPanel);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nconst handleContourMap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length <=1 ? dates[0].slice(0,10) :\r\n            !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        \r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Merged Depths' : \r\n            depths[index % depths.length].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'contour',\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: '.2e'\r\n                    },\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    }\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {title: 'Longitude', color: '#ffffff'},\r\n                yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length <=1 ? dates[0].slice(0,10) :\r\n            !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Aggregated Depth' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHeatmap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length <=1 ? dates[0].slice(0,10) :\r\n            !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    zsmooth: subset.length < 20000 ? 'fast' : 'false',\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    colorscale: palette,\r\n                    autocolorscale: false,\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n                    \r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}   ${date}`,\r\n                xaxis: {\r\n                    title: 'Longitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: 'Latitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SpaceTimeChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitByDepth, setSplitByDepth] = useState(false);\r\n    const [subTypeState, setSubTypeState] = useState(subType);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const subSets = data.generatePlotData(subTypeState, splitByDate, splitByDepth);\r\n    var plots;\r\n\r\n    switch(subTypeState){\r\n        case vizSubTypes.contourMap:\r\n            plots = handleContourMap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.heatmap:\r\n            plots = handleHeatmap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.histogram:\r\n            plots = handleHistogram(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        default:\r\n            plots = '';\r\n            break;        \r\n\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDepth = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDepth(!splitByDepth);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                onToggleSplitByDepth={depths.size===1 ? null : onToggleSplitByDepth}\r\n                onToggleSplitByDate={dates.size===1 ? null : onToggleSplitByDate}\r\n                splitByDepth={splitByDepth}\r\n                splitByDate={splitByDate}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SpaceTimeChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst TimeSeriesChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, dates, parameters, metadata } = data;\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }  \r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                  x: dates,\r\n                  y: variableValues,\r\n                  error_y: {\r\n                    type: 'data',\r\n                    array: stds,\r\n                    opacity: 0.2,\r\n                    color: 'gray',\r\n                    visible: true\r\n                  },\r\n                  name: parameters.fields,\r\n                  type: 'scatter',\r\n                  line: {color: '#e377c2'},\r\n                  },\r\n                ]}\r\n\r\n                layout= {{\r\n                    title: `${parameters.fields}[${metadata.Unit}]  ${parameters.dt1} to ${parameters.dt2}`,\r\n\r\n                    paper_bgcolor: colors.backgroundGray,\r\n                    font: {\r\n                        color: '#ffffff'\r\n                    },\r\n                  xaxis: {\r\n                      title: 'Time',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: parameters.fields,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: [\r\n                    {\r\n                        text: `Source: ${metadata.Distributor.length < 30 ? \r\n                                metadata.Distributor : \r\n                                metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(TimeSeriesChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst DepthProfileChart = (props) => {\r\n\r\n    const { classes, setLoadingMessage } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, depths, parameters, metadata } = data;\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }    \r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                  x: depths,\r\n                  y: variableValues,\r\n                  error_y: {\r\n                    type: 'data',\r\n                    array: stds,\r\n                    opacity: 0.2,\r\n                    color: 'gray',\r\n                    visible: true\r\n                  },\r\n                  name: parameters.fields,\r\n                  type: 'scatter',\r\n                  line: {color: '#e377c2'},\r\n                  },\r\n                ]}\r\n\r\n                layout= {{\r\n                    title: `${parameters.fields}[${metadata.Unit}]  ${parameters.depth1} to ${parameters.depth2} meters`,\r\n\r\n                    paper_bgcolor: colors.backgroundGray,\r\n                    font: {\r\n                        color: '#ffffff'\r\n                    },\r\n                  xaxis: {\r\n                      title: 'Depth[m]',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: [\r\n                    {\r\n                        text: `Source: ${metadata.Distributor.length < 30 ? \r\n                                metadata.Distributor : \r\n                                metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(DepthProfileChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nconst handleSectionMap = (subsets, infoObject, splitByDate, splitBySpace, orientation) => {\r\n\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    const distinctMeridiansOrParallelsForSplitting = \r\n        orientation === 'zonal' ?\r\n        infoObject.latsDistinct : \r\n        infoObject.lonsDistinct;\r\n\r\n    const xAxisLabel = \r\n        orientation === 'zonal' ?\r\n        'Longitude' : \r\n        'Latitude';\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length < 2 ?\r\n            dates[0] :\r\n            !splitByDate ? \r\n                'Merged Dates' : \r\n                splitBySpace ? \r\n                    dates[Math.floor(index/distinctMeridiansOrParallelsForSplitting.length)].slice(0, 10) : \r\n                    dates[index];\r\n                \r\n        const spaceTitle = distinctMeridiansOrParallelsForSplitting.length <= 1 ? distinctMeridiansOrParallelsForSplitting[0] : \r\n            !splitBySpace ? `Merged ${xAxisLabel}s` : \r\n            `${distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length]} ${orientation === 'zonal' ? \r\n            'Parallel' :\r\n            'Meridian'}`\r\n \r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: infoObject.zMin,\r\n                    zmax: infoObject.zMax,\r\n                    zsmooth: subset.length < 20000 ? 'best' : 'fast',\r\n                    x: orientation === 'zonal' ? infoObject.lons : infoObject.lats,\r\n                    y: orientation === 'zonal' ? infoObject.zonalPlotDepths : infoObject.meridionalPlotDepths,\r\n                    z: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    connectgaps: true,\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    }\r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${spaceTitle}   ${date}`,\r\n                xaxis: {\r\n                    title: `${xAxisLabel}[\\xB0]`, \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: 'Depth[m]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />\r\n        )\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SectionMapChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { dates, extent, latsDistinct, lonsDistinct } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitBySpace, setSplitBySpace] = useState(false);\r\n    const [orientation, setOrientation] = useState(data.orientation);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const numSpaceSplits = \r\n        orientation === 'zonal' ?\r\n        latsDistinct.length : \r\n        lonsDistinct.length\r\n\r\n    const splitOrientation = orientation === 'zonal' ?\r\n        'Longitudes' : \r\n        'Latitudes'\r\n\r\n    const alternateOrientation = orientation === 'zonal' ? 'meridional' : 'zonal';\r\n\r\n    const subsets = data.generatePlotData(orientation, splitByDate, splitBySpace);\r\n    var plots = handleSectionMap(subsets, data, splitByDate, splitBySpace, orientation);\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n                {/* <Button {...buttonProps} disabled={dates.size === 1} onClick={() => setSplitByDate(!splitByDate)}>{splitByDate ? 'Merge Dates' : 'Split By Date'}</Button>\r\n                <Button {...buttonProps} disabled={numSpaceSplits === 1} onClick={() => setSplitBySpace(!splitBySpace)}>{splitBySpace ? `Merge ${splitOrientation}` : `Split By ${splitOrientation}`}</Button>\r\n                <Button {...buttonProps} disabled={numSpaceSplits === 1} onClick={() => setOrientation(alternateOrientation)}>Switch to {alternateOrientation}</Button> */}\r\n            <ChartControlPanel\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                downloadCsv={downloadCsv}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SectionMapChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\n\r\nconst handleSparseMap = (infoObject, palette, zValues) => {\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zValues[0],\r\n                    zmax: zValues[1],\r\n                    lon: infoObject.lons,\r\n                    lat: infoObject.lats,\r\n                    z: infoObject.variableValues,\r\n                    zmin:'',\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    radius: 6,                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'densitymapbox',\r\n                    \r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    },\r\n                }\r\n            ]}\r\n\r\n            layout= {{\r\n                width: 600,\r\n                height: 400,\r\n                font: {color: '#ffffff'},\r\n                title: `${infoObject.parameters.fields}[${infoObject.metadata.Unit}]`,\r\n                // xaxis: {title: 'Longitude', color: '#ffffff'},\r\n                // yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                paper_bgcolor: colors.backgroundGray,\r\n\r\n                mapbox: {\r\n                    style: 'basic',\r\n                    center: {\r\n                        lon: (infoObject.parameters.lon1 + infoObject.parameters.lon2) / 2,\r\n                        lat: (infoObject.parameters.lat1 + infoObject.parameters.lat2) / 2\r\n                    }\r\n                },\r\n\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}\r\n            \r\n            config={{\r\n                mapboxAccessToken:\r\n                  \"pk.eyJ1IjoiZGVuaG9sdHoiLCJhIjoiY2p1ZW9obTNhMDVxZjQzcDRvMmdlcDN2aiJ9.HvLaX2bcradeE5T-lpTc8w\"\r\n              }}\r\n        />)\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst buttonProps = {\r\n    size: 'small',\r\n    color: 'primary',\r\n    variant: 'contained'\r\n}\r\n\r\nconst SparseMap = (props) => {\r\n\r\n    const { classes } = props;\r\n\r\n    const { data } = props.chart;\r\n    const [palette, setPalette] = useState('Heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n\r\n    const plot = handleSparseMap(data, palette, zValues)\r\n\r\n    let handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    let handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={data.extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plot}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseMap));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport colors from '../Enums/colors';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nimport SpaceTimeChart from './ChartComponents/SpaceTimeChart';\r\nimport TimeSeriesChart from './ChartComponents/TimeSeriesChart';\r\nimport DepthProfileChart from './ChartComponents/DepthProfileChart';\r\nimport SectionMapChart from './ChartComponents/SectionMapChart';\r\nimport SparseMap from './ChartComponents/SparseMap';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsContainer: {\r\n        margin: '300px 0 0 100px'\r\n    },\r\n\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n    }\r\n})\r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n        const { classes, charts } = this.props;\r\n\r\n        return (\r\n            <div className={classes.chartsContainer}>\r\n                {charts.map((chart, index) => {\r\n                    switch(chart.data.parameters.spName){\r\n                        case storedProcedures.spaceTime:\r\n                          if(chart.subType === vizSubTypes.sparse) return <SparseMap chart={chart} key={index}/>\r\n                          else return <SpaceTimeChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.timeSeries:\r\n                          return <TimeSeriesChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.depthProfile:\r\n                          return <DepthProfileChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.sectionMap:\r\n                          return <SectionMapChart chart={chart} key={index}/>\r\n                        \r\n                        default:\r\n                          return '';\r\n                  }\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { cruiseListRequestSend, cruiseTrajectoryRequestSend, cruiseTrajectoryClear } from '../Redux/actions/visualization';\r\n\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    cruiseList: state.cruiseList,\r\n    getCruiseListState: state.getCruiseListState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseListRequestSend,\r\n    cruiseTrajectoryRequestSend,\r\n    cruiseTrajectoryClear\r\n}\r\n\r\nconst esriFonts = '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif';\r\nconst esriFontColor = 'white';\r\nconst esriBackgroundColor = '#424242';\r\nconst esriHoverFontColor = '#242424';\r\nconst esriHoverBackgroundColor = '#949393';\r\n\r\nconst styles = theme => ({\r\n    outerDiv: {\r\n        padding:'12px',\r\n        maxWidth: '260px',\r\n        // backgroundColor: esriBackgroundColor,\r\n        backgroundColor: 'transparent',\r\n        color: esriFontColor,\r\n        borderRadius: '4px',\r\n        boxShadow: '2px'\r\n    },\r\n\r\n    cruiseSelect: {\r\n        width: '260px',\r\n        borderRadius: '4px'\r\n    },\r\n\r\n    cruiseInfo: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        margin: '12px auto 0 auto'\r\n    },\r\n\r\n    cruiseInfoCell: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        borderStyle: 'none'\r\n    }\r\n})\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\nclass CruiseSelector extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Nickname');\r\n        search.addIndex('Name');\r\n        search.addIndex('Chief_Name');\r\n        search.addIndex('Keywords');\r\n        try{\r\n            if(props.cruiseList && props.cruiseList.length) search.addDocuments(props.cruiseList);\r\n        } catch(e) {\r\n            console.log(e);\r\n            console.log(props.cruiseList);\r\n        }\r\n\r\n        this.state = {\r\n            search,\r\n            searchField: '',\r\n            selectedCruise: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.cruiseList || !this.props.cruiseList.length) this.props.cruiseListRequestSend();\r\n    }\r\n\r\n    getSelectOptionsFromCruiseList = (list) => {\r\n        return list.map(item => ({\r\n            value: item.Nickname,\r\n            label: item.Nickname,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    handleCruiseSelect = (selection) => {\r\n        if(selection && selection.data){\r\n            const id = selection.data.ID;\r\n            this.props.cruiseTrajectoryRequestSend(id);\r\n        } else {this.props.cruiseTrajectoryClear()}\r\n\r\n        this.setState({...this.state, selectedCruise: selection});\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.cruiseList && prevProps.cruiseList.length) && (this.props.cruiseList && this.props.cruiseList.length)){\r\n            this.state.search.addDocuments(this.props.cruiseList);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    render(){\r\n\r\n        const { search, searchField, selectedCruise } = this.state;\r\n\r\n        const { classes, cruiseList} = this.props;\r\n\r\n        const options = searchField && cruiseList ? this.getSelectOptionsFromCruiseList(search.search(searchField)) \r\n            : cruiseList ? this.getSelectOptionsFromCruiseList(cruiseList) \r\n            : []\r\n\r\n        return (\r\n            <div id='cruise-selector' className={classes.outerDiv}>\r\n                <Select\r\n                    isLoading={this.props.getCruiseListState === states.inProgress}\r\n                    components={{\r\n                        IndicatorSeparator:'',\r\n                        Option,\r\n                        SingleValue,\r\n                    }}\r\n                    isClearable\r\n                    onInputChange={this.onAutoSuggestChange}\r\n                    filterOption={null}\r\n                    className={classes.cruiseSelect}\r\n                    escapeClearsValue\r\n                    label=\"Cruise\"\r\n                    options={options}\r\n                    onChange={this.handleCruiseSelect}\r\n                    value={this.state.selectedCruise}\r\n                    placeholder=\"Search Cruises\"\r\n                    styles={{\r\n                        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                        menuList: provided => ({...provided, backgroundColor: esriBackgroundColor}),\r\n\r\n                        input: provided => ({...provided,\r\n                            color: 'inherit',\r\n                            fontFamily: esriFonts\r\n                        }),\r\n\r\n                        control: provided => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            border: 'none',\r\n                            boxShadow: '1px 1px 1px 1px #242424',\r\n                            color: esriFontColor,\r\n                            borderRadius: 4,\r\n                            '&:hover': { \r\n                                border: `1px solid white`,\r\n                            },\r\n                            '&:focus-within': {\r\n                                borderColor: colors.orange\r\n                            }\r\n                        }),\r\n\r\n                        placeholder: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: colors.orange,\r\n                            fontSize: '14px'\r\n                        }),\r\n\r\n                        noOptionsMessage: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: esriFontColor,\r\n                            backgroundColor: esriBackgroundColor\r\n                        }),\r\n\r\n                        option: (provided, state) => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            color: esriFontColor,\r\n                            '&:hover': { \r\n                                color: '#242424',\r\n                                backgroundColor: '#949393'\r\n                            },\r\n                        }),\r\n\r\n                        singleValue: (provided, state) => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: 'inherit',\r\n                            paddingRight: '20px',\r\n                        })\r\n                    }}\r\n                    theme={theme => ({\r\n                        ...theme,\r\n                        colors: {\r\n                            ...theme.colors,\r\n                            // Background color of hovered options\r\n                            primary25: '#e0e0e0',\r\n                            primary: '#212121',\r\n                        },\r\n                    })}\r\n                />\r\n                {selectedCruise &&\r\n                    <Table size='small' className={classes.cruiseInfo}>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Cruise:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Name}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Nickname:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Nickname}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            {\r\n                                selectedCruise.data.Start_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Start Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Start_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Chief_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Chief Scientist:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Chief_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Ship_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Ship:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Ship_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                    // <div>                    \r\n                    //     <p>Cruise {selectedCruise.data.Name}</p>\r\n                    //     <p>Disembarked {selectedCruise.data.Start_Time.slice(0,10)}</p>\r\n                    //     <p>Chief Scientist {selectedCruise.data.Chief_Name}</p>    \r\n                    // </div>            \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CruiseSelector));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\nimport regionRenderModes from '../Enums/regionRenderModes';\r\n\r\nimport CruiseSelector from './CruiseSelector';\r\nimport colors from '../Enums/colors';\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nconst drawButtonStyles = (theme) => ({\r\n    outerDiv: {\r\n        // padding:'12px 0 12px 0',\r\n        backgroundColor: 'transparent',\r\n        // width: '180px',\r\n        borderRadius: '4px',\r\n        marginRight: '20px'\r\n    },\r\n\r\n    drawButton: {\r\n        // border: '1px solid #333333',\r\n        border: `1px solid #333333`,\r\n        borderRadius: '4px',\r\n        color: colors.orange,\r\n        cursor: 'pointer',\r\n        padding: '6px',\r\n        width: '160px',\r\n        fontSize:'14px',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        // backgroundColor: 'rgba(255, 128, 0, .8)',\r\n        // backgroundColor: 'transparent',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif',\r\n        '&:hover': { \r\n            borderColor: 'white'\r\n        },\r\n    },\r\n\r\n    helpText: {\r\n        marginTop: 0,\r\n        color: 'white',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif'\r\n    },\r\n\r\n    cancelButton: {\r\n        display: 'none',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nconst DrawButtonRaw = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    return (\r\n        <div className={classes.outerDiv} id='draw-region-div'>\r\n            {showHelp && <p className={classes.helpText}>Click once to draw <br/>and again to finish</p>}\r\n            <button id='draw-button' className={classes.drawButton}>\r\n                Select Region\r\n            </button>\r\n            <button id='cancel-button' className={`${classes.drawButton} ${classes.cancelButton}`}>\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DrawButton = withStyles(drawButtonStyles)(DrawButtonRaw);\r\n\r\nconst polygonSymbol = {\r\n    type: \"polygon-3d\",\r\n    symbolLayers: [\r\n        {\r\n            type: \"fill\",\r\n            material: {\r\n            color: [255, 128, 0, .3]\r\n            },\r\n            outline: {\r\n                color: [255, 128, 0, 1],\r\n                size: '2px'\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { view, esriModules, regionLayer, setShowHelp, drawMode } = this.props;\r\n\r\n        const updateOptions = {\r\n            toggleToolOnClick: false,\r\n            tool: \"transform\"\r\n        }\r\n\r\n        var sketchModel = new esriModules.SketchViewModel({\r\n            layer: regionLayer,\r\n            view,\r\n            polygonSymbol,\r\n            defaultUpdateOptions: updateOptions\r\n        })\r\n\r\n        var drawButton = document.getElementById('draw-button');\r\n        var cancelButton = document.getElementById('cancel-button');\r\n\r\n        sketchModel.on(\"create\", (event) => {\r\n            if (event.state === \"complete\") {\r\n                setShowHelp(false);\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });        \r\n\r\n        sketchModel.on('update', (event) => {\r\n            this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphics[0].geometry.extent));\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })       \r\n        \r\n        drawButton.addEventListener(\"click\", (event) => {\r\n                drawMode();\r\n                regionLayer.removeAll();\r\n                setShowHelp(true);\r\n                sketchModel.create('rectangle', {\r\n                    mode:'click'            \r\n                });\r\n                drawButton.style.display = 'none';\r\n                cancelButton.style.display = 'inline-block';\r\n        });\r\n\r\n        cancelButton.addEventListener('click', (event) => {\r\n            sketchModel.cancel();\r\n            setShowHelp(false);\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })\r\n\r\n        view.ui.add('draw-region-div', 'bottom-right');\r\n        view.ui.add('cruise-selector', 'top-right');\r\n\r\n        view.ui.remove('zoom');\r\n        view.ui.remove('navigation-toggle');\r\n        view.ui.remove('compass');\r\n        view.ui.remove('attribution');\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst TrajectoryController = React.memo((props) => {\r\n    const { cruiseTrajectory, trajectoryLayer, esriModules } = props;\r\n\r\n    if(cruiseTrajectory){\r\n        trajectoryLayer.removeAll();\r\n\r\n        const paths = cruiseTrajectory.lons.map((lon, i) => [lon, cruiseTrajectory.lats[i]]);\r\n\r\n        var cruiseTrajectoryGeometry = {\r\n            type: 'polyline',\r\n            paths\r\n        }\r\n\r\n        var cruiseTrajectorySymbol = {\r\n            type: 'line-3d',\r\n            symbolLayers: [{\r\n                type: 'line',\r\n                material: { color: [255, 128, 0, 1] },\r\n                cap:  'round',\r\n                join: 'round',\r\n                size: 2\r\n            }]\r\n        }\r\n\r\n        let graphic = new esriModules.Graphic({\r\n            geometry: cruiseTrajectoryGeometry,\r\n            symbol: cruiseTrajectorySymbol\r\n        });\r\n\r\n        trajectoryLayer.add(graphic);\r\n\r\n        try {\r\n            const { extent } = graphic.geometry;\r\n            const center = [extent.center.x,extent.center.y];\r\n\r\n            const xSize = extent.xmax - extent.xmin;\r\n            const ySize = extent.ymax - extent.ymin;\r\n            var graphicSize = xSize > ySize ? xSize : ySize;\r\n            graphicSize = graphicSize > 60 ? 60 : graphicSize;\r\n\r\n            var zoom = 7 - Math.floor(graphicSize / 10);            \r\n    \r\n            props.view.goTo({\r\n                target: center,\r\n                zoom\r\n            }, {\r\n                maxDuration: 2500,\r\n                speedFactor: .5\r\n            });    \r\n\r\n        } catch(e) {console.log(e)}\r\n\r\n    } else {\r\n        trajectoryLayer.removeAll();\r\n\r\n        props.view.goTo({\r\n            target: [-140, 30],\r\n            zoom: 3\r\n        }, {\r\n            maxDuration: 2500,\r\n            speedFactor: .5\r\n        }); \r\n    }\r\n    return '';\r\n})\r\n\r\nclass MapContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showHelp: false\r\n        }\r\n        this.regionLayer = new props.esriModules.GraphicsLayer();\r\n        this.trajectoryLayer = new props.esriModules.GraphicsLayer();\r\n    }\r\n\r\n    render = () => {\r\n        const { classes, esriModules, regionRenderMode, spParams, cruiseTrajectory } = this.props;\r\n        const lat1 = parseFloat(spParams.lat1);\r\n        const lat2 = parseFloat(spParams.lat2);\r\n        const lon1 = parseFloat(spParams.lon1);\r\n        const lon2 = parseFloat(spParams.lon2);\r\n\r\n        if(regionRenderMode === regionRenderModes.form){\r\n            this.regionLayer.removeAll();\r\n\r\n            var polygon = {\r\n                type: 'polygon', \r\n                rings: [\r\n                    [lon1, lat1],\r\n                    [lon2, lat1],\r\n                    [lon2, lat2],\r\n                    [lon1, lat2],\r\n                    [lon1, lat1]\r\n                ]\r\n            };\r\n\r\n            this.regionLayer.add(new esriModules.Graphic({\r\n                geometry: polygon,\r\n                symbol: polygonSymbol\r\n            }))\r\n        }\r\n        \r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ \r\n                        basemap: 'satellite',\r\n                        layers: [\r\n                            this.regionLayer,\r\n                            this.trajectoryLayer\r\n                        ]\r\n                    }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3\r\n                    }}\r\n                >\r\n                    <TrajectoryController \r\n                        cruiseTrajectory={cruiseTrajectory}\r\n                        trajectoryLayer={this.trajectoryLayer}\r\n                        esriModules={esriModules}\r\n                    />\r\n                    <UiComponents\r\n                        updateDomainFromMap={this.props.updateDomainFromMap}\r\n                        updateDomainFromGraphicExtent = {this.props.updateDomainFromGraphicExtent}\r\n                        esriModules={esriModules}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                        regionLayer={this.regionLayer}\r\n                        setShowHelp={(showHelp) => this.setState({...this.state, showHelp})}\r\n                        ref={this.props.globeUIRef}\r\n                        drawMode={this.props.drawMode}\r\n                    />\r\n                </Scene>\r\n                <DrawButton showHelp={this.state.showHelp}/>\r\n                <CruiseSelector/>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MapContainer);","const cleanSPParams = ({depth1, depth2, dt1, dt2, fields, lat1, lat2, lon1, lon2, spName, tableName}) => ({\r\n    depth1: parseFloat(depth1),\r\n    depth2: parseFloat(depth2),\r\n    dt1,\r\n    dt2,\r\n    fields,\r\n    lat1: parseFloat(lat1),\r\n    lat2: parseFloat(lat2),\r\n    lon1: parseFloat(lon1),\r\n    lon2: parseFloat(lon2),\r\n    spName,\r\n    tableName,\r\n})\r\n\r\nexport default cleanSPParams;","const localDateToString = (date) => {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate()\r\n\r\n    let nYear = year.toString();\r\n    let nMonth = month < 10 ? '0' + month.toString() : month.toString();\r\n    let nDay = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return nYear + '-' + nMonth + '-' + nDay;\r\n}\r\n\r\nexport default localDateToString;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport regionRenderModes from '../Enums/regionRenderModes';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport DataRetrievalForm from './DataRetrievalForm';\r\nimport VizControlPanel from './VizControlPanel';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend, cruiseListRequestSend, triggerShowCharts, completedShowCharts } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { loadModules } from 'esri-loader';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport Charts from './Charts';\r\nimport MapContainer from './MapContainer';\r\nimport colors from '../Enums/colors'\r\nimport cleanSPParams from '../Utility/cleanSPParams';\r\nimport localDateToString from '../Utility/localDateToString';\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport TopNavBar from './TopNavBar';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.sectionMap\r\n        }, \r\n        [vizSubTypes.timeSeries]: {\r\n            sp: storedProcedures.timeSeries,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: storedProcedures.depthProfile,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.heatmap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.heatmap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.contourMap\r\n        },\r\n        [vizSubTypes.sparse]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.sparse\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    loadingMessage: state.loadingMessage,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    cruiseList: state.cruiseList,\r\n    showChartsOnce: state.showChartsOnce\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n    cruiseListRequestSend,\r\n    completedShowCharts\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    background: {\r\n        backgroundColor: colors.backgroundGray\r\n    }\r\n})\r\n\r\nclass Visualization extends Component {\r\n    globeUIRef = React.createRef();\r\n\r\n    state = {\r\n        filteredData: [],\r\n        opacity: 1,\r\n        showCharts: false,\r\n        showUI: false,\r\n        surfaceOnly: false,\r\n        irregularSpatialResolution: false,\r\n\r\n        regionRenderMode: regionRenderModes.draw,\r\n        \r\n        spParams: {\r\n            tableName: '',\r\n            fields: null,\r\n            depth1: 0,\r\n            depth2: 0,\r\n            dt1: new Date(),\r\n            dt2: new Date(),\r\n            lat1: 0,\r\n            lat2: 0,\r\n            lon1: 0,\r\n            lon2: 0,\r\n            selectedVizType: ''\r\n        }\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.cruiseList) this.props.cruiseListRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'GraphicsLayer',\r\n            'SketchViewModel',\r\n            'Utils',\r\n            'Graphic',\r\n            'Sketch'\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/layers/GraphicsLayer',\r\n            'esri/widgets/Sketch/SketchViewModel',\r\n            'esri/geometry/support/webMercatorUtils',\r\n            'esri/Graphic',\r\n            \"esri/widgets/Sketch\",\r\n        ]);\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.showChartsOnce) {\r\n            this.props.completedShowCharts();\r\n            this.setState({...this.state, showCharts: true})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleLatLonChange = (event) => {\r\n        this.setState({\r\n            ...this.state, \r\n            spParams: {...this.state.spParams, [event.target.name]: event.target.value},\r\n            regionRenderMode: regionRenderModes.form\r\n        })\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt1:newDate}});\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt2:newDate}});\r\n        }\r\n    }\r\n\r\n    onVisualize = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, selectedVizType } = this.state.spParams;\r\n\r\n        let mapping = mapVizType(selectedVizType);\r\n        let parameters = cleanSPParams({\r\n            depth1,\r\n            depth2,\r\n            dt1: localDateToString(dt1),\r\n            dt2: localDateToString(dt2),\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        });\r\n\r\n        let payload = {\r\n            parameters,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        if(fields) {\r\n            let surfaceOnly = !fields.data.Depth_Min;\r\n            let irregularSpatialResolution = fields.data.Spatial_Resolution === 'Irregular';\r\n\r\n            let selectedVizType = irregularSpatialResolution ? vizSubTypes.sparse : '';\r\n            let dt1 = utcDateStringToLocal(fields.data.Time_Min);\r\n            let dt2 = irregularSpatialResolution ? utcDateStringToLocal(fields.data.Time_Max) : utcDateStringToLocal(fields.data.Time_Min);\r\n            let lat1 = irregularSpatialResolution ? fields.data.Lat_Min : this.state.spParams.lat1;\r\n            let lat2 = irregularSpatialResolution ? fields.data.Lat_Max : this.state.spParams.lat2;\r\n            let lon1 = irregularSpatialResolution ? fields.data.Lon_Min : this.state.spParams.lon1;\r\n            let lon2 = irregularSpatialResolution ? fields.data.Lon_Max : this.state.spParams.lon2;\r\n            let depth1 = fields.data.Depth_Min ? parseFloat(fields.data.Depth_Min).toFixed(3) : 0;\r\n            let depth2 = irregularSpatialResolution ? parseFloat(fields.data.Depth_Max).toFixed(3) : \r\n                fields.data.Depth_Min ? parseFloat(fields.data.Depth_Min).toFixed(3) : 0;\r\n\r\n            let tableName = fields.data.Table_Name;\r\n            \r\n            this.setState({...this.state,\r\n                surfaceOnly,\r\n                irregularSpatialResolution,\r\n                spParams: {...this.state.spParams, \r\n                    fields,\r\n                    dt1,\r\n                    dt2,\r\n                    lat1,\r\n                    lat2,\r\n                    lon1,\r\n                    lon2,\r\n                    depth1,\r\n                    depth2,\r\n                    selectedVizType,\r\n                    tableName\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    handleShowCharts = () => {\r\n        this.setState({...this.state, showCharts: true})\r\n    }\r\n\r\n    handleShowGlobe = () => {\r\n        this.setState({...this.state, showCharts: false})\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromMap = (coordinates) => {\r\n        if(!coordinates || !coordinates.length) return null;\r\n        \r\n        var lons = coordinates.map(a => a[0]);\r\n        var lats = coordinates.map(a => a[1]);\r\n\r\n        var newCoordinates = {\r\n            lat1: Math.min(...lats).toFixed(3),\r\n            lat2: Math.max(...lats).toFixed(3),\r\n            lon1: Math.min(...lons).toFixed(3),\r\n            lon2: Math.max(...lons).toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    updateDomainFromGraphicExtent = (extent) => {\r\n        var newCoordinates = {\r\n            lat1: extent.ymin.toFixed(3),\r\n            lat2: extent.ymax.toFixed(3),\r\n            lon1: extent.xmin.toFixed(3),\r\n            lon2: extent.xmax.toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        return (\r\n            <div className={classes.background}>\r\n                <TopNavBar/>\r\n                <DataRetrievalForm \r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                   {...this.state.spParams}\r\n                   surfaceOnly={this.state.surfaceOnly}\r\n                   irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                />\r\n                <VizControlPanel\r\n                    toggleChartView={this.toggleChartView}\r\n                    toggleShowUI={this.toggleShowUI}\r\n                    showCharts={this.state.showCharts}\r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                    {...this.state.spParams}\r\n                    surfaceOnly={this.state.surfaceOnly}\r\n                    irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                    showCharts={this.state.showCharts}\r\n                    handleShowCharts={this.handleShowCharts}\r\n                    handleShowGlobe={this.handleShowGlobe}\r\n                />\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer\r\n                            globeUIRef={this.globeUIRef}\r\n                            updateDomainFromMap={this.updateDomainFromMap}\r\n                            updateDomainFromGraphicExtent={this.updateDomainFromGraphicExtent}\r\n                            drawMode={() => this.setState({...this.state, regionRenderMode: regionRenderModes.draw})}\r\n                            esriModules={this.state.esriModules}\r\n                            regionRenderMode={this.state.regionRenderMode}\r\n                            spParams={this.state.spParams}\r\n                            cruiseTrajectory={this.props.cruiseTrajectory}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                <div className={this.state.showCharts ? '' : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password, or <Link onClick={this.handleClose} component={RouterLink} to={{pathname: '/register'}}>Register.</Link>\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Spinner from 'react-spinkit';\r\n\r\nconst styles = theme => ({\r\n    loader: {\r\n        backgroundColor: '#000000',\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        opacity: 0.5,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        zIndex: 9998\r\n    },\r\n\r\n    loaderContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItem: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 9999,\r\n        opacity: 1\r\n    },\r\n\r\n    spinnerText: {\r\n        zIndex: 10000,\r\n        color: '#FF8000',\r\n        marginTop: '25px',\r\n        opacity: 1\r\n    },\r\n\r\n    spinner: {\r\n        opacity: 1\r\n    }\r\n})\r\n\r\nconst LoadingOverlay = (props) => {\r\n    const { classes, loadingMessage } = props;\r\n\r\n    if(loadingMessage && loadingMessage.length){\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div className={classes.loaderContent}>\r\n                    <Spinner className={classes.spinner} color='#FF8000' name=\"ball-pulse-rise\" fadeIn='quarter'/>\r\n                    <Typography variant='h6' className={classes.spinnerText}>{loadingMessage}</Typography>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return '';\r\n\r\n}\r\n\r\nexport default withStyles(styles)(LoadingOverlay);","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper';\r\nimport LoadingOverlay from './LoadingOverlay';\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog,\r\n    loadingMessage: state.loadingMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n                <LoadingOverlay loadingMessage={this.props.loadingMessage}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nconst styles = theme => ({\r\n    landingWrapper: {\r\n        margin: '15vh auto'\r\n    },\r\n\r\n    welcomeMessage: {\r\n        color: '#ffffff',\r\n        maxWidth: '500px',\r\n        margin: `${theme.spacing(2)}px auto`\r\n    }\r\n})\r\n\r\nclass LandingPage extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.landingWrapper}>\r\n                <img \r\n                    src='/images/large_cmap_logo.png'\r\n                    height='290'\r\n                    width='600'\r\n                />\r\n                <Typography variant=\"body2\" component=\"p\" className={classes.welcomeMessage}>\r\n                    Welcome to Simons CMAP. This application is currently under heavy development, and some features may be incomplete.\r\n                </Typography>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingPage));","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { Home, CollectionsBookmark, AccountCircle, InsertChartOutlined, ChevronLeft } from '@material-ui/icons';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst navDrawerWidth = 150;\r\n\r\nconst styles = theme => ({\r\n  drawer: {\r\n    width: navDrawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: navDrawerWidth,\r\n  },\r\n\r\n  drForm: {\r\n      width: 180,\r\n      boxShadow: '0px 0px 0px 2px rgba(0,0,0,0.2)'\r\n  },\r\n\r\n  drFormPaper: {\r\n      width: 180,\r\n      left: navDrawerWidth,\r\n      boxShadow: '0px 0px 0px 2px rgba(0,0,0,0.2)'\r\n    //   boxShadow: theme.sha\r\n  },\r\n\r\n  drFormHead: {\r\n    alignItems: 'center',\r\n  },\r\n\r\n  nestedListItem: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingTop: 0,\r\n      marginTop: '-10px',\r\n  },\r\n\r\n  logo: {\r\n    margin: '10px auto 20px auto',\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n\r\n  moveRight: {\r\n      position: 'relative',\r\n      left: '160px'\r\n  }\r\n});\r\n\r\nconst primaryTypographyProps = {\r\n    variant: 'subtitle2'\r\n}\r\n\r\nconst nestedPrimaryTypographyProps = {\r\n    variant: 'caption'\r\n}\r\n\r\nclass PermanentDrawerLeft extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showDataRetrievalForm: false\r\n        }\r\n    }\r\n\r\n    handleOpenDRForm = () => {\r\n        this.setState({...this.state, showDataRetrievalForm: true})\r\n    }\r\n\r\n    handleCloseDRForm = () => {\r\n        this.setState({...this.state, showDataRetrievalForm: false})\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { pathname } = this.props.location;\r\n\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >\r\n                    <List>\r\n                        <ListItem button>\r\n                            <ListItemIcon><Home/></ListItemIcon>\r\n                            <ListItemText primary='Home' primaryTypographyProps={primaryTypographyProps}/>\r\n                        </ListItem>\r\n\r\n                        <ListItem button>\r\n                            <ListItemIcon><AccountCircle/></ListItemIcon>\r\n                            <ListItemText primary='Account' primaryTypographyProps={primaryTypographyProps}/>\r\n                        </ListItem>\r\n\r\n                        <ListItem button>\r\n                            <ListItemIcon><CollectionsBookmark/></ListItemIcon>\r\n                            <ListItemText primary='Catalog' primaryTypographyProps={primaryTypographyProps}/>\r\n                        </ListItem>\r\n\r\n                        <ListItem button>\r\n                            <ListItemIcon><InsertChartOutlined/></ListItemIcon>\r\n                            <ListItemText primary='Visualization' primaryTypographyProps={primaryTypographyProps}/>\r\n                        </ListItem>\r\n\r\n                        <Collapse \r\n                            in={pathname==='/visualization'}\r\n                            timeout=\"auto\" \r\n                            unmountOnExit\r\n                        >\r\n                            <List component=\"div\" disablePadding dense>\r\n                                <ListItem \r\n                                    button \r\n                                    className={classes.nestedListItem}\r\n                                    onClick={this.handleOpenDRForm}\r\n                                >\r\n                                    <ListItemText inset primary=\"New\" primaryTypographyProps={nestedPrimaryTypographyProps}/>\r\n                                </ListItem>\r\n                            </List>\r\n\r\n                            <List component=\"div\" disablePadding>\r\n                                <ListItem button className={classes.nestedListItem}>\r\n                                    <ListItemText inset primary=\"Charts\" primaryTypographyProps={nestedPrimaryTypographyProps}/>\r\n                                </ListItem>\r\n                            </List>\r\n                        </Collapse>\r\n                    </List>\r\n                </Drawer>\r\n\r\n                <Drawer\r\n                    className={classes.drForm}\r\n                    open={this.state.showDataRetrievalForm}\r\n                    variant=\"persistent\"\r\n                    classes={{\r\n                        paper: classes.drFormPaper,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >             \r\n\r\n                    <div className={classes.drFormHead}>\r\n                        <IconButton onClick={this.handleCloseDRForm}>\r\n                            <ChevronLeft color='action'/>\r\n                        </IconButton>\r\n                    </div>     \r\n                </Drawer>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(PermanentDrawerLeft));\r\n\r\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\r\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   root: {\r\n//     display: 'flex',\r\n//   },\r\n//   appBar: {\r\n//     transition: theme.transitions.create(['margin', 'width'], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//   },\r\n//   appBarShift: {\r\n//     width: `calc(100% - ${drawerWidth}px)`,\r\n//     marginLeft: drawerWidth,\r\n//     transition: theme.transitions.create(['margin', 'width'], {\r\n//       easing: theme.transitions.easing.easeOut,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//   },\r\n//   menuButton: {\r\n//     marginRight: theme.spacing(2),\r\n//   },\r\n//   hide: {\r\n//     display: 'none',\r\n//   },\r\n//   drawer: {\r\n//     width: drawerWidth,\r\n//     flexShrink: 0,\r\n//   },\r\n//   drawerPaper: {\r\n//     width: drawerWidth,\r\n//   },\r\n//   drawerHeader: {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     padding: theme.spacing(0, 1),\r\n//     ...theme.mixins.toolbar,\r\n//     justifyContent: 'flex-end',\r\n//   },\r\n//   content: {\r\n//     flexGrow: 1,\r\n//     padding: theme.spacing(3),\r\n//     transition: theme.transitions.create('margin', {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//     marginLeft: -drawerWidth,\r\n//   },\r\n//   contentShift: {\r\n//     transition: theme.transitions.create('margin', {\r\n//       easing: theme.transitions.easing.easeOut,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//     marginLeft: 0,\r\n//   },\r\n// }));\r\n\r\n// export default function PersistentDrawerLeft() {\r\n//   const classes = useStyles();\r\n//   const theme = useTheme();\r\n//   const [open, setOpen] = React.useState(false);\r\n\r\n//   const handleDrawerOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleDrawerClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Drawer\r\n//         className={classes.drawer}\r\n//         variant=\"persistent\"\r\n//         anchor=\"left\"\r\n//         open={open}\r\n//         classes={{\r\n//           paper: classes.drawerPaper,\r\n//         }}\r\n//       >\r\n//         <div className={classes.drawerHeader}>\r\n//           <IconButton onClick={handleDrawerClose}>\r\n//             {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n//           </IconButton>\r\n//         </div>\r\n//         <Divider />\r\n//         <List>\r\n//           {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n//             <ListItem button key={text}>\r\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n//               <ListItemText primary={text} />\r\n//             </ListItem>\r\n//           ))}\r\n//         </List>\r\n//         <Divider />\r\n//         <List>\r\n//           {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n//             <ListItem button key={text}>\r\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n//               <ListItemText primary={text} />\r\n//             </ListItem>\r\n//           ))}\r\n//         </List>\r\n//       </Drawer>\r\n//     </div>\r\n//   );\r\n// }","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport './App.scss';\n\nimport colors from './Enums/colors';\n\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\n\nimport Home from './Components/Home';\nimport Catalog from './Components/Catalog';\nimport Register from './Components/Register';\nimport Visualization from './Components/Visualization';\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\nimport LandingPage from './Components/LandingPage';\nimport NavDrawer from './Components/NavDrawer';\nimport TopNavBar from './Components/TopNavBar';\n\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: colors.backgroundGray,\n      paper: colors.backgroundGray\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiListItemIcon: {\n      root: {\n        minWidth: '40px'\n      }\n    },\n\n    MuiListItem: {\n      gutters: {\n        paddingLeft: '6px',\n        paddingRight: '10px'\n      },\n\n      root: {\n        paddingTop: '4px',\n        paddingBottom: '4px'\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: 'transparent',\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },    \n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiFilledInput: {\n      input: {\n        paddingLeft: '6px',\n      },\n\n      inputSelect: {\n        paddingBottom: '6px'\n      },\n\n      adornedEnd: {\n        paddingRight: '6px'\n      }\n    }\n  }\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  loadingMessage: state.loadingMessage\n})\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.vizRef = React.createRef();\n  }\n\nrender() {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n        <BrowserRouter>\n          <GlobalUIComponentWrapper/>\n          <TopNavBar/>\n          <Switch>          \n            <Route exact path='/apikeymanagement' component={ Home } />\n            <Route exact path='/' component={ LandingPage } />\n            <Route exact path='/catalog' component={ Catalog } />\n            <Route exact path='/register' component={ Register } />\n            <Route exact path='/visualization' component={Visualization} />\n          </Switch>\n        </BrowserRouter>\n        </MuiThemeProvider>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n}\n\nexport default connect(mapStateToProps, null)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\n\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}