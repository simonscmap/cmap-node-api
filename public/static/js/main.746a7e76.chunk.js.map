{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","Enums/visualizationTypes.js","Enums/visualizationSubTypes.js","config.js","api.js","Redux/sagas.js","Redux/store.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/LoginDialog.js","Components/TopNavBar.js","Components/Home.js","Components/GridDetail.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Components/VizTooltip.js","Components/DataRetrievalForm.js","Components/DebugButton.js","Components/ClearVisualizationsButton.js","Components/GoBackButton.js","Components/Charts.js","Components/ToggleChartViewButton.js","Components/ToggleHideUIButton.js","Components/Visualization.js","Components/SnackbarWrapper.js","Components/GlobalUIComponentWrapper.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","initialState","catalog","snackbarIsOpen","snackbarMessage","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","sampleData","queryRequestState","storedProcedureRequestState","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addMap","addChart","clearMaps","types","map","chart","subTypes","sectionMap","timeSeries","histogram","depthProfile","geospatialMap","contourMap","hexMap","apiUrl","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","parameters","reduce","queryString","key","i","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","ndjsonParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","ndjson","on","push","sent","ok","abrupt","getReader","read","done","write","decode","value","stop","keyRetrieval","_callee2","_context2","json","keyCreation","_ref3","_callee3","description","_context3","trim","_x","apply","this","arguments","visualization","queryRequest","_ref4","_callee4","query","vizData","_context4","_x2","storedProcedureRequest","_ref5","_callee5","_context5","_x3","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_context6","_marked6","_context7","_marked7","_context8","visualizationActions","_marked8","_context9","console","log","fields","vizTypes","_marked9","_context10","takeLatest","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","visualizationActionTypes","_marked17","_context18","_marked18","_context19","all","_marked19","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","withStyles","theme","centered","position","top","props","classes","react_default","createElement","CircularProgress","size","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleClick","handleChange","event","setState","target","Fragment","Paper","root","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","Grid","container","alignItems","justify","spacing","item","TextField","margin","id","name","onChange","placeholder","descriptionField","Button","disabled","length","color","onClick","Components_LoadingSpinner","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","useEffect","userLoginRequestSend","username","password","LoginDialog","handleLogin","handleClose","clearState","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","label","DialogActions","wrapper","buttonProgress","left","marginLeft","TopNavBar","defineProperty","handleLogOut","getCurrentPath","pathname","beepBoop","set","AppBar","Toolbar","Tabs","Tab","component","Link","to","firstName","lastName","withRouter","inlineBlock","display","Home","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","height","infoCard","padding","gridClass","gridItem","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","variableDetailTable","marginRight","variableDetailTableRow","xs","src","imageSource","alt","dataSource","distributor","row","detailCellRendererParams","template","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","textAlign","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","handleColumnRowGroupChanged","columns","forEach","column","setColumnVisible","colId","render","gridWrapper","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","optional","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","Register","Components_RegistrationStepper","tooltip","zIndex","lat","lon","info","storedProcedureRequestSend","storedProcedureInfo","visualizationSpeedDialActions","icon","Map","vizSubTypes","Timeline","BarChart","Waves","Language","LeakAdd","mapVizType","vizType","_mapping","sp","subType","DataRetrievalForm","tableName","depth1","depth2","dt1","dt2","lat1","lat2","lon1","lon2","visualizationSpeedDialOpen","handleStartDateChange","date","toISOString","slice","handleEndDateChange","onVisualize","_this$state","mapping","spName","metaData","filterVariables","variableWrapper","searchString","values","join","split","some","term","indexOf","updateFields","handleVisualizationSpeedDialClose","handleVisualizationSpeedDialOpen","handleVisualizationSpeedDialClick","_this2","options","variable","longName","showUI","displayNone","dataRetrievalFormPaper","react_select_browser_esm","isMulti","variableSelect","isClearable","escapeClearsValue","backspaceRemovesValue","styles","menu","provided","material_ui_pickers_esm","format","disableFuture","autoOk","inputVariant","InputLabelProps","shrink","SpeedDial","ariaLabel","ButtonProps","visualizeButton","visualizationSpeedDial","x","y","fill","fontVariant","visualizeButtonText","onBlur","onFocus","onMouseEnter","onMouseLeave","direction","SpeedDialAction","tooltipTitle","tooltipPlacement","dataRetrievalFormField","retrieveDataButton","borderRadius","backgroundColor","palette","dominantBaseline","textAnchor","buttonPaper","bottom","textDecoration","cursor","goBackText","statePieces","statePiece","clearCharts","Charts","_this$props","processedCharts","z","contours","coloring","showlabels","labelfont","family","layout","xaxis","yaxis","handleContourMap","marker","handleHistogram","time","error_y","array","opacity","visible","line","handleTimeSeries","depth","autorange","handleSectionMap","handleDepthProfile","chartsWrapper","react_plotly_default","chartsWrapperUIHidden","showCharts","toggleChartView","toggleShowUI","colormap","require","colors","alpha","nshades","INITIAL_VIEW_STATE","latitude","longitude","zoom","bearing","pitch","queryRequestSend","Visualization","filteredData","dateSliderPosition","pickedIndex","pickedLon","pickedLat","handleDateSliderChange","pickedInfo","datum","handleOpacitySliderChange","handleVariableChange","prevProps","processedMaps","minAndMaxArray","min","max","minMax","step","PointCloudLayer","pickable","coordinateSystem","COORDINATE_SYSTEM","LNGLAT","sizeUnits","pointSize","getPosition","d","getColor","Math","floor","depthTest","handleGeoSpatialMap","reducer","accumulator","point","HexagonLayer","radius","getColorValue","points","handleHexMap","Components_DataRetrievalForm","Components_GoBackButton","ToggleChartViewButton","ToggleHideUIButton","Components_DebugButton","Components_ClearVisualizationsButton","deckWrapper","Components_VizTooltip","dist_esm","material","controller","initialViewState","GeoJsonLayer","stroked","filled","lineWidthMinPixels","getLineDashArray","getLineColor","getFillColor","Components_Charts","snackbarClose","Snackbar","autoHideDuration","loginDialogWasCleared","GlobalUIComponentWrapper","componentDidUpdate","preProps","Components_LoginDialog","routes","react_router_dom","react_router","exact","path","createMuiTheme","secondary","main","grey","primary","typography","useNextVariants","fontFamily","overrides","MuiOutlinedInput","input","MuiFormControl","marginNormal","App","componentDidCatch","alert","utils","DateFnsUtils","MuiThemeProvider","Components_GlobalUIComponentWrapper","hasError","LicenseManager","setLicenseKey","rootElement","document","getElementById","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.746a7e76.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {\r\n            ...state,\r\n            charts: []\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {\r\n            ...state,\r\n            maps: []\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload:\r\n    {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})","const types = {\r\n    map: 'map',\r\n    chart: 'chart'\r\n}\r\n\r\nexport default types;","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    geospatialMap: 'Geospatial Map',\r\n    contourMap: 'Contour Map',\r\n    hexMap: 'Hex Map',\r\n}\r\n\r\nexport default subTypes;","// export const clientHost = 'http://localhost:3000'\r\nexport const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\n","import ndjson from 'ndjson';\r\n\r\nimport { apiUrl } from './config';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n    ndjsonParser.on('data', data => {\r\n        catalog.push(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/catalog/', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.queryRequest = async(query) => {\r\n    const decoder = new TextDecoder();\r\n    let vizData = [];\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n\r\n    ndjsonParser.on('data', data => {\r\n        vizData.push(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/dataretrieval/query?query=' + query, fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return vizData;\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(parameters) => {\r\n    const decoder = new TextDecoder();\r\n    let vizData = [];\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n\r\n    ndjsonParser.on('data', data => {\r\n        vizData.push(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/dataretrieval/sp?' + storedProcedureParametersToUri(parameters), fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\nexport default api;","import { put, takeLatest, all, call } from 'redux-saga/effects';\r\nimport Cookies from 'js-cookie';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport vizTypes from '../Enums/visualizationTypes';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){\r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(action){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    console.log(`Retrieving ${action.payload.parameters.fields}`);\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload.parameters);\r\n    console.log('Got result');\r\n    if(!result){\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen(\"Request failed\"));\r\n    } else {\r\n        yield put(visualizationActions.storedProcedureRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen(`Your dataset ${action.payload.parameters.fields} is ready`));\r\n        \r\n        if(action.payload.type === vizTypes.chart){\r\n            console.log('Added chart');\r\n            yield put(visualizationActions.addChart({...action.payload, data: result}));\r\n        } else if (action.payload.type === vizTypes.map){\r\n            yield put(visualizationActions.clearMaps());\r\n            console.log('Added map');\r\n            yield put(visualizationActions.addMap({...action.payload, data: result}));           \r\n        }\r\n    }\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n  \r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest()\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>           \r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Keys\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root}>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n            </Paper>\r\n            </React.Fragment>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires login. Please log in.</p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        \r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password to log in.\r\n                    </DialogContentText>\r\n\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"normal\"\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        type=\"text\"\r\n                        variant='outlined'\r\n                        name='username'\r\n                        value={this.props.username}\r\n                        onChange={this.props.handleChange}\r\n                    />\r\n\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        id=\"name\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        variant='outlined'\r\n                        name='password'\r\n                        value={this.props.password}\r\n                        onChange={this.props.handleChange}\r\n                    />\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        <div className={classes.wrapper}>\r\n                            <Button color=\"primary\" onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                Log In\r\n                            </Button>\r\n                            {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport LoginDialog from './LoginDialog';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return state;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    getCurrentPath = () => {\r\n        switch(this.props.location.pathname){\r\n            case '/apikeymanagement': return 0;\r\n            case '/': return 1;\r\n            case '/visualization': return 2;\r\n            case '/register': return 3;\r\n            default: return 0;\r\n        }\r\n    };\r\n\r\n    // Debug button\r\n    beepBoop = () => {\r\n        console.log(this.props);\r\n        Cookies.set('hi','there');\r\n        Cookies.get();\r\n    };\r\n\r\n    render(){\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <Tabs value={this.getCurrentPath() || 0} onChange={this.handleChange}>\r\n                        <Tab key='0' component={Link} to={{pathname: '/apikeymanagement'}} label='API Keys' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='1' component={Link} to={{pathname: '/'}} label='Catalog' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='2' component={Link} to={{pathname: '/visualization'}} label='Visualization' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        {this.props.user ? '' : <Tab key='3' component={Link} to={{pathname: '/register'}} label='Register' onClick={this.props.restoreInterfaceDefaults}/>}\r\n                        {this.props.user ? '' : <Tab key='4' label='Log In' onClick={this.props.showLoginDialog}/>}\r\n                        {this.props.user ? <Tab key='5' label={`Welcome ${this.props.user.firstName} ${this.props.user.lastName}!`}/> : ''}\r\n                        {this.props.user ? <Tab key='4' label='Log Out' onClick={this.handleLogOut}/> : ''}                        \r\n                        <Tab key='6' label='Debug' onClick={this.beepBoop}/>\r\n                    </Tabs>                    \r\n                </Toolbar>\r\n                {/* <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/> */}\r\n            </AppBar>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.user) return <LoginRequiredPrompt/>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user && <ApiKeyManagement/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'variable'],\r\n    ['Spatial Resolution', 'spatialResolution'],\r\n    ['Temporal Resolution', 'temporalResolution'],\r\n    ['Unit', 'unit'],\r\n    ['Process Level', 'processLevel'],\r\n    ['Study Domain', 'studyDomain'],\r\n    ['SQL Table Name', 'tableName']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        margin: '-10px auto 0px auto',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(2),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing(2),\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        width: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n    console.log(props.data);\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={8} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={imageSource + 'viz_sample.png'} alt=\"Sample Visualization\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.datasetDescription}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.dataSource}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable} size='small'>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell>{row[0]}</TableCell>\r\n                                    <TableCell>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst detailCellRendererParams = {\r\n  template:\r\n    '<div style=\"height: 100%; box-sizing: border-box\" class=\"testClass\">' +\r\n      '  <div style=\"height: 10%;\">Call Details</div>' +\r\n      '  <div ref=\"eDetailGrid\" style=\"height: 90%;\"></div>' +\r\n    \"</div>\"\r\n}\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"longName\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"tableName\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"datasetName\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"studyDomain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"processLevel\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"spatialResolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"temporalResolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '600px', \r\n    width: '80%',\r\n    margin: '30px auto',\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n    return (\r\n        <div \r\n        className={classes.gridWrapper + \" ag-theme-material\"}\r\n\r\n        >\r\n          <TextField\r\n            autoFocus={true}\r\n            margin=\"normal\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            variant='outlined'\r\n            name='filterText'\r\n            value={this.state.filterText}\r\n            onChange={this.handleChange}\r\n            placeholder='Filter Variables'\r\n          />\r\n  \r\n          <AgGridReact\r\n            // General settings\r\n            columnDefs={columnDefs}\r\n            defaultColDef={defaultColDef}\r\n            rowData={this.props.catalog}\r\n            onGridReady={this.onGridReady}\r\n            suppressDragLeaveHidesColumns= {true}\r\n\r\n            //Settings related to grouping functionality\r\n            rowGroupPanelShow='always'\r\n            groupMultiAutoColumn={true}\r\n            onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n            autoGroupColumnDef={autoGroupColumnDef}\r\n\r\n            enableBrowserTooltips={true}\r\n\r\n            // Settings related to master/detail\r\n            masterDetail={true}\r\n            frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n            detailCellRenderer=\"myDetailCellRenderer\"\r\n            detailRowHeight={280}\r\n            detailCellRendererParams={detailCellRendererParams}\r\n          />\r\n        </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog) return <AGGridWrapper catalog={this.props.catalog}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n        else if(this.props.catalogRequestState === states.failed) return <p>Failed to get catalog. Have you tried turning it off and then on again?</p>\r\n        else return <p>I don't know how we got here. Please debug the catalog retrieval process.</p>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = (theme) => ({\r\n    tooltip: {\r\n        width: '180px',\r\n        height: '100px',\r\n        padding: theme.spacing(1.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '400px',\r\n        zIndex: 2\r\n    }\r\n})\r\n\r\nconst VizTooltip = (props) => {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.tooltip}>\r\n                <Typography variant='subtitle1'>Lat: {props.lat}</Typography>\r\n                <Typography variant='subtitle1'>Lon: {props.lon}</Typography>\r\n                <Typography variant='subtitle1'>{props.info}</Typography>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(VizTooltip);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select from 'react-select';\r\n\r\n// import createFilterOptions from \"react-select-fast-filter-options\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\n\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport { \r\n    BarChart,\r\n    Map,\r\n    Timeline,\r\n    Waves,\r\n    Language,\r\n    LeakAdd\r\n} from '@material-ui/icons';\r\n\r\nimport { storedProcedureRequestSend } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport vizTypes from '../Enums/visualizationTypes';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst styles = (theme) => ({\r\n    dataRetrievalFormPaper: {\r\n        width: '1200px',\r\n        height: '230px',\r\n        padding: theme.spacing(2.5),\r\n        position:'fixed',\r\n        left: '100px',\r\n        top: '10px',\r\n        zIndex: 2,\r\n        paddingTop: theme.spacing(1.5)\r\n    },\r\n\r\n    dataRetrievalFormField: {\r\n        padding:`0px ${theme.spacing(1)}`\r\n    },\r\n\r\n    retrieveDataButton: {\r\n        margin:'10px auto'\r\n    },\r\n\r\n    variableSelect: {\r\n        margin: '0 30px 20px 30px'\r\n    },\r\n\r\n    visualizationSpeedDial: {\r\n        position: 'relative',\r\n        top: '20px',\r\n        left: '30px'\r\n    },\r\n\r\n    visualizeButton: {\r\n        borderRadius:'10%',\r\n        width: '100px',\r\n        height:'40px',\r\n        margin: 'auto 0',\r\n        backgroundColor: theme.palette\r\n    },\r\n\r\n    visualizeButtonText: {\r\n        dominantBaseline: \"middle\",\r\n        textAnchor: \"middle\"\r\n    },\r\n\r\n    displayNone: {\r\n        display: 'none'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    storedProcedureRequestSend,\r\n    retrievalRequestSend\r\n}\r\n\r\nconst visualizationSpeedDialActions = [\r\n    {icon: <Map/>, name: vizSubTypes.sectionMap },\r\n    {icon: <Timeline/>, name: vizSubTypes.timeSeries},\r\n    {icon: <BarChart/>, name: vizSubTypes.histogram},\r\n    {icon: <Waves/>, name: vizSubTypes.depthProfile},\r\n    {icon: <Language/>, name: vizSubTypes.geospatialMap},\r\n    {icon: <LeakAdd/>, name: vizSubTypes.contourMap},\r\n    {icon: <Map/>, name: vizSubTypes.hexMap}\r\n];\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: 'uspSectionMap',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.sectionMap\r\n        }, \r\n        [vizSubTypes.timeSeries]: {\r\n            sp: 'uspTimeSeries',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: 'uspSpaceTime',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: 'uspDepthProfile',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.geospatialMap]: {\r\n            sp: 'uspSpaceTime',\r\n            type: vizTypes.map,\r\n            subType: vizSubTypes.geospatialMap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: 'uspSpaceTime',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.contourMap\r\n        },\r\n        [vizSubTypes.hexMap]: {\r\n            sp: 'uspSpaceTime',\r\n            type:vizTypes.map,\r\n            subType: vizSubTypes.hexMap\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nclass DataRetrievalForm extends Component {\r\n    state = {\r\n        tableName: [],\r\n        fields:[],\r\n        depth1: '0',\r\n        depth2: '0',\r\n        dt1: '2017-05-15',\r\n        dt2: '2017-05-15',\r\n        lat1: '30',\r\n        lat2: '40',\r\n        lon1: '-60',\r\n        lon2: '-50',\r\n\r\n        visualizationSpeedDialOpen: false,\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleStartDateChange = (date) => {\r\n        this.setState({...this.state, dt1:date.toISOString().slice(0,10)});\r\n        // console.log(date);\r\n        // console.log(date.toISODate());\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        this.setState({...this.state, dt2:date.toISOString().slice(0,10)});\r\n        // console.log(date);\r\n        // console.log(date.toISODate());\r\n    }\r\n\r\n    onVisualize = (vizType) => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2 } = this.state;\r\n        let mapping = mapVizType(vizType);\r\n        let parameters = {\r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.fields && this.state.fields.map(field => field.value)[0],\r\n            tableName: this.state.fields && this.state.fields.map(field => field.data.tableName)[0],\r\n            spName: mapping.sp\r\n        };\r\n\r\n        let payload = {\r\n            parameters,\r\n            type: mapping.type,\r\n            subType: mapping.subType,\r\n            metaData: this.state.fields && this.state.fields[0]\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Includes every variable that returns true when filtering\r\n    // variableWrapper parameter is {label, value, variable object}\r\n    filterVariables = (variableWrapper, searchString) => {\r\n\r\n        // Create one string from all column values (using Boolean to remove falsey elements)\r\n        let values = Object.values(variableWrapper.data).filter(Boolean).join(' ');\r\n\r\n        let searchTerms = searchString.split(' ');\r\n\r\n        // array.some method will return a true as soon as we failed to\r\n        // find one search term, which we negate.\r\n        return !searchTerms.some(term => values.indexOf(term) === -1)\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    updateFields = (fields) => {\r\n        this.setState({fields});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        if(this.state.fields && this.state.fields.length) this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick= () => {\r\n        if(this.state.fields && this.state.fields.length) this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        const { fields } = this.state;\r\n\r\n        const options = (this.props.catalog && this.props.catalog.map(variable => ({\r\n            value: variable.variable,\r\n            label: variable.variable === variable.longName ? variable.variable : variable.variable + ' : ' + variable.longName,\r\n            data: variable\r\n        })))\r\n            || [];\r\n\r\n        return (\r\n            <div className={this.props.showUI ? '' : classes.displayNone}>\r\n                <Paper className={classes.dataRetrievalFormPaper}>\r\n                        <Select\r\n                            isMulti\r\n                            className={classes.variableSelect}\r\n                            isClearable\r\n                            autoFocus\r\n                            escapeClearsValue\r\n                            backspaceRemovesValue\r\n                            name=\"fields\"\r\n                            label=\"Variables\"\r\n                            options={options}\r\n                            onChange={this.updateFields}\r\n                            value={fields}\r\n                            placeholder=\"Variables\"\r\n                            styles={{\r\n                                menu: provided => ({ ...provided, zIndex: 9999 })\r\n                            }}\r\n                        />\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={3}>\r\n                                <DatePicker\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    disableFuture\r\n                                    autoOk\r\n                                    value={this.state.dt1}\r\n                                    onChange={this.handleStartDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <DatePicker\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    disableFuture\r\n                                    autoOk\r\n                                    value={this.state.dt2}\r\n                                    onChange={this.handleEndDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startDepth\"\r\n                                    label=\"Start Depth(m)\"\r\n                                    name=\"depth1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={this.state.depth1}\r\n                                    onChange={this.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endDepth\"\r\n                                    label=\"End Depth(m)\"\r\n                                    name=\"depth2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={this.state.depth2}\r\n                                    onChange={this.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startLat\"\r\n                                    label=\"Start Latitude(deg)\"\r\n                                    name=\"lat1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={this.state.lat1}\r\n                                    onChange={this.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endLat\"\r\n                                    label=\"End Latitude(deg)\"\r\n                                    name=\"lat2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={this.state.lat2}\r\n                                    onChange={this.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startLon\"\r\n                                    label=\"Start Longitude(deg)\"\r\n                                    name=\"lon1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={this.state.lon1}\r\n                                    onChange={this.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endLon\"\r\n                                    label=\"End Longitude(deg)\"\r\n                                    name=\"lon2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={this.state.lon2}\r\n                                    onChange={this.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>   \r\n                        </Grid>\r\n                        <SpeedDial\r\n                            ariaLabel=\"Visualization Speed Dial\"\r\n                            disabled\r\n                            ButtonProps={{\r\n                                variant: 'round',\r\n                                classes: {\r\n                                    root: classes.visualizeButton\r\n                                },\r\n                                color: 'primary'\r\n                            }}\r\n                            className={classes.visualizationSpeedDial}\r\n                            icon={<svg height=\"30\" width=\"200\">\r\n                                    <text x=\"50%\" y=\"50%\" fill='white' fontVariant='normal' className={classes.visualizeButtonText}>Visualize</text>\r\n                                </svg>}\r\n                            onBlur={this.handleVisualizationSpeedDialClose}\r\n                            onClick={this.handleVisualizationSpeedDialClick}\r\n                            onClose={this.handleVisualizationSpeedDialClose}\r\n                            onFocus={this.handleVisualizationSpeedDialOpen}\r\n                            onMouseEnter={this.handleVisualizationSpeedDialOpen}\r\n                            onMouseLeave={this.handleVisualizationSpeedDialClose}\r\n                            open={this.state.visualizationSpeedDialOpen}\r\n                            direction= 'right'\r\n                        >\r\n                            {visualizationSpeedDialActions.map(action => (                                   \r\n                                <SpeedDialAction\r\n                                    key={action.name}\r\n                                    icon={action.icon}\r\n                                    tooltipTitle={action.name}\r\n                                    onClick={() => this.onVisualize(action.name)}\r\n                                    tooltipPlacement='bottom'\r\n                                />\r\n                            ))}\r\n\r\n                        </SpeedDial>                            \r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataRetrievalForm));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    ...state\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        bottom: '10px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst DebugButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    const logState = () => {\r\n        props.statePieces.forEach(statePiece => {\r\n            console.log(statePiece);\r\n            console.log(props[statePiece]);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={logState}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Debug</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DebugButton));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { clearCharts, clearMaps } from '../Redux/actions/visualization';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    clearCharts,\r\n    clearMaps\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '250px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst ClearVisualizationsButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    const clearVisualizations = () => {\r\n        props.clearCharts();\r\n        props.clearMaps();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={clearVisualizations}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Clear</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ClearVisualizationsButton));\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '10px',\r\n        zIndex: 2,\r\n        textDecoration:'none'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst GoBackButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} component={Link} to={{pathname: '/'}}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Go Back</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(GoBackButton);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport subType from '../Enums/visualizationSubTypes';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsWrapperUIHidden: {\r\n        margin: '60px 0 0 100px'\r\n    },\r\n\r\n    chartsWrapper: {\r\n        margin: '300px 0 0 100px'\r\n    }\r\n})\r\n\r\nconst handleContourMap = (chart) => ({\r\n    data:[\r\n        {\r\n            x: chart.data.map(row => row.lon),\r\n            y: chart.data.map(row => row.lat),\r\n            z: chart.data.map(row => row[chart.parameters.fields]),\r\n            name: chart.parameters.fields,\r\n            type: 'contour',\r\n            contours: {\r\n                coloring: 'heatmap',\r\n                showlabels: true,\r\n                labelfont: {\r\n                    family: 'Raleway',\r\n                    size: 12,\r\n                    color: 'white',\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    layout: {\r\n        title: chart.parameters.fields,\r\n                xaxis: {title: 'Longitude'},\r\n                yaxis: {title: 'Latitude'}\r\n    }\r\n})\r\n\r\nconst handleHistogram = (chart) => ({        \r\n        data: [\r\n            {\r\n            x: chart.data.map(row => row[chart.parameters.fields]),\r\n            name: chart.parameters.fields,\r\n            type: 'histogram',\r\n            marker: {color: '#17becf'}\r\n            }\r\n        ],\r\n        layout: {\r\n            title: `${chart.parameters.fields} - ${chart.subType}`,\r\n            xaxis: {title: chart.parameters.fields}\r\n        }          \r\n})\r\n\r\nconst handleTimeSeries = (chart) => ({\r\n    data: [\r\n      {\r\n      x: chart.data.map(row => row.time),\r\n      y: chart.data.map(row => row[chart.parameters.fields]),\r\n      error_y: {\r\n        type: 'data',\r\n        array: chart.data.map(row => row[chart.parameters.fields + '_std']),\r\n        opacity: 0.2,\r\n        color: 'gray',\r\n        visible: true\r\n      },\r\n      name: chart.parameters.fields,\r\n      type: 'scatter',\r\n      line: {color: '#e377c2'},\r\n      },\r\n    ],\r\n    layout: {\r\n      title: `${chart.parameters.fields} - ${chart.subType}`,\r\n      xaxis: {title: 'Time'},\r\n      yaxis: {title: chart.parameters.fields}\r\n    }\r\n  })\r\n\r\nconst handleSectionMap = (chart) => ({\r\n    data: [\r\n      {\r\n      x: chart.data.map(row => row.lat),\r\n      y: chart.data.map(row => row.depth),\r\n      z: chart.data.map(row => row[chart.parameters.fields]),\r\n      name: chart.parameters.fields,\r\n      type: 'heatmap',\r\n      }\r\n    ],\r\n    layout: {\r\n      title: `${chart.parameters.fields}`,\r\n      xaxis: {title: 'Latitude'},\r\n      yaxis: {autorange: 'reversed', title: 'Depth [m]'}\r\n    }\r\n  })\r\n\r\nconst handleDepthProfile = (chart) => ({\r\n    data: [\r\n      {\r\n        x: chart.data.map(row => row.depth),\r\n        y: chart.data.map(row => row[chart.parameters.fields]),\r\n        error_y: {\r\n          type: 'data',\r\n          array: chart.data.map(row => row[chart.parameters.fields] + '_std'),\r\n          opacity: 0.2,\r\n          color: 'gray',\r\n          visible: true\r\n        },\r\n        name: chart.parameters.fields,\r\n        type: 'scatter',\r\n        line: {color: '#e377c2'},\r\n        },\r\n    ],\r\n    layout: {\r\n      title: chart.parameters.fields,\r\n      xaxis: {title: 'Depth [m]'},\r\n      yaxis: {title: chart.parameters.fields}\r\n    }\r\n  })\r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n\r\n        const { classes, charts } = this.props;\r\n\r\n        const processedCharts = charts.map(chart => {\r\n            switch(chart.subType){\r\n                case 'Contour Map':\r\n                    return handleContourMap(chart);\r\n                case 'Histogram':\r\n                    return handleHistogram(chart);\r\n                case 'Time Series':\r\n                    return handleTimeSeries(chart);\r\n                case 'Section Map':\r\n                    return handleSectionMap(chart);\r\n                case 'Depth Profile':\r\n                    return handleDepthProfile(chart);\r\n                default:\r\n                    console.log(`Subtype not found: ${chart.subType}`);\r\n                    return null;\r\n            }\r\n        })\r\n\r\n        return (\r\n            <div className={classes.chartsWrapper}>\r\n                {processedCharts.map((chart, index) => (\r\n                    <Plot\r\n                        key={index}\r\n                        layout= {chart.layout}\r\n                        data={chart.data}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '90px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst GoBackButton = (props) => {\r\n    const { classes, showCharts } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={props.toggleChartView}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>{showCharts ? 'Maps' : 'Charts'}</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(GoBackButton);","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '170px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst GoBackButton = (props) => {\r\n    const { classes, showUI } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={props.toggleShowUI}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>{showUI ? 'Hide UI' : 'Show UI'}</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(GoBackButton);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\nimport VizTooltip from './VizTooltip';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport DataRetrievalForm from './DataRetrievalForm';\r\nimport DebugButton from './DebugButton';\r\nimport ClearVisualizationsButton from  './ClearVisualizationsButton';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\nimport { queryRequestSend } from '../Redux/actions/visualization';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\r\nimport DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\nimport {AmbientLight, LightingEffect} from '@deck.gl/core';\r\nimport {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport GoBackButton from './GoBackButton';\r\nimport Charts from './Charts';\r\nimport ToggleChartViewButton from './ToggleChartViewButton';\r\nimport ToggleHideUIButton from './ToggleHideUIButton';\r\nimport subTypes from '../Enums/visualizationSubTypes';\r\n\r\n\r\n\r\nlet colormap = require('colormap')\r\n\r\nconst paletteSize = 48\r\n\r\nlet colors = colormap({\r\n    colormap: 'hot',\r\n    format: 'rba',\r\n    alpha: [255,255],\r\n    nshades: paletteSize\r\n})\r\n\r\n// source: Natural Earth http://www.naturalearthdata.com/ via geojson.xyz\r\nconst COUNTRIES = 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_50m_admin_0_scale_rank.geojson';\r\n\r\nconst spatialResolutionToMetersMapping = {\r\n    '1/12° X 1/12°': null,\r\n    '1/2° X 1/2°': null,\r\n    '1/25° X 1/25°': null,\r\n    '1/4° X 1/4°': 30000,\r\n    '1° X 1°': null,\r\n    '4km X 4km': null,\r\n    '70km X 70km': null,\r\n    'Irregular': null\r\n}\r\n\r\n// const ambientLight = new AmbientLight({\r\n//     color: [255, 255, 255],\r\n//     intensity: 1000000.0\r\n//   });\r\n\r\n// const lightingEffect = new LightingEffect({ambientLight});\r\n\r\nconst INITIAL_VIEW_STATE = {\r\n  latitude: 35,\r\n  longitude: -50,\r\n  zoom: 3,\r\n  bearing: 0,\r\n  pitch: 10\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    }\r\n})\r\n\r\nconst minMax = (array, key) => {\r\n    let min = array[0][key];\r\n    let max = array[0][key];\r\n    for(let i = 0; i < array.length; i ++){\r\n        if(array[i][key] > max || max === null) max = array[i][key];\r\n        if(array[i][key] < min || min === null) min = array[i][key];\r\n    }\r\n    return [min, max];\r\n}\r\n\r\nconst handleGeoSpatialMap = (map) => {\r\n    if(!map.data.length) {\r\n        console.log(`No data in map ${map.parameters.fields}`);\r\n        console.log(map);\r\n        return;\r\n    }\r\n\r\n    let minAndMaxArray = minMax(map.data, map.parameters.fields);\r\n    let min = minAndMaxArray[0];\r\n    let max = minAndMaxArray[1];\r\n    let step = (max - min) / paletteSize;\r\n    console.log(min, max, step);\r\n\r\n    console.log(`Rendering ${map.data.length} data points.`);\r\n\r\n    const getColor = (row) => {\r\n        let index = Math.floor((row[map.parameters.fields] - min) / step);\r\n        return colors[index] ? colors[index].slice(0,3) : null;\r\n    }\r\n\r\n    return new PointCloudLayer({\r\n    id: 'point-cloud-layer',\r\n    data: map.data,\r\n    pickable: false,\r\n    coordinateSystem: COORDINATE_SYSTEM.LNGLAT,\r\n    sizeUnits:'meters',\r\n    pointSize: 28000,\r\n    getPosition: d => d[map.parameters.fields] ? [d.lon, d.lat] : [600,600],\r\n    getColor,\r\n    opacity: 1,\r\n    // material: null,\r\n    parameters:{\r\n        depthTest: false\r\n      }\r\n  })\r\n}\r\n\r\nconst handleHexMap = (map) => {\r\n    if(!map.data.length) {\r\n        console.log(`No data in map ${map.parameters.fields}`);\r\n        console.log(map);\r\n        return;\r\n    }\r\n\r\n    console.log(`Binning and rendering ${map.data.length} data points.`);\r\n\r\n    // const getColorWeight = (point) => point[map.parameters.fields];\r\n    const reducer = (accumulator, point) => accumulator + point[map.parameters.fields];\r\n    const getColorValue = (points) => {\r\n        return points.reduce(reducer, 0)/points.length;\r\n    }\r\n\r\n    return new HexagonLayer({\r\n    id: 'hexagon-later',\r\n    radius: 30000,\r\n    data: map.data,\r\n    pickable: false,\r\n    getColorValue,\r\n    // colorAggregation: 'MEAN',\r\n    // getColorWeight,\r\n    getPosition: d => d[map.parameters.fields] ? [d.lon, d.lat] : [0,0],\r\n  })\r\n}\r\n\r\nclass Visualization extends Component {\r\n\r\n    state = {\r\n        filteredData: [],\r\n        dateSliderPosition: 3,\r\n        variable: 'SiO2_darwin_3day',\r\n        opacity: 1,\r\n        pickedIndex: null,\r\n        pickedLon: null,\r\n        pickedLat: null,\r\n        showCharts: false,\r\n        showUI: true\r\n    }\r\n\r\n    // createLayers = (maps) => {\r\n    //     let layers = [];\r\n    //     maps.forEach((mapString, index) => {\r\n    //         let mapArr = mapString.split(' ');\r\n    //         switch(mapArr[1]){\r\n    //             case 'grid':\r\n    //                 layers.push(new GridLayer({\r\n    //                     id: 'gpu-grid-layer',\r\n    //                     gpuAggregation: true,\r\n    //                     data: this.props.data[mapArr[0]],\r\n    //                     pickable: true,\r\n    //                     onClick: (info) => console.log(info),\r\n    //                     extruded: false,\r\n    //                     cellSize: 40000,\r\n    //                     getColorValue: (points) => points.reduce((sum, p) => sum += p[mapArr[0]], 0) / points.length,\r\n    //                     // getColorWeight: () => 3,\r\n    //                     // colorRange: [\r\n    //                     //     [255,0,0],\r\n    //                     //     [255,0,0],\r\n    //                     //     [255,0,0],\r\n    //                     //     [255,0,0],\r\n    //                     //     [255,0,0],\r\n    //                     //     [255,0,0]\r\n    //                     // ],\r\n    //                     elevationScale: 4,\r\n    //                     getPosition: d => [d.lon, d.lat],\r\n    //                     // colorAggregation:'MEAN'\r\n    //                   }))\r\n    //                 break;\r\n                    \r\n    //             case 'columns':\r\n    //                 layers.push(new ColumnLayer({\r\n    //                     id: `column-layer`,\r\n    //                     data: this.props.data[mapArr[0]],\r\n    //                     diskResolution: 12,\r\n    //                     radius: 27000,\r\n    //                     extruded: true,\r\n    //                     // pickable: true,\r\n    //                     autoHighlight: true,\r\n    //                     elevationScale: 750000,\r\n    //                     getPosition: d => [d.lon, d.lat],\r\n    //                     getColor: d => [235, 200 - d.SiO2_darwin_3day * 800, 200 - d.SiO2_darwin_3day * 800],\r\n    //                     // getColor: d => d[this.state.variable] != null ? [0,255,0] : [60,60,60],\r\n    //                     getElevation: d => d[mapArr[0]],\r\n    //                     }))\r\n    //                 break;\r\n                \r\n    //                 case 'point':\r\n    //                     layers.push(new PointCloudLayer({\r\n    //                         id: 'point-cloud-layer',\r\n    //                         data: this.props.data[mapArr[0]],\r\n    //                         pickable: false,\r\n    //                         coordinateSystem: COORDINATE_SYSTEM.LNGLAT,\r\n    //                         sizeUnits:'meters',\r\n    //                         pointSize: 100000,\r\n    //                         getPosition: d => [d.lon, d.lat],\r\n    //                         // getNormal: d => d.normal,\r\n    //                         getColor: d => [235, 200 - d.SiO2_darwin_3day * 800, 200 - d.SiO2_darwin_3day * 800],\r\n    //                       }))\r\n    //                     break;\r\n\r\n    //                 default:\r\n    //                     break;\r\n    //                 }\r\n    //             })\r\n    \r\n    //     return layers;\r\n    // }\r\n\r\n    componentDidMount(){\r\n        if(this.props.sampleData) this.handleDateSliderChange(null, 3);\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        // Filter data on starting date\r\n        if(!prevProps.sampleData && this.props.sampleData){\r\n            this.handleDateSliderChange(null, 3);\r\n        }\r\n\r\n        // Send query after user login\r\n        // if(!prevProps.user && this.props.user && !this.props.sampleData){\r\n        //     this.props.queryRequestSend(testQuery);\r\n        // }\r\n    }\r\n\r\n    handleDateSliderChange = (event, value) => {\r\n        this.setState({...this.state, \r\n            dateSliderPosition: value,\r\n            pickedInfo: null,\r\n            filteredData: this.props.sampleData.filter(datum => datum.time === `1994-01-${this.state.dateSliderPosition > 9 ? this.state.dateSliderPosition : \"0\" + this.state.dateSliderPosition}T00:00:00.000Z`)\r\n        });\r\n    }\r\n\r\n    handleOpacitySliderChange = (event, value) => {\r\n        this.setState({...this.state, opacity: value})\r\n    }\r\n\r\n    handleVariableChange = (event, value) => {\r\n        this.setState({...this.state, \r\n            variable: value,\r\n            pickedInfo: null,\r\n            filteredData: this.props.sampleData.filter(datum => datum.time === `1994-01-${this.state.dateSliderPosition > 9 ? this.state.dateSliderPosition : \"0\" + this.state.dateSliderPosition}T00:00:00.000Z`)\r\n        })\r\n    }\r\n\r\n    toggleChartView = () => {\r\n        this.setState({...this.state, showCharts: !this.state.showCharts});\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        // const {filteredData} = this.state;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        const processedMaps = this.props.maps.map(map => {\r\n            switch(map.subType){\r\n                case subTypes.geospatialMap:\r\n                    return handleGeoSpatialMap(map);\r\n                case subTypes.hexMap:\r\n                    return handleHexMap(map);\r\n                default:\r\n                    console.log(`Unknown map type ${map.subType}`);\r\n            }\r\n        })\r\n  \r\n        return (\r\n            <div>\r\n                <DataRetrievalForm showUI={this.state.showUI}/>\r\n                <GoBackButton/>\r\n                <ToggleChartViewButton toggleChartView={this.toggleChartView} showCharts={this.state.showCharts}/>\r\n                <ToggleHideUIButton toggleShowUI={this.toggleShowUI} showUI={this.state.showUI}/>\r\n                <DebugButton statePieces={['maps','charts', 'storedProcedureRequestState']}/>\r\n                <ClearVisualizationsButton/>\r\n                {this.props.storedProcedureRequestState === states.inProgress && <LoadingSpinner customVariant='centered' size='36'/>}\r\n\r\n                <div className={`${classes.deckWrapper} ${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                    {this.props.queryRequestState === states.inProgress && <LoadingSpinner size={80} customVariant={'centered'}/>}\r\n                    {/* <VisualizationController\r\n                        handleDateSliderChange={this.handleDateSliderChange}\r\n                        dateSliderPosition={this.state.dateSliderPosition}\r\n                        opacity={this.state.opacity}\r\n                        handleOpacitySliderChange={this.handleOpacitySliderChange}\r\n                        variable={this.state.variable}\r\n                        handleVariableChange={this.handleVariableChange}\r\n                        hasData={Boolean(this.props.sampleData && this.props.sampleData.length)}\r\n                    /> */}\r\n                    \r\n                    {this.state.pickedInfo && <VizTooltip\r\n                        lat={this.state.pickedLat}\r\n                        lon={this.state.pickedLon}\r\n                        info={this.state.pickedInfo}\r\n                    />}\r\n                    <DeckGL \r\n                        // effects={[lightingEffect]}\r\n                        material={null}\r\n                        controller\r\n                        parameters={{\r\n                            depthTest: false\r\n                          }}\r\n                        initialViewState={INITIAL_VIEW_STATE}\r\n                        layers= {[\r\n                            new GeoJsonLayer({\r\n                                id:\"base-map\",\r\n                                data:COUNTRIES,\r\n                                stroked: true,\r\n                                filled: true,\r\n                                lineWidthMinPixels: 1,\r\n                                opacity: 1,\r\n                                getLineDashArray:[3, 3],\r\n                                getLineColor: [0,0,0],\r\n                                getFillColor: [60,60,60]\r\n                            }),\r\n                            ...processedMaps\r\n                        ]\r\n                        }\r\n                    >\r\n                    </DeckGL>\r\n                </div>\r\n                <div className={this.state.showCharts ? '' : classes.displayNone}>\r\n                    {/* <Charts showUI={this.state.showUI}/> */}\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));\r\n\r\n\r\n// Viz demo layers\r\n// new ColumnLayer({\r\n//     id: `SiO2-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 520000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [255,0,0] : [60,60,60],\r\n//     getElevation: d => d[this.state.variable],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'SiO2_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].SiO2_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`SiO2: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n//   }),\r\n\r\n//   new ColumnLayer({\r\n//     id: `DIN-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 50000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [0,255,0] : [60,60,60],\r\n//     getElevation: d => d['DIN_darwin_3day'],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'DIN_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].DIN_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`DIN: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n// }),\r\n\r\n// new ColumnLayer({\r\n//     id: `PO4-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 2000000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [43, 172, 219] : [60,60,60],\r\n//     getElevation: d => d['PO4_darwin_3day'],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'PO4_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].PO4_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`PO4: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n// })\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Snackbar \r\n                autoHideDuration={3500} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SnackbarWrapper);","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from '@material-ui/core/Snackbar'\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React from 'react'\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\r\n\r\nimport Home from './Components/Home';\r\nimport Catalog from './Components/Catalog';\r\nimport Register from './Components/Register';\r\nimport Visualization from './Components/Visualization';\r\nimport SnackbarWrapper from './Components/SnackbarWrapper';\r\nimport Charts from './Components/Charts';\r\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\r\n\r\nexport default props => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path='/apikeymanagement' component={ Home } />\r\n          <Route exact path='/' component={ Catalog } />\r\n          <Route exact path='/register' component={ Register } />\r\n          <Route exact path='/visualization' component={ Visualization } />\r\n        </Switch>\r\n    </BrowserRouter>\r\n  )","import React, { Component } from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\n\nimport './App.css';\nimport Routes from './routes';\n\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\n\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: grey[900]\n    },\n    primary: {\n      main: grey[600]\n    }\n  },\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n  overrides: {\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      }\n    },\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    }\n  }\n});\n\nclass App extends Component {\n\n  componentDidCatch = (error, info) => {\n    alert('Something went wrong!');\n    console.log('Error:');\n    console.log(error);\n    console.log('Info');\n    console.log(info);\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <div className=\"App\">\n          <MuiThemeProvider theme={theme}>\n            <GlobalUIComponentWrapper/>\n            <Routes />\n          </MuiThemeProvider>\n        </div>\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\nLicenseManager.setLicenseKey(\"Evaluation_License-_Not_For_Production_Valid_Until_2_July_2019__MTU2MjAyMjAwMDAwMA==caa187fc06c8c340bcb9897b015a3cb5\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}