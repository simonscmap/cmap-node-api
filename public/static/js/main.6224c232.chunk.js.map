{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","Enums/spatialResolutions.js","Utility/mapSpatialResolutionToNumber.js","Utility/flattenArray.js","Utility/splitData.js","Utility/mergeArraysAndComputeMeans.js","Utility/mergeArrays.js","Enums/visualizationSubTypes.js","Enums/temporalResolutions.js","Classes/SpaceTimeData.js","Enums/storedProcedures.js","Classes/TimeSeriesData.js","Classes/DepthProfileData.js","Enums/months.js","Classes/SectionMapData.js","Classes/SparseData.js","api.js","Redux/sagas.js","Redux/store.js","Enums/colors.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/TopNavBar.js","Components/Home.js","Components/GridDetail.js","Components/ConnectedTooltip.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/validation.js","Components/TableStatsDialog.js","Utility/mapTemporalResolutionToNumber.js","Components/DataRetrievalForm.js","Utility/utcDateStringToLocal.js","Utility/depthCounter.js","Components/VizControlPanel.js","Utility/handleXTicks.js","Utility/handleChartDatestring.js","Utility/chartBase.js","Components/ChartComponents/ChartControlPanel.js","Components/ChartComponents/SpaceTimeChart.js","Components/ChartComponents/TimeSeriesChart.js","Components/ChartComponents/DepthProfileChart.js","Components/ChartComponents/SectionMapChart.js","Components/ChartComponents/SparseScatter.js","Components/ChartComponents/SparseMap.js","Components/ChartComponents/SparseHistogram.js","Components/Charts.js","Components/CruiseSelector.js","Components/MapContainer.js","Utility/cleanSPParams.js","Utility/localDateToString.js","Components/Visualization.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/LoadingOverlay.js","Components/GlobalUIComponentWrapper.js","Components/LandingPage.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","REFRESH_LOGIN","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","CRUISE_TRAJECTORY_REQUEST_SEND","CRUISE_LIST_REQUEST_SEND","CSV_DOWNLOAD_REQUEST_SEND","DOWNLOAD_TEXT_AS_CSV","initialState","catalog","snackbarIsOpen","snackbarMessage","loadingMessage","showHelp","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","getCruiseTrajectoryRequestState","cruiseTrajectory","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","cruiseList","getCruiseListRequestState","showChartsOnce","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","trajectory","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","refreshLogin","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","setLoadingMessage","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addChart","cruiseTrajectoryRequestSend","id","visualizationActionTypes","cruiseTrajectoryRequestSuccess","cruiseTrajectoryRequestProcessing","cruiseListRequestSend","cruiseListRequestSuccess","cruiseListRequestFailure","cruiseListRequestProcessing","triggerShowCharts","csvDownloadRequestProcessing","downloadTextAsCsv","text","datasetName","apiUrl","spatialResolutions","irregular","halfDegree","quarterDegree","twentyFifthDegree","fourKm","twelfthDegree","seventyKm","oneDegree","mapSpatialResolutionToNumber","resolution","_map","defineProperty","flattenArray","arr","flattenedArray","i","length","j","push","splitData","changeInterval","numDistinct","Math","floor","mergeArraysAndComputeMeans","mergeTargetDistance","nextMergeStartDistance","numArraysPerMerge","mergedArrays","travelDistance","subArray","sum","count","k","isNaN","mergeArrays","subTypes","sectionMap","contourSectionMap","timeSeries","histogram","depthProfile","heatmap","contourMap","sparse","temporalResolutions","threeMinutes","sixHourly","daily","weekly","monthly","annual","monthlyClimatology","threeDay","eightDayRunning","eightDays","SpaceTimeData","_this","this","classCallCheck","generateCsv","dates","Array","from","depths","hasDepth","csvArray","parameters","fields","variableValues","lats","lons","join","metadata","hasHours","isMonthly","Set","zMin","zMax","extent","indexAdjust","lonMin","lonMax","latMin","latMax","distinctLatCount","distinctLonCount","row","lat","parseFloat","_lon","lon","lon1","hasHour","Table_Name","Temporal_Resolution","time","value","add","Date","setUTCHours","toISOString","size","lonCount","latCount","quantile1","quantile","quantile2","undefined","toPrecision","spatialResolution","Spatial_Resolution","round","subType","splitByDate","splitByDepth","variableValueSubsets","_this2","depthInterval","dateInterval","map","subset","vizSubTypes","storedProcedures","spaceTime","TimeSeriesData","stds","depth","depthIndexAdjust","csvString","DepthProfileData","months","SectionMapData","lonInterval","latInterval","orientation","lonArray","max","apply","min","splitBySpace","spaceCount","SparseData","variableIndex","Depth_Min","times","latDistance","abs","lonDistance","distance","sqrt","console","log","_zoom","zoom","lonCenter","latCenter","center","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","reduce","queryString","key","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","csvParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","CSVParser","columns","on","record","read","sent","ok","abrupt","getReader","done","write","decode","stop","keyRetrieval","_callee2","_context2","json","keyCreation","_ref3","_callee3","description","_context3","trim","_x","arguments","visualization","storedProcedureRequest","_ref4","_callee4","vizData","_context4","t0","spName","status","e","_x2","getTableStats","_ref5","_callee5","tableName","_context5","_x3","cruiseTrajectoryRequest","_ref6","_callee6","_context6","_x4","_callee7","_context7","csvDownload","_ref8","_callee8","_context8","query","_x5","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","queryRequest","cruiseListRequest","csvDownloadRequest","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","watchCruiseTrajectoryRequest","watchCruiseListRequest","watchCsvDownloadRequest","watchDownloadTextAsCsv","watchRefreshLogin","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_marked6","_marked7","visualizationActions","_marked8","_context9","delay","finalize","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","csv","blob","url","_context13","Blob","URL","createObjectURL","document","createElement","setAttribute","appendChild","click","removeChild","_marked13","_context14","_marked14","_context15","takeLatest","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","_context22","_marked22","_context23","_marked23","_context24","_marked24","_context25","_marked25","_context26","_marked26","_context27","_marked27","_context28","_marked28","_context29","all","_marked29","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","colors","orange","backgroundGray","aqua","errorYellow","withStyles","theme","centered","position","top","props","classes","react_default","CircularProgress","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleClick","handleChange","event","setState","target","wrapper","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","warningCaption","Grid","container","alignItems","justify","spacing","item","TextField","margin","name","onChange","placeholder","descriptionField","Button","disabled","color","onClick","Components_LoadingSpinner","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","fontSize","useEffect","Link","component","RouterLink","to","pathname","toggleShowHelp","TopNavBar","handleLogOut","clearState","username","password","handleNavigate","route","history","handleOutsideNavigate","open","_this$props","navWrapper","href","navLink","rightNavLink","withRouter","appBar","backgroundColor","boxShadow","toolBar","zIndex","paddingLeft","textAlign","boxSizing","textDecoration","marginRight","&:hover","fontWeight","display","cursor","float","rightLinkWrapper","Home","Fragment","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","height","infoCard","padding","gridClass","gridItem","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","variableDetailTable","marginLeft","variableDetailTableRow","variableDetailTableCell","borderBottomColor","xs","src","imageSource","alt","Dataset_Description","Data_Source","Distributor","tooltip","palette","secondary","main","opacity","Tooltip","placement","popper","children","detailCellRendererParams","template","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","handleColumnRowGroupChanged","forEach","column","setColumnVisible","colId","render","gridPaper","Components_ConnectedTooltip","gridSearch","autoFocus","label","InputLabelProps","shrink","gridWrapper","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","firstName","optional","lastName","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","validation","depthOneIsLower","depthOneOutOfBounds","depthTwoOutOfBounds","negative","date","dateOneIsLater","dateOneOutOfBounds","dateTwoOutOfBounds","latOneIsHigher","latOneOutOfBounds","latTwoOutOfBounds","lonOneIsHigher","lonOneOutOfBounds","lonTwoOutOfBounds","dataIsIrregular","dateRangeRequired","depthRangeRequired","surfaceOnlyDataset","irregularOnly","dataSizeTooLarge","generic","invalid","dataSizeWarning","dataSizePrevent","variableMissing","vizTypeMissing","Dialog","onClose","DialogTitle","Long_Name","DialogContent","Comment","DialogContentText","Dataset_Name","slice","Sensor","Time_Min","Time_Max","Lat_Min","Lat_Max","Lon_Min","Lon_Max","Depth_Max","Variable_Min","Unit","Variable_Max","Variable_Mean","Variable_Std","mapTemporalResolutionToNumber","reactWindowListRef","React","createRef","MenuList","componentDidUpdate","prevProps","prevState","findIndex","child","isFocused","current","scrollToItem","options","maxHeight","_getValue","getValue","slicedToArray","initialOffset","indexOf","dist_index_esm","style","itemCount","itemSize","initialScrollOffset","ref","_ref","DropdownIndicator","chunk_5d200a41_browser_esm","ArrowDropDown","SingleValue","assign","Option","DataRetrievalForm","search","addDocuments","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","handleVisualizationSpeedDialClose","visualizationSpeedDialOpen","handleVisualizationSpeedDialOpen","handleVisualizationSpeedDialClick","getSelectOptionsFromCatalogItems","items","Variable","onAutoSuggestChange","searchString","searchField","estimateDataSize","_this2$props","dt1","dt2","lat1","lat2","lon2","selectedVizType","date1","date2","res","dayDiff","checkStartDepth","surfaceOnly","depth1","depth2","replace","toFixed","checkEndDepth","checkStartDate","checkEndDate","checkStartLat","checkEndLat","checkStartLon","checkEndLon","checkHeatmap","irregularSpatialResolution","checkContour","checkSection","checkHistogram","checkTimeSeries","checkDepthProfile","checkSparseMap","checkGeneralWarn","checkGeneralPrevent","JsSearch","searchIndex","addIndex","_this3","_this$state","_this$props2","_validations","fill","_validations2","startDepthMessage","endDepthMessage","startLatMessage","endLatMessage","startLonMessage","endLonMessage","heatmapMessage","contourMessage","sectionMapMessage","histogramMessage","timeSeriesMessage","depthProfileMessage","sparseMapMessage","generalWarnMessage","generalPreventMessage","parametersAreInvalid","some","showUI","displayNone","Components_TableStatsDialog","dataRetrievalFormPaper","shortenHeight","react_select_browser_esm","isLoading","components","IndicatorSeparator","isClearable","onInputChange","filterOption","variableSelect","escapeClearsValue","updateFields","styles","menu","provided","input","fontFamily","control","border","borderColor","&:focus-within","noOptionsMessage","option","_ref2",":active","&:after","singleValue","paddingRight","primary25","primary","IconButton","LibraryBooks","datePickerGridSection","material_ui_pickers_esm","format","minDate","maxDate","autoOk","handleStartDateChange","inputVariant","handleEndDateChange","FormControl","InputLabel","htmlFor","OutlinedInput","aria-describedby","labelWidth","FormHelperText","handleLatLonChange","vizTypeSelectFormControl","Select","inputProps","MenuItem","onVisualize","generalMessage","dataRetrievalFormField","retrieveDataButton","visualizationSpeedDial","visualizeButton","borderRadius","visualizeButtonText","dominantBaseline","textAnchor","vizSelect","utcDateStringToLocal","utcString","utcYear","getUTCFullYear","utcMonth","getUTCMonth","utcDate","getUTCDate","newDate","setFullYear","darwinDepths","piscesDepths","piscesTable","darwinTable","exports","has","overrideDisabledStyle","clearCharts","csvDownloadRequestSend","getDatePlaceholder","valueOf","month","getMonth","day","getDate","getFullYear","groupHeaderHeight","selectRef","resetAfterIndex","scrollOffset","foundFocus","groupHasFocus","scrollTo","groupHeights","grandChild","totalHeight","acc","cur","estimatedItemSize","Group","hasFocus","element","sensor","CustomHeading","headingProps","headingLabel","firstChild","selectProps","hidden","customHeading","icon","typography","iconClass","ListItem","select","focusedOption","Icon","handleDownloadCsvClick","stopPropagation","CloudDownload","ArrowRight","innerProps","onMouseMove","preventDefault","onMouseOver","GroupHeading","formatOptionLabel","meta","VizControlPanel","handleOpenControlPanel","showControlPanel","handleCloseControlPanel","values","sort","opt1","opt2","estimateCsvSize","member","parseInt","Variable_Count","dateCount","depthUtils","checkStartDateValid","checkEndDateValid","dataSize","handleShowChartsAndResize","setTimeout","dispatchEvent","Event","handleShowCharts","indexStrategy","maxDateMessage","showCharts","handleShowGlobe","catalogMinDate","setHours","catalogMaxDate","zeroedDT1","zeroedDT2","minDateMessage","checkDisableVisualizeList","errorCount","errorSizeAdjust","disableVisualizeMessage","checkDisableVisualize","visualizeButtonTooltip","closePanelChevron","aria-label","ChevronLeft","openPanelChevron","ChevronRight","Drawer","drawer","paper","drawerPaper","anchor","ButtonGroup","groupedButtons","depressed","Language","InsertChartOutlined","clearChartsButton","Delete","inputValue","backdropFilter","valueContainer","borderBottom","tableStatsButton","datePicker","KeyboardButtonProps","datePickerInputAdornment","formGridItem","FormHelperTextProps","InputProps","padLeft","vizButtonTooltip","fullWidth","bottom","drawerPaperError1","drawerPaperError2","drawerPaperError3","drawerPaperError4","drawerPaperError5","navDrawerWidth","controlPanelForm","borderLeft","&:disabled","fontVariant","handleXTicks","infoObject","sectionSize","lonRange","tickvals","ceil","ticktext","tickmode","handleChartDatestring","dateString","chartBase","layout","font","paper_bgcolor","config","displaylogo","annotations","distributor","xref","yref","yshift","showarrow","colorscaleOptions","chartWrapper","popover","paddingBottom","iconButton","colorForm","lastIcon","borderTopRightRadius","borderBottomRightRadius","buttonGroup","maxWidth","colorscaleMenu","onToggleSplitByDate","onToggleSplitBySpace","onToggleSplitByDepth","switchOrientation","downloadCsv","handleZValueConfirm","zValues","markerOptions","handleMarkerOptionsConfirm","_useState","useState","_useState2","paletteAnchorElement","setPaletteAnchorElement","_React$useState","_React$useState2","zScalePopoverAnchorElement","setZScalePopoverAnchorElement","_React$useState3","_React$useState4","localZMin","setLocalZMin","_React$useState5","_React$useState6","localZMax","setLocalZMax","zScalePopoverOpen","zScalePopoverID","handleZScalePopoverClose","zScaleValidations","zMinMessage","zMaxMessage","_React$useState7","_React$useState8","markerOptionsAnchorElement","setMarkerOptionsAnchorElement","_React$useState9","_React$useState10","localMarkerOpacity","setLocalMarkerOpacity","_React$useState11","_React$useState12","localMarkerColor","setLocalMarkerColor","_React$useState13","_React$useState14","localMarkerSize","setLocalMarkerSize","previousOpacity","useRef","usePreviousOpacity","previousColor","usePreviousColor","previousSize","usePreviousSize","markerPopoverOpen","markerPopoverID","handleMarkerOptionsClose","markerOptionsValidations","checkLocalMarkerOpacity","checkLocalMarkerSize","localMarkerOpacityMessage","localMarkerSizeMessage","DateRange","LineWeight","currentTarget","SwapVert","handlePaletteChoice","Palette","Gamepad","Menu","anchorEl","keepMounted","Popover","anchorOrigin","vertical","horizontal","transformOrigin","buttonBlock","iconButtonWrapper","plots","_props$chart","chart","setSplitByDate","_useState3","_useState4","setSplitByDepth","_useState5","_useState6","subTypeState","_useState7","_useState8","setPalette","_useState9","_useState10","setZValues","_zValues","subSets","generatePlotData","subsets","xTicks","variableName","handleDateString","hovertext","formatter","react_plotly_default","zauto","zmin","zmax","x","y","z","connectgaps","autocolorscale","colorscale","hoverinfo","contours","coloring","showlabels","labelfont","family","labelformat","colorbar","exponentformat","xaxis","yaxis","handleContourMap","zsmooth","handleHeatmap","handleHistogram","ChartComponents_ChartControlPanel","requestAnimationFrame","setMarkerOptions","mode","error_y","array","visible","line","marker","plot_bgcolor","error_x","autorange","setSplitBySpace","setOrientation","spaces","distinctMeridiansOrParallelsForSplitting","mergedOrSplitAxis","xAxis","spaceTitle","visualizationSubTypes","handleSectionMap","SparseScatter","xValues","yValues","xTitle","yTitle","tabProps","aria-controls","SparseTabPanel","selectedTab","controlPanelProps","tabs","tab","textTransform","setTab","plot","mapbox","sourcetype","source","below","mapboxAccessToken","handleSparseMap","scatter","Tabs","indicatorColor","Tab","SparseMap_SparseTabPanel","ChartComponents_SparseScatter","Charts","chartPaper","ChartComponents_SparseMap","ChartComponents_SparseHistogram","ChartComponents_SpaceTimeChart","ChartComponents_TimeSeriesChart","ChartComponents_DepthProfileChart","ChartComponents_SectionMapChart","chartsContainer","cruiseTrajectoryClear","esriFonts","cruiseSort","b","Name","CruiseSelector","getSelectOptionsFromCruiseList","list","handleCruiseSelect","selection","ID","selectedCruise","updateParametersFromCruiseBoundary","outerDiv","blurEffectDiv","getCruiseListState","cruiseSelect","menuList","cruiseInfo","cruiseInfoCell","Nickname","Start_Time","End_Time","Chief_Name","Ship_Name","borderStyle","DrawButton","drawButton","helpText","cancelButton","polygonSymbol","symbolLayers","material","outline","UiComponents","shouldComponentUpdate","nextProps","nextState","sketchModel","esriModules","SketchViewModel","layer","regionLayer","view","defaultUpdateOptions","toggleToolOnClick","tool","setShowHelp","getElementById","updateDomainFromGraphicExtent","Utils","webMercatorToGeographic","graphic","geometry","toolEventInfo","graphics","addEventListener","removeAll","create","cancel","ui","remove","TrajectoryController","memo","trajectoryLayer","polyLines","lineIndex","lonStart","latStart","maxDistance","_lonDistance","cruiseTrajectorySymbol","cap","cruiseTrajectoryGeometry","paths","Graphic","symbol","goTo","maxDuration","speedFactor","MapContainer","_this3$props","spParams","globeUIRef","_lon2","polygon","rings","regionGraphic","esm","mapProperties","basemap","viewProperties","MapContainer_UiComponents","measurementPositions","Components_CruiseSelector","GraphicsLayer","cleanSPParams","localDateToString","year","toString","mapVizType","vizType","_mapping","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","completedShowCharts","Visualization","filteredData","_this$state$spParams","mapping","cruise","toggleShowUI","_lon1","xmin","xmax","newCoordinates","ymin","ymax","esriModuleNames","loadModules","version","loadedModules","accumulator","currentValue","currentIndex","Components_DataRetrievalForm","Components_VizControlPanel","toggleChartView","Components_MapContainer","Components_Charts","background","userLoginRequestSend","LoginDialog","handleLogin","handleClose","aria-labelledby","onSubmit","DialogActions","snackbarClose","centerText","Snackbar","autoHideDuration","loader","right","loaderContent","flexDirection","alignItem","spinnerText","spinner","dist","fadeIn","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","Components_LoginDialog","Components_SnackbarWrapper","Components_LoadingOverlay","inlineBlock","LandingPage","landingWrapper","welcomeMessage","createMuiTheme","useNextVariants","contrastText","default","overrides","MuiIconButton","MuiListItemIcon","MuiFormHelperText","filled","MuiListItem","gutters","MuiToolbar","MuiOutlinedInput","&$focused","MuiButtonGroup","groupedOutlined","&:not(:first-child)","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","MuiFilledInput","inputSelect","adornedEnd","App","vizRef","utils","DateFnsUtils","MuiThemeProvider","react_router_dom","Components_GlobalUIComponentWrapper","react_router","exact","path","LicenseManager","setLicenseKey","rootElement","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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,CAAmBkV,mHC5tBhEgJ,GAXc,SAACC,GAC1B,IAAI9N,EAAO,IAAIvgB,KAAKquB,GAChBC,EAAU/N,EAAKgO,iBACfC,EAAWjO,EAAKkO,cAChBC,EAAUnO,EAAKoO,aAEfC,EAAU,IAAI5uB,KAElB,OADA4uB,EAAQC,YAAYP,EAASE,EAAUE,GAChCE,GCPLE,GAAe,CACjB,EACA,GACA,GACA,GACA,GACA,GACA,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,OACA,OACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAGEC,GAAe,CACjB,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,eAkBEC,GAAc,IAAIvwB,IAfF,CAClB,gBACA,2BAcEwwB,GAAc,IAAIxwB,IAXH,CACjB,4BACA,sBACA,qBACA,iCACA,wBACA,0BACA,mCA+BWywB,GAzBC,CACZrzB,MAAO,SAAC+d,EAAOsN,EAAQC,GAAW,IACVlV,EAAU2H,EAAMthB,KAA5BqH,WACJ9D,EAAQ,EAEZ,GAAGmzB,GAAYG,IAAIld,GACf,IAAI,IAAIrX,EAAI,EAAGA,EAAIm0B,GAAal0B,UACzBk0B,GAAan0B,GAAKusB,GADevsB,IAEjCm0B,GAAan0B,GAAKssB,GAAQrrB,SAE9B,GAAIozB,GAAYE,IAAIld,GACvB,IAAI,IAAIrX,EAAI,EAAGA,EAAIk0B,GAAaj0B,UACzBi0B,GAAal0B,GAAKusB,GADevsB,IAEjCk0B,GAAal0B,GAAKssB,GAAQrrB,IAGrC,OA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","file":"static/js/main.6224c232.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';\r\n\r\nexport const REFRESH_LOGIN = 'REFRESH_LOGIN';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    case interfaceActionTypes.SET_LOADING_MESSAGE: return {...state, loadingMessage: action.payload.message}\r\n    \r\n    case interfaceActionTypes.TOGGLE_SHOW_HELP: return {...state, showHelp: !state.showHelp}\r\n    \r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\n\r\nexport const GET_TABLE_STATS = 'GET_TABLE_STATS';\r\nexport const GET_TABLE_STATS_REQUEST_PROCESSING = 'GET_TABLE_STATS_REQUEST_PROCESSING';\r\nexport const STORE_TABLE_STATS = 'STORE_TABLE_STATS';\r\n\r\nexport const CRUISE_TRAJECTORY_REQUEST_SEND = 'CRUISE_TRAJECTORY_REQUEST_SEND';\r\nexport const CRUISE_TRAJECTORY_REQUEST_SUCCESS = 'CRUISE_TRAJECTORY_REQUEST_SUCCESS';\r\nexport const CRUISE_TRAJECTORY_REQUEST_FAILURE = 'CRUISE_TRAJECTORY_REQUEST_FAILURE';\r\nexport const CRUISE_TRAJECTORY_REQUEST_PROCESSING = 'CRUISE_TRAJECTORY_REQUEST_PROCESSING';\r\nexport const CRUISE_TRAJECTORY_CLEAR = 'CRUISE_TRAJECTORY_CLEAR';\r\n\r\nexport const CRUISE_LIST_REQUEST_SEND = 'CRUISE_LIST_REQUEST_SEND';\r\nexport const CRUISE_LIST_REQUEST_SUCCESS = 'CRUISE_LIST_REQUEST_SUCCESS';\r\nexport const CRUISE_LIST_REQUEST_FAILURE = 'CRUISE_LIST_REQUEST_FAILURE';\r\nexport const CRUISE_LIST_REQUEST_PROCESSING = 'CRUISE_LIST_REQUEST_PROCESSING';\r\n\r\nexport const TRIGGER_SHOW_CHARTS = 'TRIGGER_SHOW_CHARTS';\r\nexport const COMPLETED_SHOW_CHARTS = 'COMPLETED_SHOW_CHARTS';\r\n\r\nexport const CSV_DOWNLOAD_REQUEST_SEND = 'CSV_DOWNLOAD_REQUEST_SEND';\r\nexport const CSV_DOWNLOAD_REQUEST_SUCCESS = 'CSV_DOWNLOAD_REQUEST_SUCCESS';\r\nexport const CSV_DOWNLOAD_REQUEST_FAILURE = 'CSV_DOWNLOAD_REQUEST_FAILURE';\r\nexport const CSV_DOWNLOAD_REQUEST_PROCESSING = 'CSV_DOWNLOAD_REQUEST_PROCESSING';\r\n\r\nexport const DOWNLOAD_TEXT_AS_CSV = 'DOWNLOAD_TEXT_AS_CSV';","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n    loadingMessage: '',\r\n    showHelp: false,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    getCruiseTrajectoryRequestState: null,\r\n    cruiseTrajectory: null,\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    cruiseList: [],\r\n    getCruiseListRequestState: null,\r\n    showChartsOnce: null\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';\r\n\r\nexport const SET_LOADING_MESSAGE = 'SET_LOADING_MESSAGE';\r\n\r\nexport const TOGGLE_SHOW_HELP = 'TOGGLE_SHOW_HELP';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING: return {...state, getCruiseTrajectoryRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS: return {...state,\r\n            cruiseTrajectory: action.payload.trajectory,\r\n            getCruiseTrajectoryRequestState: states.succeeded\r\n        }\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR: return {...state, cruiseTrajectory: null}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE: return {...state, getCruiseTrajectoryRequestState: states.failed}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING: return {...state, getCruiseListRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS: return {\r\n            ...state,\r\n            getCruiseListRequestState: states.succeeded,\r\n            cruiseList: action.payload.cruiseList\r\n        }\r\n\r\n        case visualizationActionTypes.TRIGGER_SHOW_CHARTS: return {...state, showChartsOnce: true}\r\n        case visualizationActionTypes.COMPLETED_SHOW_CHARTS: return {...state, showChartsOnce: false}\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n\r\nexport const refreshLogin = () => ({\r\n    type: userActionTypes.REFRESH_LOGIN\r\n})","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})\r\n\r\nexport const setLoadingMessage = (message) => ({\r\n    type:interfaceActionTypes.SET_LOADING_MESSAGE,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const toggleShowHelp = () => ({\r\n    type: interfaceActionTypes.TOGGLE_SHOW_HELP\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const getTableStats = (tableName) => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS,\r\n    payload: {\r\n        tableName\r\n    }\r\n})\r\n\r\nexport const getTableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storeTableStats = (tableStats) => ({\r\n    type: visualizationActionTypes.STORE_TABLE_STATS,\r\n    payload: {\r\n        tableStats\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSuccess = (trajectory) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS,\r\n    payload: {\r\n        trajectory\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseTrajectoryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const cruiseTrajectoryClear = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR\r\n})\r\n\r\nexport const cruiseListRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SEND,\r\n})\r\n\r\nexport const cruiseListRequestSuccess = (cruiseList) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS,\r\n    payload: {\r\n        cruiseList\r\n    }\r\n})\r\n\r\nexport const cruiseListRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseListRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const triggerShowCharts = () => ({\r\n    type: visualizationActionTypes.TRIGGER_SHOW_CHARTS\r\n})\r\n\r\nexport const completedShowCharts = () => ({\r\n    type: visualizationActionTypes.COMPLETED_SHOW_CHARTS\r\n})\r\n\r\nexport const csvDownloadRequestSend = (query, datasetName) => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SEND,\r\n    payload: {\r\n        query,\r\n        datasetName\r\n    }\r\n})\r\n\r\nexport const csvDownloadRequestFailure = () => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_FAILURE\r\n})\r\n\r\nexport const csvDownloadRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_PROCESSING\r\n})\r\n\r\nexport const csvDownloadRequestSuccess = (text) => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SUCCESS,\r\n    payload: {\r\n        text\r\n    }\r\n})\r\n\r\n//dataset download\r\nexport const downloadTextAsCsv = (text, datasetName) => ({\r\n    type: visualizationActionTypes.DOWNLOAD_TEXT_AS_CSV,\r\n    payload: {\r\n        text,\r\n        datasetName\r\n    }\r\n})","// export const apiUrl = 'https://simonscmap.com'\r\nexport const apiUrl = 'http://localhost:8080';\r\n// export const apiUrl = 'https://simonscmap.dev';","const spatialResolutions = {\r\n    irregular: 'Irregular',\r\n    halfDegree: '1/2° X 1/2°' ,\r\n    quarterDegree: '1/4° X 1/4°' ,\r\n    twentyFifthDegree: '1/25° X 1/25°' ,\r\n    fourKm: '4km X 4km',\r\n    twelfthDegree: '1/12° X 1/12°',\r\n    seventyKm: '70km X 70km',\r\n    oneDegree: '1° X 1°'\r\n}\r\n\r\nexport default spatialResolutions;","import spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nconst mapSpatialResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [spatialResolutions.halfDegree] : .5,\r\n        [spatialResolutions.quarterDegree] : .25,\r\n        [spatialResolutions.twentyFifthDegree] : .04,\r\n        [spatialResolutions.fourKm] : .041672,\r\n        [spatialResolutions.twelfthDegree] : .083333,\r\n        [spatialResolutions.oneDegree] : 1,\r\n        [spatialResolutions.seventyKm] : .25\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapSpatialResolutionToNumber;","// Flattens an array by 1 level\r\n// [[[],[]], [[],[]], [[],[]]] => [[], [], [], [], [], []]\r\n\r\nconst flattenArray = (arr) => {\r\n    let flattenedArray = [];\r\n\r\n    for(let i = 0; i < arr.length; i++){\r\n        for(let j = 0; j < arr[i].length; j++){\r\n            flattenedArray.push(arr[i][j]);\r\n        }\r\n    }\r\n\r\n    return flattenedArray;\r\n}\r\n\r\nexport default flattenArray;","// Interval is number of indices between changes in this parameter, or in order words\r\n// how many times will we see the same value for this parameter in a row before it changes\r\n// as we iterate through the values array.\r\n// We use modulo for cases where data.length / interval is larger than the number of \r\n// distinct values for that parameter.\r\n\r\nconst splitData = (data, changeInterval, numDistinct) => {\r\n    var splitData = [];\r\n\r\n    for(let i = 0; i < numDistinct; i++){\r\n        splitData.push([]);\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        let index = Math.floor(i / changeInterval) % numDistinct;\r\n        splitData[index].push(data[i]);\r\n    }\r\n\r\n    return splitData;\r\n}\r\n\r\nexport default splitData;","// mergeTargetDistance - number of hops between arrays being merged\r\n// mergeTargetNumber - number of arrays being merged - implicit\r\n// nextStartDistance - once a merge is complete how many hops to next start\r\nconst mergeArraysAndComputeMeans = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n    \r\n    // Find each merging start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        // Iterate through each value in the first array of this merge. Count\r\n        // the number of values summed so we can ignore nulls and compute a mean.\r\n        for(let j = 0; j < data[i].length; j ++){\r\n            let sum = 0;\r\n            let count = 0;\r\n\r\n            // Aggregate values of all merge targets\r\n            for(let k = i; k < i + (mergeTargetDistance * numArraysPerMerge); k += mergeTargetDistance){\r\n                if(isNaN(data[k][j])) {\r\n                    continue;\r\n                } else {                    \r\n                    sum += data[k][j];\r\n                    count ++;\r\n                }\r\n            }\r\n            subArray.push(count < 1 ? null : sum / (count));\r\n        }\r\n\r\n        mergedArrays.push(subArray)\r\n    }\r\n\r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArraysAndComputeMeans;","const mergeArrays = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n\r\n    // Find each merge start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        for(let j = i; j <= i + travelDistance; j += mergeTargetDistance){\r\n            subArray = [...subArray, ...data[j]];\r\n        }\r\n\r\n        mergedArrays.push(subArray);\r\n    }\r\n   \r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArrays;\r\n\r\n","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    contourSectionMap: 'Contour Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    heatmap: 'Heatmap',\r\n    contourMap: 'Contour Map',\r\n    sparse: 'Sparse'\r\n}\r\n\r\nexport default subTypes;","const temporalResolutions = {\r\n    threeMinutes: 'Three Minutes',\r\n    sixHourly: 'Six Hourly',\r\n    daily: 'Daily',\r\n    weekly: 'Weekly',\r\n    monthly: 'Monthly',\r\n    annual: 'Annual',\r\n    irregular: 'Irregular',\r\n    monthlyClimatology: 'Monthly Climatology',\r\n    threeDay: 'Three Days',\r\n    eightDayRunning: 'Eight Day Running',\r\n    eightDays: 'Eight Days '\r\n}\r\n\r\nexport default temporalResolutions;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/mergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nclass SpaceTimeData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n\r\n        this.hasDepth = null;\r\n        this.hasHours = null;\r\n        this.isMonthly = null;\r\n\r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n        this.indexAdjust = null;\r\n        this.payload = payload;\r\n        this.lats = [];\r\n        this.lons = [];\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n\r\n        this.distinctLatCount = null;\r\n        this.distinctLonCount = null;\r\n    }\r\n\r\n    add(row) {\r\n        \r\n        let lat = parseFloat(row[1]);\r\n        let _lon = parseFloat(row[2]);\r\n        let lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n\r\n        if(this.hasDepth === null) {\r\n            this.hasHour = this.metadata.Table_Name === 'tblWind_NRT';\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n            this.hasDepth = row.length === 5 && !this.hasHour;\r\n            this.indexAdjust = this.hasDepth || this.hasHour? 1 : 0;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n        }\r\n\r\n        let value = parseFloat(row[3 + this.indexAdjust]);\r\n\r\n        if(this.hasDepth){\r\n            this.depths.add(row[3]);\r\n        }\r\n\r\n        var time;\r\n        if(this.hasHour){\r\n            time = new Date(row[0]);\r\n            time.setUTCHours(row[3])\r\n            time = time.toISOString();\r\n        } else time = row[0];\r\n        this.dates.add(time);\r\n        this.lats.push(lat);\r\n\r\n        this.lons.push(lon);\r\n\r\n        if(lon < this.lonMin) this.lonMin = lon;\r\n        if(lon > this.lonMax) this.lonMax = lon;\r\n        if(lat < this.latMin) this.latMin = lat;\r\n        if(lat > this.latMax) this.latMax = lat;\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n\r\n        if(this.depths.size === 0) this.depths.add('Surface');\r\n\r\n        this.lonCount = this.lons.length / this.dates.size / this.depths.size;\r\n        this.latCount = this.lats.length / this.dates.size / this.depths.size;\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : parseFloat(quantile1.toPrecision(4));\r\n        this.zMax = quantile2 === undefined ? null : parseFloat(quantile2.toPrecision(4));\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n        \r\n        this.distinctLatCount = Math.round((this.latMax - this.latMin) / spatialResolution) + 1;\r\n        this.distinctLonCount = Math.round((this.lonMax - this.lonMin) / spatialResolution) + 1;\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {        \r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const latInterval = this.distinctLonCount;\r\n        const depthInterval = latInterval * this.distinctLatCount;\r\n        const dateInterval = depthInterval * this.depths.size;\r\n\r\n        // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n        variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, depthInterval, this.depths.size));\r\n        variableValueSubsets = flattenArray(variableValueSubsets);\r\n\r\n        // Contour and heatmap compute mean variable values per lat and lon\r\n        // when not split by date and/or time\r\n        if(subType === vizSubTypes.contourMap || subType === vizSubTypes.heatmap) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    this.depths.size, \r\n                    this.depths.size\r\n                    );\r\n    \r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    this.depths.size, \r\n                    1, \r\n                    this.dates.size\r\n                    );\r\n    \r\n            } else {\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    variableValueSubsets.length, \r\n                    variableValueSubsets.length\r\n                    );            \r\n            }\r\n        } \r\n        \r\n        // Histograms split and aggregate without computing means\r\n        else if (subType === vizSubTypes.histogram) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets, \r\n                    1,\r\n                    this.depths.size,\r\n                    this.depths.size\r\n                    );\r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets,\r\n                    this.depths.size,\r\n                    1,\r\n                    this.dates.size\r\n                );\r\n            } else {\r\n                variableValueSubsets = [this.variableValues];\r\n            }\r\n        }\r\n\r\n        // Nothing here yet\r\n        else {}\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${depths[Math.floor(i / (this.variableValues.length / (dates.length * depths.length))) % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SpaceTimeData;","const storedProcedures = {\r\n    sectionMap: 'uspSectionMap',\r\n    timeSeries: 'uspTimeSeries',\r\n    spaceTime: 'uspSpaceTime',\r\n    depthProfile: 'uspDepthProfile'\r\n}\r\n\r\nexport default storedProcedures;","class TimeSeriesData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.dates = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depth = null;\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.depthIndexAdjust = row.length === 6 ? 1 : 0;\r\n            this.lat = row[1];\r\n            this.lon = row[2];\r\n            this.depth = row.length === 6 ? row[3] : false;\r\n        }\r\n\r\n        this.variableValues.push(row[3 + this.depthIndexAdjust]);\r\n        this.stds.push(row[4 + this.depthIndexAdjust]);\r\n        this.dates.push(row[0]);\r\n    }\r\n\r\n    finalize() {\r\n        if(this.depth === false) this.depth = 'Surface';\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }    \r\n\r\n    generateCsv() {\r\n        let csvString = `time,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.dates[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default TimeSeriesData;","class DepthProfileData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depths = [];\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.lat = parseFloat(row[0]);\r\n            this.lon = parseFloat(row[1]);\r\n        }\r\n\r\n        this.variableValues.push(parseFloat(row[2]));\r\n        this.stds.push(parseFloat(row[3]));\r\n        this.depths.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        // pass\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }\r\n    \r\n    generateCsv() {\r\n        let csvString = `depth,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default DepthProfileData;","export default [\r\n    null,\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n]","import { quantile, extent } from 'd3-array';\r\n\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nimport months from '../Enums/months';\r\n\r\nclass SectionMapData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.subType = payload.subType\r\n        \r\n        this.dates = new Set();\r\n        this.depths = new Set();\r\n        this.lats = new Set();\r\n        this.lons = new Set();\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n\r\n        this.variableValues = [];\r\n        \r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.orientation = null;\r\n    }\r\n\r\n    // time, lat, lon, depth, value\r\n    add(row) {        \r\n        const time = row[0];\r\n        const lat = parseFloat(row[1]);\r\n        var _lon = parseFloat(row[2]);\r\n        const lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n        const depth = parseFloat(row[3]);\r\n        const value = parseFloat(row[4]);\r\n\r\n        if(this.variableValues.length === 0) {\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n        }        \r\n\r\n        this.depths.add(depth);\r\n        this.dates.add(this.isMonthly ? months[time] : time);\r\n        this.lats.add(lat);\r\n        this.lons.add(lon);\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : parseFloat(quantile1.toPrecision(4));\r\n        this.zMax = quantile2 === undefined ? null : parseFloat(quantile2.toPrecision(4));\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        this.orientation = this.lons.size > this.lats.size ? 'zonal' : 'meridional';\r\n\r\n        let lonArray = Array.from(this.lons);\r\n        this.lonMax = Math.max(...lonArray);\r\n        this.lonMin = Math.min(...lonArray);\r\n        // console.log(this.variableValues);\r\n    }\r\n\r\n    // Direction is meridional or zonal\r\n    generatePlotData(orientation, splitByDate, splitBySpace) {\r\n        let latCount = this.lats.size;\r\n        let lonCount = this.lons.size;\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const lonInterval = this.depths.size;\r\n        const latInterval = lonInterval * lonCount;\r\n        const dateInterval = latInterval * latCount;\r\n\r\n        var variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n\r\n        var spaceCount;\r\n\r\n        if(orientation === 'zonal') {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, latInterval, latCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = latCount;\r\n        }\r\n\r\n        else {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, lonInterval, lonCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = lonCount;\r\n        }\r\n\r\n        // console.log('Split by space');\r\n        // console.log(variableValueSubsets);\r\n\r\n        if(splitByDate && splitBySpace){\r\n            // pass\r\n        } else if (splitByDate){\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                spaceCount,\r\n                spaceCount\r\n            )\r\n        } else if (splitBySpace) {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                spaceCount,\r\n                1,\r\n                this.dates.size\r\n            )\r\n        } else {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                variableValueSubsets.length,\r\n                variableValueSubsets.length\r\n            )\r\n        }\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n        let lons = Array.from(this.lons);\r\n        let lats = Array.from(this.lats);\r\n\r\n        const lonInterval = depths.length;\r\n        const latInterval = lonInterval * lons.length;\r\n\r\n        var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${lats[Math.floor(i / latInterval) % lats.length]},${lons[Math.floor(i / lonInterval) % lons.length]},${depths[i % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SectionMapData;","import { quantile, extent } from 'd3-array';\r\n\r\nclass SparseData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = null;\r\n        this.variableIndex = payload.metadata.Depth_Min ? 4 : 3;\r\n        this.depths = [];\r\n        this.times = [];\r\n        this.variableValues = [];\r\n        this.lats = [];\r\n        this.lons = [];\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n    }\r\n\r\n    add(row) {\r\n        let lat = parseFloat(row[1]);\r\n        let lon = parseFloat(row[2]);\r\n\r\n        if(this.hasDepth === null){\r\n            this.hasDepth = Boolean(this.metadata.Depth_Min);\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n        }\r\n\r\n        if(row[this.variableIndex]){\r\n\r\n            this.times.push(row[0]);\r\n            this.lats.push(lat);\r\n            this.lons.push(lon);\r\n            if(this.hasDepth) this.depths.push(parseFloat(row[3]));\r\n            this.variableValues.push(parseFloat(row[this.variableIndex]));\r\n\r\n            if(lat < this.latMin) this.latMin = lat;\r\n            if(lat > this.latMax) this.latMax = lat;\r\n            \r\n            if(lon < this.lonMin) this.lonMin = lon;\r\n            if(lon > this.lonMax) this.lonMax = lon;\r\n        }\r\n    }\r\n\r\n    finalize() {\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let latDistance = Math.abs(this.latMax - this.latMin);\r\n        let lonDistance = Math.abs(this.lonMax - this.lonMin);\r\n        let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n\r\n        console.log('Distance: ', distance);\r\n\r\n        let _zoom = 4 - Math.floor(distance / 12);\r\n        this.zoom = _zoom < 0 ? 0 : _zoom;\r\n\r\n        let lonCenter = (this.lonMax + this.lonMin) / 2;\r\n        let latCenter = (this.latMax + this.latMin) / 2;\r\n        this.center = { \r\n            lon: lonCenter, \r\n            lat: latCenter\r\n        }\r\n\r\n        console.log(this);\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        return this.variableValues;\r\n    }\r\n\r\n    generateCsv(){\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SparseData;","import CSVParser from 'csv-parse';\r\n\r\nimport { apiUrl } from './config';\r\nimport SpaceTimeData from './Classes/SpaceTimeData';\r\n\r\nimport storedProcedures from './Enums/storedProcedures';\r\nimport TimeSeriesData from './Classes/TimeSeriesData';\r\nimport DepthProfileData from './Classes/DepthProfileData';\r\nimport SectionMapData from './Classes/SectionMapData';\r\nimport SparseData from './Classes/SparseData';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            catalog.push(record)\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(payload) => {\r\n    const decoder = new TextDecoder();\r\n    var vizData;\r\n\r\n    switch(payload.parameters.spName) {\r\n        case storedProcedures.spaceTime:\r\n            if(payload.subType === 'Sparse') vizData = new SparseData(payload);\r\n            else vizData = new SpaceTimeData(payload);\r\n            break;\r\n\r\n        case storedProcedures.timeSeries:\r\n            vizData = new TimeSeriesData(payload);\r\n            break;\r\n\r\n        case storedProcedures.depthProfile:\r\n            vizData = new DepthProfileData(payload);\r\n            break;\r\n\r\n        case storedProcedures.sectionMap:\r\n            vizData = new SectionMapData(payload);\r\n            break;\r\n\r\n        default:\r\n            console.log('Unknown sproc name');\r\n    }\r\n\r\n    let response = await fetch(apiUrl + '/api/data/sp?' + storedProcedureParametersToUri(payload.parameters), fetchOptions);\r\n\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            vizData.add(record);\r\n        }\r\n    })\r\n\r\n    csvParser.on('error', (e) => {\r\n        console.log(e);\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;\r\n}\r\n\r\napi.visualization.cruiseTrajectoryRequest = async(payload) => {\r\n    const cruiseId = payload.id;\r\n    const decoder = new TextDecoder();\r\n    let trajectory = {lats: [], lons: []};\r\n\r\n    let response = await fetch(apiUrl + '/api/data/cruisetrajectory?' + `id=${payload.id}`, fetchOptions);\r\n\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            trajectory.lats.push(parseFloat(record[1]));\r\n            trajectory.lons.push(parseFloat(record[2]));\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return trajectory;\r\n}\r\n\r\napi.visualization.cruiseList = async() => {\r\n    let response = await fetch(apiUrl + '/api/data/cruiselist', fetchOptions);\r\n\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;   \r\n}\r\n\r\napi.visualization.csvDownload = async(payload) => {\r\n    let response = await fetch(apiUrl + `/api/data/query?query=${payload.query}`, fetchOptions);\r\n    if(response.ok) return await response.text();\r\n    else return {failed: true, status: response.status}\r\n}\r\n\r\nexport default api;","import { put, takeLatest, all, call, delay } from 'redux-saga/effects';\r\n// import { eventChannel } from 'redux-saga';\r\nimport Cookies from 'js-cookie';\r\n// import worker from '../worker';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    \r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){    \r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    \r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    \r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(action){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    \r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    \r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    \r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload);\r\n    yield delay(50);\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'));\r\n    yield delay(70);\r\n    \r\n    // Result will be an object containing variable values and describing date shape\r\n    if(result.failed){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        if(result.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(\"An error occurred. Please try again.\"));\r\n        }\r\n    } else {\r\n        if(result.variableValues.length > 0){\r\n            result.finalize();\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            // yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            yield put(visualizationActions.triggerShowCharts());\r\n            yield put(visualizationActions.addChart({subType: action.payload.subType, data:result}));\r\n           \r\n        } else {\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges. Try selecting a different date or depth range.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* cruiseTrajectoryRequest(action) {\r\n    yield put(visualizationActions.cruiseTrajectoryRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Cruise Data'));\r\n    let result = yield call(api.visualization.cruiseTrajectoryRequest, action.payload);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n\r\n    if(result.failed){\r\n        if(result.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(`Unable to Fetch Cruise Data`));\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.cruiseTrajectoryRequestSuccess(result));\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n    }\r\n}\r\n\r\nfunction* cruiseListRequest() {\r\n    yield put(visualizationActions.cruiseListRequestProcessing());\r\n    let cruiseList = yield call(api.visualization.cruiseList);\r\n\r\n    if(!cruiseList) {\r\n        yield put(visualizationActions.cruiseListRequestFailure());\r\n    } else{\r\n        yield put(visualizationActions.cruiseListRequestSuccess(cruiseList));\r\n    }\r\n}\r\n\r\nfunction* csvDownloadRequest(action){\r\n    yield put(visualizationActions.csvDownloadRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let response = yield call(api.visualization.csvDownload, action.payload);\r\n    yield put(interfaceActions.setLoadingMessage(''))\r\n    if(response.failed) {\r\n        if(response.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen('An error occurred. Please try again.'))\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.downloadTextAsCsv(response, action.payload.datasetName));\r\n    }\r\n}\r\n\r\nfunction* downloadTextAsCsv(action){\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'))\r\n    let csv = action.payload.text;\r\n    const blob = new Blob([csv], {type: 'text/csv'});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.setAttribute('hidden', '');\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `${action.payload.datasetName}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n}\r\n\r\nfunction* refreshLogin(){\r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.showLoginDialog());\r\n    yield put(interfaceActions.snackbarOpen(\"Your session has expired. Please log in again.\"));\r\n}\r\n\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\nfunction* watchCruiseTrajectoryRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND, cruiseTrajectoryRequest);\r\n}\r\n\r\nfunction* watchCruiseListRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_LIST_REQUEST_SEND, cruiseListRequest);\r\n}\r\n\r\nfunction* watchCsvDownloadRequest(){\r\n    yield takeLatest(visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SEND, csvDownloadRequest);\r\n}\r\n\r\nfunction* watchDownloadTextAsCsv(){\r\n    yield takeLatest(visualizationActionTypes.DOWNLOAD_TEXT_AS_CSV, downloadTextAsCsv);\r\n}\r\n\r\nfunction* watchRefreshLogin(){\r\n    yield takeLatest(userActionTypes.REFRESH_LOGIN, refreshLogin);\r\n}\r\n\r\n// function createWorkerChannel(worker) {\r\n//     return eventChannel(emit => {\r\n//         worker.onmessage = message => {\r\n//             emit(message);\r\n//         }\r\n\r\n//         const unsubscribe = () => {\r\n//             worker.teminate();\r\n//         }\r\n      \r\n//         return unsubscribe;\r\n//     })\r\n// }\r\n\r\n// function* watchWorkerChannel(){\r\n//     const workerChannel = yield call(createWorkerChannel, worker);\r\n\r\n//     while (true) {\r\n//         const message = yield take(workerChannel);\r\n//         yield put(message.data.type, message.data.payload);\r\n//         //   yield put({ type: INCOMING_PONG_PAYLOAD, payload })\r\n//         //   yield fork(pong, socket)\r\n//       }\r\n// }\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        watchCruiseTrajectoryRequest(),\r\n        watchCruiseListRequest(),\r\n        // watchWorkerChannel(),\r\n        watchCsvDownloadRequest(),\r\n        watchDownloadTextAsCsv(),\r\n        watchRefreshLogin()\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","const colors = {\r\n    orange: '#FF8000',\r\n    // orange: '#ffa245',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9',\r\n    errorYellow: '#ffe336'\r\n}\r\n\r\nexport default colors;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    },\r\n    warningCaption: {\r\n        color: colors.orange,\r\n        fontSize: '11px',\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    wrapper: {\r\n        marginTop: theme.spacing(16)\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            \r\n            <div className={classes.wrapper}>\r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Key\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                        <Typography variant='caption' className={classes.warningCaption}>\r\n                            This API key is a unique identifier, and should not be shared.\r\n                        </Typography>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"body2\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n                </Paper>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires a user account. Please <Link component={RouterLink} to={{pathname: '/apikeymanagement'}} onClick={() => props.showLoginDialog()}> log in\r\n            </Link> or <Link component={RouterLink} to={{pathname: '/register'}}> register\r\n            </Link>.\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen, toggleShowHelp } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    appBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    toolBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    navWrapper: {\r\n        position: 'fixed',\r\n        width: '100vw',\r\n        top: '0px',\r\n        backgroundColor: 'transparent',\r\n        zIndex: 50,\r\n        paddingTop: '10px',\r\n        paddingLeft: '20px',\r\n        textAlign: 'left',\r\n        boxSizing: 'border-box'\r\n    },\r\n\r\n    navLink: {\r\n        textDecoration: 'none',\r\n        marginRight: 20,\r\n        color: 'white',\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        },\r\n        fontSize: '13px',\r\n        fontWeight: 100,\r\n        display: 'inline-block',\r\n        cursor: 'pointer' \r\n    },\r\n\r\n    rightNavLink: {\r\n        float: 'right'\r\n    },\r\n\r\n    rightLinkWrapper: {\r\n        display:'inline-block',\r\n        textAlign: 'right'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen,\r\n    toggleShowHelp\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    handleNavigate = (route) => {\r\n        this.props.restoreInterfaceDefaults()\r\n        this.props.history.push(route);\r\n    }\r\n\r\n    handleOutsideNavigate = (url) => {\r\n        window.open(url, '_blank')\r\n    }\r\n\r\n    render(){\r\n        const { classes, history, showHelp } = this.props;\r\n        const { pathname } = history.location;\r\n\r\n        return (\r\n            <div className={classes.navWrapper}>\r\n                <Typography variant='caption' href='/' component='a' className={classes.navLink}>Home</Typography>\r\n                <Typography variant='caption' to='/catalog' component={Link} className={classes.navLink}>Catalog</Typography>\r\n                {pathname !== '/visualization' && <Typography variant='caption' to='/apikeymanagement' component={Link} className={classes.navLink}>API Keys</Typography>}\r\n                {pathname !== '/visualization' && <Typography variant='caption' to='/visualization' component={Link} className={classes.navLink}>Visualization</Typography>}\r\n                {this.props.user && <Typography variant='caption' onClick={() => this.handleLogOut()} className={`${classes.navLink} ${pathname === '/visualization' ? '' : classes.rightNavLink}`}>Log Out</Typography>}\r\n                {/* <Typography variant='caption' onClick={this.props.toggleShowHelp} className={classes.navLink}>{showHelp ? 'Hide Help' : 'Help(beta) '}</Typography> */}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' onClick={() => this.props.showLoginDialog()} className={`${classes.navLink} ${classes.rightNavLink}`}>Log In</Typography>}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' to='/register' component={Link} className={classes.navLink}>Register</Typography>}\r\n            </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user ? <ApiKeyManagement/> : <LoginRequiredPrompt/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'Variable'],\r\n    ['Spatial Resolution', 'Spatial_Resolution'],\r\n    ['Temporal Resolution', 'Temporal_Resolution'],\r\n    ['Unit', 'Unit'],\r\n    ['Process Level', 'Process_Level'],\r\n    ['Study Domain', 'Study_Domain'],\r\n    ['SQL Table Name', 'Table_Name']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        margin: '-10px auto 0px auto',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(2),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing(2),\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        width: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={8} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={imageSource + 'viz_sample.png'} alt=\"Sample Visualization\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.Dataset_Description}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.Data_Source}\r\n                        </Typography> <br></br>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.Distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable} size='small'>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = theme => ({\r\n  tooltip: {\r\n      color: theme.palette.secondary.main,\r\n      opacity: 1\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst ConnectedTooltip = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    if(!showHelp) {\r\n        return (\r\n            <React.Fragment>\r\n                {props.children}\r\n            </React.Fragment>\r\n        )}\r\n    else {\r\n        return (\r\n            <Tooltip \r\n                placement={props.placement} \r\n                open={showHelp} \r\n                title={props.title} \r\n                className={classes.tooltip}\r\n                classes={{\r\n                    popper: classes.tooltip\r\n                }}\r\n            >\r\n                {props.children}\r\n            </Tooltip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(ConnectedTooltip));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst detailCellRendererParams = {\r\n  template:\r\n    '<div style=\"height: 100%; box-sizing: border-box\" class=\"testClass\">' +\r\n      '  <div style=\"height: 10%;\">Call Details</div>' +\r\n      '  <div ref=\"eDetailGrid\" style=\"height: 90%;\"></div>' +\r\n    \"</div>\"\r\n}\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"Long_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"Variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"Table_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"Dataset_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"Make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"Sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"Study_Domain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"Process_Level\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"Spatial_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"Temporal_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"Unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'Keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '60vh', \r\n    width: '90%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '60px 5vw',\r\n    padding: '30px'\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n        <Paper elevation={12} className={classes.gridPaper}>\r\n          <ConnectedTooltip placement title='Enter one or more search terms.' placement='top'>\r\n            <TextField\r\n              className={classes.gridSearch}\r\n              autoFocus={true}\r\n              margin=\"normal\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              variant='outlined'\r\n              name='filterText'\r\n              value={this.state.filterText}\r\n              onChange={this.handleChange}\r\n              label=\"Variable Search\"\r\n              InputLabelProps={{\r\n                  shrink: true,\r\n              }}\r\n            />\r\n          </ConnectedTooltip>\r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              suppressDragLeaveHidesColumns= {true}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n              detailCellRendererParams={detailCellRendererParams}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog) return <AGGridWrapper catalog={this.props.catalog}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n        else if(this.props.catalogRequestState === states.failed) return <p>Failed to get catalog. Have you tried turning it off and then on again?</p>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const validation = {\r\n    depth: {\r\n        depthOneIsLower: 'Cannot be larger than end',\r\n        depthOneOutOfBounds: 'Must be smaller than $',\r\n        depthTwoOutOfBounds: 'Must be larger than $',\r\n        negative: 'Cannot be negative'\r\n    },\r\n\r\n    date: {\r\n        dateOneIsLater: 'Cannot be after end',\r\n        dateOneOutOfBounds: 'Must be before $',\r\n        dateTwoOutOfBounds: 'Must be after $'\r\n    },\r\n\r\n    lat: {\r\n        latOneIsHigher: 'Cannot be larger than end.',\r\n        latOneOutOfBounds: 'Must be less than $',\r\n        latTwoOutOfBounds: 'Must be greater than $'\r\n    },\r\n\r\n    lon: {\r\n        lonOneIsHigher: 'Cannot be larger than end.',\r\n        lonOneOutOfBounds: 'Must be less than $',\r\n        lonTwoOutOfBounds: 'Must be greater than $'\r\n    },\r\n\r\n    type: {\r\n        dataIsIrregular: '$ is not available for sparse data',\r\n        dateRangeRequired: '$ requires a range of dates',\r\n        depthRangeRequired: '$ requires a range of depths',\r\n        surfaceOnlyDataset: '$ contains only surface data',\r\n        irregularOnly: 'Sparse map is only available for sparse data',\r\n        dataSizeTooLarge: 'Data set is too large for this visualization type.'\r\n    },\r\n\r\n    generic: {\r\n        invalid: 'Invalid input',\r\n        dataSizeWarning: 'Wait time and application performance may be poor due to size of data.',\r\n        dataSizePrevent: 'Data set is too large. Please reduce date range or area size.',\r\n        variableMissing: 'Please select a variable',\r\n        vizTypeMissing: 'Please select a visualization type'\r\n    }\r\n}\r\n\r\nexport default validation;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    const { data } = props;\r\n\r\n    if(!data) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{data.Long_Name}</DialogTitle>\r\n            <DialogContent>\r\n                { data.Comment &&\r\n                    <DialogContentText>\r\n                        {data.Comment}\r\n                    </DialogContentText>\r\n                }\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Dataset</TableCell>\r\n                                <TableCell title={data.Dataset_Name}>{data.Dataset_Name.length > 25 ? data.Dataset_Name.slice(0,23) + '...' : data.Dataset_Name}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Source</TableCell>\r\n                                <TableCell title={data.Data_Source}>{data.Data_Source > 25 ? data.Data_Source.slice(0,23) + '...' : data.Data_Source}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Distributor</TableCell>\r\n                                <TableCell title={data.Distributor}>{data.Distributor.length > 25 ? data.Distributor.slice(0,23) + '...' : data.Distributor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{data.Sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{data.Spatial_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{data.Temporal_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{data.Time_Min ? data.Time_Min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{data.Time_Max ? data.Time_Max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lat_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lat_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lon_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{data.Depth_Min ? `${data.Depth_Min}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{data.Depth_Max ? `${data.Depth_Max}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            {data.Variable_Min &&\r\n                                <TableRow>\r\n                                    <TableCell>Minimum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Min}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Max &&\r\n                                <TableRow>\r\n                                    <TableCell>Maximum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Max}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Mean && \r\n                                <TableRow>\r\n                                    <TableCell>Mean Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Mean}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Std &&\r\n                                <TableRow>\r\n                                    <TableCell>Standard Deviation({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Std}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);\r\n\r\n// Variable_Max: \"4.999\"\r\n// Variable_Mean: \"-0.0000008547\"\r\n// Variable_Min: \"-4.9956\"\r\n// Variable_Std: \"0.1428013424\"","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nconst mapTemporalResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [temporalResolutions.threeMinutes] : 1,\r\n        [temporalResolutions.sixHourly] : 1,\r\n        [temporalResolutions.daily] : 1,\r\n        [temporalResolutions.weekly] : 7,\r\n        [temporalResolutions.monthly] : 30,\r\n        [temporalResolutions.annual] : 365,\r\n        [temporalResolutions.irregular] : null,\r\n        [temporalResolutions.monthlyClimatology]: 30,\r\n        [temporalResolutions.threeDay]: 3,\r\n        [temporalResolutions.eightDayRunning]: 8,\r\n        [temporalResolutions.eightDays]: 8\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapTemporalResolutionToNumber;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { ArrowDropDown, LibraryBooks } from '@material-ui/icons';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend } from '../Redux/actions/visualization';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    dataRetrievalFormPaper: {\r\n        width: '1000px',\r\n        height: '260px',\r\n        padding: theme.spacing(2.5),\r\n        position:'fixed',\r\n        top: '10px',\r\n        left: '50%',\r\n        marginLeft: '-600px',\r\n        zIndex: 2,\r\n        paddingTop: theme.spacing(1.5),\r\n    },\r\n\r\n    dataRetrievalFormField: {\r\n        padding:`0px ${theme.spacing(1)}`\r\n    },\r\n\r\n    retrieveDataButton: {\r\n        margin:'10px auto'\r\n    },\r\n\r\n    variableSelect: {\r\n        margin: '0 30px 20px 30px'\r\n    },\r\n\r\n    visualizationSpeedDial: {\r\n        position: 'relative',\r\n        top: '5px',\r\n        left: '30px'\r\n    },\r\n\r\n    visualizeButton: {\r\n        borderRadius:'10%',\r\n        width: '100px',\r\n        height:'40px',\r\n        margin: 'auto 0',\r\n        backgroundColor: theme.palette\r\n    },\r\n\r\n    visualizeButtonText: {\r\n        dominantBaseline: \"middle\",\r\n        textAnchor: \"middle\"\r\n    },\r\n\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    datePickerGridSection: {\r\n        paddingLeft: '40px !important',\r\n        paddingRight: '40px !important'\r\n    },\r\n\r\n    shortenHeight: {\r\n        height: '60px'\r\n    },\r\n\r\n    vizSelect: {\r\n        minWidth: 120\r\n    },\r\n\r\n    gridItem: {\r\n        height: '48px'\r\n    },\r\n\r\n    generalMessage: {\r\n        textAlign: 'left'\r\n    },\r\n\r\n    vizTypeSelectFormControl: {\r\n        width: 150\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend\r\n}\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nconst reactWindowListRef = React.createRef();\r\nclass MenuList extends Component {\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if(!(this.props.children && this.props.children.length)) return;\r\n        let index = this.props.children.findIndex(child => child.props && child.props.isFocused);\r\n        reactWindowListRef.current.scrollToItem(index);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <ReactWindowList\r\n                style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length === 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <ArrowDropDown />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nclass DataRetrievalForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('Variable');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            visualizationSpeedDialOpen: false,\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.Variable,\r\n            label: item.Variable === item.Long_Name ? (item.Variable.length > 48 ? item.Variable.slice(0,45) + '...' : item.Variable) : (item.Variable.length > 23 ? item.Variable.slice(0,23) : item.Variable) + ' : ' + (item.Long_Name.length > 38 ? item.Long_Name.slice(0,35) + '...' : item.Long_Name),\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Histogram');\r\n        return '';\r\n    }\r\n\r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Depth Profile');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = () => {\r\n        if(this.estimateDataSize() > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = () => {\r\n        if(this.estimateDataSize() > 50000000) return validation.generic.dataSizePrevent;\r\n        return ''\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartDate(),\r\n                this.checkEndDate(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(),\r\n                this.checkGeneralPrevent()\r\n            ];\r\n        } else validations = Array(17).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startDateMessage,\r\n            endDateMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage\r\n        ] = validations;\r\n\r\n        const parametersAreInvalid = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage\r\n        ].some(message => message.length);\r\n\r\n        return (\r\n            <div className={this.props.showUI ? '' : classes.displayNone} id='drf'>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n                <Paper className={classes.dataRetrievalFormPaper}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={11} className={classes.shortenHeight}>\r\n                            <Select\r\n                                isLoading = {catalogRequestState === states.inProgress}\r\n                                components={{\r\n                                    IndicatorSeparator:'',\r\n                                    DropdownIndicator,\r\n                                    Option,\r\n                                    MenuList,\r\n                                    SingleValue,\r\n                                }}\r\n                                isClearable\r\n                                onInputChange={this.onAutoSuggestChange}\r\n                                filterOption={null}\r\n                                className={classes.variableSelect}\r\n                                autoFocus\r\n                                escapeClearsValue\r\n                                name=\"fields\"\r\n                                label=\"Variables\"\r\n                                options={options}\r\n                                onChange={this.props.updateFields}\r\n                                value={fields}\r\n                                placeholder=\"Variable Search\"\r\n                                styles={{\r\n                                    menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                                    input: provided => ({...provided,\r\n                                        color: 'white',\r\n                                        fontFamily: '\"Lato\", sans-serif'\r\n                                    }),\r\n\r\n                                    control: provided => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        border: '1px solid #333333',\r\n                                        '&:hover': { borderColor: 'white' },\r\n                                        '&:focus-within': { borderColor: colors.orange },\r\n                                    }),\r\n\r\n                                    placeholder: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        fontSize: '14px'\r\n                                    }),\r\n\r\n                                    noOptionsMessage: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        backgroundColor: colors.backgroundGray\r\n                                    }),\r\n\r\n                                    option: (provided, { data, isFocused }) => {\r\n                                        return ({...provided,\r\n                                        backgroundColor: isFocused ? '#383838' : '#424242',\r\n                                        color: data.data.Sensor === 'Satellite' ? '#1acf02' : data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        '&:hover': { backgroundColor: '#383838' },\r\n                                        ':active': { backgroundColor: '#383838' },\r\n                                        '&:after': { \r\n                                            content: data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            float: 'left'\r\n                                        },\r\n                                    })},\r\n\r\n                                    singleValue: (provided, state) => ({...provided,\r\n                                        fontFamily: state.data.data.Sensor === 'Satellite' ? 'Font Awesome 5 Free': '\"Lato\", sans-serif',\r\n                                        color: state.data.data.Sensor === 'Satellite' ? '#1acf02' : state.data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        paddingRight: '20px',\r\n                                        '&:after': { \r\n                                            content: state.data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            fontSize: '18px',\r\n                                            position: 'relative',\r\n                                            left: '8px',\r\n                                            top: '3px'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n                                    colors: {\r\n                                    ...theme.colors,\r\n                                    // Background color of hovered options\r\n                                    primary25: '#e0e0e0',\r\n                                    primary: '#212121',\r\n                                    },\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={1}>\r\n                            <IconButton\r\n                                disabled={!fields}\r\n                                onClick={this.handleTableStatsDialogOpen}\r\n                            >\r\n                                <LibraryBooks/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel htmlFor=\"depth1-input\" >Start Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth1-input\"\r\n                                        value={depth1}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth1-error\"\r\n                                        labelWidth={105}\r\n                                        name='depth1'\r\n                                    />\r\n                                    <FormHelperText id=\"depth1-error\">{startDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"depth2-input\" >End Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth2-input\"\r\n                                        value={depth2}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth2-error\"\r\n                                        labelWidth={95}\r\n                                        name='depth2'\r\n                                    />\r\n                                    <FormHelperText id=\"depth2-error\">{endDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat1-input\" >{'Start Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat1-input\"\r\n                                        value={lat1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lat1'\r\n                                    />\r\n                                    <FormHelperText id=\"lat1-error\">{startLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat2-input\" >{'End Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat2-input\"\r\n                                        value={lat2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lat2'\r\n                                    />\r\n                                    <FormHelperText id=\"lat2-error\">{endLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon1-input\" >{'Start Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon1-input\"\r\n                                        value={lon1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lon1'\r\n                                    />\r\n                                    <FormHelperText id=\"lon1-error\">{startLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon2-input\" >{'End Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon2-input\"\r\n                                        value={lon2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lon2'\r\n                                    />\r\n                                    <FormHelperText id=\"lon2-error\">{endLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={2}>\r\n                                <FormControl variant='outlined' className={classes.vizTypeSelectFormControl}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        labelWidth={35}\r\n                                        value={selectedVizType}\r\n                                        variant='outlined'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'outlined'\r\n                                        }}\r\n                                        >\r\n                                        <MenuItem disabled={Boolean(heatmapMessage)} value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>\r\n                                        <MenuItem disabled={Boolean(contourMessage)} value={vizSubTypes.contourMap}>Contour</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sectionMapMessage)} value={vizSubTypes.sectionMap}>Section Map</MenuItem>\r\n                                        <MenuItem disabled={Boolean(histogramMessage)} value={vizSubTypes.histogram}>Histogram</MenuItem>                                    \r\n                                        <MenuItem disabled={Boolean(timeSeriesMessage)} value={vizSubTypes.timeSeries}>Time Series</MenuItem>\r\n                                        <MenuItem disabled={Boolean(depthProfileMessage)} value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sparseMapMessage)} value={vizSubTypes.sparse}>Sparse Map</MenuItem>\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2}>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={() => this.props.onVisualize()}\r\n                                    disabled={!selectedVizType || parametersAreInvalid || !fields}\r\n                                >\r\n                                    Visualize\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <Typography variant='caption' color='error' className={classes.generalMessage}>\r\n                                    {generalPreventMessage || generalWarnMessage}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataRetrievalForm));","const utcDateStringToLocal = (utcString) => {\r\n    let date = new Date(utcString);\r\n    let utcYear = date.getUTCFullYear();\r\n    let utcMonth = date.getUTCMonth();\r\n    let utcDate = date.getUTCDate();\r\n\r\n    let newDate = new Date();\r\n    newDate.setFullYear(utcYear, utcMonth, utcDate);\r\n    return newDate;\r\n}\r\n\r\nexport default utcDateStringToLocal;","\r\nconst darwinDepths = [\r\n    5,\r\n    15,\r\n    25,\r\n    35,\r\n    45,\r\n    55,\r\n    65,\r\n    75.005,\r\n    85.025,\r\n    95.095,\r\n    105.31,\r\n    115.87,\r\n    127.15,\r\n    139.74,\r\n    154.47,\r\n    172.4,\r\n    194.735,\r\n    222.71,\r\n    257.47,\r\n    299.93,\r\n    350.68,\r\n    409.93,\r\n    477.47,\r\n    552.71,\r\n    634.735,\r\n    722.4,\r\n    814.47,\r\n    909.74,\r\n    1007.155,\r\n    1105.905,\r\n    1205.535,\r\n    1306.205,\r\n    1409.15,\r\n    1517.095,\r\n    1634.175,\r\n    1765.135,\r\n    1914.15,\r\n    2084.035,\r\n    2276.225,\r\n    2491.25,\r\n    2729.25,\r\n    2990.25,\r\n    3274.25,\r\n    3581.25,\r\n    3911.25,\r\n    4264.25,\r\n    4640.25,\r\n    5039.25,\r\n    5461.25,\r\n    5906.25\r\n]\r\n\r\nconst piscesDepths = [\r\n    0.494024991989,\r\n    1.54137504101,\r\n    2.64566898346,\r\n    3.81949496269,\r\n    5.07822418213,\r\n    6.44061422348,\r\n    7.92956018448,\r\n    9.5729970932,\r\n    11.404999733,\r\n    13.4671401978,\r\n    15.8100700378,\r\n    18.4955596924,\r\n    21.5988197327,\r\n    25.2114105225,\r\n    29.4447307587,\r\n    34.4341506958,\r\n    40.3440513611,\r\n    47.3736915588,\r\n    55.764289856,\r\n    65.8072662354,\r\n    77.8538513184,\r\n    92.3260726929,\r\n    109.729301453,\r\n    130.666000366,\r\n    155.850692749,\r\n    186.125595093,\r\n    222.475204468,\r\n    266.040313721,\r\n    318.127410889,\r\n    380.213012695,\r\n    453.937713623,\r\n    541.088928223,\r\n    643.566772461,\r\n    763.333129883,\r\n    902.339294434,\r\n    1062.43994141,\r\n    1245.29101562,\r\n    1452.25097656,\r\n    1684.28405762,\r\n    1941.89294434,\r\n    2225.07788086,\r\n    2533.3359375,\r\n    2865.70288086,\r\n    3220.82006836,\r\n    3597.03198242,\r\n    3992.48388672,\r\n    4405.22412109,\r\n    4833.29101562,\r\n    5274.78417969,\r\n    5727.91699219\r\n]\r\n\r\nconst _piscesTables = [\r\n    'tblPisces_NRT',\r\n    'tblPisces_NRT_Calendar'\r\n]\r\n\r\nconst _darwinTable = [\r\n    'tblDarwin_Chl_Climatology',\r\n    'tblDarwin_Ecosystem',\r\n    'tblDarwin_Nutrient',\r\n    'tblDarwin_Nutrient_Climatology',\r\n    'tblDarwin_Ocean_Color',\r\n    'tblDarwin_Phytoplankton',\r\n    'tblDarwin_Plankton_Climatology'\r\n]\r\n\r\nconst piscesTable = new Set(_piscesTables);\r\nconst darwinTable = new Set(_darwinTable);\r\n\r\nconst exports = {\r\n    count: (field, depth1, depth2) => {\r\n        const { Table_Name: table } = field.data;\r\n        var count = 0;\r\n    \r\n        if(piscesTable.has(table)) {\r\n            for(let i = 0; i < piscesDepths.length; i++){\r\n                if(piscesDepths[i] > depth2) break;\r\n                if(piscesDepths[i] > depth1) count ++; \r\n            }\r\n        } else if (darwinTable.has(table)) {\r\n            for(let i = 0; i < darwinDepths.length; i++){\r\n                if(darwinDepths[i] > depth2) break;\r\n                if(darwinDepths[i] > depth1) count ++; \r\n            }\r\n        } else {}\r\n        return count;\r\n    },\r\n\r\n    piscesTable,\r\n    darwinTable,\r\n    piscesDepths,\r\n    darwinDepths\r\n}\r\n\r\nexport default exports;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { VariableSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { LibraryBooks, ArrowRight, ChevronLeft, ChevronRight, InsertChartOutlined, Language, Delete, CloudDownload, Info } from '@material-ui/icons';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend, clearCharts, csvDownloadRequestSend } from '../Redux/actions/visualization';\r\nimport { snackbarOpen } from '../Redux/actions/ui';\r\n\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport depthUtils from '../Utility/depthCounter';\r\n\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst navDrawerWidth = 320;\r\n\r\nconst errorHeightAdjust = 23;\r\n\r\nconst styles = theme => ({\r\n    drawer: {\r\n        width: navDrawerWidth,\r\n        top: 32,\r\n        bottom: 'auto',\r\n        overflow: 'visible'\r\n    },\r\n\r\n    drawerPaper: {\r\n        width: navDrawerWidth,\r\n        height: '540px',\r\n        top: 'calc(50% - 270px)',\r\n        borderRadius: '0 4px 4px 0',\r\n        boxShadow: '2px 2px  2px 2px #242424',\r\n        border: 'none',\r\n        overflow: 'visible',\r\n        backgroundColor: '#424242'\r\n    },\r\n\r\n    drawerPaperError1: {\r\n        height: `${540 + errorHeightAdjust}px`\r\n    },\r\n\r\n    drawerPaperError2: {\r\n        height: `${540 + errorHeightAdjust * 2}px`\r\n    },\r\n\r\n    drawerPaperError3: {\r\n        height: `${540 + errorHeightAdjust * 3}px`\r\n    },\r\n\r\n    drawerPaperError4: {\r\n        height: `${540 + errorHeightAdjust * 4}px`\r\n    },\r\n\r\n    drawerPaperError5: {\r\n        height: `${540 + errorHeightAdjust * 5}px`\r\n    },\r\n\r\n  openPanelChevron: {\r\n    position: 'fixed',\r\n    left: '5px',\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  closePanelChevron: {\r\n    position: 'fixed',\r\n    left: navDrawerWidth + 5,\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  groupedButtons: {\r\n      width: '50%',\r\n      border: '1px solid #313131',\r\n      borderRadius: 0,\r\n      backgroundColor: '#3c3c3c'\r\n  },\r\n\r\n  controlPanelForm: {\r\n      marginTop: theme.spacing(1)\r\n  },\r\n\r\n  tableStatsButton: {\r\n      borderRadius: 0,\r\n      paddingTop: '11px',\r\n      backgroundColor: '#424242'\r\n  },\r\n\r\n    formGridItem: {\r\n        borderLeft: '1px solid #313131',\r\n        backgroundColor: '#424242'\r\n    },\r\n\r\n  vizTypeSelectFormControl: {\r\n      width: '100%',\r\n      '&:disabled': {\r\n        backgroundColor: 'transparent'\r\n    }\r\n  },\r\n\r\n  depressed: {\r\n      boxShadow: 'inset 1px 1px 5px #1c1c1c'\r\n  },\r\n\r\n  padLeft: {\r\n      padding: '6px 0 2px 7px'\r\n  },\r\n\r\n  visualizeButton: {\r\n      height: '56px',\r\n      borderRadius: 0,\r\n      backgroundColor: '#424242',\r\n      color: theme.palette.primary.main,\r\n      fontVariant: 'normal',\r\n      '&:disabled': {\r\n        backgroundColor: 'transparent'\r\n    },\r\n      '&:hover': {backgroundColor: '#874400'}\r\n  },\r\n\r\n  helperText: {\r\n    color: 'yellow'\r\n  },\r\n\r\n  vizButtonTooltip: {\r\n    color: 'yellow'\r\n  },\r\n\r\n  datePickerInputAdornment: {\r\n      padding: 0\r\n  },\r\n\r\n  clearChartsButton: {\r\n      borderRadius: 0,\r\n      backgroundColor: '#3c3c3c'\r\n  },\r\n\r\n  datePicker: {\r\n      width: '100%'\r\n  }\r\n\r\n});\r\n\r\nconst overrideDisabledStyle = {\r\n    backgroundColor: 'transparent'\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend,\r\n    clearCharts,\r\n    csvDownloadRequestSend,\r\n    snackbarOpen\r\n}\r\n\r\nconst getDatePlaceholder = (date) => {\r\n    if(isNaN(new Date(date)).valueOf()) return 'yyyy-MM-dd';\r\n    \r\n    let month  = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let year = date.getFullYear();\r\n    return [year, month < 10 ? '0' + month : month, day < 10 ? '0' + day : day].join('-');\r\n}\r\n\r\nconst groupHeaderHeight = 37;\r\nconst height = 35;\r\n\r\nconst reactWindowListRef = React.createRef();\r\nconst selectRef = React.createRef();\r\n\r\nclass MenuList extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n      if(reactWindowListRef.current) reactWindowListRef.current.resetAfterIndex(0);\r\n      if(!(this.props.children && this.props.children.length)) return;\r\n      let scrollOffset = 0;\r\n      let foundFocus = false;\r\n      this.props.children.forEach(child => {\r\n        if(foundFocus) return;\r\n\r\n        let count = groupHeaderHeight;\r\n        let groupHasFocus= false;\r\n        for(let i = 0; i < child.props.children.length; i++){\r\n          if(child.props.children[i].props.isFocused) {\r\n            foundFocus = true;\r\n            groupHasFocus = true;\r\n            break;\r\n          }\r\n          count += 37.6;\r\n        }\r\n\r\n        if(groupHasFocus) scrollOffset += count;\r\n        else scrollOffset += 37.6;\r\n      })\r\n      if(foundFocus) reactWindowListRef.current.scrollTo(scrollOffset > 150 ? scrollOffset - 150 : 0);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n\r\n        if(!children || !children.length) return '';\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        const groupHeights = children.map(child => {\r\n          return child.props.children.some(grandChild => grandChild.props.isFocused) ? child.props.children.length * 37.6 + groupHeaderHeight : groupHeaderHeight;\r\n        });\r\n        const totalHeight = groupHeights.reduce((acc, cur) => acc + cur, 0);\r\n        const estimatedItemSize = totalHeight / children.length;\r\n        const getItemSize = index => groupHeights[index];\r\n\r\n        return (\r\n            <ReactWindowList\r\n                // height={(options.length == 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                height={totalHeight < 400 ? totalHeight :  400}\r\n                estimatedItemSize={estimatedItemSize}\r\n                itemCount={children.length}\r\n                itemSize={getItemSize}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={{...style}}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\nclass Group extends Component {\r\n    render() {\r\n        const hasFocus = this.props.children.some(element => element.props.isFocused);\r\n        const sensor = this.props.children[0].props.data.data.Sensor;\r\n\r\n      return (\r\n          <React.Fragment>\r\n            <CustomHeading \r\n              {...this.props.headingProps} \r\n              headingLabel={this.props.data.label} \r\n              firstChild={this.props.children[0].props.data}\r\n              hasFocus={hasFocus}\r\n              sensor={sensor}\r\n              tableName={this.props.children[0].props.data.data.Table_Name}\r\n              selectProps={this.props.selectProps}\r\n            />\r\n            <div hidden={!hasFocus}>\r\n              {this.props.children.map(child => child)}\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n    }    \r\n}\r\n\r\nconst customHeadingStyles = (theme) => ({\r\n    customHeading: {\r\n        backgroundColor: 'rgba(0,0,0,.5)',\r\n        height: groupHeaderHeight,\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(122,67,0,.5)',\r\n        },\r\n        boxShadow: '0px 1px 1px 1px #242424'\r\n    },\r\n\r\n    icon: {\r\n        marginRight: '10px',\r\n        width: '30px'\r\n    },\r\n\r\n    typography: {\r\n        width: '650px'\r\n    }\r\n})\r\n\r\nconst _CustomHeading = props => {\r\n    const { classes, sensor, tableName, selectProps } = props;\r\n    let iconClass;\r\n\r\n    if(sensor === 'Satellite') iconClass = 'fa-satellite';\r\n    else if(sensor === 'Blend') iconClass = 'fa-laptop';\r\n    else iconClass = 'fa-ship';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <ListItem \r\n          button \r\n          alignItems='center' \r\n          onClick={() => selectRef.current.select.setState({focusedOption: props.hasFocus ? null : props.firstChild})}\r\n          className={classes.customHeading}\r\n        >\r\n            <Icon fontSize='small' color='inherit' className={`fas ${iconClass} ${classes.icon}`}></Icon>\r\n        <Typography className={classes.typography}>\r\n            {props.headingLabel.length > 70 ? props.headingLabel.slice(0,67) + '...' : props.headingLabel}\r\n        </Typography>\r\n\r\n        <Tooltip title='Download Data' placement='right'>\r\n            <IconButton \r\n                color='inherit' \r\n                onClick={(e) => {\r\n                    selectProps.handleDownloadCsvClick(tableName, props.headingLabel);\r\n                    e.stopPropagation();\r\n                }}>\r\n                <CloudDownload/>\r\n            </IconButton>\r\n        </Tooltip>\r\n\r\n        {/* <Tooltip title='Dataset Info' placement='right'>\r\n            <IconButton \r\n                color='inherit' \r\n                onClick={(e) => {\r\n                    e.stopPropagation();\r\n                }}\r\n            >\r\n                <Info/>\r\n            </IconButton>\r\n        </Tooltip> */}\r\n        </ListItem>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\nconst CustomHeading = withStyles(customHeadingStyles)(_CustomHeading);\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n    <components.DropdownIndicator {...props}>\r\n        <ArrowRight/>\r\n    </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n      <components.Option \r\n        {...props} \r\n        innerProps={{\r\n            ...props.innerProps, \r\n            // Prevent focus / scroll events when mousing over options\r\n            onMouseMove: (e) => e.preventDefault(), \r\n            onMouseOver: (e) => e.preventDefault()\r\n        }}>\r\n    </components.Option>\r\n    )\r\n}\r\n\r\nconst GroupHeading = (props) => '';\r\n\r\nconst formatOptionLabel = (option, meta) => {\r\n    return option.label;\r\n}\r\n\r\nclass VizControlPanel extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.indexStrategy = new JsSearch.AllSubstringsIndexStrategy()\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        search.addIndex('Table_Name');\r\n        search.addIndex('Dataset_Name');\r\n        search.addIndex('Study_Domain');\r\n        search.addIndex('Spatial_Resolution');\r\n        search.addIndex('Temporal_Resolution');\r\n\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: '',\r\n            showControlPanel: true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search});\r\n        }\r\n    }\r\n\r\n    handleOpenControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: true})\r\n    }\r\n\r\n    handleCloseControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: false})\r\n    }      \r\n    \r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        var options = {};\r\n\r\n        items.forEach(item => {\r\n            if(!options[item.Dataset_Name]){\r\n                options[item.Dataset_Name] = {\r\n                    label: item.Dataset_Name,\r\n                    options: []\r\n                }\r\n            }\r\n\r\n            options[item.Dataset_Name].options.push({\r\n                value: item.Variable,\r\n                label: item.Long_Name.length < 80 ? item.Long_Name : item.Long_Name.slice(0,78) + '...',\r\n                data: item\r\n            })\r\n        });\r\n\r\n        let sortedOptions = Object.values(options).sort((opt1, opt2) => {\r\n            return opt1.label < opt2.label ? -1 : 1;\r\n        })\r\n\r\n        return sortedOptions;\r\n    }\r\n\r\n    estimateCsvSize = (datasetName) => {\r\n        // let members = [];\r\n        let count = 0;\r\n        this.props.catalog.forEach((member, i) => {\r\n            if(member.Dataset_Name === datasetName){\r\n                count += parseInt(member.Variable_Count) || 0;\r\n                // members.push(member);\r\n            }\r\n        })\r\n        return count;\r\n    }\r\n\r\n    handleDownloadCsvClick = (tableName, datasetName) => {\r\n        let query = `select%20*%20from%20${tableName}`;\r\n        let count = this.estimateCsvSize(datasetName);\r\n        if(count < 3000000){\r\n            this.props.csvDownloadRequestSend(query, datasetName);\r\n        } else {\r\n            this.props.snackbarOpen('Data set too large');\r\n        }\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') {\r\n            this.setState({...this.state, searchField: searchString});\r\n            selectRef.current.select.setState({focusedOption: null})\r\n        }\r\n        if(action.action ==='set-value') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, depth1, depth2, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const depthCount = depthUtils.count(fields, depth1, depth2) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * depthCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDateValid = () => {\r\n        if(isNaN(new Date(this.props.dt1)).valueOf() || !this.props.dt1) return 'Start date is invalid';\r\n    }\r\n\r\n    checkEndDateValid = () => {\r\n        if(isNaN(new Date(this.props.dt2)).valueOf() || !this.props.dt1) return 'End date is invalid';\r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 > this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        return '';\r\n    }\r\n    \r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = (dataSize) => {\r\n        if(!this.props.selectedVizType) return '';\r\n        if(dataSize > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = (dataSize) => {\r\n        if(this.props.selectedVizType !== vizSubTypes.histogram && this.props.selectedVizType !== vizSubTypes.heatmap && dataSize > 1200000){\r\n            return validation.generic.dataSizePrevent;\r\n        }\r\n        if(dataSize > 6000000) return validation.generic.dataSizePrevent;\r\n        if(!this.props.fields) return validation.generic.variableMissing;\r\n        if(!this.props.selectedVizType) return validation.generic.vizTypeMissing;\r\n        return ''}\r\n\r\n    handleShowChartsAndResize = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 30);\r\n        this.props.handleShowCharts();     \r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField, showControlPanel } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly,\r\n            showCharts,\r\n            handleShowGlobe,\r\n            handleChange,\r\n            handleLatLonChange\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        const dataSize = this.estimateDataSize();\r\n\r\n        var catalogMinDate = fields && utcDateStringToLocal(fields.data.Time_Min).setHours(0,0,0,0);\r\n        var catalogMaxDate = fields && utcDateStringToLocal(fields.data.Time_Max).setHours(0,0,0,0);\r\n        var zeroedDT1 = dt1.setHours(0,0,0,0);\r\n        var zeroedDT2 = dt2.setHours(0,0,0,0);\r\n        \r\n        var minDate = fields ? catalogMinDate : '';\r\n\r\n        let minDateMessage = fields && zeroedDT2 < catalogMinDate ? 'End cannot be before dataset start date' : '';\r\n        var maxDateMessage;\r\n        var maxDate;\r\n\r\n        if(!fields){\r\n            maxDate = zeroedDT2;\r\n            maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after end' : '';\r\n        } else {\r\n            \r\n\r\n            if(catalogMaxDate < zeroedDT2){\r\n                maxDate = catalogMaxDate;\r\n                maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after dataset end date' : '';\r\n            } else {\r\n                maxDate = zeroedDT2;\r\n                maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after end' : '';\r\n            }\r\n        }\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(dataSize),\r\n                this.checkGeneralPrevent(dataSize),\r\n                this.checkStartDateValid(),\r\n                this.checkEndDateValid()\r\n            ];\r\n        } else validations = Array(16).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage,\r\n            startDateValidMessage,\r\n            endDateValidMessage\r\n        ] = validations;\r\n\r\n        const checkDisableVisualizeList = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage,\r\n            minDateMessage,\r\n            maxDateMessage,\r\n            startDateValidMessage,\r\n            endDateValidMessage\r\n        ];\r\n\r\n        let cdvl = checkDisableVisualizeList;\r\n        let errorCount = 0;\r\n        \r\n        if(cdvl[0] || cdvl[1]) errorCount ++;\r\n        if(cdvl[2] || cdvl[3]) errorCount ++;\r\n        if(cdvl[4] || cdvl[5]) errorCount ++;\r\n        if(cdvl[7] || cdvl[9]) errorCount ++;\r\n        if(cdvl[8] || cdvl[10]) errorCount ++;\r\n\r\n        const errorSizeAdjust = errorCount > 0 ? 'drawerPaperError' + errorCount : '';\r\n\r\n        const checkDisableVisualize = () => {\r\n            for(let i = 0; i < checkDisableVisualizeList.length; i++){\r\n                if(checkDisableVisualizeList[i]) return checkDisableVisualizeList[i];\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        const disableVisualizeMessage = checkDisableVisualize();\r\n\r\n        const visualizeButtonTooltip = disableVisualizeMessage ? disableVisualizeMessage : generalWarnMessage ? generalWarnMessage : '';\r\n\r\n        return (\r\n            <div>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n\r\n                { showControlPanel ? \r\n\r\n                        <IconButton \r\n                            className={classes.closePanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleCloseControlPanel}>\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                :\r\n                    \r\n                        <IconButton \r\n                            className={classes.openPanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleOpenControlPanel}>\r\n                            <ChevronRight />\r\n                        </IconButton>\r\n                }\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={showControlPanel}\r\n                    classes={{\r\n                        paper: `${classes.drawerPaper} ${classes[errorSizeAdjust]}`,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >\r\n                    <ButtonGroup>\r\n                        <Tooltip title='Show Globe' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${!showCharts && classes.depressed}`} \r\n                                onClick={handleShowGlobe}\r\n                                color='inherit'\r\n                            >\r\n                                <Language/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        \r\n                        <Tooltip title='Show Charts' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${showCharts && classes.depressed}`}\r\n                                onClick={this.handleShowChartsAndResize}\r\n                                color='inherit'\r\n                            >\r\n                                <InsertChartOutlined/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ButtonGroup>\r\n\r\n                    <Tooltip title='Clear Charts' placement='right'>\r\n                        <IconButton color='inherit' onClick={this.props.clearCharts} className={classes.clearChartsButton}>\r\n                            <Delete/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <form>\r\n                        <Grid container>\r\n                            <Grid item xs={10}>\r\n                                <ConnectedTooltip placement='top' title='Enter one or more search terms.'>\r\n                                    <Select\r\n                                        // onMenuOpen={() => {\r\n                                        //     setTimeout(() => selectRef.current.select.setState({...selectRef.current.select.state, focusedOption: null}), 1)\r\n                                            \r\n                                        // }}\r\n                                        formatOptionLabel={formatOptionLabel}\r\n                                        handleTableStatsDialogOpen={this.handleTableStatsDialogOpen}\r\n                                        isLoading = {catalogRequestState === states.inProgress}\r\n                                        components={{\r\n                                            IndicatorSeparator:'',\r\n                                            DropdownIndicator,\r\n                                            GroupHeading,\r\n                                            Group,\r\n                                            Option,\r\n                                            MenuList,\r\n                                            // SingleValue\r\n                                        }}\r\n                                        handleDownloadCsvClick = {this.handleDownloadCsvClick}\r\n                                        escapeClearsValue\r\n                                        ref={selectRef}\r\n                                        onInputChange={this.onAutoSuggestChange}\r\n                                        filterOption={null}\r\n                                        className={classes.variableSelect}\r\n                                        isClearable\r\n                                        inputValue={this.state.searchField}\r\n                                        name=\"fields\"\r\n                                        label=\"Variables\"\r\n                                        options={options}\r\n                                        onChange={this.props.updateFields}\r\n                                        value={fields}\r\n                                        placeholder=\"Variable Search\"\r\n                                        styles={{\r\n                                            menu: provided => ({\r\n                                                ...provided, \r\n                                                zIndex: 1300, \r\n                                                top: '-8px',\r\n                                                left: navDrawerWidth,\r\n                                                width: '980px',\r\n                                                borderRadius: '4px',\r\n                                                boxShadow: '2px 2px 2px 2px #242424',\r\n                                                overflow: 'hidden',\r\n                                                backgroundColor: 'rgba(0,0,0,.5)',\r\n                                                backdropFilter: 'blur(5px)',\r\n                                            }),\r\n\r\n                                            valueContainer: provided => ({\r\n                                                ...provided,\r\n                                                padding: '0 0 0 6px',\r\n                                                fontWeight: 100\r\n                                            }),\r\n\r\n                                            input: provided => ({...provided,\r\n                                                color: 'white',\r\n                                                fontFamily: '\"Lato\", sans-serif'\r\n                                            }),\r\n\r\n                                            control: provided => ({...provided,\r\n                                                backgroundColor: '#424242',\r\n                                                border: 'none',\r\n                                                borderBottom: '1px solid #333333',\r\n                                                borderRadius: 0,\r\n                                                '&:hover': { borderColor: 'white' },\r\n                                                '&:focus-within': { borderColor: colors.orange },\r\n                                                height: '56px'\r\n                                            }),\r\n\r\n                                            placeholder: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                fontSize: '14px',\r\n                                                fontWeight: 300\r\n                                            }),\r\n\r\n                                            noOptionsMessage: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                backgroundColor: colors.backgroundGray\r\n                                            }),\r\n\r\n                                            option: (provided, { data, isFocused }) => {\r\n                                                return ({...provided,\r\n                                                    fontWeight: 400,\r\n                                                    fontSize: '16px',\r\n                                                    backgroundColor: 'transparent',\r\n                                                    color: isFocused ? colors.orange : 'white',\r\n                                                    '&:hover': { backgroundColor: 'rgba(122,67,0,.5)'},\r\n                                                    // '&:active': { backgroundColor: 'rgba(0,0,0,.5)', color: colors.orange},\r\n                                            })},\r\n\r\n                                            singleValue: (provided, state) => ({...provided,\r\n                                                color: 'white',\r\n                                                fontWeight: 400\r\n                                            })\r\n                                        }}\r\n                                        theme={theme => ({\r\n                                            ...theme,\r\n                                            colors: {\r\n                                            ...theme.colors,\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                </ConnectedTooltip>\r\n                            </Grid>\r\n                            <Grid item xs={2} className={classes.tableStatsButton}>\r\n                                <IconButton \r\n                                    size='small' \r\n                                    onClick={this.handleTableStatsDialogOpen}                                     \r\n                                    disabled={!fields}\r\n                                >\r\n                                    <LibraryBooks/>\r\n                                </IconButton>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder={getDatePlaceholder(dt1)}\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    maxDate={maxDate}\r\n                                    minDate={null}\r\n                                    maxDateMessage={maxDateMessage}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder={getDatePlaceholder(dt2)}\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={minDate}\r\n                                    maxDate={null}\r\n                                    minDateMessage={minDateMessage}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat1-input\"\r\n                                    error={Boolean(startLatMessage)}\r\n                                    label={\"Start Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat1}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startLatMessage}\r\n                                    name='lat1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat2-input\"\r\n                                    error={Boolean(endLatMessage)}\r\n                                    label={\"End Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat2}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endLatMessage}\r\n                                    name='lat2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon1-input\"\r\n                                    error={Boolean(startLonMessage)}\r\n                                    label={\"Start Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon1}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startLonMessage}\r\n                                    name='lon1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon2-input\"\r\n                                    error={Boolean(endLonMessage)}\r\n                                    label={\"End Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon2}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endLonMessage}\r\n                                    name='lon2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    disabled={!fields || surfaceOnly}\r\n                                    id=\"depth1-input\"\r\n                                    error={Boolean(startDepthMessage)}\r\n                                    label=\"Start Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth1}\r\n                                    onChange={handleChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startDepthMessage}\r\n                                    name='depth1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    disabled={!fields || surfaceOnly}\r\n                                    id=\"depth2-input\"\r\n                                    error={Boolean(endDepthMessage)}\r\n                                    label=\"End Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth2}\r\n                                    onChange={handleChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endDepthMessage}\r\n                                    name='depth2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <FormControl variant='filled' className={classes.vizTypeSelectFormControl} disabled={!fields}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        className={classes.vizTypeSelectFormControl}\r\n                                        style={overrideDisabledStyle}\r\n                                        value={selectedVizType}\r\n                                        variant='filled'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'filled'\r\n                                        }}\r\n                                        >\r\n                                        {!heatmapMessage && <MenuItem value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>}\r\n                                        {!contourMessage && <MenuItem value={vizSubTypes.contourMap}>Contour Heatmap</MenuItem>}\r\n                                        {!sectionMapMessage && <MenuItem value={vizSubTypes.sectionMap}>Section Map</MenuItem>}\r\n                                        {!sectionMapMessage && <MenuItem value={vizSubTypes.contourSectionMap}>Contour Section Map</MenuItem>}\r\n                                        {!histogramMessage && <MenuItem value={vizSubTypes.histogram}>Histogram</MenuItem>}                      \r\n                                        {!timeSeriesMessage && <MenuItem value={vizSubTypes.timeSeries}>Time Series</MenuItem>}\r\n                                        {!depthProfileMessage && <MenuItem value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>}\r\n                                        {!sparseMapMessage && <MenuItem value={vizSubTypes.sparse}>Sparse Map</MenuItem>}\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Tooltip placement='right' title={visualizeButtonTooltip} className={classes.vizButtonTooltip}>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        className={classes.visualizeButton}\r\n                                        variant='contained'\r\n                                        onClick={() => this.props.onVisualize()}\r\n                                        disabled={Boolean(disableVisualizeMessage) || !fields || !selectedVizType}\r\n                                        fullWidth\r\n                                    >\r\n                                        Visualize\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </form>                    \r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));","export default (infoObject) => {\r\n\r\n    let lonRange = infoObject.lonMax - infoObject.lonMin;\r\n\r\n    let sectionSize;\r\n    if(lonRange < 2){\r\n        sectionSize = (lonRange / 6).toFixed(2);\r\n    } else {\r\n        sectionSize = Math.floor(lonRange / 6);\r\n    }\r\n\r\n    let tickvals = Array.from(Array(5), (e, i) => Math.ceil(infoObject.lonMin + ((i + 1) * sectionSize)));\r\n    let ticktext = tickvals.map(e => e > 180 ? e - 360 : e);\r\n\r\n    return {\r\n        tickmode: 'array',\r\n        tickvals,\r\n        ticktext\r\n    }\r\n}","import months from '../Enums/months';\r\n\r\nexport default (dateString, hasHour, isMonthly) => isMonthly ? months[parseInt(dateString)] : hasHour ? dateString.slice(0,10) + ' ' + dateString.slice(11,16): dateString.slice(0,10);","import colors from '../Enums/colors';\r\n\r\nexport default {\r\n    layout: {\r\n        font: {color: '#ffffff'},\r\n        paper_bgcolor: colors.backgroundGray,\r\n        // plot_bgcolor: 'transparent'\r\n    },\r\n\r\n    config: {\r\n        displaylogo: false\r\n    },\r\n\r\n    annotations: (distributor, height) => (\r\n        [\r\n            {\r\n                text: `Source: ${distributor.length < 30 ? \r\n                    distributor : \r\n                    distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                font: {\r\n                    color: 'white',\r\n                    size: 10\r\n                },\r\n                xref: 'paper',\r\n                yref: 'paper',\r\n                yshift: height ? 0 - height + 160 : -290,\r\n                showarrow: false,\r\n            }\r\n        ]\r\n    )\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DateRange, Waves, CloudDownload, Palette, SwapVert, Gamepad, LineWeight, Rotate90DegreesCcw, Info } from '@material-ui/icons';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { ButtonGroup } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    popover: {\r\n        width: '470px',\r\n        height: '120px',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5)\r\n    },\r\n\r\n    iconButton: {\r\n        boxShadow: '0px 1px 1px 1px #242424',\r\n    },\r\n\r\n    colorForm: {\r\n        width: '100%'\r\n    },\r\n\r\n    lastIcon: {\r\n        borderTopRightRadius: '10%',\r\n        borderBottomRightRadius: '10%'\r\n    },\r\n\r\n    buttonGroup: {\r\n        display: 'block',\r\n        margin: '0px auto 8px auto',\r\n        maxWidth: '700px'\r\n    },\r\n\r\n    depressed: {\r\n        boxShadow: 'inset 1px 1px 5px #262626'\r\n    },\r\n\r\n    colorscaleMenu: {\r\n        maxHeight: '400px'\r\n    },\r\n})\r\n\r\nconst colorscaleOptions = [\r\n    'Default',\r\n    'Greys', \r\n    'YlGnBu', \r\n    'Greens', \r\n    'YlOrRd',\r\n    'Bluered',\r\n    'RdBu',\r\n    'Reds',\r\n    'Blues',\r\n    'Picnic',\r\n    'Rainbow',\r\n    'Portland',\r\n    'Jet',\r\n    'Hot',\r\n    'Blackbody',\r\n    'Earth',\r\n    'Electric',\r\n    'Viridis',\r\n    'Cividis'];\r\n\r\nfunction usePreviousSize(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction usePreviousColor(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction usePreviousOpacity(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nconst ChartControlPanel = (props) => {\r\n\r\n    const { \r\n        classes, \r\n        onToggleSplitByDate,\r\n        splitByDate,\r\n        onToggleSplitByDepth,\r\n        splitByDepth,\r\n        onToggleSplitBySpace,\r\n        splitBySpace,\r\n        switchOrientation,\r\n        orientation, \r\n        downloadCsv, \r\n        handleZValueConfirm,\r\n        zValues,\r\n        markerOptions,\r\n        handleMarkerOptionsConfirm,\r\n    } = props;\r\n\r\n    const [paletteAnchorElement, setPaletteAnchorElement] = useState(null);\r\n\r\n    let handleOpenPalette = (event) => {\r\n        setPaletteAnchorElement(event.currentTarget);\r\n    }\r\n\r\n    // Local version, not from props\r\n    let handlePaletteChoice = (option) => {\r\n        setPaletteAnchorElement(null);\r\n        props.handlePaletteChoice(option);\r\n    }\r\n\r\n    const [zScalePopoverAnchorElement, setZScalePopoverAnchorElement] = React.useState(null);\r\n    const [localZMin, setLocalZMin] = React.useState(zValues && zValues[0]);\r\n    const [localZMax, setLocalZMax] = React.useState(zValues && zValues[1]);\r\n\r\n    const zScalePopoverOpen = Boolean(zScalePopoverAnchorElement);\r\n    const zScalePopoverID = zScalePopoverOpen ? 'zscale-popover' : undefined;\r\n\r\n    const handleZScalePopoverClose = () => {\r\n        setZScalePopoverAnchorElement(null);\r\n    };\r\n    \r\n    const checkLocalZMin = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMin)) return 'Invalid value';\r\n    }\r\n\r\n    const checkLocalZMax = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMax)) return 'Invalid value';\r\n    }\r\n\r\n    const zScaleValidations = [\r\n        checkLocalZMin(),\r\n        checkLocalZMax()\r\n    ];\r\n\r\n    const [\r\n        zMinMessage,\r\n        zMaxMessage\r\n    ] = zScaleValidations;\r\n\r\n    const handleLocalZConfirm = () => {\r\n        handleZValueConfirm([localZMin, localZMax]);\r\n        handleZScalePopoverClose();\r\n    }\r\n\r\n    const [markerOptionsAnchorElement, setMarkerOptionsAnchorElement] = React.useState(null);\r\n    const [localMarkerOpacity, setLocalMarkerOpacity] = React.useState(markerOptions && markerOptions.opacity);\r\n    const [localMarkerColor, setLocalMarkerColor] = React.useState(markerOptions && markerOptions.color);\r\n    const [localMarkerSize, setLocalMarkerSize] = React.useState(markerOptions && markerOptions.size);\r\n\r\n    if(markerOptions){\r\n        var previousOpacity = usePreviousOpacity(markerOptions.opacity);\r\n        var previousColor = usePreviousColor(markerOptions.color);\r\n        var previousSize = usePreviousSize(markerOptions.size);\r\n        \r\n        useEffect(() => {\r\n            if(markerOptions.opacity !== previousOpacity){\r\n                setLocalMarkerOpacity(markerOptions.opacity);\r\n            }\r\n    \r\n            if(markerOptions.color !== previousColor){\r\n                setLocalMarkerColor(markerOptions.color);\r\n            }\r\n    \r\n            if(markerOptions.size !== previousSize){\r\n                setLocalMarkerSize(markerOptions.size);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const markerPopoverOpen = Boolean(markerOptionsAnchorElement);\r\n    const markerPopoverID = markerPopoverOpen ? 'marker-popover' : undefined;\r\n\r\n    const handleMarkerOptionsClose = () => {\r\n        setMarkerOptionsAnchorElement(null);\r\n    }\r\n\r\n    const checkLocalMarkerOpacity = () => {\r\n        if(localMarkerOpacity < 0.1 || localMarkerOpacity > 1 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerOpacity)){\r\n            return 'Opacity should be 0.1 to 1'\r\n        }\r\n    }\r\n\r\n    const checkLocalMarkerSize = () => {\r\n        if(localMarkerSize < 1 || localMarkerSize > 18 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerSize)){\r\n            return 'Size should be 1 to 18'\r\n        }\r\n    }\r\n\r\n    const markerOptionsValidations = [\r\n        checkLocalMarkerOpacity(),\r\n        checkLocalMarkerSize()\r\n    ]\r\n\r\n    const [\r\n        localMarkerOpacityMessage,\r\n        localMarkerSizeMessage\r\n    ] = markerOptionsValidations;\r\n\r\n    const handleLocalMarkerOptionsConfirm = () => {\r\n        handleMarkerOptionsConfirm({opacity: localMarkerOpacity, color: localMarkerColor, size: localMarkerSize});\r\n        handleMarkerOptionsClose();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup className={classes.buttonGroup}>\r\n\r\n                {Boolean(onToggleSplitByDate) && \r\n                    <Tooltip placement='top' title='Split By Date'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDate && classes.depressed}`} \r\n                            onClick={onToggleSplitByDate}\r\n                        >\r\n                            <DateRange/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n{/* \r\n                {Boolean(onToggleSplitByDepth) && \r\n                    <Tooltip placement='top' title='Split By Depth'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDepth && classes.depressed}`} \r\n                            onClick={onToggleSplitByDepth}\r\n                        >\r\n                            <Waves/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                } */}\r\n\r\n                {Boolean(onToggleSplitBySpace) && \r\n                    <Tooltip placement='top' title={orientation === 'zonal' ? 'Split by Latitude' : 'Split by Longitude'}>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitBySpace && classes.depressed}`} \r\n                            onClick={onToggleSplitBySpace}\r\n                        >\r\n                            <LineWeight/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {/* {Boolean(switchOrientation) && \r\n                    <Tooltip placement='top' title={orientation === 'zonal' ? 'Switch to Meridional' : 'Switch to Zonal'}>\r\n                        <IconButton color='inherit' className={classes.iconButton} \r\n                            onClick={switchOrientation}\r\n                        >\r\n                            <Rotate90DegreesCcw/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                } */}\r\n\r\n                <Tooltip placement='top' title='Download CSV'>\r\n                    <IconButton color='inherit' onClick={downloadCsv} className={classes.iconButton} >\r\n                        <CloudDownload/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n                {Boolean(handleZValueConfirm) &&\r\n                    <Tooltip title='Change Colorscale Range' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setZScalePopoverAnchorElement(event.currentTarget)} className={classes.iconButton}>\r\n                            <SwapVert/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {Boolean(props.handlePaletteChoice) &&\r\n                    <Tooltip title='Change Palette' placement='top'>\r\n                        <IconButton disabled={!Boolean(props.handlePaletteChoice)} color='inherit' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                            <Palette/>\r\n                        </IconButton>                \r\n                    </Tooltip>      \r\n                }\r\n\r\n                {Boolean(props.handleMarkerOptionsConfirm) &&\r\n                    <Tooltip title='Marker Options' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setMarkerOptionsAnchorElement(event.currentTarget)} className={`${classes.iconButton} ${classes.lastIcon}`} >\r\n                            <Gamepad/>\r\n                        </IconButton>                \r\n                    </Tooltip>\r\n                }\r\n\r\n                {/* <Tooltip title='Plot Info' placement='top'>\r\n                    <IconButton color='inherit' onClick={() => console.log('Info!')} className={`${classes.iconButton}`} >\r\n                        <Info/>\r\n                    </IconButton>                \r\n                </Tooltip> */}\r\n                \r\n            </ButtonGroup>\r\n            \r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={paletteAnchorElement}\r\n                keepMounted\r\n                open={Boolean(paletteAnchorElement)}\r\n                onClose={() => setPaletteAnchorElement(null)}\r\n                className={classes.colorscaleMenu}\r\n            >\r\n                {colorscaleOptions.map((option, index) => (\r\n                    <MenuItem onClick={() => handlePaletteChoice(option === 'Default' ? 'heatmap' : option)} key={index}>{option}</MenuItem>\r\n                ))}\r\n                \r\n            </Menu>\r\n            \r\n            {/* zscale popover */}\r\n            <Popover\r\n                id={zScalePopoverID}\r\n                open={zScalePopoverOpen}\r\n                anchorEl={zScalePopoverAnchorElement}\r\n                onClose={handleZScalePopoverClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMinMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-min-input' >Min</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-min-input'\r\n                                    value={localZMin}\r\n                                    onChange={(event) => setLocalZMin(event.target.value)}\r\n                                    aria-describedby='local-zmin-error'\r\n                                    labelWidth={36}\r\n                                    name='local-zmin'\r\n                                />\r\n                                <FormHelperText id='local-zmin-error'>{zMinMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-max-input' >Max</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-max-input'\r\n                                    value={localZMax}\r\n                                    onChange={(event) => setLocalZMax(event.target.value)}\r\n                                    aria-describedby=\"local-zmax-error\"\r\n                                    labelWidth={36}\r\n                                    name='local-zmax'\r\n                                />\r\n                                <FormHelperText id=\"local-zmax-error\">{zMaxMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={7}>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleZScalePopoverClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalZConfirm}\r\n                                disabled={Boolean(zMinMessage || zMaxMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n                \r\n            {/* Marker popover */}\r\n            <Popover\r\n                id={markerPopoverID}\r\n                open={markerPopoverOpen}\r\n                anchorEl={markerOptionsAnchorElement}\r\n                onClose={handleMarkerOptionsClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(localMarkerOpacityMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-opacity' >Opacity</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='local-marker-opacity'\r\n                                    value={localMarkerOpacity}\r\n                                    onChange={(event) => setLocalMarkerOpacity(event.target.value)}\r\n                                    aria-describedby='local-marker-opacity'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-opacity'\r\n                                />\r\n                            <FormHelperText id=\"local-marker-opacity-error\">{localMarkerOpacityMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                // error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-size' >Size</InputLabel>\r\n                                <OutlinedInput\r\n                                    error={Boolean(localMarkerSizeMessage)}\r\n                                    id='local-marker-size'\r\n                                    value={localMarkerSize}\r\n                                    onChange={(event) => setLocalMarkerSize(event.target.value)}\r\n                                    aria-describedby=\"local-marker-size\"\r\n                                    labelWidth={36}\r\n                                    name='local-marker-size'\r\n                                />\r\n                                <FormHelperText id=\"local-marker-size-error\">{localMarkerSizeMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                className={classes.colorForm}\r\n                            >\r\n                                <InputLabel htmlFor='z-min-input'>Color</InputLabel>\r\n                                <OutlinedInput\r\n                                    type='color'\r\n                                    id='marker-color'\r\n                                    value={localMarkerColor}\r\n                                    onChange={(event) => setLocalMarkerColor(event.target.value)}\r\n                                    aria-describedby='local-marker-color'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-color'\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={1}></Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleMarkerOptionsClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalMarkerOptionsConfirm}\r\n                                disabled={Boolean(localMarkerOpacityMessage || localMarkerSizeMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ChartControlPanel);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport handleDateString from '../../Utility/handleChartDatestring';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\nimport subTypes from '../../Enums/visualizationSubTypes';\r\n\r\nconst determineHeight = (infoObject) => {\r\n    const latRange = infoObject.latMax - infoObject.latMin;\r\n    const lonRange = infoObject.lonMax - infoObject.lonMin;\r\n    return (((latRange / lonRange) * 800) * .83) + 60;\r\n}\r\n// equal 608 wide, 670 high\r\n// height half 608 / 267\r\n\r\nconst handleContourMap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n    \r\n    // Handle axis labels when crossing 180th meridian\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    // let height = determineHeight(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        var hovertext = subset.map((value, i) => {\r\n            let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n            if(isNaN(value)) return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n                `<br>` +\r\n                `Lon: ${infoObject.lons[i] > 180 ? format('.2f')(infoObject.lons[i] - 360) : format('.2f')(infoObject.lons[i])}\\xb0`\r\n\r\n            return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n            `<br>` +\r\n            `Lon: ${infoObject.lons[i] > 180 ? format('.2f')(infoObject.lons[i] - 360) : format('.2f')(infoObject.lons[i])}\\xb0` + \r\n            '<br>' +\r\n            `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n        });\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n\r\n                    hoverinfo: 'text',\r\n                    hovertext,\r\n                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'contour',\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: infoObject.zMin > 1 && infoObject.zMin < 1000 ? '.2f' : '.2e'\r\n                    },\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    }\r\n                }\r\n            ]}\r\n\r\n            config={{...chartBase.config}}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: {\r\n                    text: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                },\r\n                xaxis: {title: 'Longitude', color: '#ffffff', ...xTicks},\r\n                yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                // annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHeatmap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    // let height = determineHeight(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    zsmooth: subset.length < 20000 ? 'fast' : 'false',\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    colorscale: palette,\r\n                    autocolorscale: false,\r\n\r\n                    // hoverinfo: 'text',\r\n                    // hovertext,\r\n\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n                    \r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            config={{...chartBase.config}}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: {\r\n                    text: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                    font: {\r\n                        size: 16\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: 'Longitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Latitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n                // annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SpaceTimeChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitByDepth, setSplitByDepth] = useState(true);\r\n    const [subTypeState, setSubTypeState] = useState(subType);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const subSets = data.generatePlotData(subTypeState, splitByDate, splitByDepth);\r\n    var plots;\r\n\r\n    switch(subTypeState){\r\n        case vizSubTypes.contourMap:\r\n            plots = handleContourMap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.heatmap:\r\n            plots = handleHeatmap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.histogram:\r\n            plots = handleHistogram(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        default:\r\n            plots = '';\r\n            break;        \r\n\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDepth = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDepth(!splitByDepth);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={subTypeState !== subTypes.histogram && handlePaletteChoice}\r\n                onToggleSplitByDepth={depths.size===1 ? null : onToggleSplitByDepth}\r\n                onToggleSplitByDate={dates.size===1 ? null : onToggleSplitByDate}\r\n                splitByDepth={splitByDepth}\r\n                splitByDate={splitByDate}\r\n                handleZValueConfirm={subTypeState !== subTypes.histogram && handleZValueConfirm}\r\n                zValues={subTypeState !== subTypes.histogram && zValues}\r\n                extent={subTypeState !== subTypes.histogram && extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plots}     \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SpaceTimeChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst TimeSeriesChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, dates, parameters, metadata } = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#ff1493', size: 12})\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    let hovertext = variableValues.map((value, i) => {\r\n        return `Time: ${dates[i].slice(0,10)}<br>${parameters.fields}: ${format('.2e')(value)} \\xb1 ${format('.2e')(stds[i])} [${metadata.Unit}]`;\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                        mode: 'lines+markers',\r\n                    x: dates,\r\n                    y: variableValues,\r\n                    error_y: {\r\n                        type: 'data',\r\n                        array: stds,\r\n                        opacity: 0.3,\r\n                        color: '#f2f2f2',\r\n                        visible: true\r\n                    },\r\n                    name: parameters.fields,\r\n                    type: 'scatter',\r\n                    line: {color: markerOptions.color},\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    },\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                  },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    plot_bgcolor: 'transparent',\r\n                    width: 800,\r\n                    height: 570,\r\n                    title: `${parameters.fields} [${metadata.Unit}]  ${parameters.dt1} to ${parameters.dt2}`,\r\n                  xaxis: {\r\n                      title: 'Time',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: parameters.fields,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(TimeSeriesChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst DepthProfileChart = (props) => {\r\n\r\n    const { classes, setLoadingMessage } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, depths, parameters, metadata } = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#ff1493', size: 12})\r\n\r\n    let hovertext = variableValues.map((value, i) => {\r\n        return `Depth: ${format('.2f')(depths[i])} [m] <br>${parameters.fields}: ${format('.2e')(value)} \\xb1 ${format('.2e')(stds[i])} [${metadata.Unit}]`;\r\n    })\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }    \r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                    {   \r\n                        mode: 'lines+markers',\r\n                        y: depths,\r\n                        x: variableValues,\r\n                        error_x: {\r\n                            type: 'data',\r\n                            array: stds,\r\n                            opacity: 0.3,\r\n                            color: '#f2f2f2',\r\n                            visible: true\r\n                        },\r\n                        name: parameters.fields,\r\n                        type: 'scatter',\r\n\r\n                        marker: {\r\n                            line: {color: markerOptions.color},\r\n                            opacity: markerOptions.opacity,\r\n                            size: markerOptions.size,\r\n                            color: markerOptions.color\r\n                        },\r\n\r\n                        hoverinfo: 'text',\r\n                        hovertext\r\n                    },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    plot_bgcolor: 'transparent',\r\n                    width: 800,\r\n                    height: 570,\r\n                    title: `${parameters.fields} [${metadata.Unit}]  ${parameters.depth1} to ${parameters.depth2} meters`,\r\n                  yaxis: {\r\n                      title: 'Depth[m]',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power',\r\n                      autorange:'reversed'\r\n                    },\r\n                  xaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(DepthProfileChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport visualizationSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\n\r\nconst handleSectionMap = (subsets, infoObject, splitByDate, splitBySpace, orientation, palette, zMin, zMax) => {\r\n\r\n    const dates = Array.from(infoObject.dates);\r\n    const depths = Array.from(infoObject.depths);\r\n    const lats = Array.from(infoObject.lats);\r\n    const lons = Array.from(infoObject.lons);\r\n\r\n    const distinctMeridiansOrParallelsForSplitting = \r\n        orientation === 'zonal' ?\r\n        lats : \r\n        lons;\r\n\r\n    const mergedOrSplitAxis = \r\n        orientation === 'zonal' ?\r\n        'Latitude' :\r\n        'Longitude';\r\n\r\n    const xAxis = orientation === 'zonal' ?\r\n        'Longitude' :\r\n        'Latitude';\r\n\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 && orientation === 'zonal' ? handleXTicks(infoObject) : {};\r\n\r\n\r\n    return subsets.map((subset, index) => {\r\n        let z = subset;\r\n        let x = [];\r\n        let y = [];\r\n\r\n        if(orientation === 'zonal'){\r\n            for(let i = 0; i < subset.length; i++){\r\n                x.push(lons[Math.floor(i / depths.length)])\r\n            }\r\n        } else {\r\n            for(let i = 0; i < subset.length; i++){\r\n                x.push(lats[Math.floor(i / depths.length)])\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < subset.length; i++){\r\n            y.push(depths[i % depths.length]);\r\n        }\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length < 2 ?\r\n            dates[0].slice(0,10) :\r\n            !splitByDate ? \r\n                'Merged Dates' : \r\n                splitBySpace ? \r\n                    dates[Math.floor(index/distinctMeridiansOrParallelsForSplitting.length)].slice(0, 10) : \r\n                    dates[index].slice(0,10);\r\n                \r\n        const spaceTitle = distinctMeridiansOrParallelsForSplitting.length <= 1 ? `${orientation === 'zonal' ? 'Lat' : 'Lon'} ${distinctMeridiansOrParallelsForSplitting[0]}\\xb0` : \r\n            !splitBySpace ? `Merged ${mergedOrSplitAxis}s` : \r\n            `${orientation === 'zonal' ? 'Lat' : 'Lon'} ${distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length]}\\xb0`;\r\n\r\n        let hovertext = z.map((value, i) => {\r\n            \r\n            if(orientation === 'zonal'){\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                if(isNaN(value)) return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                    `<br>` +\r\n                    `Lon: ${format('.2f')(x[i] > 180 ? x[i] - 360 : x[i])}\\xb0`\r\n    \r\n                return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                `<br>` +\r\n                `Lon: ${format('.2f')(x[i] > 180 ? x[i] - 360 : x[i])}\\xb0` + \r\n                '<br>' +\r\n                `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n            } else {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                if(isNaN(value)) return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                    `<br>` +\r\n                    `Lat: ${format('.2f')(x[i])}\\xb0`\r\n    \r\n                return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                `<br>` +\r\n                `Lat: ${format('.2f')(x[i])}\\xb0` + \r\n                '<br>' +\r\n                `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n            }\r\n        });\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    zsmooth: subset.length < 20000 ? 'best' : 'fast',\r\n                    x,\r\n                    y,\r\n                    z,\r\n                    name: infoObject.parameters.fields,\r\n                    type: infoObject.subType === visualizationSubTypes.contourSectionMap ? 'contour' : 'heatmap',\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: '.2e'\r\n                    },\r\n\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName} [${infoObject.metadata.Unit}] ${spaceTitle} ${date}`,\r\n                xaxis: {\r\n                    title: `${xAxis}[\\xB0]`, \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Depth[m]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    autorange: 'reversed'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />\r\n        )\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SectionMapChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { dates, extent, lats, lons } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitBySpace, setSplitBySpace] = useState(false);\r\n    const [orientation, setOrientation] = useState(data.orientation);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    var spaces = orientation === 'zonal' ? lats : lons;\r\n\r\n    const subsets = data.generatePlotData(orientation, splitByDate, splitBySpace);\r\n    var plots = handleSectionMap(subsets, data, splitByDate, splitBySpace, orientation, palette, zMin, zMax);\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitBySpace = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitBySpace(!splitBySpace);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const switchOrientation = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setOrientation(orientation === 'zonal' ? 'meridional' : 'zonal');\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n            <ChartControlPanel\r\n                orientation={orientation}\r\n                switchOrientation={switchOrientation}\r\n                onToggleSplitBySpace={spaces.size === 1 ? null : onToggleSplitBySpace}\r\n                splitBySpace={splitBySpace}\r\n                onToggleSplitByDate={dates.size === 1 ? null : onToggleSplitByDate}\r\n                splitByDate={splitByDate}\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                downloadCsv={downloadCsv}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SectionMapChart));","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst SparseScatter = (props) => {\r\n    const {\r\n        xValues,\r\n        yValues,\r\n        markerOptions,\r\n        infoObject,\r\n        xTitle,\r\n        yTitle,\r\n        type\r\n    } = props;\r\n\r\n    const { parameters, metadata, hasDepth, variableValues, times, lats, lons, depths } = infoObject;\r\n\r\n    const title = `${parameters.fields} [${metadata.Unit}]`;\r\n    \r\n    var hovertext;\r\n\r\n    switch(type){\r\n        case 'time':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                let time= times[i].slice(0,20);\r\n                time = time.replace('T', ' ');\r\n                return `Time: ${time}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'latitude':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Lat: ${lats[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'longitude':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Lon: ${lons[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'depth':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Depth: ${depths[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        default:\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                let time= times[i].slice(0,20);\r\n                time = time.replace('T', ' ');\r\n                return `Time: ${time}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n        }\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n    \r\n            data={[\r\n                {\r\n                    x: xValues,\r\n                    y: yValues,\r\n                    mode: 'markers',\r\n                    name: parameters.fields,\r\n                    type: variableValues.length > 1000 ? 'scattergl' : 'scatter',\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    },\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                },\r\n            ]}\r\n            config={{...chartBase.config}}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                plot_bgcolor: 'transparent',\r\n                width: 800,\r\n                height: 570,\r\n                title,\r\n                xaxis: {\r\n                    title: xTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: yTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    autorange: type === 'depth' ? 'reversed' : true\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)\r\n            }}            \r\n        />\r\n    )\r\n}\r\n\r\nexport default SparseScatter;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport SparseScatter from './SparseScatter';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst handleSparseMap = (infoObject, palette, zValues) => {\r\n\r\n    var hovertext = infoObject.variableValues.map((value, i) => {\r\n        let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n\r\n        return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n        `<br>` +\r\n        `Lon: ${format('.2f')(infoObject.lons[i])}\\xb0` + \r\n        '<br>' +\r\n        `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n    });\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zValues[0],\r\n                    zmax: zValues[1],\r\n                    lon: infoObject.lons,\r\n                    lat: infoObject.lats,\r\n                    z: infoObject.variableValues,\r\n                    zmin:'',\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    radius: 6,                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'densitymapbox',\r\n                    \r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    },\r\n                }\r\n            ]}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                mapbox: {\r\n                    style: \"white-bg\",\r\n                    layers: [\r\n                        {\r\n                            sourcetype: \"raster\",\r\n                            source: [\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"],\r\n                            below: \"traces\"\r\n                        }\r\n                    ],\r\n                    center: infoObject.center,\r\n                    zoom: infoObject.zoom\r\n                },\r\n\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n            }}\r\n            \r\n            config={{\r\n                ...chartBase.config,\r\n                mapboxAccessToken:\r\n                  \"pk.eyJ1IjoiZGVuaG9sdHoiLCJhIjoiY2p1ZW9obTNhMDVxZjQzcDRvMmdlcDN2aiJ9.HvLaX2bcradeE5T-lpTc8w\",\r\n                \r\n              }}\r\n        />)\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n\r\n    tabs: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n\r\n    tab: {\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        fontSize: '15px',\r\n        textTransform: 'none'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nfunction tabProps(index) {\r\n    return {\r\n      id: `sparse-tab-${index}`,\r\n      'aria-controls': `sparse-tab-${index}`,\r\n    };\r\n  }\r\n\r\nconst SparseTabPanel = (props) => {\r\n    const { children, selectedTab, index, controlPanelProps, } = props;\r\n    console.log('A tab panel re-rendered');\r\n    console.log(controlPanelProps)\r\n\r\n    return (\r\n        <div hidden={selectedTab !== index}>\r\n            <ChartControlPanel\r\n                // handlePaletteChoice={handlePaletteChoice}\r\n                // handleZValueConfirm={handleZValueConfirm}\r\n                // zValues={zValues}\r\n                // extent={data.extent}\r\n                // downloadCsv={downloadCsv}\r\n                {...controlPanelProps}\r\n            />\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst SparseMap = (props) => {\r\n\r\n    const { classes } = props;\r\n\r\n    const { data } = props.chart;\r\n\r\n    const [palette, setPalette] = useState('Heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [markerOptions, setMarkerOptions] = useState({opacity: .7, color:'#ff1493', size: 12});\r\n    const [tab, setTab] = useState(0);\r\n\r\n    const plot = handleSparseMap(data, palette, zValues)\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setTab(newValue)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    const forceResize = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 30);        \r\n    }\r\n\r\n    const controlPanelProps = {\r\n        map: {\r\n            palette,\r\n            handlePaletteChoice,\r\n            zValues,\r\n            handleZValueConfirm,\r\n            downloadCsv\r\n        },\r\n\r\n        scatter: {\r\n            downloadCsv,\r\n            markerOptions,\r\n            setMarkerOptions,\r\n            handleMarkerOptionsConfirm\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Tabs \r\n                value={tab} \r\n                onChange={handleTabChange} \r\n                aria-label=\"Sparse tabs\" \r\n                centered\r\n                indicatorColor='primary'\r\n                className={classes.tabs}\r\n            >\r\n                <Tab label=\"Map\" {...tabProps(0)} className={classes.tab} onClick={forceResize}/>\r\n                <Tab label=\"By Time\" {...tabProps(1)} className={classes.tab}/>\r\n                <Tab label=\"By Lat\" {...tabProps(2)} className={classes.tab}/>\r\n                <Tab label=\"By Lon\" {...tabProps(3)} className={classes.tab}/>\r\n                {data.hasDepth && <Tab label=\"By Depth\" {...tabProps(4)} className={classes.tab}/>}\r\n            </Tabs>\r\n            <SparseTabPanel selectedTab={tab} index={0} controlPanelProps={controlPanelProps.map}>\r\n                {plot}\r\n            </SparseTabPanel>\r\n            \r\n            <SparseTabPanel selectedTab={tab} index={1} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.times}\r\n                    yValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Time'\r\n                    yTitle={data.parameters.fields}\r\n                    type='time'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={2} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.lats}\r\n                    yValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Latitude'\r\n                    yTitle={data.parameters.fields}\r\n                    type='latitude'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={3} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.lons}\r\n                    yValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Longitude'\r\n                    yTitle={data.parameters.fields}\r\n                    type='longitude'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            {data.hasDepth &&\r\n                <SparseTabPanel selectedTab={tab} index={4} controlPanelProps={controlPanelProps.scatter}>\r\n                    <SparseScatter\r\n                        xValues={data.variableValues}\r\n                        yValues={data.depths}\r\n                        markerOptions={markerOptions}\r\n                        infoObject={data}\r\n                        xTitle={data.parameters.fields}\r\n                        yTitle='Depth'\r\n                        type='depth'\r\n                    />\r\n                </SparseTabPanel>            \r\n            }\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseMap));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport handleDateString from '../../Utility/handleChartDatestring';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SparseHistogram = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { metadata, parameters } = data;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: data.variableValues,\r\n                    name: data.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${parameters.fields} [${metadata.Unit}]`,\r\n                xaxis: {\r\n                    title: `${parameters.fields} [${metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseHistogram));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../Enums/colors';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nimport SpaceTimeChart from './ChartComponents/SpaceTimeChart';\r\nimport TimeSeriesChart from './ChartComponents/TimeSeriesChart';\r\nimport DepthProfileChart from './ChartComponents/DepthProfileChart';\r\nimport SectionMapChart from './ChartComponents/SectionMapChart';\r\nimport SparseMap from './ChartComponents/SparseMap';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\nimport SparseHistogram from './ChartComponents/SparseHistogram';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsContainer: {\r\n        margin: '300px 0 0 100px'\r\n    },\r\n\r\n    chartPaper: {\r\n      margin: '60px auto 0px auto',\r\n      width: '1000px',\r\n      paddingTop: '16px'\r\n  },\r\n\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n    }\r\n})\r\n\r\nconst SamplePlot = () => {\r\n  let x = [0,0,0,0,0,1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4];\r\n  let y = [0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,];\r\n  let z = [0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,1,2,3,4,5,6,7,8,9];\r\n  // z = z.map(() => Math.floor(Math.random() * 100));\r\n  return (\r\n\r\n      <Plot\r\n      style= {{\r\n          position: 'relative',\r\n          display:'inline-block',\r\n          marginTop: '50px'\r\n      }}\r\n      \r\n      data={[\r\n          {   \r\n              x,\r\n              y,\r\n              z,\r\n              connectgaps: false,\r\n              zsmooth: 'best',\r\n              \r\n              name: 'Test',\r\n              type: 'heatmap',\r\n              contours: {\r\n                  showlabels: true,\r\n                  labelfont: {\r\n                      family: 'Raleway',\r\n                      size: 12,\r\n                      color: 'white',\r\n                  },\r\n                  labelformat: '.2e'\r\n              },\r\n              colorbar: {\r\n                  title: {\r\n                      text: `test`\r\n                  },\r\n                  exponentformat: 'power'\r\n              }\r\n          }\r\n      ]}\r\n      \r\n      layout= {{\r\n          font: {color: '#ffffff'},\r\n          margin: {\r\n            t: 50\r\n          },\r\n          title: {\r\n              text: `A sample chart title`,\r\n              // yanchor: 'bottom',\r\n              // y: .9,\r\n              // yref: 'container',\r\n              font: {\r\n                size: 18\r\n              }\r\n          },\r\n          paper_bgcolor: colors.backgroundGray,\r\n          xaxis: {title: 'Longitude', color: '#ffffff'},\r\n          yaxis: {title: 'Latitude', color: '#ffffff'},\r\n          annotations: [\r\n              {\r\n                  text: `test`,\r\n                      font: {\r\n                          color: 'white',\r\n                          size: 10\r\n                      },\r\n                      xref: 'paper',\r\n                      yref: 'paper',\r\n                      yshift: -202,\r\n                      showarrow: false,\r\n                  }\r\n              ]\r\n              \r\n          }}   \r\n          />\r\n          )\r\n      }\r\n      \r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n        const { classes, charts } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n              {/* <SamplePlot/>  */}\r\n                {charts.map((chart, index) => {\r\n                    switch(chart.data.parameters.spName){\r\n\r\n                        case storedProcedures.spaceTime:\r\n                          if(chart.subType === vizSubTypes.sparse) {\r\n                            return (\r\n                              <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                                <SparseMap chart={chart}/>\r\n                              </Paper>\r\n                            )\r\n                          } else if(chart.data.metadata.Spatial_Resolution === spatialResolutions.irregular) {\r\n                            return (\r\n                              <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                                <SparseHistogram chart={chart}/>\r\n                              </Paper>\r\n                            )\r\n                          }\r\n                          else return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <SpaceTimeChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.timeSeries:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <TimeSeriesChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.depthProfile:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <DepthProfileChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.sectionMap:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <SectionMapChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n                        \r\n                        default:\r\n                          return '';\r\n                  }\r\n                })}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { cruiseListRequestSend, cruiseTrajectoryRequestSend, cruiseTrajectoryClear } from '../Redux/actions/visualization';\r\n\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    cruiseList: state.cruiseList,\r\n    getCruiseListState: state.getCruiseListState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseListRequestSend,\r\n    cruiseTrajectoryRequestSend,\r\n    cruiseTrajectoryClear\r\n}\r\n\r\nconst esriFonts = '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif';\r\nconst esriFontColor = 'white';\r\nconst esriBackgroundColor = '#424242';\r\nconst esriHoverFontColor = '#242424';\r\nconst esriHoverBackgroundColor = '#949393';\r\n\r\nconst styles = theme => ({\r\n    outerDiv: {\r\n        padding:'12px',\r\n        maxWidth: '260px',\r\n        backgroundColor: 'transparent',\r\n        color: esriFontColor,\r\n        borderRadius: '4px',\r\n        boxShadow: '2px',\r\n        position: 'relative',\r\n        backdropFilter: 'blur(2px)'\r\n    },\r\n\r\n    cruiseSelect: {\r\n        width: '260px',\r\n        borderRadius: '4px',\r\n    },\r\n\r\n    cruiseInfo: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        margin: '12px auto 0 auto',\r\n    },\r\n\r\n    cruiseInfoCell: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        borderStyle: 'none',\r\n    },\r\n\r\n    // blurEffectDiv: {\r\n    //     filter: 'blur(5px)',\r\n    //     position: 'absolute',\r\n    //     top: '0px',\r\n    //     left: '0px',\r\n    //     right: '0px',\r\n    //     bottom: '0px',\r\n    //     zIndex: 99999999\r\n    // }\r\n})\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n      <components.Option \r\n        {...props} \r\n        innerProps={{\r\n            ...props.innerProps, \r\n            // Prevent focus / scroll events when mousing over options\r\n            onMouseMove: (e) => e.preventDefault(), \r\n            onMouseOver: (e) => e.preventDefault()\r\n        }}>\r\n    </components.Option>\r\n    )\r\n}\r\n\r\nconst cruiseSort =  (a,b) => a.Name < b.Name ? -1 : 1;\r\n\r\nclass CruiseSelector extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Nickname');\r\n        search.addIndex('Name');\r\n        search.addIndex('Chief_Name');\r\n        search.addIndex('Keywords');\r\n        try{\r\n            if(props.cruiseList && props.cruiseList.length) search.addDocuments(props.cruiseList);\r\n        } catch(e) {\r\n            console.log(e);\r\n            console.log(props.cruiseList);\r\n        }\r\n\r\n        this.state = {\r\n            search,\r\n            searchField: '',\r\n            selectedCruise: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.cruiseList || !this.props.cruiseList.length) this.props.cruiseListRequestSend();\r\n    }\r\n\r\n    getSelectOptionsFromCruiseList = (list) => {\r\n        return list.map(item => ({\r\n            value: item.Name,\r\n            label: item.Name,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    handleCruiseSelect = (selection) => {\r\n        if(selection && selection.data){\r\n            const id = selection.data.ID;\r\n            this.props.cruiseTrajectoryRequestSend(id);\r\n        } else {this.props.cruiseTrajectoryClear()}\r\n\r\n        this.setState({...this.state, selectedCruise: selection});\r\n        this.props.updateParametersFromCruiseBoundary(selection);\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.cruiseList && prevProps.cruiseList.length) && (this.props.cruiseList && this.props.cruiseList.length)){\r\n            this.state.search.addDocuments(this.props.cruiseList);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    render(){\r\n\r\n        const { search, searchField, selectedCruise } = this.state;        \r\n        const { classes, cruiseList} = this.props;\r\n        \r\n        const options = searchField && cruiseList ? this.getSelectOptionsFromCruiseList(search.search(searchField).sort(cruiseSort)) \r\n            : cruiseList ? this.getSelectOptionsFromCruiseList(cruiseList) \r\n            : []\r\n\r\n        return (\r\n            <div id='cruise-selector' className={classes.outerDiv}>\r\n                <div className={classes.blurEffectDiv}></div>\r\n                <Select\r\n                    isLoading={this.props.getCruiseListState === states.inProgress}\r\n                    components={{\r\n                        IndicatorSeparator:'',\r\n                        Option,\r\n                        SingleValue,\r\n                    }}\r\n                    isClearable\r\n                    onInputChange={this.onAutoSuggestChange}\r\n                    // inputValue={this.state.searchField}\r\n                    filterOption={null}\r\n                    className={classes.cruiseSelect}\r\n                    escapeClearsValue\r\n                    label=\"Cruise\"\r\n                    options={options}\r\n                    onChange={this.handleCruiseSelect}\r\n                    value={this.state.selectedCruise}\r\n                    placeholder=\"Search Cruises\"\r\n                    styles={{\r\n                        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                        menuList: provided => ({...provided, backgroundColor: esriBackgroundColor}),\r\n\r\n                        input: provided => ({...provided,\r\n                            color: 'inherit',\r\n                            fontFamily: esriFonts\r\n                        }),\r\n\r\n                        control: provided => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            border: 'none',\r\n                            boxShadow: '1px 1px 1px 1px #242424',\r\n                            color: esriFontColor,\r\n                            borderRadius: 4,\r\n                            '&:hover': { \r\n                                border: `1px solid white`,\r\n                            },\r\n                            '&:focus-within': {\r\n                                borderColor: colors.orange\r\n                            }\r\n                        }),\r\n\r\n                        placeholder: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: colors.orange,\r\n                            fontSize: '14px'\r\n                        }),\r\n\r\n                        noOptionsMessage: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: esriFontColor,\r\n                            backgroundColor: esriBackgroundColor\r\n                        }),\r\n\r\n                        option: (provided, state) => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            color: state.isFocused ? colors.orange : 'white',\r\n                            '&:hover': { backgroundColor: 'rgba(122,67,0,.5)'}\r\n                        }),\r\n\r\n                        singleValue: (provided, state) => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: 'inherit',\r\n                            paddingRight: '20px',\r\n                        })\r\n                    }}\r\n                    theme={theme => ({\r\n                        ...theme,\r\n                        colors: {\r\n                            ...theme.colors,\r\n                            // Background color of hovered options\r\n                            primary25: '#e0e0e0',\r\n                            primary: '#212121',\r\n                        },\r\n                    })}\r\n                />\r\n                {selectedCruise &&\r\n                    <Table size='small' className={classes.cruiseInfo}>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Cruise:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Name}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Nickname:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Nickname}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            {\r\n                                selectedCruise.data.Start_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Start Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Start_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.End_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        End Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.End_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Chief_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Chief Scientist:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Chief_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Ship_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Ship:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Ship_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CruiseSelector));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\n\r\nimport CruiseSelector from './CruiseSelector';\r\nimport colors from '../Enums/colors';\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nconst drawButtonStyles = (theme) => ({\r\n    outerDiv: {\r\n        // padding:'12px 0 12px 0',\r\n        backgroundColor: 'transparent',\r\n        // width: '180px',\r\n        borderRadius: '4px',\r\n        marginRight: '20px'\r\n    },\r\n\r\n    drawButton: {\r\n        // border: '1px solid #333333',\r\n        border: `1px solid #333333`,\r\n        borderRadius: '4px',\r\n        color: colors.orange,\r\n        cursor: 'pointer',\r\n        padding: '6px',\r\n        width: '160px',\r\n        fontSize:'14px',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        // backgroundColor: 'rgba(255, 128, 0, .8)',\r\n        // backgroundColor: 'transparent',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif',\r\n        '&:hover': { \r\n            borderColor: 'white'\r\n        },\r\n    },\r\n\r\n    helpText: {\r\n        marginTop: 0,\r\n        color: 'white',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif'\r\n    },\r\n\r\n    cancelButton: {\r\n        display: 'none',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nconst DrawButtonRaw = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    return (\r\n        <div className={classes.outerDiv} id='draw-region-div'>\r\n            {showHelp && <p className={classes.helpText}>Click once to draw <br/>and again to finish</p>}\r\n            <button id='draw-button' className={classes.drawButton}>\r\n                Select Region\r\n            </button>\r\n            <button id='cancel-button' className={`${classes.drawButton} ${classes.cancelButton}`}>\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DrawButton = withStyles(drawButtonStyles)(DrawButtonRaw);\r\n\r\nconst polygonSymbol = {\r\n    type: \"polygon-3d\",\r\n    symbolLayers: [\r\n        {\r\n            type: \"fill\",\r\n            material: {\r\n            color: [255, 128, 0, .3]\r\n            },\r\n            outline: {\r\n                color: [255, 128, 0, 1],\r\n                size: '2px'\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.sketchModel = new props.esriModules.SketchViewModel({\r\n            layer: props.regionLayer,\r\n            view: props.view,\r\n            polygonSymbol,\r\n            defaultUpdateOptions: {\r\n                toggleToolOnClick: false,\r\n                tool: \"transform\"\r\n            }\r\n        })\r\n    }\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { view, esriModules, regionLayer, setShowHelp } = this.props;\r\n        var { sketchModel } = this;\r\n\r\n        // const updateOptions = {\r\n\r\n        // }\r\n\r\n        // var sketchModel = new esriModules.SketchViewModel({\r\n        //     layer: regionLayer,\r\n        //     view,\r\n        //     polygonSymbol,\r\n        //     defaultUpdateOptions: updateOptions\r\n        // })\r\n\r\n        var drawButton = document.getElementById('draw-button');\r\n        var cancelButton = document.getElementById('cancel-button');\r\n\r\n        sketchModel.on(\"create\", (event) => {\r\n            if(event.state === 'cancel'){\r\n                setShowHelp(false);\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n\r\n            if(event.state === \"complete\") {\r\n                setShowHelp(false);\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });        \r\n\r\n        sketchModel.on('update', (event) => {\r\n            if(event.toolEventInfo && event.toolEventInfo.type === 'move-stop'){\r\n                if(event.state === 'cancel') return;\r\n                // this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphics[0].geometry.extent));\r\n                this.props.updateDomainFromGraphicExtent(event.graphics[0].geometry.extent);\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });   \r\n        \r\n        drawButton.addEventListener(\"click\", (event) => {\r\n                regionLayer.removeAll();\r\n                setShowHelp(true);\r\n                sketchModel.create('rectangle', {\r\n                    mode:'click'            \r\n                });\r\n                drawButton.style.display = 'none';\r\n                cancelButton.style.display = 'inline-block';\r\n        });\r\n\r\n        cancelButton.addEventListener('click', (event) => {\r\n            sketchModel.cancel();\r\n            setShowHelp(false);\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })\r\n\r\n        view.ui.add('draw-region-div', 'bottom-right');\r\n        view.ui.add('cruise-selector', 'top-right');\r\n\r\n        view.ui.remove('zoom');\r\n        view.ui.remove('navigation-toggle');\r\n        view.ui.remove('compass');\r\n        view.ui.remove('attribution');\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst TrajectoryController = React.memo((props) => {\r\n    const { cruiseTrajectory, trajectoryLayer, esriModules } = props;\r\n    \r\n    if(cruiseTrajectory){\r\n        const { lons, lats } = cruiseTrajectory;\r\n\r\n        trajectoryLayer.removeAll();\r\n\r\n        var polyLines = [[]];\r\n        var lineIndex = 0;\r\n\r\n        let lonStart = lons[0];\r\n        let latStart = lats[0];\r\n        let maxDistance = 0;\r\n\r\n        // Create a new path array each time 180 lon is crossed\r\n        lons.forEach((lon, i) => {\r\n            let lat = lats[i];\r\n\r\n            let latDistance = Math.abs(lat - latStart);\r\n            let _lonDistance = Math.abs(lon - lonStart);\r\n            let lonDistance = _lonDistance > 180? 360 - _lonDistance : _lonDistance;\r\n\r\n            let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n            maxDistance = distance > maxDistance ? distance : maxDistance;\r\n\r\n            polyLines[lineIndex].push([lon, lat]);\r\n\r\n            if(i < lons.length - 1){\r\n                if((lon > 160 && lon < 180) && (lons[i + 1] > -180 && lons[i + 1] < -160)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n\r\n                if((lon > -180 && lon < -160) && (lon[i + 1] > 160 && lon[i + 1] < 180)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n            }\r\n        })\r\n\r\n        var cruiseTrajectorySymbol = {\r\n            type: 'line-3d',\r\n            symbolLayers: [{\r\n                type: 'line',\r\n                material: { color: [255, 128, 0, 1] },\r\n                cap:  'round',\r\n                join: 'round',\r\n                size: 2\r\n            }]\r\n        }\r\n\r\n        polyLines.forEach(line => {\r\n\r\n            let cruiseTrajectoryGeometry = {\r\n                type: 'polyline',\r\n                paths: line\r\n            }\r\n\r\n            let graphic = new esriModules.Graphic({\r\n                geometry: cruiseTrajectoryGeometry,\r\n                symbol: cruiseTrajectorySymbol\r\n            });\r\n\r\n            trajectoryLayer.add(graphic);\r\n        })\r\n\r\n        try {\r\n            const center = [lons[0], lats[0]];\r\n\r\n            var zoom = 7 - Math.floor(maxDistance / 10);            \r\n    \r\n            props.view.goTo({\r\n                target: center,\r\n                zoom\r\n            }, {\r\n                maxDuration: 2500,\r\n                speedFactor: .5\r\n            });    \r\n\r\n        } catch(e) {console.log(e)}\r\n\r\n    } else {\r\n        trajectoryLayer.removeAll();\r\n\r\n        props.view.goTo({\r\n            target: [-140, 30],\r\n            zoom: 3\r\n        }, {\r\n            maxDuration: 2500,\r\n            speedFactor: .5\r\n        }); \r\n    }\r\n    return '';\r\n})\r\n\r\nclass MapContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showHelp: false\r\n        }\r\n        this.regionLayer = new props.esriModules.GraphicsLayer();\r\n        this.trajectoryLayer = new props.esriModules.GraphicsLayer();\r\n    }\r\n\r\n    render = () => {\r\n        const { classes, esriModules, spParams, cruiseTrajectory, globeUIRef } = this.props;\r\n\r\n\r\n        const lat1 = parseFloat(spParams.lat1);\r\n        const lat2 = parseFloat(spParams.lat2);\r\n        const lon1 = parseFloat(spParams.lon1);\r\n        let _lon2 = parseFloat(spParams.lon2);\r\n        const lon2 = _lon2 < lon1 ? _lon2 + 360 : _lon2;\r\n\r\n        this.regionLayer.removeAll();\r\n\r\n        var polygon = {\r\n            type: 'polygon', \r\n            rings: [\r\n                [lon1, lat1],\r\n                [lon2, lat1],\r\n                [lon2, lat2],\r\n                [lon1, lat2],\r\n                [lon1, lat1]\r\n            ]\r\n        };\r\n\r\n        let regionGraphic = new esriModules.Graphic({\r\n            geometry: polygon,\r\n            symbol: polygonSymbol\r\n        })\r\n\r\n        this.regionLayer.add(regionGraphic);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ \r\n                        basemap: 'satellite',\r\n                        layers: [\r\n                            this.regionLayer,\r\n                            this.trajectoryLayer\r\n                        ]\r\n                    }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3\r\n                    }}\r\n                >\r\n                    <TrajectoryController \r\n                        cruiseTrajectory={cruiseTrajectory}\r\n                        trajectoryLayer={this.trajectoryLayer}\r\n                        esriModules={esriModules}\r\n                    />\r\n                    <UiComponents\r\n                        updateDomainFromGraphicExtent = {this.props.updateDomainFromGraphicExtent}\r\n                        esriModules={esriModules}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                        regionLayer={this.regionLayer}\r\n                        setShowHelp={(showHelp) => this.setState({...this.state, showHelp})}\r\n                        ref={this.props.globeUIRef}\r\n                    />\r\n                </Scene>\r\n                <DrawButton showHelp={this.state.showHelp}/>\r\n                <CruiseSelector updateParametersFromCruiseBoundary={this.props.updateParametersFromCruiseBoundary}/>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MapContainer);","const cleanSPParams = ({depth1, depth2, dt1, dt2, fields, lat1, lat2, lon1, lon2, spName, tableName}) => ({\r\n    depth1: parseFloat(depth1),\r\n    depth2: parseFloat(depth2),\r\n    dt1,\r\n    dt2,\r\n    fields,\r\n    lat1: parseFloat(lat1),\r\n    lat2: parseFloat(lat2),\r\n    lon1: parseFloat(lon1),\r\n    lon2: parseFloat(lon2),\r\n    spName,\r\n    tableName,\r\n})\r\n\r\nexport default cleanSPParams;","const localDateToString = (date) => {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate()\r\n\r\n    let nYear = year.toString();\r\n    let nMonth = month < 10 ? '0' + month.toString() : month.toString();\r\n    let nDay = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return nYear + '-' + nMonth + '-' + nDay;\r\n}\r\n\r\nexport default localDateToString;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport DataRetrievalForm from './DataRetrievalForm';\r\nimport VizControlPanel from './VizControlPanel';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend, cruiseListRequestSend, triggerShowCharts, completedShowCharts } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { loadModules } from 'esri-loader';\r\n\r\nimport depthUtils from '../Utility/depthCounter';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport Charts from './Charts';\r\nimport MapContainer from './MapContainer';\r\nimport colors from '../Enums/colors'\r\nimport cleanSPParams from '../Utility/cleanSPParams';\r\nimport localDateToString from '../Utility/localDateToString';\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport TopNavBar from './TopNavBar';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.sectionMap\r\n        },\r\n        [vizSubTypes.contourSectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.contourSectionMap\r\n        },\r\n        [vizSubTypes.timeSeries]: {\r\n            sp: storedProcedures.timeSeries,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: storedProcedures.depthProfile,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.heatmap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.heatmap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.contourMap\r\n        },\r\n        [vizSubTypes.sparse]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.sparse\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    loadingMessage: state.loadingMessage,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    cruiseList: state.cruiseList,\r\n    showChartsOnce: state.showChartsOnce\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n    cruiseListRequestSend,\r\n    completedShowCharts\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    background: {\r\n        backgroundColor: colors.backgroundGray\r\n    },\r\n\r\n    showCharts: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nclass Visualization extends Component {\r\n    globeUIRef = React.createRef();\r\n\r\n    state = {\r\n        filteredData: [],\r\n        opacity: 1,\r\n        showCharts: false,\r\n        showUI: false,\r\n        surfaceOnly: false,\r\n        irregularSpatialResolution: false,\r\n\r\n        spParams: {\r\n            tableName: '',\r\n            fields: null,\r\n            depth1: 0,\r\n            depth2: 0,\r\n            dt1: new Date(),\r\n            dt2: new Date(),\r\n            lat1: 0,\r\n            lat2: 0,\r\n            lon1: 0,\r\n            lon2: 0,\r\n            selectedVizType: ''\r\n        }\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.cruiseList) this.props.cruiseListRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'GraphicsLayer',\r\n            'SketchViewModel',\r\n            'Utils',\r\n            'Graphic',\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/layers/GraphicsLayer',\r\n            'esri/widgets/Sketch/SketchViewModel',\r\n            'esri/geometry/support/webMercatorUtils',\r\n            'esri/Graphic',\r\n        ], {version: 'next'});\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.showChartsOnce) {\r\n            this.props.completedShowCharts();\r\n            this.setState({...this.state, showCharts: true})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleLatLonChange = (event) => {\r\n        this.setState({\r\n            ...this.state, \r\n            spParams: {...this.state.spParams, [event.target.name]: event.target.value},\r\n        })\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt1:newDate}});\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt2:newDate}});\r\n        }\r\n    }\r\n\r\n    onVisualize = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, selectedVizType } = this.state.spParams;\r\n\r\n        let mapping = mapVizType(selectedVizType);\r\n        let parameters = cleanSPParams({\r\n            depth1,\r\n            depth2,\r\n            dt1: localDateToString(dt1),\r\n            dt2: localDateToString(dt2),\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        });\r\n\r\n        let payload = {\r\n            parameters,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        if(fields) {\r\n            let surfaceOnly = !fields.data.Depth_Min;\r\n            let irregularSpatialResolution = fields.data.Spatial_Resolution === 'Irregular';\r\n\r\n            let dt1 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt1 : utcDateStringToLocal(fields.data.Time_Min);\r\n            let dt2 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt2 : \r\n                irregularSpatialResolution ? utcDateStringToLocal(fields.data.Time_Max) :\r\n                utcDateStringToLocal(fields.data.Time_Min);\r\n\r\n            let lat1 = irregularSpatialResolution ? fields.data.Lat_Min : this.state.spParams.lat1;\r\n            let lat2 = irregularSpatialResolution ? fields.data.Lat_Max : this.state.spParams.lat2;\r\n            let lon1 = irregularSpatialResolution ? fields.data.Lon_Min : this.state.spParams.lon1;\r\n            let lon2 = irregularSpatialResolution ? fields.data.Lon_Max : this.state.spParams.lon2;\r\n            let depth1 = irregularSpatialResolution ? fields.data.Depth_Min : \r\n                depthUtils.piscesTable.has(fields.data.Table_Name) ? 0 :\r\n                depthUtils.darwinTable.has(fields.data.Table_Name) ? 0 : \r\n                this.state.spParams.depth1;\r\n\r\n            let depth2 = irregularSpatialResolution ? fields.data.Depth_Max : \r\n                depthUtils.piscesTable.has(fields.data.Table_Name) ? ((depthUtils.piscesDepths[0] + depthUtils.piscesDepths[1]) / 2).toFixed(2) :\r\n                depthUtils.darwinTable.has(fields.data.Table_Name) ? (depthUtils.darwinDepths[0] + depthUtils.darwinDepths[1]) : \r\n                this.state.spParams.depth2;\r\n\r\n            if(irregularSpatialResolution){\r\n                this.globeUIRef.current.props.view.goTo({\r\n                    target: [(parseFloat(lon1) + parseFloat(lon2)) / 2, (parseFloat(lat1) + parseFloat(lat2)) / 2],\r\n                    zoom: 3\r\n                }, {\r\n                    maxDuration: 2500,\r\n                    speedFactor: .5\r\n                }); \r\n            }\r\n\r\n            let tableName = fields.data.Table_Name;\r\n            \r\n            this.setState({...this.state,\r\n                surfaceOnly,\r\n                irregularSpatialResolution,\r\n                spParams: {...this.state.spParams, \r\n                    fields,\r\n                    dt1,\r\n                    dt2,\r\n                    lat1,\r\n                    lat2,\r\n                    lon1,\r\n                    lon2,\r\n                    depth1,\r\n                    depth2,\r\n                    tableName,\r\n                    selectedVizType: ''\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    updateParametersFromCruiseBoundary = (cruise) => {\r\n        if(cruise && this.state.spParams.fields){\r\n            this.props.snackbarOpen('Setting chart parameters to cruise boundaries.')\r\n            this.setState({...this.state,\r\n                spParams: {...this.state.spParams,\r\n                    lat1: cruise.data.Lat_Min,\r\n                    lat2: cruise.data.Lat_Max,\r\n                    lon1: cruise.data.Lon_Min,\r\n                    lon2: cruise.data.Lon_Max,\r\n                    dt1: utcDateStringToLocal(cruise.data.Start_Time),\r\n                    dt2: utcDateStringToLocal(cruise.data.End_Time)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleShowCharts = () => {\r\n        this.setState({...this.state, showCharts: true})\r\n    }\r\n\r\n    handleShowGlobe = () => {\r\n        this.setState({...this.state, showCharts: false})\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromGraphicExtent = (extent) => {\r\n        var _lon1 = extent.xmin > -180 ? extent.xmin : extent.xmin + 360;\r\n        var _lon2 = extent.xmax < 180 ? extent.xmax : extent.xmax - 360;\r\n\r\n        var newCoordinates = {\r\n            lat1: extent.ymin.toFixed(3),\r\n            lat2: extent.ymax.toFixed(3),\r\n            lon1: _lon1.toFixed(3),\r\n            lon2: _lon2.toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        return (\r\n            <div>\r\n                <TopNavBar/>\r\n                <DataRetrievalForm \r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                   {...this.state.spParams}\r\n                   surfaceOnly={this.state.surfaceOnly}\r\n                   irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                />\r\n                <VizControlPanel\r\n                    toggleChartView={this.toggleChartView}\r\n                    toggleShowUI={this.toggleShowUI}\r\n                    showCharts={this.state.showCharts}\r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                    {...this.state.spParams}\r\n                    surfaceOnly={this.state.surfaceOnly}\r\n                    irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                    showCharts={this.state.showCharts}\r\n                    handleShowCharts={this.handleShowCharts}\r\n                    handleShowGlobe={this.handleShowGlobe}\r\n                />\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer\r\n                            globeUIRef={this.globeUIRef}\r\n                            updateDomainFromGraphicExtent={this.updateDomainFromGraphicExtent}\r\n                            updateParametersFromCruiseBoundary={this.updateParametersFromCruiseBoundary}\r\n                            esriModules={this.state.esriModules}\r\n                            spParams={this.state.spParams}\r\n                            cruiseTrajectory={this.props.cruiseTrajectory}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                <div className={this.state.showCharts ? classes.showCharts : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password, or <Link onClick={this.handleClose} component={RouterLink} to={{pathname: '/register'}}>Register.</Link>\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Spinner from 'react-spinkit';\r\n\r\nconst styles = theme => ({\r\n    loader: {\r\n        backgroundColor: '#000000',\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        opacity: 0.5,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        zIndex: 9998\r\n    },\r\n\r\n    loaderContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItem: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 9999,\r\n        opacity: 1\r\n    },\r\n\r\n    spinnerText: {\r\n        zIndex: 10000,\r\n        color: '#FF8000',\r\n        marginTop: '25px',\r\n        opacity: 1\r\n    },\r\n\r\n    spinner: {\r\n        opacity: 1\r\n    }\r\n})\r\n\r\nconst LoadingOverlay = (props) => {\r\n    const { classes, loadingMessage } = props;\r\n\r\n    if(loadingMessage && loadingMessage.length){\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div className={classes.loaderContent}>\r\n                    <Spinner className={classes.spinner} color='#FF8000' name=\"ball-pulse-rise\" fadeIn='quarter'/>\r\n                    <Typography variant='h6' className={classes.spinnerText}>{loadingMessage}</Typography>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return '';\r\n\r\n}\r\n\r\nexport default withStyles(styles)(LoadingOverlay);","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper';\r\nimport LoadingOverlay from './LoadingOverlay';\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog,\r\n    loadingMessage: state.loadingMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n                <LoadingOverlay loadingMessage={this.props.loadingMessage}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nconst styles = theme => ({\r\n    landingWrapper: {\r\n        margin: '15vh auto'\r\n    },\r\n\r\n    welcomeMessage: {\r\n        color: '#ffffff',\r\n        maxWidth: '500px',\r\n        margin: `${theme.spacing(2)}px auto`\r\n    }\r\n})\r\n\r\nclass LandingPage extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.landingWrapper}>\r\n                <img \r\n                    src='/images/large_cmap_logo.png'\r\n                    height='290'\r\n                    width='600'\r\n                />\r\n                <Typography variant=\"body2\" component=\"p\" className={classes.welcomeMessage}>\r\n                    Welcome to Simons CMAP. This application is currently under heavy development, and some features may be incomplete.\r\n                </Typography>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingPage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport './App.scss';\n\nimport colors from './Enums/colors';\n\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\n\nimport Home from './Components/Home';\nimport Catalog from './Components/Catalog';\nimport Register from './Components/Register';\nimport Visualization from './Components/Visualization';\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\nimport LandingPage from './Components/LandingPage';\nimport TopNavBar from './Components/TopNavBar';\n\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    error: {\n      main: colors.errorYellow\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: colors.backgroundGray,\n      paper: colors.backgroundGray\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange,\n        borderRadius: '10%'\n      }\n    },\n\n    MuiListItemIcon: {\n      root: {\n        minWidth: '40px'\n      }\n    },\n\n    MuiFormHelperText: {\n      filled: {\n        paddingLeft: '1px',\n        paddingRight: '1px',\n        fontSize: '13px'\n      }\n    },\n\n    MuiListItem: {\n      gutters: {\n        paddingLeft: '6px',\n        paddingRight: '10px'\n      },\n\n      root: {\n        paddingTop: '4px',\n        paddingBottom: '4px'\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: 'transparent',\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },\n\n    MuiButtonGroup: {\n      groupedOutlined: {\n        '&:not(:first-child)': {\n          marginLeft: 0\n        }\n      }\n    },\n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiFilledInput: {\n      input: {\n        paddingLeft: '6px',\n      },\n\n      inputSelect: {\n        paddingBottom: '6px'\n      },\n\n      adornedEnd: {\n        paddingRight: '6px'\n      },\n\n      root: {\n        backgroundColor: 'transparent',\n        '&:hover': {\n          backgroundColor: 'transparent',\n        },\n        '&:disabled': {\n          backgroundColor: 'transparent',\n        }\n      }\n    }\n  }\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  loadingMessage: state.loadingMessage\n})\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.vizRef = React.createRef();\n  }\n\nrender() {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n        <BrowserRouter>\n          <GlobalUIComponentWrapper/>\n          <TopNavBar/>\n          <Switch>          \n            <Route exact path='/apikeymanagement' component={ Home } />\n            <Route exact path='/' component={ LandingPage } />\n            <Route exact path='/catalog' component={ Catalog } />\n            <Route exact path='/register' component={ Register } />\n            <Route exact path='/visualization' component={Visualization} />\n          </Switch>\n        </BrowserRouter>\n        </MuiThemeProvider>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n}\n\nexport default connect(mapStateToProps, null)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\n\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}