{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","Enums/asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","Enums/spatialResolutions.js","Utility/mapSpatialResolutionToNumber.js","Utility/flattenArray.js","Utility/splitData.js","Utility/mergeArraysAndComputeMeans.js","Utility/mergeArrays.js","Enums/visualizationSubTypes.js","Enums/temporalResolutions.js","Classes/SpaceTimeData.js","Enums/storedProcedures.js","Classes/TimeSeriesData.js","Classes/DepthProfileData.js","Classes/SectionMapData.js","Classes/SparseData.js","api.js","Redux/sagas.js","Redux/store.js","Enums/colors.js","Components/UI/LoadingSpinner.js","Components/User/ApiKeyManagement.js","Components/User/LoginRequiredPrompt.js","Components/Home.js","Components/Catalog/GridDetail.js","Components/Catalog/DatasetDescriptionDialog.js","Components/Catalog/VariableDescriptionDialog.js","Components/UI/ConnectedTooltip.js","Components/Catalog/AGGridWrapper.js","Components/Catalog/Catalog.js","Components/User/RegistrationCard.js","Components/User/UserNavbarDropdown.js","Components/UI/TopNavBar.js","Components/User/RegistrationStepper.js","Components/User/GoogleSignInButton.js","Components/User/Register.js","Enums/validation.js","Components/Visualization/TableStatsDialog.js","Utility/mapTemporalResolutionToNumber.js","Utility/utcDateStringToLocal.js","Utility/depthCounter.js","Utility/countWebGLContexts.js","Components/Visualization/VizControlPanel.js","Components/Visualization/DownloadConfirmationDialog.js","Enums/months.js","Utility/handleChartDatestring.js","Utility/chartBase.js","Components/Visualization/ChartControlPanel.js","Components/Visualization/SparseHistogram.js","Utility/handleXTicks.js","Utility/getChartDimensions.js","Components/Visualization/SpaceTimeChart.js","Components/Visualization/TimeSeriesChart.js","Components/Visualization/DepthProfileChart.js","Components/Visualization/SectionMapChart.js","Components/Visualization/SparseScatter.js","Components/Visualization/SparseMap.js","Components/Visualization/Charts.js","Components/Visualization/CruiseSelector.js","Components/Visualization/MapContainer.js","Utility/cleanSPParams.js","Utility/localDateToString.js","Components/Visualization/Visualization.js","Components/User/LoginDialog.js","Components/UI/SnackbarWrapper.js","Components/UI/LoadingOverlay.js","Components/UI/GlobalUIComponentWrapper.js","Components/LandingPage.js","Components/User/Login.js","Components/User/Profile.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","DATASET_RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","GOOGLE_LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","UPDATE_USER_INFO_REQUEST_SEND","REFRESH_LOGIN","INITIALIZE_GOOGLE_AUTH","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","TABLE_STATS_REQUEST_SEND","CRUISE_TRAJECTORY_REQUEST_SEND","CRUISE_LIST_REQUEST_SEND","CSV_DOWNLOAD_REQUEST_SEND","DOWNLOAD_TEXT_AS_CSV","initialState","catalog","datasetRequestState","datasets","snackbarIsOpen","snackbarMessage","loadingMessage","showHelp","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","getCruiseTrajectoryRequestState","cruiseTrajectory","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","cruiseList","getCruiseListRequestState","showChartsOnce","chartID","reducedReducer","reduceReducers","state","action","type","payload","datasetsRequestState","keys","message","layers","newLayer","mapInfo","chartInfo","id","slice","chartIndex","trajectory","datasetLongName","tableStats","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","googleLoginRequestSend","userIDToken","userActionTypes","googleLoginRequestProcessing","logOut","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","refreshLogin","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","datasetRetrievalRequestSend","datasetRetrievalRequestProcessing","datasetRetrievalRequestSuccess","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","setLoadingMessage","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addChart","tableStatsRequestProcessing","tableStatsRequestSuccess","cruiseTrajectoryRequestSend","visualizationActionTypes","cruiseTrajectoryRequestSuccess","cruiseTrajectoryRequestProcessing","cruiseListRequestSend","cruiseListRequestSuccess","cruiseListRequestFailure","cruiseListRequestProcessing","triggerShowCharts","csvDownloadRequestSend","query","fileName","csvDownloadRequestProcessing","downloadTextAsCsv","text","datasetName","apiUrl","spatialResolutions","irregular","halfDegree","quarterDegree","twentyFifthDegree","fourKm","twelfthDegree","seventyKm","oneDegree","nineKm","twentyFiveKm","mapSpatialResolutionToNumber","resolution","flattenArray","arr","flattenedArray","i","length","j","push","splitData","changeInterval","numDistinct","Math","floor","mergeArraysAndComputeMeans","mergeTargetDistance","nextMergeStartDistance","numArraysPerMerge","mergedArrays","travelDistance","subArray","sum","count","k","isNaN","mergeArrays","subTypes","sectionMap","contourSectionMap","timeSeries","histogram","depthProfile","heatmap","contourMap","sparse","temporalResolutions","threeMinutes","sixHourly","daily","weekly","monthly","annual","monthlyClimatology","threeDay","eightDayRunning","eightDays","SpaceTimeData","generateCsv","csvArray","dates","Array","from","depths","hasDepth","parameters","fields","variableValues","lats","lons","join","this","metadata","hasHours","isMonthly","Set","zMin","zMax","extent","indexAdjust","lonMin","lonMax","latMin","latMax","distinctLatCount","distinctLonCount","row","lat","parseFloat","_lon","lon","lon1","hasHour","Table_Name","Temporal_Resolution","time","value","add","Date","setUTCHours","toISOString","size","lonCount","latCount","quantile1","quantile","quantile2","undefined","toPrecision","spatialResolution","Spatial_Resolution","round","subType","splitByDate","splitByDepth","variableValueSubsets","depthInterval","dateInterval","map","subset","vizSubTypes","storedProcedures","spaceTime","TimeSeriesData","stds","depth","depthIndexAdjust","csvString","DepthProfileData","SectionMapData","lonInterval","latInterval","orientation","lonArray","max","min","splitBySpace","spaceCount","SparseData","variableIndex","Depth_Min","times","latDistance","abs","lonDistance","distance","sqrt","_zoom","zoom","lonCenter","latCenter","center","fetchOptions","credentials","postOptions","method","headers","storedProcedureParametersToUri","Object","reduce","queryString","key","api","login","fetch","body","stringify","logout","register","validate","googleLoginRequest","a","async","response","retrieve","decoder","encoding","TextDecoder","csvParser","CSVParser","columns","on","record","read","ok","reader","getReader","readerIsDone","chunk","done","write","decode","Dataset_Long_Name","trim","keyRetrieval","json","keyCreation","description","updateUserInfo","userInfo","visualization","storedProcedureRequest","spName","vizData","console","log","status","e","getTableStats","tableName","cruiseTrajectoryRequest","csvDownload","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","datasetRetrieval","queryRequest","cruiseListRequest","tableStatsRequest","csvDownloadRequest","updateUserInfoRequest","initializeGoogleAuth","watchUserLogin","watchUserRegistration","watchUserValidation","watchUserLogout","watchGoogleLoginRequest","watchCatalogRetrieval","watchDatasetRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","watchCruiseTrajectoryRequest","watchCruiseListRequest","watchTableStatsRequest","watchCsvDownloadRequest","watchDownloadTextAsCsv","watchRefreshLogin","watchUpdateUserInfoRequest","watchInitializeGoogleAuth","rootSaga","put","userActions","call","interfaceActions","pathname","href","gapi","auth2","getAuthInstance","authInstance","signOut","result","catalogActions","visualizationActions","delay","finalize","csv","blob","Blob","url","URL","createObjectURL","document","createElement","setAttribute","appendChild","click","removeChild","init","client_id","currentUser","getAuthResponse","authResponse","id_token","takeLatest","all","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","colors","orange","backgroundGray","aqua","errorYellow","withStyles","theme","centered","position","top","props","classes","CircularProgress","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","componentDidMount","handleClick","handleChange","event","setState","target","wrapper","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","warningCaption","Grid","container","alignItems","justify","spacing","item","TextField","margin","name","onChange","placeholder","descriptionField","Button","disabled","color","onClick","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","fontSize","loginRequiredMessage","useEffect","Link","component","RouterLink","to","Home","Fragment","tableMapping1","tableMapping2","title","padding","height","userSelect","infoCard","gridClass","maxHeight","gridItem","display","justifyContent","verticalAlign","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","maxWidth","variableDetailTable","marginLeft","marginRight","tableLayout","variableDetailTableRow","variableDetailTableCell","borderBottomColor","textOverflow","paddingRight","gridDetailTypography","boldText","fontWeight","rightGridItem","boxSizing","datasetDescriptionButton","backgroundColor","buttonTextWrapper","xs","src","context","Dataset_Name","Icon_URL","alt","Time_Min","Time_Max","Depth_Max","direction","alignContent","Acknowledgement","handleDescribeDataset","handleDescribeVariable","ID","DatasetDescriptionDialog","clearDescription","Dialog","open","onClose","DialogTitle","DialogContent","source","markdown","palette","primary","main","textDecoration","describedVariable","variable","find","Long_Name","Comment","Data_Source","Distributor","tooltip","secondary","opacity","Tooltip","placement","popper","children","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","hide","enableRowGroup","defaultColDef","resizable","cellStyle","textAlign","autoGroupColumnDef","AGGridWrapper","filterText","describedDataset","dataset","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","onGridSizeChanged","handleColumnRowGroupChanged","forEach","column","setColumnVisible","colId","handleDownloadCatalog","header","render","gridPaper","gridSearch","autoFocus","label","InputLabelProps","shrink","downloadButton","gridWrapper","rowData","suppressDragLeaveHidesColumns","enableCellTextSelection","suppressContextMenu","getRowStyle","node","detail","background","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","textTransform","Catalog","determineContent","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","withRouter","navLink","cursor","floatRight","float","icon","dropdown","zIndex","React","useState","anchorEl","setAnchorEl","handleClose","ExpandLess","ExpandMore","currentTarget","email","Popper","role","transition","TransitionProps","Grow","style","transformOrigin","ClickAwayListener","onClickAway","MenuItem","toggleShowHelp","TopNavBar","handleLogOut","clearState","username","password","handleNavigate","route","history","handleOutsideNavigate","navWrapper","rightNavLink","appBar","boxShadow","toolBar","paddingLeft","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","getCardInfo","firstName","optional","lastName","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","button","buttonProgress","bottomError","left","borderRadius","textSpan","fontFamily","viewBox","version","xmlns","xmlnsXlink","x","y","filterUnits","dx","dy","in","stdDeviation","values","rx","stroke","strokeWidth","fill","fillRule","transform","xlinkHref","d","Register","showStepper","attachClickHandler","handleShowStepper","paper","googleWrapper","emailSignUpWrapper","emailSignUpButton","validation","depthOneIsLower","depthOneOutOfBounds","depthTwoOutOfBounds","negative","date","dateOneIsLater","dateOneOutOfBounds","dateTwoOutOfBounds","latOneIsHigher","latOneOutOfBounds","latTwoOutOfBounds","lonOneIsHigher","lonOneOutOfBounds","lonTwoOutOfBounds","dataIsIrregular","dateRangeRequired","depthRangeRequired","surfaceOnlyDataset","irregularOnly","dataSizeTooLarge","webGLContextLimit","generic","invalid","dataSizeWarning","dataSizePrevent","variableMissing","vizTypeMissing","DialogContentText","Sensor","Lat_Min","Lat_Max","Lon_Min","Lon_Max","Variable_Min","Unit","Variable_Max","Variable_Mean","Variable_Std","mapTemporalResolutionToNumber","utcDateStringToLocal","utcString","utcYear","getUTCFullYear","utcMonth","getUTCMonth","utcDate","getUTCDate","newDate","setFullYear","darwinDepths","piscesDepths","piscesTable","darwinTable","exports","depth1","depth2","has","chart","visualizationSubTypes","overrideDisabledStyle","clearCharts","getDatePlaceholder","valueOf","month","getMonth","day","getDate","getFullYear","groupHeaderHeight","reactWindowListRef","createRef","selectRef","MenuList","componentDidUpdate","prevProps","prevState","current","resetAfterIndex","scrollOffset","foundFocus","child","groupHasFocus","isFocused","scrollTo","options","getValue","initialOffset","indexOf","groupHeights","some","grandChild","totalHeight","acc","cur","estimatedItemSize","itemCount","itemSize","initialScrollOffset","ref","Group","hasFocus","element","sensor","CustomHeading","headingProps","headingLabel","firstChild","selectProps","hidden","customHeading","typography","iconClass","ListItem","select","focusedOption","Icon","IconButton","handleSetDownloadTarget","stopPropagation","CloudDownload","Doc_URL","Info","DropdownIndicator","ArrowRight","Option","innerProps","onMouseMove","preventDefault","onMouseOver","GroupHeading","formatOptionLabel","option","meta","VizControlPanel","search","addDocuments","handleOpenControlPanel","showControlPanel","handleCloseControlPanel","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","getSelectOptionsFromCatalogItems","items","Variable","sort","opt1","opt2","estimateCsvSize","member","parseInt","Variable_Count","handleDownloadCsvClick","handleResetSPParams","resetSPParams","searchField","onAutoSuggestChange","searchString","estimateDataSize","dt1","dt2","lat1","lat2","lon2","selectedVizType","date1","dayDiff","res","dateCount","depthUtils","checkStartDepth","surfaceOnly","replace","toFixed","checkEndDepth","checkStartDateValid","checkEndDateValid","checkStartDate","checkEndDate","checkStartLat","checkEndLat","checkStartLon","checkEndLon","checkHeatmap","irregularSpatialResolution","checkContour","checkSection","checkHistogram","checkTimeSeries","checkDepthProfile","checkSparseMap","checkGeneralWarn","dataSize","checkGeneralPrevent","webGLCount","countWebGLContexts","handleShowChartsAndResize","setTimeout","dispatchEvent","Event","handleShowCharts","JsSearch","indexStrategy","searchIndex","addIndex","maxDateMessage","maxDate","showCharts","handleShowGlobe","handleLatLonChange","catalogMinDate","setHours","catalogMaxDate","zeroedDT1","zeroedDT2","minDate","minDateMessage","startDepthMessage","endDepthMessage","startLatMessage","endLatMessage","startLonMessage","endLonMessage","heatmapMessage","contourMessage","sectionMapMessage","histogramMessage","timeSeriesMessage","depthProfileMessage","sparseMapMessage","generalWarnMessage","checkDisableVisualizeList","errorCount","errorSizeAdjust","disableVisualizeMessage","checkDisableVisualize","visualizeButtonTooltip","closePanelChevron","aria-label","ChevronLeft","openPanelChevron","ChevronRight","Drawer","drawer","drawerPaper","anchor","ButtonGroup","groupedButtons","depressed","Language","InsertChartOutlined","clearChartsButton","Delete","resetSPParamsButton","Cached","isLoading","components","IndicatorSeparator","escapeClearsValue","onInputChange","filterOption","variableSelect","isClearable","inputValue","updateFields","styles","menu","provided","backdropFilter","valueContainer","input","control","border","borderBottom","borderColor","noOptionsMessage","singleValue","tableStatsButton","LibraryBooks","datePicker","format","autoOk","handleStartDateChange","inputVariant","KeyboardButtonProps","datePickerInputAdornment","handleEndDateChange","formGridItem","FormHelperTextProps","InputProps","padLeft","FormControl","vizTypeSelectFormControl","InputLabel","htmlFor","inputProps","vizButtonTooltip","visualizeButton","onVisualize","fullWidth","bottom","drawerPaperError1","drawerPaperError2","drawerPaperError3","drawerPaperError4","drawerPaperError5","navDrawerWidth","controlPanelForm","borderLeft","fontVariant","borderRight","singleValueReplacement","tableStatsRequestSend","DownloadConfirmationDialog","downloadTarget","handleFullDatasetDownload","handleSubsetDownload","sampleMember","timeMin","timeMax","subsetLat1","subsetLat2","subsetLon1","subsetLon2","subsetTime1","subsetTime2","depthMin","depthMax","subsetDepth1","subsetDepth2","dateRatio","totalDataPoints","Variables","split","fullDataAvailable","totalDays","subsetDays","totalLatSize","subsetLatSize","latRatio","totalLonSize","subsetLonSize","lonRatio","depthRatio","totalDepthSize","subsetDepthSize","subsetDataPoints","subsetAvailable","timeString1","timeString2","timeStringMin","timeStringMax","tableFooter","DialogActions","dateString","months","layout","font","paper_bgcolor","autosize","config","displaylogo","annotations","distributor","yshift","documentElement","clientWidth","xref","yref","showarrow","colorscaleOptions","chartWrapper","popover","paddingBottom","iconButton","colorForm","lastIcon","borderTopRightRadius","borderBottomRightRadius","buttonGroup","colorscaleMenu","onToggleSplitByDate","onToggleSplitBySpace","downloadCsv","handleZValueConfirm","zValues","markerOptions","handleMarkerOptionsConfirm","paletteAnchorElement","setPaletteAnchorElement","zScalePopoverAnchorElement","setZScalePopoverAnchorElement","localZMin","setLocalZMin","localZMax","setLocalZMax","zScalePopoverOpen","zScalePopoverID","handleZScalePopoverClose","zScaleValidations","zMinMessage","zMaxMessage","markerOptionsAnchorElement","setMarkerOptionsAnchorElement","localMarkerOpacity","setLocalMarkerOpacity","localMarkerColor","setLocalMarkerColor","localMarkerSize","setLocalMarkerSize","previousOpacity","useRef","usePreviousOpacity","previousColor","usePreviousColor","previousSize","usePreviousSize","markerPopoverOpen","markerPopoverID","handleMarkerOptionsClose","markerOptionsValidations","checkLocalMarkerOpacity","checkLocalMarkerSize","localMarkerOpacityMessage","localMarkerSizeMessage","DateRange","LineWeight","SwapVert","handlePaletteChoice","Palette","Gamepad","Menu","keepMounted","Popover","anchorOrigin","vertical","horizontal","OutlinedInput","aria-describedby","labelWidth","FormHelperText","buttonBlock","iconButtonWrapper","handleChartDateString","requestAnimationFrame","useResizeHandler","marker","chartBase","plot_bgcolor","xaxis","exponentformat","yaxis","infoObject","sectionSize","lonRange","tickvals","ceil","ticktext","tickmode","sizeRatio","plots","setSplitByDate","setSplitByDepth","setPalette","setZValues","subSets","generatePlotData","subsets","xTicks","handleXTicks","getChartDimensions","latTitle","lonTitle","hovertext","formatter","zauto","zmin","zmax","z","connectgaps","autocolorscale","colorscale","hoverinfo","contours","coloring","showlabels","labelfont","family","labelformat","colorbar","handleContourMap","zsmooth","handleHeatmap","onToggleSplitByDepth","chartCount","availableWGLContexts","setMarkerOptions","mode","error_y","array","visible","line","isMonthy","date2","error_x","autorange","setSplitBySpace","setOrientation","spaces","distinctMeridiansOrParallelsForSplitting","xAxis","handleSectionMap","switchOrientation","SparseScatter","xValues","yValues","xTitle","yTitle","tabProps","SparseTabPanel","selectedTab","controlPanelProps","tabs","tab","setTab","plot","radius","mapbox","sourcetype","below","mapboxAccessToken","handleSparseMap","scatter","Tabs","indicatorColor","Tab","deleteChart","CloseChartIcon","closeChartIcon","handleDeleteChart","disableFocusRipple","disableRipple","Close","Charts","chartPaper","cruiseTrajectoryClear","esriFonts","SingleValue","cruiseSort","b","Name","CruiseSelector","getSelectOptionsFromCruiseList","list","handleCruiseSelect","selection","selectedCruise","updateParametersFromCruiseBoundary","outerDiv","blurEffectDiv","getCruiseListState","cruiseSelect","menuList","primary25","cruiseInfo","cruiseInfoCell","Nickname","Start_Time","End_Time","Chief_Name","Ship_Name","borderStyle","DrawButton","drawButton","helpText","cancelButton","polygonSymbol","symbolLayers","material","outline","polylineSymbol","r","g","UiComponents","shouldComponentUpdate","nextProps","nextState","sketchModel","esriModules","SketchViewModel","layer","regionLayer","view","defaultUpdateOptions","toggleToolOnClick","tool","setShowHelp","getElementById","throttledUpdate","throttle","updateDomainFromGraphicExtent","Utils","webMercatorToGeographic","graphic","geometry","toolEventInfo","complete","graphics","addEventListener","removeAll","create","cancel","ui","remove","TrajectoryController","memo","trajectoryLayer","midIndex","polyLines","lineIndex","lonStart","latStart","maxDistance","_lonDistance","cruiseTrajectorySymbol","cap","cruiseTrajectoryGeometry","paths","Graphic","symbol","goTo","maxDuration","speedFactor","MapContainer","spParams","globeUIRef","_lon2","polygon","rings","regionGraphic","mapProperties","basemap","viewProperties","highlightOptions","haloOpacity","haloColor","fillOpacity","measurementPositions","GraphicsLayer","cleanSPParams","localDateToString","year","toString","mapVizType","vizType","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","completedShowCharts","baseSPParams","Visualization","filteredData","showUI","mapping","cruise","toggleShowUI","_lon1","xmin","xmax","newCoordinates","ymin","ymax","esriModuleNames","loadModules","loadedModules","accumulator","currentValue","currentIndex","toggleChartView","displayNone","userLoginRequestSend","LoginDialog","handleLogin","onGoogleSignin","Zi","onDialogEnter","aria-labelledby","onEnter","onSubmit","googleIconWrapper","snackbarClose","centerText","Snackbar","autoHideDuration","loader","right","loaderContent","flexDirection","alignItem","spinnerText","spinner","fadeIn","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","inlineBlock","LandingPage","landingWrapper","welcomeMessage","updateUserInfoRequestSend","userProperties","userToState","editable","Profile","handleValidation","infoHasChanged","handleEdit","handleCancel","handleConfirm","formIsValid","property","editButton","Edit","readOnly","buttonGrid","createMuiTheme","useNextVariants","contrastText","default","overrides","MuiIconButton","MuiListItemIcon","MuiFormHelperText","filled","MuiListItem","gutters","MuiToolbar","MuiOutlinedInput","MuiButtonGroup","groupedOutlined","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","MuiFilledInput","inputSelect","adornedEnd","App","load","utils","DateFnsUtils","MuiThemeProvider","exact","path","Login","LicenseManager","setLicenseKey","rootElement","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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ADlC,cAEFD,GAAoBE,UAAa,GAF/B,cAGFF,GAAoBG,MAAS,GAH3B,cAIFH,GAAoBI,OAAU,GAJ5B,cAKFJ,GAAoBK,QAAW,IAL7B,cAMFL,GAAoBM,OAAU,KAN5B,cAOFN,GAAoB7C,UAAa,MAP/B,cAQF6C,GAAoBO,mBAAqB,IARvC,cASFP,GAAoBQ,SAAW,GAT7B,cAUFR,GAAoBS,gBAAkB,GAVpC,cAWFT,GAAoBU,UAAY,GAX9B,GAcI5C,ICNAmpB,GAXc,SAACC,GAC1B,IAAIpC,EAAO,IAAI1hB,KAAK8jB,GAChBC,EAAUrC,EAAKsC,iBACfC,EAAWvC,EAAKwC,cAChBC,EAAUzC,EAAK0C,aAEfC,EAAU,IAAIrkB,KAElB,OADAqkB,EAAQC,YAAYP,EAASE,EAAUE,GAChCE,GCPLE,GAAe,CACjB,EACA,GACA,GACA,GACA,GACA,GACA,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,OACA,OACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAGEC,GAAe,CACjB,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,eAkBEC,GAAc,IAAIhmB,IAfF,CAClB,gBACA,2BAcEimB,GAAc,IAAIjmB,IAXH,CACjB,4BACA,sBACA,qBACA,iCACA,wBACA,0BACA,mCA+BWkmB,GAzBC,CACZ5oB,MAAO,SAAC8Z,EAAO+O,EAAQC,GAAY,IACX/W,EAAU+H,EAAMzd,KAA5BuH,WACJ5D,EAAQ,EAEZ,GAAG0oB,GAAYK,IAAIhX,GACf,IAAI,I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","file":"static/js/main.49e6df5b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';\r\n\r\nexport const DATASET_RETRIEVAL_REQUEST_SEND = 'DATASET_CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const DATASET_RETRIEVAL_REQUEST_SUCCESS = 'DATASET_CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const DATASET_RETRIEVAL_REQUEST_FAILURE = 'DATASET_CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const DATASET_RETRIEVAL_REQUEST_PROCESSING = 'DATASET_CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const GOOGLE_LOGIN_REQUEST_SEND = 'GOOGLE_LOGIN_REQUEST_SEND';\r\nexport const GOOGLE_LOGIN_REQUEST_SEND_PROCESSING = 'GOOGLE_LOGIN_REQUEST_SEND_PROCESSING';\r\nexport const GOOGLE_LOGIN_REQUEST_SEND_SUCCESS = 'GOOGLE_LOGIN_REQUEST_SEND_SUCCESS';\r\nexport const GOOGLE_LOGIN_REQUEST_SEND_FAILURE = 'GOOGLE_LOGIN_REQUEST_SEND_FAILURE';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';\r\n\r\nexport const UPDATE_USER_INFO_REQUEST_SEND = 'UPDATE_USER_INFO_REQUEST_SEND';\r\nexport const UPDATE_USER_INFO_REQUEST_SUCCESS = 'UPDATE_USER_INFO_REQUEST_SUCCESS';\r\nexport const UPDATE_USER_INFO_REQUEST_FAILURE = 'UPDATE_USER_INFO_REQUEST_FAILURE';\r\n\r\nexport const REFRESH_LOGIN = 'REFRESH_LOGIN';\r\n\r\nexport const INITIALIZE_GOOGLE_AUTH = 'INITIALIZE_GOOGLE_AUTH';\r\nexport const STORE_GOOGLE_AUTH = 'STORE_GOOGLE_AUTH';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    case interfaceActionTypes.SET_LOADING_MESSAGE: return {...state, loadingMessage: action.payload.message}\r\n    \r\n    case interfaceActionTypes.TOGGLE_SHOW_HELP: return {...state, showHelp: !state.showHelp}\r\n    \r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\nexport const DELETE_CHART = 'DELETE_CHART';\r\n\r\nexport const TABLE_STATS_REQUEST_SEND = 'ABLE_STATS_REQUEST_SEND';\r\nexport const TABLE_STATS_REQUEST_PROCESSING = 'TABLE_STATS_REQUEST_PROCESSING';\r\nexport const TABLE_STATS_REQUEST_SUCCESS = 'TABLE_STATS_REQUEST_SUCCESS';\r\nexport const TABLE_STATS_REQUEST_FAILURE = 'TABLE_STATS_REQUEST_FAILURE';\r\n\r\nexport const CRUISE_TRAJECTORY_REQUEST_SEND = 'CRUISE_TRAJECTORY_REQUEST_SEND';\r\nexport const CRUISE_TRAJECTORY_REQUEST_SUCCESS = 'CRUISE_TRAJECTORY_REQUEST_SUCCESS';\r\nexport const CRUISE_TRAJECTORY_REQUEST_FAILURE = 'CRUISE_TRAJECTORY_REQUEST_FAILURE';\r\nexport const CRUISE_TRAJECTORY_REQUEST_PROCESSING = 'CRUISE_TRAJECTORY_REQUEST_PROCESSING';\r\nexport const CRUISE_TRAJECTORY_CLEAR = 'CRUISE_TRAJECTORY_CLEAR';\r\n\r\nexport const CRUISE_LIST_REQUEST_SEND = 'CRUISE_LIST_REQUEST_SEND';\r\nexport const CRUISE_LIST_REQUEST_SUCCESS = 'CRUISE_LIST_REQUEST_SUCCESS';\r\nexport const CRUISE_LIST_REQUEST_FAILURE = 'CRUISE_LIST_REQUEST_FAILURE';\r\nexport const CRUISE_LIST_REQUEST_PROCESSING = 'CRUISE_LIST_REQUEST_PROCESSING';\r\n\r\nexport const TRIGGER_SHOW_CHARTS = 'TRIGGER_SHOW_CHARTS';\r\nexport const COMPLETED_SHOW_CHARTS = 'COMPLETED_SHOW_CHARTS';\r\n\r\nexport const CSV_DOWNLOAD_REQUEST_SEND = 'CSV_DOWNLOAD_REQUEST_SEND';\r\nexport const CSV_DOWNLOAD_REQUEST_SUCCESS = 'CSV_DOWNLOAD_REQUEST_SUCCESS';\r\nexport const CSV_DOWNLOAD_REQUEST_FAILURE = 'CSV_DOWNLOAD_REQUEST_FAILURE';\r\nexport const CSV_DOWNLOAD_REQUEST_PROCESSING = 'CSV_DOWNLOAD_REQUEST_PROCESSING';\r\n\r\nexport const DOWNLOAD_TEXT_AS_CSV = 'DOWNLOAD_TEXT_AS_CSV';","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n    datasetRequestState: null,\r\n    datasets: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n    loadingMessage: '',\r\n    showHelp: false,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    getCruiseTrajectoryRequestState: null,\r\n    cruiseTrajectory: null,\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    cruiseList: [],\r\n    getCruiseListRequestState: null,\r\n    showChartsOnce: null,\r\n    chartID: 0\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../Enums/asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SUCCESS: return {...state,\r\n      datasetsRequestState: states.succeeded, \r\n      datasets: action.payload.datasets\r\n    }\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_FAILURE: return {...state, datasetsRequestState: states.failed}\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_PROCESSING: return {...state, datasetsRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../Enums/asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';\r\n\r\nexport const SET_LOADING_MESSAGE = 'SET_LOADING_MESSAGE';\r\n\r\nexport const TOGGLE_SHOW_HELP = 'TOGGLE_SHOW_HELP';","import states from '../../Enums/asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [{...action.payload.chartInfo, id: state.chartID}, ...state.charts],\r\n            chartID: state.chartID + 1\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.DELETE_CHART: return {...state, \r\n            charts: [\r\n                ...state.charts.slice(0, action.payload.chartIndex),\r\n                ...state.charts.slice(action.payload.chartIndex + 1)\r\n            ]\r\n        }\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING: return {...state, getCruiseTrajectoryRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS: return {...state,\r\n            cruiseTrajectory: action.payload.trajectory,\r\n            getCruiseTrajectoryRequestState: states.succeeded\r\n        }\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR: return {...state, cruiseTrajectory: null}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE: return {...state, getCruiseTrajectoryRequestState: states.failed}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING: return {...state, getCruiseListRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS: return {\r\n            ...state,\r\n            getCruiseListRequestState: states.succeeded,\r\n            cruiseList: action.payload.cruiseList\r\n        }\r\n\r\n        case visualizationActionTypes.TRIGGER_SHOW_CHARTS: return {...state, showChartsOnce: true}\r\n        case visualizationActionTypes.COMPLETED_SHOW_CHARTS: return {...state, showChartsOnce: false}\r\n\r\n        case visualizationActionTypes.TABLE_STATS_REQUEST_SUCCESS: return {\r\n            ...state, \r\n            datasets: {\r\n                ...state.datasets,\r\n                [action.payload.datasetLongName]: {\r\n                    ...state.datasets[action.payload.datasetLongName],\r\n                    tableStats: action.payload.tableStats\r\n                }\r\n            }}\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n});\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Google login actions\r\nexport const googleLoginRequestSend = (userIDToken) => ({\r\n    type: userActionTypes.GOOGLE_LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        userIDToken\r\n    }\r\n});\r\n\r\nexport const googleLoginRequestProcessing = () => ({\r\n    type: userActionTypes.GOOGLE_LOGIN_REQUEST_SEND_PROCESSING\r\n});\r\n\r\nexport const googleLoginRequestSuccess = () => ({\r\n    type: userActionTypes.GOOGLE_LOGIN_REQUEST_SEND_SUCCESS\r\n});\r\n\r\nexport const googleLoginRequestFailure = () => ({\r\n    type: userActionTypes.GOOGLE_LOGIN_REQUEST_SEND_FAILURE\r\n});\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n});\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n});\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n});\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n});\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n});\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n});\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n});\r\n\r\nexport const refreshLogin = () => ({\r\n    type: userActionTypes.REFRESH_LOGIN\r\n});\r\n\r\nexport const updateUserInfoRequestSend = (userInfo) => ({\r\n    type: userActionTypes.UPDATE_USER_INFO_REQUEST_SEND,\r\n    payload: {\r\n        userInfo\r\n    }\r\n});\r\n\r\nexport const updateUserInfoRequestSuccess = () => ({\r\n    type: userActionTypes.UPDATE_USER_INFO_REQUEST_SUCCESS\r\n});\r\n\r\nexport const updateUserInfoRequestFailure = () => ({\r\n    type: userActionTypes.UPDATE_USER_INFO_REQUEST_FAILURE\r\n});\r\n\r\nexport const initializeGoogleAuth = () => ({\r\n    type: userActionTypes.INITIALIZE_GOOGLE_AUTH\r\n});\r\n\r\nexport const storeGoogleAuth = () => ({\r\n    type: userActionTypes.STORE_GOOGLE_AUTH\r\n});","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const datasetRetrievalRequestSend = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const datasetRetrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const datasetRetrievalRequestSuccess = (datasets) => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        datasets\r\n    }\r\n})\r\n\r\nexport const datasetRetrievalRequestFailure = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})\r\n\r\nexport const setLoadingMessage = (message) => ({\r\n    type:interfaceActionTypes.SET_LOADING_MESSAGE,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const toggleShowHelp = () => ({\r\n    type: interfaceActionTypes.TOGGLE_SHOW_HELP\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const deleteChart = (chartIndex) => ({\r\n    type: visualizationActionTypes.DELETE_CHART,\r\n    payload: {\r\n        chartIndex\r\n    }\r\n})\r\n\r\nexport const tableStatsRequestSend = (tableName, datasetLongName) => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_SEND,\r\n    payload: {\r\n        tableName,\r\n        datasetLongName\r\n    }\r\n})\r\n\r\nexport const tableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const tableStatsRequestSuccess = (tableStats, datasetLongName) => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_SUCCESS,\r\n    payload: {\r\n        tableStats,\r\n        datasetLongName\r\n    }\r\n})\r\n\r\nexport const tableStatsRequestFailure = () => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_FAILURE\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSuccess = (trajectory) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS,\r\n    payload: {\r\n        trajectory\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseTrajectoryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const cruiseTrajectoryClear = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR\r\n})\r\n\r\nexport const cruiseListRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SEND,\r\n})\r\n\r\nexport const cruiseListRequestSuccess = (cruiseList) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS,\r\n    payload: {\r\n        cruiseList\r\n    }\r\n})\r\n\r\nexport const cruiseListRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseListRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const triggerShowCharts = () => ({\r\n    type: visualizationActionTypes.TRIGGER_SHOW_CHARTS\r\n})\r\n\r\nexport const completedShowCharts = () => ({\r\n    type: visualizationActionTypes.COMPLETED_SHOW_CHARTS\r\n})\r\n\r\nexport const csvDownloadRequestSend = (query, fileName) => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SEND,\r\n    payload: {\r\n        query,\r\n        fileName\r\n    }\r\n})\r\n\r\nexport const csvDownloadRequestFailure = () => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_FAILURE\r\n})\r\n\r\nexport const csvDownloadRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_PROCESSING\r\n})\r\n\r\nexport const csvDownloadRequestSuccess = (text) => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SUCCESS,\r\n    payload: {\r\n        text\r\n    }\r\n})\r\n\r\n//dataset download\r\nexport const downloadTextAsCsv = (text, datasetName) => ({\r\n    type: visualizationActionTypes.DOWNLOAD_TEXT_AS_CSV,\r\n    payload: {\r\n        text,\r\n        datasetName\r\n    }\r\n})","// export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\nexport const apiUrl = 'https://simonscmap.dev';","const spatialResolutions = {\r\n    irregular: 'Irregular',\r\n    halfDegree: '1/2° X 1/2°' ,\r\n    quarterDegree: '1/4° X 1/4°' ,\r\n    twentyFifthDegree: '1/25° X 1/25°' ,\r\n    fourKm: '4km X 4km',\r\n    twelfthDegree: '1/12° X 1/12°',\r\n    seventyKm: '70km X 70km',\r\n    oneDegree: '1° X 1°',\r\n    nineKm: '9km X 9km',\r\n    twentyFiveKm: '25km X 25km'\r\n}\r\n\r\nexport default spatialResolutions;","import spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nconst mapSpatialResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [spatialResolutions.halfDegree] : .5,\r\n        [spatialResolutions.quarterDegree] : .25,\r\n        [spatialResolutions.twentyFifthDegree] : .04,\r\n        [spatialResolutions.fourKm] : .041672,\r\n        [spatialResolutions.twelfthDegree] : .083333,\r\n        [spatialResolutions.oneDegree] : 1,\r\n        [spatialResolutions.seventyKm] : .25,\r\n        [spatialResolutions.nineKm] : .083333,\r\n        [spatialResolutions.twentyFiveKm] : .23148\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapSpatialResolutionToNumber;","// Flattens an array by 1 level\r\n// [[[],[]], [[],[]], [[],[]]] => [[], [], [], [], [], []]\r\n\r\nconst flattenArray = (arr) => {\r\n    let flattenedArray = [];\r\n\r\n    for(let i = 0; i < arr.length; i++){\r\n        for(let j = 0; j < arr[i].length; j++){\r\n            flattenedArray.push(arr[i][j]);\r\n        }\r\n    }\r\n\r\n    return flattenedArray;\r\n}\r\n\r\nexport default flattenArray;","// Interval is number of indices between changes in this parameter, or in order words\r\n// how many times will we see the same value for this parameter in a row before it changes\r\n// as we iterate through the values array.\r\n// We use modulo for cases where data.length / interval is larger than the number of \r\n// distinct values for that parameter.\r\n\r\nconst splitData = (data, changeInterval, numDistinct) => {\r\n    var splitData = [];\r\n\r\n    for(let i = 0; i < numDistinct; i++){\r\n        splitData.push([]);\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        let index = Math.floor(i / changeInterval) % numDistinct;\r\n        splitData[index].push(data[i]);\r\n    }\r\n\r\n    return splitData;\r\n}\r\n\r\nexport default splitData;","// mergeTargetDistance - number of hops between arrays being merged\r\n// mergeTargetNumber - number of arrays being merged - implicit\r\n// nextStartDistance - once a merge is complete how many hops to next start\r\nconst mergeArraysAndComputeMeans = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n    \r\n    // Find each merging start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        // Iterate through each value in the first array of this merge. Count\r\n        // the number of values summed so we can ignore nulls and compute a mean.\r\n        for(let j = 0; j < data[i].length; j ++){\r\n            let sum = 0;\r\n            let count = 0;\r\n\r\n            // Aggregate values of all merge targets\r\n            for(let k = i; k < i + (mergeTargetDistance * numArraysPerMerge); k += mergeTargetDistance){\r\n                if(isNaN(data[k][j])) {\r\n                    continue;\r\n                } else {                    \r\n                    sum += data[k][j];\r\n                    count ++;\r\n                }\r\n            }\r\n            subArray.push(count < 1 ? null : sum / (count));\r\n        }\r\n\r\n        mergedArrays.push(subArray)\r\n    }\r\n\r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArraysAndComputeMeans;","const mergeArrays = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n\r\n    // Find each merge start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        for(let j = i; j <= i + travelDistance; j += mergeTargetDistance){\r\n            subArray = [...subArray, ...data[j]];\r\n        }\r\n\r\n        mergedArrays.push(subArray);\r\n    }\r\n   \r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArrays;\r\n\r\n","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    contourSectionMap: 'Contour Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    heatmap: 'Heatmap',\r\n    contourMap: 'Contour Map',\r\n    sparse: 'Sparse'\r\n}\r\n\r\nexport default subTypes;","const temporalResolutions = {\r\n    threeMinutes: 'Three Minutes',\r\n    sixHourly: 'Six Hourly',\r\n    daily: 'Daily',\r\n    weekly: 'Weekly',\r\n    monthly: 'Monthly',\r\n    annual: 'Annual',\r\n    irregular: 'Irregular',\r\n    monthlyClimatology: 'Monthly Climatology',\r\n    threeDay: 'Three Days',\r\n    eightDayRunning: 'Eight Day Running',\r\n    eightDays: 'Eight Days '\r\n}\r\n\r\nexport default temporalResolutions;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/mergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nclass SpaceTimeData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n\r\n        this.hasDepth = null;\r\n        this.hasHours = null;\r\n        this.isMonthly = null;\r\n\r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n        this.indexAdjust = null;\r\n        this.payload = payload;\r\n        this.lats = [];\r\n        this.lons = [];\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n\r\n        this.distinctLatCount = null;\r\n        this.distinctLonCount = null;\r\n    }\r\n\r\n    add(row) {\r\n        \r\n        let lat = parseFloat(row[1]);\r\n        let _lon = parseFloat(row[2]);\r\n        let lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n\r\n        if(this.hasDepth === null) {\r\n            this.hasHour = this.metadata.Table_Name === 'tblWind_NRT';\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n            this.hasDepth = row.length === 5 && !this.hasHour;\r\n            this.indexAdjust = this.hasDepth || this.hasHour? 1 : 0;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n        }\r\n\r\n        let value = parseFloat(row[3 + this.indexAdjust]);\r\n\r\n        if(this.hasDepth){\r\n            this.depths.add(row[3]);\r\n        }\r\n\r\n        var time;\r\n        if(this.hasHour){\r\n            time = new Date(row[0]);\r\n            time.setUTCHours(row[3])\r\n            time = time.toISOString();\r\n        } else time = row[0];\r\n        this.dates.add(time);\r\n        this.lats.push(lat);\r\n\r\n        this.lons.push(lon);\r\n\r\n        if(lon < this.lonMin) this.lonMin = lon;\r\n        if(lon > this.lonMax) this.lonMax = lon;\r\n        if(lat < this.latMin) this.latMin = lat;\r\n        if(lat > this.latMax) this.latMax = lat;\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n\r\n        if(this.depths.size === 0) this.depths.add('Surface');\r\n\r\n        this.lonCount = this.lons.length / this.dates.size / this.depths.size;\r\n        this.latCount = this.lats.length / this.dates.size / this.depths.size;\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : parseFloat(quantile1.toPrecision(4));\r\n        this.zMax = quantile2 === undefined ? null : parseFloat(quantile2.toPrecision(4));\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n        \r\n        this.distinctLatCount = Math.round((this.latMax - this.latMin) / spatialResolution) + 1;\r\n        this.distinctLonCount = Math.round((this.lonMax - this.lonMin) / spatialResolution) + 1;\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {        \r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const latInterval = this.distinctLonCount;\r\n        const depthInterval = latInterval * this.distinctLatCount;\r\n        const dateInterval = depthInterval * this.depths.size;\r\n\r\n        // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n        variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, depthInterval, this.depths.size));\r\n        variableValueSubsets = flattenArray(variableValueSubsets);\r\n\r\n        // Contour and heatmap compute mean variable values per lat and lon\r\n        // when not split by date and/or time\r\n        if(subType === vizSubTypes.contourMap || subType === vizSubTypes.heatmap) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    this.depths.size, \r\n                    this.depths.size\r\n                    );\r\n    \r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    this.depths.size, \r\n                    1, \r\n                    this.dates.size\r\n                    );\r\n    \r\n            } else {\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    variableValueSubsets.length, \r\n                    variableValueSubsets.length\r\n                    );            \r\n            }\r\n        } \r\n        \r\n        // Histograms split and aggregate without computing means\r\n        else if (subType === vizSubTypes.histogram) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets, \r\n                    1,\r\n                    this.depths.size,\r\n                    this.depths.size\r\n                    );\r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets,\r\n                    this.depths.size,\r\n                    1,\r\n                    this.dates.size\r\n                );\r\n            } else {\r\n                variableValueSubsets = [this.variableValues];\r\n            }\r\n        }\r\n\r\n        // Nothing here yet\r\n        else {}\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n        var csvArray;\r\n\r\n        if(this.hasDepth){\r\n            csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${depths[Math.floor(i / (this.variableValues.length / (dates.length * depths.length))) % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SpaceTimeData;","const storedProcedures = {\r\n    sectionMap: 'uspSectionMap',\r\n    timeSeries: 'uspTimeSeries',\r\n    spaceTime: 'uspSpaceTime',\r\n    depthProfile: 'uspDepthProfile'\r\n}\r\n\r\nexport default storedProcedures;","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nclass TimeSeriesData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.dates = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depth = null;\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.depthIndexAdjust = row.length === 6 ? 1 : 0;\r\n            this.lat = row[1];\r\n            this.lon = row[2];\r\n            this.depth = row.length === 6 ? row[3] : false;\r\n            this.hasHour = this.metadata.Table_Name === 'tblWind_NRT';\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n        }\r\n\r\n        this.variableValues.push(row[3 + this.depthIndexAdjust]);\r\n        this.stds.push(row[4 + this.depthIndexAdjust]);\r\n        this.dates.push(row[0]);\r\n    }\r\n\r\n    finalize() {\r\n        if(this.depth === false) this.depth = 'Surface';\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }    \r\n\r\n    generateCsv() {\r\n        let csvString = `time,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.dates[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default TimeSeriesData;","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nclass DepthProfileData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depths = [];\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.lat = parseFloat(row[0]);\r\n            this.lon = parseFloat(row[1]);\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n        }\r\n\r\n        this.variableValues.push(parseFloat(row[2]));\r\n        this.stds.push(parseFloat(row[3]));\r\n        this.depths.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        // pass\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }\r\n    \r\n    generateCsv() {\r\n        let csvString = `depth,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default DepthProfileData;","import { quantile, extent } from 'd3-array';\r\n\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nclass SectionMapData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.subType = payload.subType\r\n        \r\n        this.dates = new Set();\r\n        this.depths = new Set();\r\n        this.lats = new Set();\r\n        this.lons = new Set();\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n\r\n        this.variableValues = [];\r\n        \r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.orientation = null;\r\n    }\r\n\r\n    // time, lat, lon, depth, value\r\n    add(row) {        \r\n        const time = row[0];\r\n        const lat = parseFloat(row[1]);\r\n        var _lon = parseFloat(row[2]);\r\n        const lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n        const depth = parseFloat(row[3]);\r\n        const value = parseFloat(row[4]);\r\n\r\n        if(this.variableValues.length === 0) {\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n        }        \r\n\r\n        this.depths.add(depth);\r\n        this.dates.add(time);\r\n        this.lats.add(lat);\r\n        this.lons.add(lon);\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : parseFloat(quantile1.toPrecision(4));\r\n        this.zMax = quantile2 === undefined ? null : parseFloat(quantile2.toPrecision(4));\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        this.orientation = this.lons.size > this.lats.size ? 'zonal' : 'meridional';\r\n\r\n        let lonArray = Array.from(this.lons);\r\n        this.lonMax = Math.max(...lonArray);\r\n        this.lonMin = Math.min(...lonArray);\r\n        // console.log(this.variableValues);\r\n    }\r\n\r\n    // Direction is meridional or zonal\r\n    generatePlotData(orientation, splitByDate, splitBySpace) {\r\n        let latCount = this.lats.size;\r\n        let lonCount = this.lons.size;\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const lonInterval = this.depths.size;\r\n        const latInterval = lonInterval * lonCount;\r\n        const dateInterval = latInterval * latCount;\r\n\r\n        var variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n\r\n        var spaceCount;\r\n\r\n        if(orientation === 'zonal') {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, latInterval, latCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = latCount;\r\n        }\r\n\r\n        else {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, lonInterval, lonCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = lonCount;\r\n        }\r\n\r\n        // console.log('Split by space');\r\n        // console.log(variableValueSubsets);\r\n\r\n        if(splitByDate && splitBySpace){\r\n            // pass\r\n        } else if (splitByDate){\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                spaceCount,\r\n                spaceCount\r\n            )\r\n        } else if (splitBySpace) {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                spaceCount,\r\n                1,\r\n                this.dates.size\r\n            )\r\n        } else {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                variableValueSubsets.length,\r\n                variableValueSubsets.length\r\n            )\r\n        }\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n        let lons = Array.from(this.lons);\r\n        let lats = Array.from(this.lats);\r\n\r\n        const lonInterval = depths.length;\r\n        const latInterval = lonInterval * lons.length;\r\n\r\n        var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${lats[Math.floor(i / latInterval) % lats.length]},${lons[Math.floor(i / lonInterval) % lons.length]},${depths[i % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SectionMapData;","import { quantile, extent } from 'd3-array';\r\n\r\nclass SparseData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = null;\r\n        this.variableIndex = payload.metadata.Depth_Min ? 4 : 3;\r\n        this.depths = [];\r\n        this.times = [];\r\n        this.variableValues = [];\r\n        this.lats = [];\r\n        this.lons = [];\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n    }\r\n\r\n    add(row) {\r\n        let lat = parseFloat(row[1]);\r\n        let lon = parseFloat(row[2]);\r\n\r\n        if(this.hasDepth === null){\r\n            this.hasDepth = Boolean(this.metadata.Depth_Min);\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n        }\r\n\r\n        if(row[this.variableIndex]){\r\n\r\n            this.times.push(row[0]);\r\n            this.lats.push(lat);\r\n            this.lons.push(lon);\r\n            if(this.hasDepth) this.depths.push(parseFloat(row[3]));\r\n            this.variableValues.push(parseFloat(row[this.variableIndex]));\r\n\r\n            if(lat < this.latMin) this.latMin = lat;\r\n            if(lat > this.latMax) this.latMax = lat;\r\n            \r\n            if(lon < this.lonMin) this.lonMin = lon;\r\n            if(lon > this.lonMax) this.lonMax = lon;\r\n        }\r\n    }\r\n\r\n    finalize() {\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let latDistance = Math.abs(this.latMax - this.latMin);\r\n        let lonDistance = Math.abs(this.lonMax - this.lonMin);\r\n        let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n\r\n        let _zoom = 4 - Math.floor(distance / 12);\r\n        this.zoom = _zoom < 0 ? 0 : _zoom;\r\n\r\n        let lonCenter = (this.lonMax + this.lonMin) / 2;\r\n        let latCenter = (this.latMax + this.latMin) / 2;\r\n        this.center = { \r\n            lon: lonCenter, \r\n            lat: latCenter\r\n        }\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        return this.variableValues;\r\n    }\r\n\r\n    generateCsv(){\r\n        var csvArray;\r\n\r\n        if(this.hasDepth){\r\n            csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SparseData;","import CSVParser from 'csv-parse';\r\n\r\nimport { apiUrl } from './config';\r\nimport SpaceTimeData from './Classes/SpaceTimeData';\r\n\r\nimport storedProcedures from './Enums/storedProcedures';\r\nimport TimeSeriesData from './Classes/TimeSeriesData';\r\nimport DepthProfileData from './Classes/DepthProfileData';\r\nimport SectionMapData from './Classes/SectionMapData';\r\nimport SparseData from './Classes/SparseData';\r\n\r\nimport encoding from 'text-encoding';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.googleLoginRequest = async(userIDToken) => {\r\n    let response = await fetch(apiUrl + '/user/googleauth', {\r\n        ...postOptions,\r\n        body: JSON.stringify({userIDToken}),\r\n    })\r\n\r\n    return response;\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new encoding.TextDecoder();\r\n    let catalog = [];\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            catalog.push(record)\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.catalog.datasets = async() => {\r\n    const decoder = new encoding.TextDecoder();\r\n    let datasets = {};\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            datasets[record.Dataset_Long_Name.trim()] = record;\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog/datasets', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return datasets;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.user.updateUserInfo = async(userInfo) => {\r\n    return await fetch(apiUrl + '/api/user/updateinfo', {\r\n        ...postOptions,\r\n        body: JSON.stringify(userInfo),\r\n    });\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(payload) => {\r\n    const decoder = new encoding.TextDecoder();\r\n    var vizData;\r\n\r\n    switch(payload.parameters.spName) {\r\n        case storedProcedures.spaceTime:\r\n            if(payload.subType === 'Sparse') vizData = new SparseData(payload);\r\n            else vizData = new SpaceTimeData(payload);\r\n            break;\r\n\r\n        case storedProcedures.timeSeries:\r\n            vizData = new TimeSeriesData(payload);\r\n            break;\r\n\r\n        case storedProcedures.depthProfile:\r\n            vizData = new DepthProfileData(payload);\r\n            break;\r\n\r\n        case storedProcedures.sectionMap:\r\n            vizData = new SectionMapData(payload);\r\n            break;\r\n\r\n        default:\r\n            console.log('Unknown sproc name');\r\n    }\r\n\r\n    let response = await fetch(apiUrl + '/api/data/sp?' + storedProcedureParametersToUri(payload.parameters), fetchOptions);\r\n\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            vizData.add(record);\r\n        }\r\n    })\r\n\r\n    csvParser.on('error', (e) => {\r\n        console.log(e);\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n    return await response.json();\r\n}\r\n\r\napi.visualization.cruiseTrajectoryRequest = async(payload) => {\r\n    const decoder = new encoding.TextDecoder();\r\n    let trajectory = {lats: [], lons: []};\r\n\r\n    let response = await fetch(apiUrl + '/api/data/cruisetrajectory?' + `id=${payload.id}`, fetchOptions);\r\n\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            trajectory.lats.push(parseFloat(record[1]));\r\n            trajectory.lons.push(parseFloat(record[2]));\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return trajectory;\r\n}\r\n\r\napi.visualization.cruiseList = async() => {\r\n    let response = await fetch(apiUrl + '/api/data/cruiselist', fetchOptions);\r\n\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;   \r\n}\r\n\r\napi.visualization.csvDownload = async(payload) => {\r\n    let response = await fetch(apiUrl + `/api/data/query?query=${payload.query}`, fetchOptions);\r\n    if(response.ok) return await response.text();\r\n    else return {failed: true, status: response.status}\r\n}\r\n\r\nexport default api;","import { put, takeLatest, all, call, delay } from 'redux-saga/effects';\r\n// import { eventChannel } from 'redux-saga';\r\nimport Cookies from 'js-cookie';\r\n// import worker from '../worker';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    \r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n        if(window.location.pathname === '/login') window.location.href = \"/catalog\";\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){    \r\n    let authInstance = yield window.gapi.auth2.getAuthInstance();\r\n    yield authInstance.signOut();\r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    \r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    \r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* googleLoginRequest(action){\r\n    yield put(userActions.googleLoginRequestProcessing());\r\n    let result = yield call(api.user.googleLoginRequest, action.payload.userIDToken);\r\n\r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        // yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n        if(window.location.pathname === '/login') window.location.href = \"/catalog\";\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    \r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* datasetRetrieval(){\r\n    yield put(catalogActions.datasetRetrievalRequestProcessing());\r\n    let datasets = yield call(api.catalog.datasets);\r\n\r\n    if(!datasets){\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else {\r\n        yield put(catalogActions.datasetRetrievalRequestSuccess(datasets));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    \r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    \r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload);\r\n    yield delay(50);\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'));\r\n    yield delay(70);\r\n    \r\n    // Result will be an object containing variable values and describing date shape\r\n    if(result.failed){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        if(result.status === 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(\"An error occurred. Please try again.\"));\r\n        }\r\n    } else {\r\n        if(result.variableValues.length > 0){\r\n            result.finalize();\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            // yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            yield put(visualizationActions.triggerShowCharts());\r\n            yield put(visualizationActions.addChart({subType: action.payload.subType, data:result}));\r\n           \r\n        } else {\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges. Try selecting a different date or depth range.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* cruiseTrajectoryRequest(action) {\r\n    yield put(visualizationActions.cruiseTrajectoryRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Cruise Data'));\r\n    let result = yield call(api.visualization.cruiseTrajectoryRequest, action.payload);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n\r\n    if(result.failed){\r\n        if(result.status === 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(`Unable to Fetch Cruise Data`));\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.cruiseTrajectoryRequestSuccess(result));\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n    }\r\n}\r\n\r\nfunction* cruiseListRequest() {\r\n    yield put(visualizationActions.cruiseListRequestProcessing());\r\n    let cruiseList = yield call(api.visualization.cruiseList);\r\n\r\n    if(!cruiseList) {\r\n        yield put(visualizationActions.cruiseListRequestFailure());\r\n    } else{\r\n        yield put(visualizationActions.cruiseListRequestSuccess(cruiseList));\r\n    }\r\n}\r\n\r\nfunction* tableStatsRequest(action){\r\n    yield put(visualizationActions.tableStatsRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Dataset Information'));\r\n    let result = yield call(api.visualization.getTableStats, action.payload.tableName);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n\r\n    if(result.failed){\r\n        if(result.status === 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(`Unable to Fetch Dataset Information`));\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.tableStatsRequestSuccess(result, action.payload.datasetLongName));\r\n    }\r\n}\r\n\r\nfunction* csvDownloadRequest(action){\r\n    yield put(visualizationActions.csvDownloadRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let response = yield call(api.visualization.csvDownload, action.payload);\r\n    yield put(interfaceActions.setLoadingMessage(''))\r\n    if(response.failed) {\r\n        if(response.status === 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen('An error occurred. Please try again.'))\r\n        }\r\n    } else {\r\n        if(response.length > 1) yield put(visualizationActions.downloadTextAsCsv(response, action.payload.fileName));\r\n        else yield put(interfaceActions.snackbarOpen('No data found. Please expand query range.'))        \r\n    }\r\n}\r\n\r\nfunction* downloadTextAsCsv(action){\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'))\r\n    let csv = action.payload.text;\r\n    const blob = new Blob([csv], {type: 'text/csv'});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.setAttribute('hidden', '');\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `${action.payload.datasetName}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n}\r\n\r\nfunction* refreshLogin(){\r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.showLoginDialog());\r\n    yield put(interfaceActions.snackbarOpen(\"Your session has expired. Please log in again.\"));\r\n}\r\n\r\nfunction* updateUserInfoRequest(action){\r\n    yield put(interfaceActions.setLoadingMessage('Updating your information'));\r\n\r\n    let result = yield call(api.user.updateUserInfo, action.payload);\r\n\r\n    if(result.failed){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        if(result.status === 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(\"An error occurred. Please try again.\"));\r\n        }\r\n    } else {\r\n        yield put(interfaceActions.snackbarOpen(\"Your information was updated\"));\r\n        yield put(userActions.storeInfo(JSON.parse(Cookies.get('UserInfo'))));\r\n    }\r\n\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n}\r\n\r\nfunction* initializeGoogleAuth(){\r\n    yield window.gapi.auth2.init({client_id: '739716651449-7d1e8iijue6srr9l5mi2iogp982sqoa0.apps.googleusercontent.com'});\r\n    let authInstance = yield window.gapi.auth2.getAuthInstance();\r\n    let user = yield authInstance.currentUser.get();\r\n    let authResponse = yield user.getAuthResponse(true);\r\n    if(authResponse) yield put(userActions.googleLoginRequestSend(authResponse.id_token));\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchGoogleLoginRequest(){\r\n    yield takeLatest(userActionTypes.GOOGLE_LOGIN_REQUEST_SEND, googleLoginRequest);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchDatasetRetrieval(){\r\n    yield takeLatest(catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SEND, datasetRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\nfunction* watchCruiseTrajectoryRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND, cruiseTrajectoryRequest);\r\n}\r\n\r\nfunction* watchCruiseListRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_LIST_REQUEST_SEND, cruiseListRequest);\r\n}\r\n\r\nfunction* watchTableStatsRequest(){\r\n    yield takeLatest(visualizationActionTypes.TABLE_STATS_REQUEST_SEND, tableStatsRequest)\r\n}\r\n\r\nfunction* watchCsvDownloadRequest(){\r\n    yield takeLatest(visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SEND, csvDownloadRequest);\r\n}\r\n\r\nfunction* watchDownloadTextAsCsv(){\r\n    yield takeLatest(visualizationActionTypes.DOWNLOAD_TEXT_AS_CSV, downloadTextAsCsv);\r\n}\r\n\r\nfunction* watchRefreshLogin(){\r\n    yield takeLatest(userActionTypes.REFRESH_LOGIN, refreshLogin);\r\n}\r\n\r\nfunction* watchUpdateUserInfoRequest(){\r\n    yield takeLatest(userActionTypes.UPDATE_USER_INFO_REQUEST_SEND, updateUserInfoRequest);\r\n}\r\n\r\nfunction* watchInitializeGoogleAuth(){\r\n    yield takeLatest(userActionTypes.INITIALIZE_GOOGLE_AUTH, initializeGoogleAuth);\r\n}\r\n// function createWorkerChannel(worker) {\r\n//     return eventChannel(emit => {\r\n//         worker.onmessage = message => {\r\n//             emit(message);\r\n//         }\r\n\r\n//         const unsubscribe = () => {\r\n//             worker.teminate();\r\n//         }\r\n      \r\n//         return unsubscribe;\r\n//     })\r\n// }\r\n\r\n// function* watchWorkerChannel(){\r\n//     const workerChannel = yield call(createWorkerChannel, worker);\r\n\r\n//     while (true) {\r\n//         const message = yield take(workerChannel);\r\n//         yield put(message.data.type, message.data.payload);\r\n//         //   yield put({ type: INCOMING_PONG_PAYLOAD, payload })\r\n//         //   yield fork(pong, socket)\r\n//       }\r\n// }\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchGoogleLoginRequest(),\r\n        watchCatalogRetrieval(),\r\n        watchDatasetRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        watchCruiseTrajectoryRequest(),\r\n        watchCruiseListRequest(),\r\n        watchTableStatsRequest(),\r\n        // watchWorkerChannel(),\r\n        watchCsvDownloadRequest(),\r\n        watchDownloadTextAsCsv(),\r\n        watchRefreshLogin(),\r\n        watchUpdateUserInfoRequest(),\r\n        watchInitializeGoogleAuth(),\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","const colors = {\r\n    orange: '#FF8000',\r\n    // orange: '#ffa245',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9',\r\n    errorYellow: '#ffe336'\r\n}\r\n\r\nexport default colors;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../../Redux/actions/user';\r\n\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport states from '../../Enums/asyncRequestStates';\r\nimport colors from '../../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    },\r\n    warningCaption: {\r\n        color: colors.orange,\r\n        fontSize: '11px',\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    wrapper: {\r\n        marginTop: theme.spacing(16)\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            \r\n            <div className={classes.wrapper}>\r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Key\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                        <Typography variant='caption' className={classes.warningCaption}>\r\n                            This API key is a unique identifier, and should not be shared.\r\n                        </Typography>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"body2\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n                </Paper>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport { Link, Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = {\r\n    loginRequiredMessage: {\r\n        marginTop: '60px',\r\n        color: 'white'\r\n    }\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n    const { classes, showLoginDialog } = props;\r\n\r\n    useEffect(() => {\r\n        showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <Typography className={classes.loginRequiredMessage}>\r\n            This feature requires a user account. Please <Link component={RouterLink} to={{pathname: window.location.pathname}} onClick={() => props.showLoginDialog()}> log in\r\n            </Link> or <Link component={RouterLink} to={{pathname: '/register'}}> register\r\n            </Link>.\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(LoginRequiredPrompt));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './User/ApiKeyManagement';\r\nimport LoginRequiredPrompt from './User/LoginRequiredPrompt';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n\r\n    render(){\r\n        if(!this.props.user) return <LoginRequiredPrompt/>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ApiKeyManagement/>\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport { Typography, Grid, Table, TableBody, TableCell, TableRow, Button } from '@material-ui/core';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst tableMapping1 = [\r\n    ['Long Name', 'Long_Name'],\r\n    ['Short Name', 'Variable'],\r\n    ['Dataset Name', 'Dataset_Name'],\r\n    ['Study Domain', 'Study_Domain'],\r\n    ['Process Level', 'Process_Level'],\r\n    ['SQL Table Name', 'Table_Name'],\r\n    ['Temporal Resolution', 'Temporal_Resolution']\r\n];\r\n\r\nconst tableMapping2 = [\r\n    ['Unit', 'Unit'],\r\n    ['Mean Value', 'Variable_Mean'],\r\n    ['Value Std', 'Variable_Std'],\r\n    ['Spatial Resolution', 'Spatial_Resolution'],\r\n    ['Start Latitude[\\xb0]', 'Lat_Min'],\r\n    ['End Latitude[\\xb0]', 'Lat_Max'],\r\n    ['Start Longitude[\\xb0]', 'Lon_Min'],\r\n    ['End Longitude[\\xb0]', 'Lon_Max']\r\n];\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        // width: '90%',\r\n        // margin: '0px auto 5px 10px',\r\n        padding: '10px',\r\n        height: '100%',\r\n        userSelect: 'auto'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(1),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        height: '100%',\r\n        maxHeight: '280px'\r\n    },\r\n    gridItem: {\r\n        // height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        verticalAlign: 'middle',\r\n        maxHeight: '280px'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        maxWidth: '80%',\r\n        maxHeight: '260px'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        tableLayout: 'fixed',\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '24px',\r\n        width: '100%'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black',\r\n        fontSize: '11px',\r\n        maxWidth: '100%',\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        paddingRight: '14px'\r\n    },\r\n\r\n    gridDetailTypography: {\r\n        fontSize: '11px',\r\n        whiteSpace: 'normal',\r\n        width: '100%',\r\n        display: 'block',\r\n    },\r\n\r\n    boldText: {\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n    rightGridItem: {\r\n        maxWidth: '100%',\r\n        paddingTop: '10px',\r\n        boxSizing: 'border-box',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n\r\n    datasetDescriptionButton: {\r\n        backgroundColor: '#FF8000',\r\n        color: 'white',\r\n        '&:hover': {\r\n            backgroundColor: '#ab5600',\r\n        },\r\n        fontSize: '12px',\r\n        maxWidth: '100%',\r\n    },\r\n    \r\n    buttonTextWrapper: {\r\n        textOverflow: 'ellipsis',\r\n        maxWidth: '100%',\r\n        overflow: 'hidden'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <div className={`ag-selectable ${classes.wrapper}`}>\r\n                <Grid container className={classes.gridClass}>\r\n                    <Grid container item xs={10} spacing={2}>\r\n                        <Grid item xs={4} className={classes.gridItem}>\r\n                            <img src={props.context.datasets[props.data.Dataset_Name].Icon_URL} alt=\"Mission Icon\" className={classes.vizSampleImage}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4} className={classes.gridItem}>\r\n                            <Table className={classes.variableDetailTable} size='small'>\r\n                                <TableBody>\r\n                                    {tableMapping1.map((row, index) => (\r\n                                        <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell} title={props.data[row[1]]}>{props.data[row[1]]}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                        <TableRow key={tableMapping1.length + 1} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>Start Date</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data.Time_Min.slice(0,10)}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow key={tableMapping1.length + 2} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>End Date</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data.Time_Max.slice(0,10)}</TableCell>\r\n                                        </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4} className={classes.gridItem}>\r\n                            <Table className={classes.variableDetailTable} size='small'>\r\n                                <TableBody>\r\n                                    {tableMapping2.map((row, index) => (\r\n                                        <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                        <TableRow key={tableMapping2.length + 1} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>Maximum Depth[m]</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data.Depth_Max || 'Surface Only'}</TableCell>\r\n                                        </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                <Grid container direction='column' item xs={2} alignContent='center' alignItems='center'>\r\n\r\n                    <Grid item xs={props.data.Acknowledgement ? 3 : 6} className={classes.rightGridItem}>\r\n                        <Button \r\n                            variant='contained' \r\n                            className={classes.datasetDescriptionButton} \r\n                            onClick={() => props.context.handleDescribeDataset(props.data.Dataset_Name)}\r\n                        >\r\n                            <span className={classes.buttonTextWrapper}>Dataset Details</span>\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={props.data.Acknowledgement ? 3 : 6} className={classes.rightGridItem}>\r\n                        <Button \r\n                            variant='contained' \r\n                            className={classes.datasetDescriptionButton} \r\n                            onClick={() => props.context.handleDescribeVariable(props.data.ID)}\r\n                        >\r\n                            <span className={classes.buttonTextWrapper}>Variable Details</span>\r\n                        </Button>\r\n                    </Grid>\r\n                    {   props.data.Acknowledgement &&\r\n                        <Grid item xs={6} className={classes.rightGridItem}>\r\n                            <Typography variant='caption' className={`${classes.gridDetailTypography} ${classes.boldText}`}>\r\n                                Acknowlegement:\r\n                            </Typography>\r\n                            <Typography variant='caption' className={classes.gridDetailTypography} title={props.data.Acknowledgement}>\r\n                                {props.data.Acknowledgement}\r\n                            </Typography>\r\n                        </Grid>\r\n                    }\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst styles = (theme) => ({\r\n    markdown: {\r\n        '& img': {\r\n            maxWidth: '100%',\r\n            margin: '20px auto 20px auto',\r\n            display: 'block'\r\n        },\r\n        '& a': {\r\n            color: theme.palette.primary.main,\r\n            textDecoration: 'none'\r\n        }\r\n    }\r\n})\r\n\r\nclass DatasetDescriptionDialog extends Component {\r\n\r\n    // state = {\r\n    //     references: []\r\n    // }\r\n\r\n    render() {\r\n        const { description, classes, datasetName, clearDescription } = this.props;\r\n        // const { references } = this.state;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                { description ?\r\n                <Dialog open={Boolean(description)} onClose={clearDescription} maxWidth={false}>\r\n                    <DialogTitle>{datasetName}</DialogTitle>\r\n                    <DialogContent>\r\n                        <ReactMarkdown source={description} className={classes.markdown}/>\r\n                    </DialogContent>\r\n\r\n                    {/* {references &&\r\n                        <DialogContent>\r\n                            <strong>References: {references.length}</strong>\r\n                        </DialogContent>\r\n                    } */}\r\n                </Dialog> :\r\n                ''\r\n                }\r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default (withStyles(styles)(DatasetDescriptionDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core';\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalog: state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst VariableDescriptionDialog = (props) => {\r\n    const { catalog, describedVariable } = props;\r\n    let variable = catalog.find((item) => item.ID === describedVariable);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { describedVariable ?\r\n            <Dialog open={Boolean(describedVariable)} onClose={props.clearDescription} maxWidth={false}>\r\n                <DialogTitle>{variable.Long_Name}</DialogTitle>\r\n                { variable.Comment &&\r\n                <DialogContent>\r\n                    {variable.Comment}\r\n                </DialogContent>\r\n                }\r\n                \r\n                <DialogContent>\r\n                    <strong>Source:</strong> {variable.Data_Source}\r\n                </DialogContent>\r\n\r\n                <DialogContent>\r\n                <strong>Distributor:</strong> {variable.Distributor}\r\n                </DialogContent>\r\n            </Dialog> :\r\n            ''\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VariableDescriptionDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = theme => ({\r\n  tooltip: {\r\n      color: theme.palette.secondary.main,\r\n      opacity: 1\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst ConnectedTooltip = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    if(!showHelp) {\r\n        return (\r\n            <React.Fragment>\r\n                {props.children}\r\n            </React.Fragment>\r\n        )}\r\n    else {\r\n        return (\r\n            <Tooltip \r\n                placement={props.placement} \r\n                open={showHelp} \r\n                title={props.title} \r\n                className={classes.tooltip}\r\n                classes={{\r\n                    popper: classes.tooltip\r\n                }}\r\n            >\r\n                {props.children}\r\n            </Tooltip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(ConnectedTooltip));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\nimport DatasetDescriptionDialog from './DatasetDescriptionDialog';\r\nimport VariableDescriptionDialog from './VariableDescriptionDialog';\r\n\r\nimport stringify from 'csv-stringify/lib/sync';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper, Button, Grid, Tooltip } from '@material-ui/core';\r\n\r\nimport ConnectedTooltip from '../UI/ConnectedTooltip';\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"Long_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"Variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"Table_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"Dataset_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"Make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    maxWidth: 160\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"Sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    maxWidth: 160\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"Study_Domain\",\r\n    sortable: true,\r\n    filter: true,\r\n    // hide: true,\r\n    maxWidth: 160,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"Process_Level\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"Spatial_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"Temporal_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"Unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'Keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '70vh', \r\n    width: '92%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '70px 2vw 30px 2vw',\r\n    padding: '20px'\r\n  },\r\n\r\n  downloadButton: {\r\n    margin: '6px 0 0 0',\r\n    textTransform: 'none',\r\n    color: 'black',\r\n    backgroundColor: '#FF8000',\r\n    '&:hover': {\r\n      backgroundColor: '#ab5600',\r\n  }\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  },\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n\r\n  state = {\r\n    filterText: '',\r\n    describedDataset: '',\r\n    describedVariable: null\r\n  }\r\n\r\n  handleDescribeDataset = (dataset) => {\r\n    this.setState({...this.state, describedDataset: dataset})\r\n  }\r\n\r\n  handleDescribeVariable = (variable) => {\r\n    this.setState({...this.state, describedVariable: variable})\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  onGridSizeChanged = (params) => {\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    this.gridApi.sizeColumnsToFit()\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  handleDownloadCatalog = () => {\r\n    let csv = stringify(this.props.catalog, {\r\n      header: true\r\n    });\r\n\r\n    const blob = new Blob([csv], {type: 'text/csv'});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.setAttribute('hidden', '');\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `CMAP_Catalog.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  }\r\n\r\n  render = () => {\r\n    const { classes, datasets } = this.props;\r\n    const { describedDataset, describedVariable } = this.state;\r\n    const description = !datasets ? '' : !datasets[describedDataset] ? '' : datasets[describedDataset].Description;\r\n\r\n    return (\r\n      <Paper elevation={12} className={classes.gridPaper}>\r\n        <DatasetDescriptionDialog \r\n          description={description}\r\n          clearDescription={() => this.handleDescribeDataset('')}\r\n          datasetName={describedDataset}\r\n        />\r\n        <VariableDescriptionDialog\r\n          clearDescription={() => this.handleDescribeVariable(null)}\r\n          describedVariable={describedVariable}\r\n        />\r\n        <Grid container>\r\n          <Grid item xs={3}>\r\n\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <ConnectedTooltip title='Enter one or more search terms.' placement='top'>\r\n              <TextField              \r\n                className={classes.gridSearch}\r\n                autoFocus={true}\r\n                margin=\"normal\"\r\n                id=\"name\"\r\n                type=\"text\"\r\n                variant='outlined'\r\n                name='filterText'\r\n                value={this.state.filterText}\r\n                onChange={this.handleChange}\r\n                label=\"Search Variables\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </ConnectedTooltip>\r\n\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Tooltip placement='top' title='Download the full catalog in CSV format'>\r\n              <Button \r\n                className={classes.downloadButton}\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={this.handleDownloadCatalog}            \r\n              >\r\n                  Download\r\n              </Button>\r\n            </Tooltip>\r\n          </Grid>\r\n\r\n          <Grid item xs={1}>\r\n\r\n          </Grid>\r\n        </Grid>\r\n\r\n          \r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              onGridSizeChanged={this.onGridSizeChanged}\r\n              suppressDragLeaveHidesColumns= {true}\r\n              enableCellTextSelection={true}\r\n              suppressContextMenu={true}\r\n\r\n              // Additional props\r\n              context={{\r\n                datasets,\r\n                handleDescribeDataset: this.handleDescribeDataset,\r\n                handleDescribeVariable: this.handleDescribeVariable\r\n              }}\r\n\r\n              // Setting related to styling\r\n              getRowStyle= {function(params) {\r\n                if (params.node.detail) {\r\n                    return { background: 'transparent' }\r\n                }\r\n              }}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\n\r\nimport { retrievalRequestSend, datasetRetrievalRequestSend } from '../../Redux/actions/catalog';\r\nimport states from '../../Enums/asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog,\r\n    datasets: state.datasets\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend,\r\n    datasetRetrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.datasets) this.props.datasetRetrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog && this.props.datasets) return <AGGridWrapper catalog={this.props.catalog} datasets={this.props.datasets}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { logOut } from '../../Redux/actions/user';\r\n\r\nimport { FontAwesomeIcon as FAIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\r\n\r\nimport { Typography, Menu, MenuItem, ClickAwayListener, Grow, Paper, Popper, MenuList } from '@material-ui/core';\r\n\r\nconst styles = (theme) => ({\r\n    navLink: {\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        },\r\n        fontSize: '13px',\r\n        fontWeight: 100,\r\n        display: 'inline-block',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    floatRight: {\r\n        float: 'right',\r\n        marginRight: 30,\r\n    },\r\n\r\n    icon: {\r\n        display: 'inline-flex',\r\n        verticalAlign: 'middle'\r\n    },\r\n\r\n    dropdown: {\r\n        zIndex: 1300\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    logOut\r\n}\r\n\r\nconst UserNavbarDropdown = (props) => {\r\n    const { classes, user, pathname, logOut } = props;\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const icon = anchorEl ? \r\n        <ExpandLess className={classes.icon} color='primary' fontSize='small'/> : \r\n        <ExpandMore className={classes.icon} color='primary' fontSize='small'/>;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant='caption' className={`${classes.navLink} ${pathname === '/visualization' ? '' : classes.floatRight}`} onClick={handleClick}>\r\n                {/* <i key={icon} className={`fas ${icon} ${classes.icon}`}></i> {user.email} */}\r\n                {user.email}{anchorEl ? <ExpandLess className={classes.icon} color='primary' fontSize='small'/> : <ExpandMore className={classes.icon} color='primary' fontSize='small'/>}\r\n            </Typography>\r\n            <Popper open={Boolean(anchorEl)} anchorEl={anchorEl} role={undefined} transition className={classes.dropdown}>\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                    {...TransitionProps}\r\n                    style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                    >\r\n                        <Paper>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList id=\"menu-list-grow\">\r\n                                    <MenuItem onClick={handleClose} component={Link} to='/profile'>Profile</MenuItem>\r\n                                    <MenuItem onClick={handleClose} component={Link} to='/apikeymanagement'>API Access</MenuItem>\r\n                                    <MenuItem onClick={logOut}>Logout</MenuItem>\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(UserNavbarDropdown)));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen, toggleShowHelp } from '../../Redux/actions/ui';\r\nimport { logOut } from '../../Redux/actions/user';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport UserNavbarDropdown from '../User/UserNavbarDropdown';\r\n\r\nconst styles = theme => ({\r\n    appBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    toolBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    navWrapper: {\r\n        position: 'fixed',\r\n        width: '100vw',\r\n        top: '0px',\r\n        backgroundColor: 'transparent',\r\n        zIndex: 50,\r\n        paddingTop: '10px',\r\n        paddingLeft: '20px',\r\n        textAlign: 'left',\r\n        boxSizing: 'border-box'\r\n    },\r\n\r\n    navLink: {\r\n        textDecoration: 'none',\r\n        marginRight: 20,\r\n        color: 'white',\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        },\r\n        fontSize: '13px',\r\n        fontWeight: 100,\r\n        display: 'inline-block',\r\n        cursor: 'pointer' \r\n    },\r\n\r\n    rightNavLink: {\r\n        float: 'right'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen,\r\n    toggleShowHelp\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    handleNavigate = (route) => {\r\n        this.props.restoreInterfaceDefaults()\r\n        this.props.history.push(route);\r\n    }\r\n\r\n    handleOutsideNavigate = (url) => {\r\n        window.open(url, '_blank')\r\n    }\r\n\r\n    render(){\r\n        const { classes, history, user } = this.props;\r\n        const { pathname } = history.location;\r\n\r\n        return (\r\n            <div className={classes.navWrapper}>\r\n                <Typography variant='caption' href='/' component='a' className={classes.navLink}>Home</Typography>\r\n                <Typography variant='caption' to='/catalog' component={Link} className={classes.navLink}>Catalog</Typography>\r\n                {pathname !== '/visualization' && <Typography variant='caption' to='/apikeymanagement' component={Link} className={classes.navLink}>API Keys</Typography>}\r\n                {pathname !== '/visualization' && <Typography variant='caption' to='/visualization' component={Link} className={classes.navLink}>Visualization</Typography>}\r\n                {user && <UserNavbarDropdown pathname={pathname} user={user}/>}\r\n                {/* <Typography variant='caption' onClick={this.props.toggleShowHelp} className={classes.navLink}>{showHelp ? 'Hide Help' : 'Help(beta) '}</Typography> */}\r\n                {(!user && pathname !== '/visualization') && <Typography variant='caption' onClick={() => this.props.showLoginDialog()} className={`${classes.navLink} ${classes.rightNavLink}`}>Log In</Typography>}\r\n                {(!user && pathname !== '/visualization') && <Typography variant='caption' to='/register' component={Link} className={`${classes.navLink} ${classes.rightNavLink}`}>Register</Typography>}\r\n            </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from '../UI/TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../../Redux/actions/user';\r\n\r\nimport states from '../../Enums/asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n\r\n    bottomError: {\r\n        color: theme.palette.primary.main,\r\n        marginTop: theme.spacing(1)\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <Typography className={classes.bottomError}>That username or email is already in use. Please enter a different username or email address.</Typography>}\r\n                                {this.props.userRegistrationState === states.failed && <Typography className={classes.bottomError}>Registration failed. Please try again.</Typography>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst styles = (theme) => ({\r\n    wrapper: {\r\n        height: '46px',\r\n        display: 'flex',\r\n        cursor: 'pointer',\r\n        borderRadius: '4px',\r\n        '&:hover': {\r\n            boxShadow: '0 0 3px 3px rgba(66,133,244,.3)'\r\n        },\r\n        paddingRight: '14px',\r\n        backgroundColor: '#4285F4',\r\n        width: '200px',\r\n        color: '#ffffff',\r\n\r\n        // backgroundColor: 'white',\r\n        // color: '#444',\r\n    },\r\n\r\n    textSpan: {\r\n        marginTop: '13px',\r\n        marginLeft: '10px',\r\n        fontFamily: \"'Roboto', sans-serif\"\r\n    }\r\n})\r\n\r\nconst GoogleSignInButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div id=\"g-signin2\" className={classes.wrapper}>\r\n            {/* Google Icon */}\r\n            <svg width=\"46px\" height=\"46px\" viewBox=\"0 0 46 46\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\r\n            <title>btn_google_dark_normal_ios</title>\r\n            <desc>Created with Sketch.</desc>\r\n            <defs>\r\n                <filter x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\" filterUnits=\"objectBoundingBox\" id=\"filter-1\">\r\n                    <feOffset dx=\"0\" dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"></feOffset>\r\n                    <feGaussianBlur stdDeviation=\"0.5\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\"></feGaussianBlur>\r\n                    <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.168 0\" in=\"shadowBlurOuter1\" type=\"matrix\" result=\"shadowMatrixOuter1\"></feColorMatrix>\r\n                    <feOffset dx=\"0\" dy=\"0\" in=\"SourceAlpha\" result=\"shadowOffsetOuter2\"></feOffset>\r\n                    <feGaussianBlur stdDeviation=\"0.5\" in=\"shadowOffsetOuter2\" result=\"shadowBlurOuter2\"></feGaussianBlur>\r\n                    <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.084 0\" in=\"shadowBlurOuter2\" type=\"matrix\" result=\"shadowMatrixOuter2\"></feColorMatrix>\r\n                    <feMerge>\r\n                        <feMergeNode in=\"shadowMatrixOuter1\"></feMergeNode>\r\n                        <feMergeNode in=\"shadowMatrixOuter2\"></feMergeNode>\r\n                        <feMergeNode in=\"SourceGraphic\"></feMergeNode>\r\n                    </feMerge>\r\n                </filter>\r\n                <rect id=\"path-2\" x=\"0\" y=\"0\" width=\"40\" height=\"40\" rx=\"2\"></rect>\r\n                <rect id=\"path-3\" x=\"5\" y=\"5\" width=\"38\" height=\"38\" rx=\"1\"></rect>\r\n            </defs>\r\n            <g id=\"Google-Button\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n                <g id=\"9-PATCH\"  transform=\"translate(-608.000000, -219.000000)\"></g>\r\n                <g id=\"btn_google_dark_normal\" transform=\"translate(-1.000000, -1.000000)\">\r\n                    <g id=\"button\" transform=\"translate(4.000000, 4.000000)\" filter=\"url(#filter-1)\">\r\n                        <g id=\"button-bg\">\r\n                            <use fill=\"#4285F4\" fillRule=\"evenodd\" xlinkHref=\"#path-2\"></use>\r\n                            <use fill=\"none\" xlinkHref=\"#path-2\"></use>\r\n                            <use fill=\"none\" xlinkHref=\"#path-2\"></use>\r\n                            <use fill=\"none\" xlinkHref=\"#path-2\"></use>\r\n                        </g>\r\n                    </g>\r\n                    <g id=\"button-bg-copy\">\r\n                        <use fill=\"#FFFFFF\" fillRule=\"evenodd\" xlinkHref=\"#path-3\"></use>\r\n                        <use fill=\"none\" xlinkHref=\"#path-3\"></use>\r\n                        <use fill=\"none\" xlinkHref=\"#path-3\"></use>\r\n                        <use fill=\"none\" xlinkHref=\"#path-3\"></use>\r\n                    </g>\r\n                    <g id=\"logo_googleg_48dp\" transform=\"translate(15.000000, 15.000000)\">\r\n                        <path d=\"M17.64,9.20454545 C17.64,8.56636364 17.5827273,7.95272727 17.4763636,7.36363636 L9,7.36363636 L9,10.845 L13.8436364,10.845 C13.635,11.97 13.0009091,12.9231818 12.0477273,13.5613636 L12.0477273,15.8195455 L14.9563636,15.8195455 C16.6581818,14.2527273 17.64,11.9454545 17.64,9.20454545 L17.64,9.20454545 Z\" id=\"Shape\" fill=\"#4285F4\"></path>\r\n                        <path d=\"M9,18 C11.43,18 13.4672727,17.1940909 14.9563636,15.8195455 L12.0477273,13.5613636 C11.2418182,14.1013636 10.2109091,14.4204545 9,14.4204545 C6.65590909,14.4204545 4.67181818,12.8372727 3.96409091,10.71 L0.957272727,10.71 L0.957272727,13.0418182 C2.43818182,15.9831818 5.48181818,18 9,18 L9,18 Z\" id=\"Shape\" fill=\"#34A853\"></path>\r\n                        <path d=\"M3.96409091,10.71 C3.78409091,10.17 3.68181818,9.59318182 3.68181818,9 C3.68181818,8.40681818 3.78409091,7.83 3.96409091,7.29 L3.96409091,4.95818182 L0.957272727,4.95818182 C0.347727273,6.17318182 0,7.54772727 0,9 C0,10.4522727 0.347727273,11.8268182 0.957272727,13.0418182 L3.96409091,10.71 L3.96409091,10.71 Z\" id=\"Shape\" fill=\"#FBBC05\"></path>\r\n                        <path d=\"M9,3.57954545 C10.3213636,3.57954545 11.5077273,4.03363636 12.4404545,4.92545455 L15.0218182,2.34409091 C13.4631818,0.891818182 11.4259091,0 9,0 C5.48181818,0 2.43818182,2.01681818 0.957272727,4.95818182 L3.96409091,7.29 C4.67181818,5.16272727 6.65590909,3.57954545 9,3.57954545 L9,3.57954545 Z\" id=\"Shape\" fill=\"#EA4335\"></path>\r\n                        <path d=\"M0,0 L18,0 L18,18 L0,18 L0,0 Z\" id=\"Shape\" ></path>\r\n                    </g>\r\n                    <g id=\"handles_square\" ></g>\r\n                </g>\r\n            </g>\r\n            </svg>\r\n\r\n            <span className={classes.textSpan}>\r\n                {props.text}\r\n            </span>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(GoogleSignInButton);","import React, { Component } from 'react';\r\n\r\nimport { Paper, Button, Typography } from '@material-ui/core';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\nimport GoogleSignInButton from './GoogleSignInButton';\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        width: '60%',\r\n        margin: '5% auto',\r\n        height: '40vh'\r\n    },\r\n\r\n    emailSignUpButton: {\r\n        textTransform: 'none'\r\n    },\r\n\r\n    googleWrapper: {\r\n        margin: '50px auto 0 0',\r\n        display: 'inline-block'\r\n    },\r\n\r\n    description: {\r\n        paddingTop: '50px'\r\n    },\r\n\r\n    emailSignUpWrapper: {\r\n        marginTop: '40px'\r\n    }\r\n})\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        showStepper: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // clean this listener up on unmount?\r\n        window.gapi.auth2.getAuthInstance().attachClickHandler(\"g-signin2\");\r\n    }\r\n\r\n    handleShowStepper = () => {\r\n        this.setState({showStepper: true})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {!this.state.showStepper &&\r\n                    <Paper className={classes.paper}>\r\n                        <Typography className={classes.description}>\r\n                            Create an account to visualize data, and access the Simons CMAP API.\r\n                        </Typography>\r\n\r\n                        <div className={classes.googleWrapper}>\r\n                            <GoogleSignInButton text='Sign up with Google'/>\r\n                        </div>\r\n\r\n                        <div className={classes.emailSignUpWrapper}>\r\n                            <Button className={classes.emailSignUpButton} onClick={this.handleShowStepper}>\r\n                                Sign up with an Email Address\r\n                            </Button>\r\n                        </div>\r\n                    </Paper>                \r\n                }\r\n                {this.state.showStepper && <RegistrationStepper/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Register);","const validation = {\r\n    depth: {\r\n        depthOneIsLower: 'Cannot be larger than end',\r\n        depthOneOutOfBounds: 'Must be smaller than $',\r\n        depthTwoOutOfBounds: 'Must be larger than $',\r\n        negative: 'Cannot be negative'\r\n    },\r\n\r\n    date: {\r\n        dateOneIsLater: 'Cannot be after end',\r\n        dateOneOutOfBounds: 'Must be before $',\r\n        dateTwoOutOfBounds: 'Must be after $'\r\n    },\r\n\r\n    lat: {\r\n        latOneIsHigher: 'Cannot be larger than end.',\r\n        latOneOutOfBounds: 'Must be less than $',\r\n        latTwoOutOfBounds: 'Must be greater than $'\r\n    },\r\n\r\n    lon: {\r\n        lonOneIsHigher: 'Cannot be larger than end.',\r\n        lonOneOutOfBounds: 'Must be less than $',\r\n        lonTwoOutOfBounds: 'Must be greater than $'\r\n    },\r\n\r\n    type: {\r\n        dataIsIrregular: '$ is not available for sparse data',\r\n        dateRangeRequired: '$ requires a range of dates',\r\n        depthRangeRequired: '$ requires a range of depths',\r\n        surfaceOnlyDataset: '$ contains only surface data',\r\n        irregularOnly: 'Sparse map is only available for sparse data',\r\n        dataSizeTooLarge: 'Data set is too large for this visualization type.',\r\n        webGLContextLimit: 'Limit exceeded for sparse and heatmaps. Please delete one or more to proceed.'\r\n    },\r\n\r\n    generic: {\r\n        invalid: 'Invalid input',\r\n        dataSizeWarning: 'Wait time and application performance may be poor due to size of data.',\r\n        dataSizePrevent: 'Data set is too large. Please reduce date range or area size.',\r\n        variableMissing: 'Please select a variable',\r\n        vizTypeMissing: 'Please select a visualization type'\r\n    }\r\n}\r\n\r\nexport default validation;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    const { data } = props;\r\n\r\n    if(!data) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{data.Long_Name}</DialogTitle>\r\n            <DialogContent>\r\n                { data.Comment &&\r\n                    <DialogContentText>\r\n                        {data.Comment}\r\n                    </DialogContentText>\r\n                }\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Dataset</TableCell>\r\n                                <TableCell title={data.Dataset_Name}>{data.Dataset_Name.length > 25 ? data.Dataset_Name.slice(0,23) + '...' : data.Dataset_Name}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Table Name</TableCell>\r\n                                <TableCell title={data.Table_Name}>{data.Table_Name > 25 ? data.Table_Name.slice(0,23) + '...' : data.Table_Name}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Source</TableCell>\r\n                                <TableCell title={data.Data_Source}>{data.Data_Source > 25 ? data.Data_Source.slice(0,23) + '...' : data.Data_Source}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Distributor</TableCell>\r\n                                <TableCell title={data.Distributor}>{data.Distributor.length > 25 ? data.Distributor.slice(0,23) + '...' : data.Distributor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{data.Sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{data.Spatial_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{data.Temporal_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{data.Time_Min ? data.Time_Min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{data.Time_Max ? data.Time_Max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lat_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lat_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lon_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{data.Depth_Min ? `${data.Depth_Min}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{data.Depth_Max ? `${data.Depth_Max}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            {data.Variable_Min &&\r\n                                <TableRow>\r\n                                    <TableCell>Minimum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Min}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Max &&\r\n                                <TableRow>\r\n                                    <TableCell>Maximum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Max}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Mean && \r\n                                <TableRow>\r\n                                    <TableCell>Mean Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Mean}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Std &&\r\n                                <TableRow>\r\n                                    <TableCell>Standard Deviation({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Std}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);\r\n\r\n// Variable_Max: \"4.999\"\r\n// Variable_Mean: \"-0.0000008547\"\r\n// Variable_Min: \"-4.9956\"\r\n// Variable_Std: \"0.1428013424\"","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nconst mapTemporalResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [temporalResolutions.threeMinutes] : 1,\r\n        [temporalResolutions.sixHourly] : 1,\r\n        [temporalResolutions.daily] : 1,\r\n        [temporalResolutions.weekly] : 7,\r\n        [temporalResolutions.monthly] : 30,\r\n        [temporalResolutions.annual] : 365,\r\n        [temporalResolutions.irregular] : null,\r\n        [temporalResolutions.monthlyClimatology]: 30,\r\n        [temporalResolutions.threeDay]: 3,\r\n        [temporalResolutions.eightDayRunning]: 8,\r\n        [temporalResolutions.eightDays]: 8\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapTemporalResolutionToNumber;","const utcDateStringToLocal = (utcString) => {\r\n    let date = new Date(utcString);\r\n    let utcYear = date.getUTCFullYear();\r\n    let utcMonth = date.getUTCMonth();\r\n    let utcDate = date.getUTCDate();\r\n\r\n    let newDate = new Date();\r\n    newDate.setFullYear(utcYear, utcMonth, utcDate);\r\n    return newDate;\r\n}\r\n\r\nexport default utcDateStringToLocal;","\r\nconst darwinDepths = [\r\n    5,\r\n    15,\r\n    25,\r\n    35,\r\n    45,\r\n    55,\r\n    65,\r\n    75.005,\r\n    85.025,\r\n    95.095,\r\n    105.31,\r\n    115.87,\r\n    127.15,\r\n    139.74,\r\n    154.47,\r\n    172.4,\r\n    194.735,\r\n    222.71,\r\n    257.47,\r\n    299.93,\r\n    350.68,\r\n    409.93,\r\n    477.47,\r\n    552.71,\r\n    634.735,\r\n    722.4,\r\n    814.47,\r\n    909.74,\r\n    1007.155,\r\n    1105.905,\r\n    1205.535,\r\n    1306.205,\r\n    1409.15,\r\n    1517.095,\r\n    1634.175,\r\n    1765.135,\r\n    1914.15,\r\n    2084.035,\r\n    2276.225,\r\n    2491.25,\r\n    2729.25,\r\n    2990.25,\r\n    3274.25,\r\n    3581.25,\r\n    3911.25,\r\n    4264.25,\r\n    4640.25,\r\n    5039.25,\r\n    5461.25,\r\n    5906.25\r\n]\r\n\r\nconst piscesDepths = [\r\n    0.494024991989,\r\n    1.54137504101,\r\n    2.64566898346,\r\n    3.81949496269,\r\n    5.07822418213,\r\n    6.44061422348,\r\n    7.92956018448,\r\n    9.5729970932,\r\n    11.404999733,\r\n    13.4671401978,\r\n    15.8100700378,\r\n    18.4955596924,\r\n    21.5988197327,\r\n    25.2114105225,\r\n    29.4447307587,\r\n    34.4341506958,\r\n    40.3440513611,\r\n    47.3736915588,\r\n    55.764289856,\r\n    65.8072662354,\r\n    77.8538513184,\r\n    92.3260726929,\r\n    109.729301453,\r\n    130.666000366,\r\n    155.850692749,\r\n    186.125595093,\r\n    222.475204468,\r\n    266.040313721,\r\n    318.127410889,\r\n    380.213012695,\r\n    453.937713623,\r\n    541.088928223,\r\n    643.566772461,\r\n    763.333129883,\r\n    902.339294434,\r\n    1062.43994141,\r\n    1245.29101562,\r\n    1452.25097656,\r\n    1684.28405762,\r\n    1941.89294434,\r\n    2225.07788086,\r\n    2533.3359375,\r\n    2865.70288086,\r\n    3220.82006836,\r\n    3597.03198242,\r\n    3992.48388672,\r\n    4405.22412109,\r\n    4833.29101562,\r\n    5274.78417969,\r\n    5727.91699219\r\n]\r\n\r\nconst _piscesTables = [\r\n    'tblPisces_NRT',\r\n    'tblPisces_NRT_Calendar'\r\n]\r\n\r\nconst _darwinTable = [\r\n    'tblDarwin_Chl_Climatology',\r\n    'tblDarwin_Ecosystem',\r\n    'tblDarwin_Nutrient',\r\n    'tblDarwin_Nutrient_Climatology',\r\n    'tblDarwin_Ocean_Color',\r\n    'tblDarwin_Phytoplankton',\r\n    'tblDarwin_Plankton_Climatology'\r\n]\r\n\r\nconst piscesTable = new Set(_piscesTables);\r\nconst darwinTable = new Set(_darwinTable);\r\n\r\nconst exports = {\r\n    count: (field, depth1, depth2) => {\r\n        const { Table_Name: table } = field.data;\r\n        var count = 0;\r\n    \r\n        if(piscesTable.has(table)) {\r\n            for(let i = 0; i < piscesDepths.length; i++){\r\n                if(piscesDepths[i] > depth2) break;\r\n                if(piscesDepths[i] > depth1) count ++; \r\n            }\r\n        } else if (darwinTable.has(table)) {\r\n            for(let i = 0; i < darwinDepths.length; i++){\r\n                if(darwinDepths[i] > depth2) break;\r\n                if(darwinDepths[i] > depth1) count ++; \r\n            }\r\n        } else {}\r\n        return count;\r\n    },\r\n\r\n    piscesTable,\r\n    darwinTable,\r\n    piscesDepths,\r\n    darwinDepths\r\n}\r\n\r\nexport default exports;","import visualizationSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nexport default (charts) => {\r\n    let count = 0;\r\n    charts.forEach(chart => {\r\n        if(chart.subType === visualizationSubTypes.heatmap) count ++;\r\n        if(chart.subType === visualizationSubTypes.sparse){\r\n            count ++;\r\n            if(chart.data.variableValues.length > 10000) count +=3;\r\n        }\r\n    })\r\n    return count;\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { VariableSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport { ButtonGroup, Grid, IconButton, Icon, ListItem, MenuItem, Typography, Drawer, TextField, FormControl, InputLabel, Button, Tooltip} from '@material-ui/core';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { Cached, LibraryBooks, ArrowRight, ChevronLeft, ChevronRight, InsertChartOutlined, Language, Delete, CloudDownload, Info } from '@material-ui/icons';\r\n\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\nimport states from '../../Enums/asyncRequestStates';\r\nimport colors from '../../Enums/colors';\r\nimport validation from '../../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend, clearCharts, csvDownloadRequestSend } from '../../Redux/actions/visualization';\r\nimport { snackbarOpen } from '../../Redux/actions/ui';\r\n\r\nimport utcDateStringToLocal from '../../Utility/utcDateStringToLocal';\r\nimport depthUtils from '../../Utility/depthCounter';\r\nimport countWebGLContexts from '../../Utility/countWebGLContexts';\r\n\r\nimport ConnectedTooltip from '../UI/ConnectedTooltip';\r\n\r\nconst navDrawerWidth = 320;\r\n\r\nconst errorHeightAdjust = 23;\r\n\r\nconst styles = theme => ({\r\n    drawer: {\r\n        width: navDrawerWidth,\r\n        top: 32,\r\n        bottom: 'auto',\r\n        overflow: 'visible'\r\n    },\r\n\r\n    drawerPaper: {\r\n        width: navDrawerWidth,\r\n        height: '540px',\r\n        top: 'calc(50% - 270px)',\r\n        borderRadius: '0 4px 4px 0',\r\n        boxShadow: '2px 2px  2px 2px #242424',\r\n        border: 'none',\r\n        overflow: 'visible',\r\n        backgroundColor: '#424242'\r\n    },\r\n\r\n    drawerPaperError1: {\r\n        height: `${540 + errorHeightAdjust}px`\r\n    },\r\n\r\n    drawerPaperError2: {\r\n        height: `${540 + errorHeightAdjust * 2}px`\r\n    },\r\n\r\n    drawerPaperError3: {\r\n        height: `${540 + errorHeightAdjust * 3}px`\r\n    },\r\n\r\n    drawerPaperError4: {\r\n        height: `${540 + errorHeightAdjust * 4}px`\r\n    },\r\n\r\n    drawerPaperError5: {\r\n        height: `${540 + errorHeightAdjust * 5}px`\r\n    },\r\n\r\n  openPanelChevron: {\r\n    position: 'fixed',\r\n    left: '5px',\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  closePanelChevron: {\r\n    position: 'fixed',\r\n    left: navDrawerWidth + 5,\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  groupedButtons: {\r\n      width: '50%',\r\n      border: '1px solid #313131',\r\n      borderRadius: 0,\r\n      backgroundColor: '#3c3c3c'\r\n  },\r\n\r\n  controlPanelForm: {\r\n      marginTop: theme.spacing(1)\r\n  },\r\n\r\n  tableStatsButton: {\r\n      borderRadius: 0,\r\n      paddingTop: '11px',\r\n      backgroundColor: '#424242'\r\n  },\r\n\r\n    formGridItem: {\r\n        borderLeft: '1px solid #313131',\r\n        backgroundColor: '#424242'\r\n    },\r\n\r\n  vizTypeSelectFormControl: {\r\n      width: '100%',\r\n      '&:disabled': {\r\n        backgroundColor: 'transparent'\r\n    }\r\n  },\r\n\r\n  depressed: {\r\n      boxShadow: 'inset 1px 1px 5px #1c1c1c'\r\n  },\r\n\r\n  padLeft: {\r\n      padding: '6px 0 2px 7px'\r\n  },\r\n\r\n  visualizeButton: {\r\n      height: '56px',\r\n      borderRadius: 0,\r\n      backgroundColor: '#424242',\r\n      color: theme.palette.primary.main,\r\n      fontVariant: 'normal',\r\n      '&:disabled': {\r\n        backgroundColor: 'transparent'\r\n    },\r\n      '&:hover': {backgroundColor: '#874400'}\r\n  },\r\n\r\n  helperText: {\r\n    color: 'yellow'\r\n  },\r\n\r\n  vizButtonTooltip: {\r\n    color: 'yellow'\r\n  },\r\n\r\n  datePickerInputAdornment: {\r\n      padding: 0\r\n  },\r\n\r\n  clearChartsButton: {\r\n      borderRadius: 0,\r\n      backgroundColor: '#3c3c3c',\r\n      width: '100%',\r\n      borderRight: '1px solid #313131'\r\n\r\n  },\r\n\r\n  resetSPParamsButton: {\r\n    borderRadius: 0,\r\n    backgroundColor: '#3c3c3c',\r\n    width: '100%',\r\n  },\r\n\r\n  datePicker: {\r\n      width: '100%'\r\n  },\r\n\r\n  singleValueReplacement: {\r\n      display: 'inline',\r\n      position: 'relative',\r\n      width: 0,\r\n      height: 0\r\n  }\r\n});\r\n\r\nconst overrideDisabledStyle = {\r\n    backgroundColor: 'transparent'\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    showHelp: state.showHelp,\r\n    datasets: state.datasets,\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend,\r\n    clearCharts,\r\n    csvDownloadRequestSend,\r\n    snackbarOpen\r\n}\r\n\r\nconst getDatePlaceholder = (date) => {\r\n    if(isNaN(new Date(date)).valueOf()) return 'yyyy-MM-dd';\r\n    \r\n    let month  = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let year = date.getFullYear();\r\n    return [year, month < 10 ? '0' + month : month, day < 10 ? '0' + day : day].join('-');\r\n}\r\n\r\nconst groupHeaderHeight = 37;\r\nconst height = 35;\r\n\r\nconst reactWindowListRef = React.createRef();\r\nconst selectRef = React.createRef();\r\n\r\nclass MenuList extends Component {\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n      if(reactWindowListRef.current) reactWindowListRef.current.resetAfterIndex(0);\r\n      if(!(this.props.children && this.props.children.length)) return;\r\n      let scrollOffset = 0;\r\n      let foundFocus = false;\r\n      this.props.children.forEach(child => {\r\n        if(foundFocus) return;\r\n\r\n        let count = groupHeaderHeight;\r\n        let groupHasFocus= false;\r\n        for(let i = 0; i < child.props.children.length; i++){\r\n          if(child.props.children[i].props.isFocused) {\r\n            foundFocus = true;\r\n            groupHasFocus = true;\r\n            break;\r\n          }\r\n          count += 37.6;\r\n        }\r\n\r\n        if(groupHasFocus) scrollOffset += count;\r\n        else scrollOffset += 37.6;\r\n      })\r\n      if(foundFocus) reactWindowListRef.current.scrollTo(scrollOffset > 150 ? scrollOffset - 150 : 0);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, getValue } = this.props;\r\n\r\n        if(!children || !children.length) return '';\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        const groupHeights = children.map(child => {\r\n          return child.props.children.some(grandChild => grandChild.props.isFocused) ? child.props.children.length * 37.6 + groupHeaderHeight : groupHeaderHeight;\r\n        });\r\n        const totalHeight = groupHeights.reduce((acc, cur) => acc + cur, 0);\r\n        const estimatedItemSize = totalHeight / children.length;\r\n        const getItemSize = index => groupHeights[index];\r\n\r\n        return (\r\n            <ReactWindowList\r\n                height={totalHeight < 400 ? totalHeight :  400}\r\n                estimatedItemSize={estimatedItemSize}\r\n                itemCount={children.length}\r\n                itemSize={getItemSize}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={{...style}}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\nclass Group extends Component {\r\n    render() {\r\n        const hasFocus = this.props.children.some(element => element.props.isFocused);\r\n        const sensor = this.props.children[0].props.data.data.Sensor;\r\n\r\n      return (\r\n          <React.Fragment>\r\n            <CustomHeading \r\n              {...this.props.headingProps} \r\n              headingLabel={this.props.data.label} \r\n              firstChild={this.props.children[0].props.data}\r\n              hasFocus={hasFocus}\r\n              sensor={sensor}\r\n              tableName={this.props.children[0].props.data.data.Table_Name}\r\n              selectProps={this.props.selectProps}\r\n            />\r\n            <div hidden={!hasFocus}>\r\n              {this.props.children.map(child => child)}\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n    }    \r\n}\r\n\r\nconst customHeadingStyles = (theme) => ({\r\n    customHeading: {\r\n        backgroundColor: 'rgba(0,0,0,.5)',\r\n        height: groupHeaderHeight,\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(122,67,0,.5)',\r\n        },\r\n        boxShadow: '0px 1px 1px 1px #242424'\r\n    },\r\n\r\n    icon: {\r\n        marginRight: '10px',\r\n        width: '30px'\r\n    },\r\n\r\n    typography: {\r\n        width: '650px'\r\n    }\r\n})\r\n\r\nconst _CustomHeading = props => {\r\n    const { classes, sensor, selectProps } = props;\r\n    let iconClass;\r\n\r\n    if(sensor === 'Satellite') iconClass = 'fa-satellite';\r\n    else if(sensor === 'Blend') iconClass = 'fa-laptop';\r\n    else iconClass = 'fa-ship';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <ListItem \r\n          button \r\n          alignItems='center' \r\n          onClick={() => selectRef.current.select.setState({focusedOption: props.hasFocus ? null : props.firstChild})}\r\n          className={classes.customHeading}\r\n        >\r\n            <Icon fontSize='small' color='inherit' className={`fas ${iconClass} ${classes.icon}`}></Icon>\r\n        <Typography className={classes.typography}>\r\n            {props.headingLabel.length > 70 ? props.headingLabel.slice(0,67) + '...' : props.headingLabel}\r\n        </Typography>\r\n\r\n        <Tooltip title='Download Data' placement='right'>\r\n            <IconButton \r\n                color='inherit' \r\n                onClick={(e) => {\r\n                    // selectProps.handleDownloadCsvClick(tableName, props.headingLabel);\r\n                    selectProps.handleSetDownloadTarget({dataset: props.headingLabel})\r\n                    e.stopPropagation();\r\n                }}>\r\n                <CloudDownload/>\r\n            </IconButton>\r\n        </Tooltip>\r\n\r\n        { selectProps.datasets[props.headingLabel] &&\r\n            <Tooltip title='Dataset Info' placement='right'>\r\n                <IconButton \r\n                    color='inherit' \r\n                    onClick={(e) => {\r\n                        window.open(selectProps.datasets[props.headingLabel].Doc_URL);\r\n                        e.stopPropagation();\r\n                    }}\r\n                >\r\n                    <Info/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        }\r\n        </ListItem>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\nconst CustomHeading = withStyles(customHeadingStyles)(_CustomHeading);\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n    <components.DropdownIndicator {...props}>\r\n        <ArrowRight/>\r\n    </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n      <components.Option \r\n        {...props} \r\n        innerProps={{\r\n            ...props.innerProps, \r\n            // Prevent focus / scroll events when mousing over options\r\n            onMouseMove: (e) => e.preventDefault(), \r\n            onMouseOver: (e) => e.preventDefault()\r\n        }}>\r\n    </components.Option>\r\n    )\r\n}\r\n\r\nconst GroupHeading = (props) => '';\r\n\r\nconst formatOptionLabel = (option, meta) => {\r\n    return option.label;\r\n}\r\n\r\nclass VizControlPanel extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.indexStrategy = new JsSearch.AllSubstringsIndexStrategy()\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        search.addIndex('Table_Name');\r\n        search.addIndex('Dataset_Name');\r\n        search.addIndex('Study_Domain');\r\n        search.addIndex('Spatial_Resolution');\r\n        search.addIndex('Temporal_Resolution');\r\n\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: '',\r\n            showControlPanel: true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search});\r\n        }\r\n    }\r\n\r\n    handleOpenControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: true})\r\n    }\r\n\r\n    handleCloseControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: false})\r\n    }      \r\n    \r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        var options = {};\r\n\r\n        items.forEach(item => {\r\n            if(!options[item.Dataset_Name]){\r\n                options[item.Dataset_Name] = {\r\n                    label: item.Dataset_Name,\r\n                    options: []\r\n                }\r\n            }\r\n\r\n            options[item.Dataset_Name].options.push({\r\n                value: item.Variable,\r\n                label: item.Long_Name.length < 80 ? item.Long_Name : item.Long_Name.slice(0,78) + '...',\r\n                data: item\r\n            })\r\n        });\r\n\r\n        let sortedOptions = Object.values(options).sort((opt1, opt2) => {\r\n            return opt1.label < opt2.label ? -1 : 1;\r\n        })\r\n\r\n        return sortedOptions;\r\n    }\r\n\r\n    estimateCsvSize = (datasetName) => {\r\n        // let members = [];\r\n        let count = 0;\r\n        this.props.catalog.forEach((member, i) => {\r\n            if(member.Dataset_Name === datasetName){\r\n                count += parseInt(member.Variable_Count) || 0;\r\n                // members.push(member);\r\n            }\r\n        })\r\n        return count;\r\n    }\r\n\r\n    handleDownloadCsvClick = (tableName, datasetName) => {\r\n        let query = `select%20*%20from%20${tableName}`;\r\n        let count = this.estimateCsvSize(datasetName);\r\n        if(count < 3000000){\r\n            this.props.csvDownloadRequestSend(query, datasetName);\r\n        } else {\r\n            this.props.snackbarOpen('Data set too large');\r\n        }\r\n    }\r\n\r\n    handleResetSPParams = () => {\r\n        this.props.resetSPParams();\r\n        this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') {\r\n            this.setState({...this.state, searchField: searchString});\r\n            selectRef.current.select.setState({focusedOption: -1})\r\n        }\r\n\r\n        if(action.action === 'escape-clear'){\r\n            this.setState({...this.state, searchField: searchString});\r\n            selectRef.current.select.setState({focusedOption: -1})\r\n        }\r\n        // if(action.action ==='set-value') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, depth1, depth2, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        \r\n        const dayDiff = (date2 - date1) / 86400000;\r\n        \r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n        \r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const depthCount = depthUtils.count(fields, depth1, depth2) || 1;\r\n        \r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * depthCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDateValid = () => {\r\n        if(isNaN(new Date(this.props.dt1)).valueOf() || !this.props.dt1) return 'Start date is invalid';\r\n    }\r\n\r\n    checkEndDateValid = () => {\r\n        if(isNaN(new Date(this.props.dt2)).valueOf() || !this.props.dt1) return 'End date is invalid';\r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 > this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        return '';\r\n    }\r\n    \r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = (dataSize) => {\r\n        if(!this.props.selectedVizType) return '';\r\n        if(dataSize > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = (dataSize) => {\r\n        const webGLCount = countWebGLContexts(this.props.charts);\r\n        if(this.props.selectedVizType === vizSubTypes.heatmap && webGLCount > 14) return validation.type.webGLContextLimit;\r\n        if(this.props.selectedVizType === vizSubTypes.sparse && webGLCount > 11) return validation.type.webGLContextLimit;\r\n\r\n        if(this.props.selectedVizType === vizSubTypes.heatmap){\r\n            let availableContexts = 16 - webGLCount;\r\n            const depthCount = depthUtils.count(this.props.fields, this.props.depth1, this.props.depth2) || 1;\r\n            if(availableContexts - depthCount < 1) return 'Too many distinct depths to render heatmap. Please reduce depth range or select section map.';\r\n        }\r\n        if(this.props.selectedVizType !== vizSubTypes.histogram && this.props.selectedVizType !== vizSubTypes.heatmap && dataSize > 1200000){\r\n            return validation.generic.dataSizePrevent;\r\n        }\r\n        if(dataSize > 6000000) return validation.generic.dataSizePrevent;\r\n        if(!this.props.fields) return validation.generic.variableMissing;\r\n        if(!this.props.selectedVizType) return validation.generic.vizTypeMissing;\r\n        return ''}\r\n\r\n    handleShowChartsAndResize = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 30);\r\n        this.props.handleShowCharts();     \r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField, showControlPanel } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            showCharts,\r\n            handleShowGlobe,\r\n            handleChange,\r\n            handleLatLonChange,\r\n            datasets,\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        const dataSize = this.estimateDataSize();\r\n\r\n        var catalogMinDate = fields && utcDateStringToLocal(fields.data.Time_Min).setHours(0,0,0,0);\r\n        var catalogMaxDate = fields && utcDateStringToLocal(fields.data.Time_Max).setHours(0,0,0,0);\r\n        var zeroedDT1 = dt1.setHours(0,0,0,0);\r\n        var zeroedDT2 = dt2.setHours(0,0,0,0);\r\n        \r\n        var minDate = fields ? catalogMinDate : '';\r\n\r\n        let minDateMessage = fields && zeroedDT2 < catalogMinDate ? 'End cannot be before dataset start date' : '';\r\n        var maxDateMessage;\r\n        var maxDate;\r\n\r\n        if(!fields){\r\n            maxDate = zeroedDT2;\r\n            maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after end' : '';\r\n        } else {\r\n            \r\n\r\n            if(catalogMaxDate < zeroedDT2){\r\n                maxDate = catalogMaxDate;\r\n                maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after dataset end date' : '';\r\n            } else {\r\n                maxDate = zeroedDT2;\r\n                maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after end' : '';\r\n            }\r\n        }\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(dataSize),\r\n                this.checkGeneralPrevent(dataSize),\r\n                this.checkStartDateValid(),\r\n                this.checkEndDateValid()\r\n            ];\r\n        } else validations = Array(16).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage,\r\n            startDateValidMessage,\r\n            endDateValidMessage\r\n        ] = validations;\r\n\r\n        const checkDisableVisualizeList = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage,\r\n            minDateMessage,\r\n            maxDateMessage,\r\n            startDateValidMessage,\r\n            endDateValidMessage\r\n        ];\r\n\r\n        let cdvl = checkDisableVisualizeList;\r\n        let errorCount = 0;\r\n        \r\n        if(cdvl[0] || cdvl[1]) errorCount ++;\r\n        if(cdvl[2] || cdvl[3]) errorCount ++;\r\n        if(cdvl[4] || cdvl[5]) errorCount ++;\r\n        if(cdvl[7] || cdvl[9]) errorCount ++;\r\n        if(cdvl[8] || cdvl[10]) errorCount ++;\r\n\r\n        const errorSizeAdjust = errorCount > 0 ? 'drawerPaperError' + errorCount : '';\r\n\r\n        const checkDisableVisualize = () => {\r\n            for(let i = 0; i < checkDisableVisualizeList.length; i++){\r\n                if(checkDisableVisualizeList[i]) return checkDisableVisualizeList[i];\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        const disableVisualizeMessage = checkDisableVisualize();\r\n\r\n        const visualizeButtonTooltip = disableVisualizeMessage ? disableVisualizeMessage : generalWarnMessage ? generalWarnMessage : '';\r\n\r\n        return (\r\n            <div>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n\r\n                { showControlPanel ? \r\n\r\n                        <IconButton \r\n                            className={classes.closePanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleCloseControlPanel}>\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                :\r\n                    \r\n                        <IconButton \r\n                            className={classes.openPanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleOpenControlPanel}>\r\n                            <ChevronRight />\r\n                        </IconButton>\r\n                }\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={showControlPanel}\r\n                    classes={{\r\n                        paper: `${classes.drawerPaper} ${classes[errorSizeAdjust]}`,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >\r\n                    <ButtonGroup>\r\n                        <Tooltip title='Show Globe' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${!showCharts && classes.depressed}`} \r\n                                onClick={handleShowGlobe}\r\n                                color='inherit'\r\n                            >\r\n                                <Language/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        \r\n                        <Tooltip title='Show Charts' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${showCharts && classes.depressed}`}\r\n                                onClick={this.handleShowChartsAndResize}\r\n                                color='inherit'\r\n                            >\r\n                                <InsertChartOutlined/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ButtonGroup>\r\n                    \r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            <Tooltip title='Clear Charts' placement='bottom'>\r\n                                <IconButton color='inherit' onClick={this.props.clearCharts} className={classes.clearChartsButton}>\r\n                                    <Delete/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <Tooltip title='Reset Parameters' placement='right'>\r\n                                <IconButton color='inherit' onClick={this.handleResetSPParams} className={classes.resetSPParamsButton}>\r\n                                    <Cached/>\r\n                                </IconButton>\r\n                            </Tooltip>                            \r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <form>\r\n                        <Grid container>\r\n                            <Grid item xs={10}>\r\n                                <ConnectedTooltip placement='top' title='Enter one or more search terms.'>\r\n                                    <Select\r\n                                        formatOptionLabel={formatOptionLabel}\r\n                                        handleSetDownloadTarget={this.props.handleSetDownloadTarget}\r\n                                        handleTableStatsDialogOpen={this.handleTableStatsDialogOpen}\r\n                                        isLoading = {catalogRequestState === states.inProgress}\r\n                                        onAutoSuggestChange = {this.onAutoSuggestChange}\r\n                                        datasets = {datasets}\r\n                                        components={{\r\n                                            IndicatorSeparator:'',\r\n                                            DropdownIndicator,\r\n                                            GroupHeading,\r\n                                            Group,\r\n                                            Option,\r\n                                            MenuList\r\n                                        }}\r\n                                        handleDownloadCsvClick = {this.handleDownloadCsvClick}\r\n                                        escapeClearsValue\r\n                                        ref={selectRef}\r\n                                        onInputChange={this.onAutoSuggestChange}\r\n                                        filterOption={null}\r\n                                        className={classes.variableSelect}\r\n                                        isClearable\r\n                                        inputValue={this.state.searchField}\r\n                                        name=\"fields\"\r\n                                        label=\"Variables\"\r\n                                        options={options}\r\n                                        onChange={this.props.updateFields}\r\n                                        value={fields}\r\n                                        placeholder=\"Variable Search\"\r\n                                        styles={{\r\n                                            menu: provided => ({\r\n                                                ...provided, \r\n                                                zIndex: 1300, \r\n                                                top: '-8px',\r\n                                                left: navDrawerWidth,\r\n                                                width: '980px',\r\n                                                borderRadius: '4px',\r\n                                                boxShadow: '2px 2px 2px 2px #242424',\r\n                                                overflow: 'hidden',\r\n                                                backgroundColor: 'rgba(0,0,0,.5)',\r\n                                                backdropFilter: 'blur(5px)',\r\n                                            }),\r\n\r\n                                            valueContainer: provided => ({\r\n                                                ...provided,\r\n                                                padding: '0 0 0 6px',\r\n                                                fontWeight: 100\r\n                                            }),\r\n\r\n                                            input: provided => ({...provided,\r\n                                                color: 'white',\r\n                                                fontFamily: '\"Lato\", sans-serif'\r\n                                            }),\r\n\r\n                                            control: provided => ({...provided,\r\n                                                backgroundColor: '#424242',\r\n                                                border: 'none',\r\n                                                borderBottom: '1px solid #333333',\r\n                                                borderRadius: 0,\r\n                                                '&:hover': { borderColor: 'white' },\r\n                                                '&:focus-within': { borderColor: colors.orange },\r\n                                                height: '56px'\r\n                                            }),\r\n\r\n                                            placeholder: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                fontSize: '14px',\r\n                                                fontWeight: 300\r\n                                            }),\r\n\r\n                                            noOptionsMessage: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                backgroundColor: colors.backgroundGray\r\n                                            }),\r\n\r\n                                            option: (provided, { data, isFocused }) => {\r\n                                                return ({...provided,\r\n                                                    fontWeight: 400,\r\n                                                    fontSize: '16px',\r\n                                                    backgroundColor: 'transparent',\r\n                                                    color: isFocused ? colors.orange : 'white',\r\n                                                    '&:hover': { backgroundColor: 'rgba(122,67,0,.5)'},\r\n                                                    // '&:active': { backgroundColor: 'rgba(0,0,0,.5)', color: colors.orange},\r\n                                            })},\r\n\r\n                                            singleValue: (provided, state) => ({...provided,\r\n                                                color: 'white',\r\n                                                fontWeight: 400,\r\n                                                zIndex: 1290\r\n                                            })\r\n                                        }}\r\n                                        theme={theme => ({\r\n                                            ...theme,\r\n                                            colors: {\r\n                                            ...theme.colors,\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                </ConnectedTooltip>\r\n                            </Grid>\r\n                            <Grid item xs={2} className={classes.tableStatsButton}>\r\n                                <IconButton \r\n                                    size='small' \r\n                                    onClick={this.handleTableStatsDialogOpen}                                     \r\n                                    disabled={!fields}\r\n                                >\r\n                                    <LibraryBooks/>\r\n                                </IconButton>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder={getDatePlaceholder(dt1)}\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    maxDate={maxDate}\r\n                                    minDate={null}\r\n                                    maxDateMessage={maxDateMessage}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder={getDatePlaceholder(dt2)}\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={minDate}\r\n                                    maxDate={null}\r\n                                    minDateMessage={minDateMessage}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat1-input\"\r\n                                    error={Boolean(startLatMessage)}\r\n                                    label={\"Start Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat1}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startLatMessage}\r\n                                    name='lat1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat2-input\"\r\n                                    error={Boolean(endLatMessage)}\r\n                                    label={\"End Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat2}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endLatMessage}\r\n                                    name='lat2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon1-input\"\r\n                                    error={Boolean(startLonMessage)}\r\n                                    label={\"Start Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon1}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startLonMessage}\r\n                                    name='lon1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon2-input\"\r\n                                    error={Boolean(endLonMessage)}\r\n                                    label={\"End Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon2}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endLonMessage}\r\n                                    name='lon2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"depth1-input\"\r\n                                    error={Boolean(startDepthMessage)}\r\n                                    label=\"Start Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth1}\r\n                                    onChange={handleChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startDepthMessage}\r\n                                    name='depth1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"depth2-input\"\r\n                                    error={Boolean(endDepthMessage)}\r\n                                    label=\"End Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth2}\r\n                                    onChange={handleChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endDepthMessage}\r\n                                    name='depth2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <FormControl variant='filled' className={classes.vizTypeSelectFormControl} disabled={!fields}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        className={classes.vizTypeSelectFormControl}\r\n                                        style={overrideDisabledStyle}\r\n                                        value={selectedVizType}\r\n                                        variant='filled'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'filled'\r\n                                        }}\r\n                                        >\r\n                                        {!heatmapMessage && <MenuItem value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>}\r\n                                        {!contourMessage && <MenuItem value={vizSubTypes.contourMap}>Contour Heatmap</MenuItem>}\r\n                                        {!sectionMapMessage && <MenuItem value={vizSubTypes.sectionMap}>Section Map</MenuItem>}\r\n                                        {!sectionMapMessage && <MenuItem value={vizSubTypes.contourSectionMap}>Contour Section Map</MenuItem>}\r\n                                        {!histogramMessage && <MenuItem value={vizSubTypes.histogram}>Histogram</MenuItem>}                      \r\n                                        {!timeSeriesMessage && <MenuItem value={vizSubTypes.timeSeries}>Time Series</MenuItem>}\r\n                                        {!depthProfileMessage && <MenuItem value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>}\r\n                                        {!sparseMapMessage && <MenuItem value={vizSubTypes.sparse}>Sparse Map</MenuItem>}\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Tooltip placement='right' title={visualizeButtonTooltip} className={classes.vizButtonTooltip}>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        className={classes.visualizeButton}\r\n                                        variant='contained'\r\n                                        onClick={() => this.props.onVisualize()}\r\n                                        disabled={Boolean(disableVisualizeMessage) || !fields || !selectedVizType}\r\n                                        fullWidth\r\n                                    >\r\n                                        Visualize\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </form>                    \r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography, Table, TableBody, TableCell, TableRow, TableHead } from '@material-ui/core';\r\n\r\nimport { tableStatsRequestSend, csvDownloadRequestSend } from '../../Redux/actions/visualization';\r\n\r\nimport temporalResolutions from '../../Enums/temporalResolutions';\r\nimport depthUtils from '../../Utility/depthCounter';\r\n\r\nconst styles = (theme) => ({\r\n    tableFooter: {\r\n        fontSize: '11px',\r\n        margin: '5px 0px 0px 10px'\r\n    },\r\n\r\n    table: {\r\n        marginTop: '9px'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    datasets: state.datasets,\r\n    catalog: state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    tableStatsRequestSend,\r\n    csvDownloadRequestSend\r\n}\r\n\r\nclass DownloadConfirmationDialog extends Component {\r\n\r\n    componentDidUpdate = () => {\r\n        const { downloadTarget, datasets, catalog, tableStatsRequestSend } = this.props;\r\n        if(downloadTarget && datasets && !datasets[downloadTarget.dataset].tableStats){\r\n            const firstMember = catalog.find(item => item.Dataset_Name === downloadTarget.dataset);\r\n            tableStatsRequestSend(firstMember.Table_Name, downloadTarget.dataset);\r\n        }\r\n    }\r\n\r\n    handleFullDatasetDownload = (tableName) => {\r\n        let query = `select%20*%20from%20${tableName}`;\r\n        const fileName = this.props.downloadTarget.variable || this.props.downloadTarget.dataset;\r\n        this.props.csvDownloadRequestSend(query, fileName);\r\n    }\r\n\r\n    handleSubsetDownload = (tableName, dt1, dt2, lat1, lat2, lon1, lon2, depth1, depth2) => {\r\n        let query = `select * from ${tableName} where time between '${dt1}' and '${dt2}' and ` +\r\n            `lat between ${lat1} and ${lat2} and ` +\r\n            `lon between ${lon1} and ${lon2}`\r\n        // console.log(query);\r\n        const fileName = this.props.downloadTarget.variable || this.props.downloadTarget.dataset;\r\n        this.props.csvDownloadRequestSend(query, fileName);\r\n    }\r\n\r\n    render() {\r\n        const { classes, datasets, downloadTarget, lat1, lat2, lon1, lon2, dt1, dt2, depth1, depth2, catalog } = this.props;\r\n\r\n        if(!downloadTarget || ! datasets ||  !catalog) return '';\r\n        \r\n        const tableStats = datasets[downloadTarget.dataset].tableStats;\r\n\r\n        if(!tableStats) return '';\r\n\r\n        const sampleMember = catalog.find(item => item.Dataset_Name === downloadTarget.dataset);\r\n        const { Lat_Min, Lat_Max, Lon_Min, Lon_Max, Time_Min, Time_Max, Depth_Min, Depth_Max } = sampleMember;\r\n        const latMin = parseFloat(Lat_Min);\r\n        const latMax = parseFloat(Lat_Max);\r\n        const lonMin = parseFloat(Lon_Min);\r\n        const lonMax = parseFloat(Lon_Max);\r\n        const timeMin = Date.parse(Time_Min);\r\n        const timeMax = Date.parse(Time_Max);\r\n\r\n        const subsetLat1 = lat1 < latMin ? latMin :\r\n            lat1 > latMax ? latMax :\r\n            lat1;\r\n\r\n        const subsetLat2 = lat2 < latMin ? latMin :\r\n        lat2 > latMax ? latMax :\r\n        lat2;\r\n\r\n        const subsetLon1 = lon1 < lonMin ? lonMin :\r\n            lon1 > lonMax ? lonMax :\r\n            lon1;\r\n\r\n        const subsetLon2 = lon2 < lonMin ? lonMin :\r\n            lon2 > lonMax ? lonMax :\r\n            lon2;\r\n\r\n        const subsetTime1 = dt1 < timeMin ? timeMin :\r\n            dt1 > timeMax ? timeMax :\r\n            dt1;\r\n\r\n        const subsetTime2 = dt2 < timeMin ? timeMin :\r\n            dt2 > timeMax ? timeMax:\r\n            dt2;\r\n\r\n        if(Depth_Max){\r\n            var depthMin = parseFloat(Depth_Min);\r\n            var depthMax = parseFloat(Depth_Max);\r\n\r\n            var subsetDepth1 = depth1 < depthMin ? depthMin : \r\n                depth1 > depthMax ? depthMax : \r\n                depth1;\r\n\r\n            var subsetDepth2 = depth2 < depthMin ? depthMin : \r\n                depth2 > depthMax ? depthMax : \r\n                depth2;\r\n        }        \r\n\r\n        const tableName = sampleMember.Table_Name;\r\n        \r\n        const totalRows = tableStats.lat.count;\r\n        const variableColumns = datasets[downloadTarget.dataset].Variables && datasets[downloadTarget.dataset].Variables.split(',').length;\r\n        const depthColumns = tableStats.depth ? 1 : 0;\r\n        const fixedColumns = 3;\r\n\r\n        const totalColumns = variableColumns + depthColumns + fixedColumns;\r\n\r\n        const totalDataPoints = totalRows * totalColumns;\r\n        const fullDataAvailable = totalDataPoints < 20000000;\r\n\r\n        var dateRatio;\r\n\r\n        if(sampleMember.Temporal_Resolution === temporalResolutions.monthlyClimatology){\r\n            const subsetMonths = new Date(subsetTime2).getMonth() - new Date(subsetTime1).getMonth();\r\n            dateRatio = (subsetMonths + 1) / 12;\r\n        } else {\r\n            var totalDays = (timeMax - timeMin) / 86400000 || 1;\r\n            var subsetDays = (subsetTime2 - subsetTime1) / 86400000 || 1;\r\n            dateRatio = totalDays > subsetDays ? subsetDays / totalDays : 1;\r\n        }\r\n\r\n        const totalLatSize = (latMax - latMin) || 1;\r\n        const subsetLatSize = (subsetLat2 - subsetLat1) || 1;\r\n        const latRatio = totalLatSize > subsetLatSize ? subsetLatSize / totalLatSize : 1;\r\n\r\n        const totalLonSize = (lonMax - lonMin) || 1;\r\n        const subsetLonSize = subsetLon2 > subsetLon1 ? (subsetLon2 - subsetLon1) || 1 : (subsetLon2 + 360 - subsetLon1) || 1;\r\n        const lonRatio = totalLonSize > subsetLonSize ? subsetLonSize / totalLonSize : 1;\r\n\r\n        var depthRatio = 1;\r\n\r\n        if(sampleMember.Depth_Max) {\r\n            if(depthUtils.piscesTable.has(sampleMember.Table_Name)){\r\n                let depthCount = depthUtils.count({data: sampleMember}, subsetDepth1, subsetDepth2);\r\n                depthRatio = depthCount / depthUtils.piscesDepths.length || 1;\r\n            } else if (depthUtils.darwinTable.has(sampleMember.Table_Name)){\r\n                let depthCount = depthUtils.count({data: sampleMember}, subsetDepth1, subsetDepth2);\r\n                depthRatio = depthCount / depthUtils.darwinDepths.length || 1;\r\n            } else {\r\n                var totalDepthSize = depthMax - depthMin || 1;\r\n                var subsetDepthSize = subsetDepth2 - subsetDepth1 || 1;\r\n                depthRatio = subsetDepthSize > totalDepthSize ? 1 : subsetDepthSize / totalDepthSize;\r\n            }\r\n        }\r\n\r\n        // console.log(depthRatio);\r\n\r\n        const subsetDataPoints = Math.floor(totalDataPoints * dateRatio * latRatio * lonRatio * depthRatio);\r\n\r\n        const subsetAvailable = subsetDataPoints <= 20000000;\r\n\r\n        const timeString1 = new Date(subsetTime1).toISOString().slice(0,10);\r\n        const timeString2 = new Date(subsetTime2).toISOString().slice(0,10);\r\n        const timeStringMin = sampleMember.Temporal_Resolution === temporalResolutions.monthlyClimatology ? \r\n            'Monthly' : new Date(timeMin).toISOString().slice(0,10);\r\n        const timeStringMax = sampleMember.Temporal_Resolution === temporalResolutions.monthlyClimatology ? \r\n            'Monthly' : new Date(timeMax).toISOString().slice(0,10);\r\n\r\n        // console.log('Total data points: ', totalDataPoints);\r\n        // console.log('Total rows: ', totalRows);\r\n        // console.log('Total columns: ', totalColumns)\r\n        // console.log('Subset data points: ', subsetDataPoints);\r\n        // console.log('Date Ratio: ', dateRatio);\r\n        // console.log('Lat Ratio: ', latRatio);\r\n        // console.log('Lon ratio: ', lonRatio);\r\n        // console.log('Depth Ratio: ', depthRatio)\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <Dialog open={Boolean(downloadTarget)} onClose={() => this.props.handleSetDownloadTarget(null)} maxWidth={false}>\r\n                    <DialogTitle>Downloading {downloadTarget.variable && `${downloadTarget.variable} from `} {downloadTarget.dataset}</DialogTitle>\r\n                    \r\n                    <DialogContent>\r\n                        {fullDataAvailable ? \r\n                            `The full dataset is available for download.` :\r\n                            `The full dataset is too large for download.`\r\n                        }\r\n                    </DialogContent>\r\n                    \r\n                    <DialogContent>\r\n                        <Typography>\r\n                            {subsetAvailable ? \r\n                                'The described subset is available for download' :\r\n                                `The described subset contains approximately ${subsetDataPoints} data points. Maximum download size is 20000000. Please reduce subset size.`\r\n                            }\r\n                        </Typography>\r\n\r\n                        <Table size='small'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Parameter</TableCell>\r\n                                    <TableCell>Subset Start</TableCell>\r\n                                    <TableCell>Subset End</TableCell>\r\n                                    <TableCell>Dataset Min</TableCell>\r\n                                    <TableCell>Dataset Max</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell>Time</TableCell>\r\n                                    <TableCell>{timeString1}</TableCell>\r\n                                    <TableCell>{timeString2}</TableCell>\r\n                                    <TableCell>{timeStringMin}</TableCell>\r\n                                    <TableCell>{timeStringMax}</TableCell>\r\n                                </TableRow>\r\n\r\n                                <TableRow>\r\n                                    <TableCell>Latitude[{'\\xb0'}]</TableCell>\r\n                                    <TableCell>{subsetLat1}</TableCell>\r\n                                    <TableCell>{subsetLat2}</TableCell>\r\n                                    <TableCell>{latMin}</TableCell>\r\n                                    <TableCell>{latMax}</TableCell>\r\n                                </TableRow>\r\n\r\n                                <TableRow>\r\n                                    <TableCell>Longitude[{'\\xb0'}]</TableCell>\r\n                                    <TableCell>{subsetLon1}</TableCell>\r\n                                    <TableCell>{subsetLon2}</TableCell>\r\n                                    <TableCell>{lonMin}</TableCell>\r\n                                    <TableCell>{lonMax}</TableCell>\r\n                                </TableRow>\r\n\r\n                                <TableRow>\r\n                                    <TableCell>Depth[m]</TableCell>\r\n                                    <TableCell>{isNaN(subsetDepth1) ? 'NA' : subsetDepth1}</TableCell>\r\n                                    <TableCell>{isNaN(subsetDepth2) ? 'NA' : subsetDepth2}</TableCell>\r\n                                    <TableCell>{isNaN(depthMin) ? 'NA' : depthMin}</TableCell>\r\n                                    <TableCell>{isNaN(depthMax) ? 'NA' : depthMax}</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                                \r\n                        </Table>\r\n\r\n                        <Typography className={classes.tableFooter}>\r\n                            *Subset start and end values may automatically adjust to fit dataset boundaries.\r\n                        </Typography>\r\n\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={() => this.props.handleSetDownloadTarget(null)}>\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        {subsetAvailable &&\r\n                            <Button onClick={() => this.handleSubsetDownload(tableName, timeString1, timeString2, subsetLat1, subsetLat2, subsetLon1, subsetLon2, subsetDepth1, subsetDepth2)}>\r\n                                Download Subset\r\n                            </Button>                            \r\n                        }\r\n\r\n                        {fullDataAvailable && \r\n                            <Button onClick={() => this.handleFullDatasetDownload(tableName)}>\r\n                                Download Full Dataset\r\n                            </Button>\r\n                        }\r\n                    </DialogActions>\r\n                </Dialog> \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DownloadConfirmationDialog));","export default [\r\n    null,\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n]","import months from '../Enums/months';\r\n\r\nexport default (dateString, hasHour, isMonthly) => {\r\n    return isMonthly ? months[parseInt(dateString)] : hasHour ? dateString.slice(0,10) + ' ' + dateString.slice(11,16): dateString.slice(0,10);\r\n}","import colors from '../Enums/colors';\r\n\r\nexport default {\r\n    layout: {\r\n        font: {color: '#ffffff'},\r\n        paper_bgcolor: colors.backgroundGray,\r\n        autosize: true\r\n    },\r\n\r\n    config: {\r\n        displaylogo: false\r\n    },\r\n\r\n    annotations: (distributor, height = 40) => {\r\n        let yshift = ((document.documentElement.clientWidth * (height / 100)) / -2) + 20;\r\n        return (\r\n            [\r\n                {\r\n                    text: `Source: ${distributor.length < 35 ? \r\n                        distributor : \r\n                        distributor.slice(0,32) + '...'} -- Provided by Simons CMAP`,\r\n                    font: {\r\n                        color: 'white',\r\n                        size: 10\r\n                    },\r\n                    xref: 'paper',\r\n                    yref: 'paper',\r\n                    // yshift: height ? 0 - height + 160 : -290,\r\n                    yshift,\r\n                    showarrow: false,\r\n                }\r\n            ]\r\n        )   \r\n    }\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DateRange, CloudDownload, Palette, SwapVert, Gamepad, LineWeight, } from '@material-ui/icons';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { ButtonGroup } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    popover: {\r\n        width: '470px',\r\n        height: '120px',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5)\r\n    },\r\n\r\n    iconButton: {\r\n        boxShadow: '0px 1px 1px 1px #242424',\r\n    },\r\n\r\n    colorForm: {\r\n        width: '100%'\r\n    },\r\n\r\n    lastIcon: {\r\n        borderTopRightRadius: '10%',\r\n        borderBottomRightRadius: '10%'\r\n    },\r\n\r\n    buttonGroup: {\r\n        display: 'block',\r\n        margin: '0px auto 8px auto',\r\n        maxWidth: '700px'\r\n    },\r\n\r\n    depressed: {\r\n        boxShadow: 'inset 1px 1px 5px #262626'\r\n    },\r\n\r\n    colorscaleMenu: {\r\n        maxHeight: '400px'\r\n    },\r\n})\r\n\r\nconst colorscaleOptions = [\r\n    'Default',\r\n    'Greys', \r\n    'YlGnBu', \r\n    'Greens', \r\n    'YlOrRd',\r\n    'Bluered',\r\n    'RdBu',\r\n    'Reds',\r\n    'Blues',\r\n    'Picnic',\r\n    'Rainbow',\r\n    'Portland',\r\n    'Jet',\r\n    'Hot',\r\n    'Blackbody',\r\n    'Earth',\r\n    'Electric',\r\n    'Viridis',\r\n    'Cividis'];\r\n\r\nfunction usePreviousSize(value) {\r\n    let size = value ? value.size : null;\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = size;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction usePreviousColor(value) {\r\n    let color = value ? value.color : null;\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = color;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction usePreviousOpacity(value) {\r\n    let opacity = value ? value.opacity : null;\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = opacity;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nconst ChartControlPanel = (props) => {\r\n\r\n    const { \r\n        classes, \r\n        onToggleSplitByDate,\r\n        splitByDate,\r\n        onToggleSplitBySpace,\r\n        splitBySpace,\r\n        orientation, \r\n        downloadCsv, \r\n        handleZValueConfirm,\r\n        zValues,\r\n        markerOptions,\r\n        handleMarkerOptionsConfirm,\r\n    } = props;\r\n\r\n    const [paletteAnchorElement, setPaletteAnchorElement] = useState(null);\r\n\r\n    let handleOpenPalette = (event) => {\r\n        setPaletteAnchorElement(event.currentTarget);\r\n    }\r\n\r\n    // Local version, not from props\r\n    let handlePaletteChoice = (option) => {\r\n        setPaletteAnchorElement(null);\r\n        props.handlePaletteChoice(option);\r\n    }\r\n\r\n    const [zScalePopoverAnchorElement, setZScalePopoverAnchorElement] = React.useState(null);\r\n    const [localZMin, setLocalZMin] = React.useState(zValues && zValues[0]);\r\n    const [localZMax, setLocalZMax] = React.useState(zValues && zValues[1]);\r\n\r\n    const zScalePopoverOpen = Boolean(zScalePopoverAnchorElement);\r\n    const zScalePopoverID = zScalePopoverOpen ? 'zscale-popover' : undefined;\r\n\r\n    const handleZScalePopoverClose = () => {\r\n        setZScalePopoverAnchorElement(null);\r\n    };\r\n    \r\n    const checkLocalZMin = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMin)) return 'Invalid value';\r\n    }\r\n\r\n    const checkLocalZMax = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMax)) return 'Invalid value';\r\n    }\r\n\r\n    const zScaleValidations = [\r\n        checkLocalZMin(),\r\n        checkLocalZMax()\r\n    ];\r\n\r\n    const [\r\n        zMinMessage,\r\n        zMaxMessage\r\n    ] = zScaleValidations;\r\n\r\n    const handleLocalZConfirm = () => {\r\n        handleZValueConfirm([localZMin, localZMax]);\r\n        handleZScalePopoverClose();\r\n    }\r\n\r\n    const [markerOptionsAnchorElement, setMarkerOptionsAnchorElement] = React.useState(null);\r\n    const [localMarkerOpacity, setLocalMarkerOpacity] = React.useState(markerOptions && markerOptions.opacity);\r\n    const [localMarkerColor, setLocalMarkerColor] = React.useState(markerOptions && markerOptions.color);\r\n    const [localMarkerSize, setLocalMarkerSize] = React.useState(markerOptions && markerOptions.size);\r\n\r\n    var previousOpacity = usePreviousOpacity(markerOptions);\r\n    var previousColor = usePreviousColor(markerOptions);\r\n    var previousSize = usePreviousSize(markerOptions);\r\n    useEffect(() => {\r\n        if(markerOptions){\r\n            if(markerOptions.opacity !== previousOpacity){\r\n                setLocalMarkerOpacity(markerOptions.opacity);\r\n            }\r\n    \r\n            if(markerOptions.color !== previousColor){\r\n                setLocalMarkerColor(markerOptions.color);\r\n            }\r\n    \r\n            if(markerOptions.size !== previousSize){\r\n                setLocalMarkerSize(markerOptions.size);\r\n            }\r\n        }\r\n    })\r\n\r\n    const markerPopoverOpen = Boolean(markerOptionsAnchorElement);\r\n    const markerPopoverID = markerPopoverOpen ? 'marker-popover' : undefined;\r\n\r\n    const handleMarkerOptionsClose = () => {\r\n        setMarkerOptionsAnchorElement(null);\r\n    }\r\n\r\n    const checkLocalMarkerOpacity = () => {\r\n        if(localMarkerOpacity < 0.1 || localMarkerOpacity > 1 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerOpacity)){\r\n            return 'Opacity should be 0.1 to 1'\r\n        }\r\n    }\r\n\r\n    const checkLocalMarkerSize = () => {\r\n        if(localMarkerSize < 1 || localMarkerSize > 18 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerSize)){\r\n            return 'Size should be 1 to 18'\r\n        }\r\n    }\r\n\r\n    const markerOptionsValidations = [\r\n        checkLocalMarkerOpacity(),\r\n        checkLocalMarkerSize()\r\n    ]\r\n\r\n    const [\r\n        localMarkerOpacityMessage,\r\n        localMarkerSizeMessage\r\n    ] = markerOptionsValidations;\r\n\r\n    const handleLocalMarkerOptionsConfirm = () => {\r\n        handleMarkerOptionsConfirm({opacity: localMarkerOpacity, color: localMarkerColor, size: localMarkerSize});\r\n        handleMarkerOptionsClose();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup className={classes.buttonGroup}>\r\n\r\n                {Boolean(onToggleSplitByDate) && \r\n                    <Tooltip placement='top' title='Split By Date'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDate && classes.depressed}`} \r\n                            onClick={onToggleSplitByDate}\r\n                        >\r\n                            <DateRange/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n{/* \r\n                {Boolean(onToggleSplitByDepth) && \r\n                    <Tooltip placement='top' title='Split By Depth'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDepth && classes.depressed}`} \r\n                            onClick={onToggleSplitByDepth}\r\n                        >\r\n                            <Waves/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                } */}\r\n\r\n                {Boolean(onToggleSplitBySpace) && \r\n                    <Tooltip placement='top' title={orientation === 'zonal' ? 'Split by Latitude' : 'Split by Longitude'}>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitBySpace && classes.depressed}`} \r\n                            onClick={onToggleSplitBySpace}\r\n                        >\r\n                            <LineWeight/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {/* {Boolean(switchOrientation) && \r\n                    <Tooltip placement='top' title={orientation === 'zonal' ? 'Switch to Meridional' : 'Switch to Zonal'}>\r\n                        <IconButton color='inherit' className={classes.iconButton} \r\n                            onClick={switchOrientation}\r\n                        >\r\n                            <Rotate90DegreesCcw/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                } */}\r\n\r\n                <Tooltip placement='top' title='Download CSV'>\r\n                    <IconButton color='inherit' onClick={downloadCsv} className={classes.iconButton} >\r\n                        <CloudDownload/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n                {Boolean(handleZValueConfirm) &&\r\n                    <Tooltip title='Change Colorscale Range' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setZScalePopoverAnchorElement(event.currentTarget)} className={classes.iconButton}>\r\n                            <SwapVert/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {Boolean(props.handlePaletteChoice) &&\r\n                    <Tooltip title='Change Palette' placement='top'>\r\n                        <IconButton disabled={!Boolean(props.handlePaletteChoice)} color='inherit' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                            <Palette/>\r\n                        </IconButton>                \r\n                    </Tooltip>      \r\n                }\r\n\r\n                {Boolean(props.handleMarkerOptionsConfirm) &&\r\n                    <Tooltip title='Marker Options' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setMarkerOptionsAnchorElement(event.currentTarget)} className={`${classes.iconButton} ${classes.lastIcon}`} >\r\n                            <Gamepad/>\r\n                        </IconButton>                \r\n                    </Tooltip>\r\n                }\r\n\r\n                {/* <Tooltip title='Plot Info' placement='top'>\r\n                    <IconButton color='inherit' onClick={() => console.log('Info!')} className={`${classes.iconButton}`} >\r\n                        <Info/>\r\n                    </IconButton>                \r\n                </Tooltip> */}\r\n                \r\n            </ButtonGroup>\r\n            \r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={paletteAnchorElement}\r\n                keepMounted\r\n                open={Boolean(paletteAnchorElement)}\r\n                onClose={() => setPaletteAnchorElement(null)}\r\n                className={classes.colorscaleMenu}\r\n            >\r\n                {colorscaleOptions.map((option, index) => (\r\n                    <MenuItem onClick={() => handlePaletteChoice(option === 'Default' ? 'heatmap' : option)} key={index}>{option}</MenuItem>\r\n                ))}\r\n                \r\n            </Menu>\r\n            \r\n            {/* zscale popover */}\r\n            <Popover\r\n                id={zScalePopoverID}\r\n                open={zScalePopoverOpen}\r\n                anchorEl={zScalePopoverAnchorElement}\r\n                onClose={handleZScalePopoverClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMinMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-min-input' >Min</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-min-input'\r\n                                    value={localZMin}\r\n                                    onChange={(event) => setLocalZMin(event.target.value)}\r\n                                    aria-describedby='local-zmin-error'\r\n                                    labelWidth={36}\r\n                                    name='local-zmin'\r\n                                />\r\n                                <FormHelperText id='local-zmin-error'>{zMinMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-max-input' >Max</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-max-input'\r\n                                    value={localZMax}\r\n                                    onChange={(event) => setLocalZMax(event.target.value)}\r\n                                    aria-describedby=\"local-zmax-error\"\r\n                                    labelWidth={36}\r\n                                    name='local-zmax'\r\n                                />\r\n                                <FormHelperText id=\"local-zmax-error\">{zMaxMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={7}>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleZScalePopoverClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalZConfirm}\r\n                                disabled={Boolean(zMinMessage || zMaxMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n                \r\n            {/* Marker popover */}\r\n            <Popover\r\n                id={markerPopoverID}\r\n                open={markerPopoverOpen}\r\n                anchorEl={markerOptionsAnchorElement}\r\n                onClose={handleMarkerOptionsClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(localMarkerOpacityMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-opacity' >Opacity</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='local-marker-opacity'\r\n                                    value={localMarkerOpacity}\r\n                                    onChange={(event) => setLocalMarkerOpacity(event.target.value)}\r\n                                    aria-describedby='local-marker-opacity'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-opacity'\r\n                                />\r\n                            <FormHelperText id=\"local-marker-opacity-error\">{localMarkerOpacityMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                // error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-size' >Size</InputLabel>\r\n                                <OutlinedInput\r\n                                    error={Boolean(localMarkerSizeMessage)}\r\n                                    id='local-marker-size'\r\n                                    value={localMarkerSize}\r\n                                    onChange={(event) => setLocalMarkerSize(event.target.value)}\r\n                                    aria-describedby=\"local-marker-size\"\r\n                                    labelWidth={36}\r\n                                    name='local-marker-size'\r\n                                />\r\n                                <FormHelperText id=\"local-marker-size-error\">{localMarkerSizeMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                className={classes.colorForm}\r\n                            >\r\n                                <InputLabel htmlFor='z-min-input'>Color</InputLabel>\r\n                                <OutlinedInput\r\n                                    type='color'\r\n                                    id='marker-color'\r\n                                    value={localMarkerColor}\r\n                                    onChange={(event) => setLocalMarkerColor(event.target.value)}\r\n                                    aria-describedby='local-marker-color'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-color'\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={1}></Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleMarkerOptionsClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalMarkerOptionsConfirm}\r\n                                disabled={Boolean(localMarkerOpacityMessage || localMarkerSizeMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ChartControlPanel);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport handleChartDateString from '../../Utility/handleChartDatestring';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SparseHistogram = (props) => {\r\n\r\n    const { data } = props.chart;\r\n    const { metadata, parameters } = data;\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const date = parameters.dt1 === parameters.dt2 ? handleChartDateString(parameters.dt1) :\r\n        handleChartDateString(parameters.dt1) + ' to ' + handleChartDateString(parameters.dt2);\r\n\r\n    const lat = parameters.lat1 === parameters.lat2 ? parameters.lat1 + '\\xb0' :\r\n        parameters.lat1 + '\\xb0 to ' + parameters.lat2 + '\\xb0';\r\n\r\n    const lon = parameters.lon1 === parameters.lon2 ? parameters.lon1 + '\\xb0' :\r\n        parameters.lon1 + '\\xb0 to ' + parameters.lon2 + '\\xb0';\r\n\r\n    const depth = !data.hasDepth ? 'Surface' :\r\n        parameters.depth1 === parameters.depth2 ? `${parameters.depth1}[m]` :\r\n        `${parameters.depth1}[m] to ${parameters.depth2}[m]`;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                // display:'inline-block',\r\n                width: '60vw',\r\n                height: '40vw'\r\n            }}\r\n\r\n            useResizeHandler={true}\r\n\r\n            data={[\r\n                {\r\n                    x: data.variableValues,\r\n                    name: data.parameters.fields,\r\n                    type: 'histogram',\r\n                    marker: {\r\n                        color: '#00FFFF'\r\n                    }\r\n                }\r\n            ]}\r\n            \r\n            layout= {{\r\n                ...chartBase.layout,\r\n                plot_bgcolor: 'transparent',\r\n                title: {\r\n                    text: `${parameters.fields} [${metadata.Unit}]` + \r\n                        `<br>${date}, ` + \r\n                        depth + \r\n                        `<br>Lat: ${lat}, ` +\r\n                        `Lon: ${lon}`,\r\n                    font: {\r\n                        size: 13\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: `${parameters.fields} [${metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseHistogram));","export default (infoObject) => {\r\n\r\n    let lonRange = infoObject.lonMax - infoObject.lonMin;\r\n\r\n    let sectionSize;\r\n    if(lonRange < 2){\r\n        sectionSize = (lonRange / 6).toFixed(2);\r\n    } else {\r\n        sectionSize = Math.floor(lonRange / 6);\r\n    }\r\n\r\n    let tickvals = Array.from(Array(5), (e, i) => Math.ceil(infoObject.lonMin + ((i + 1) * sectionSize)));\r\n    let ticktext = tickvals.map(e => e > 180 ? e - 360 : e);\r\n\r\n    return {\r\n        tickmode: 'array',\r\n        tickvals,\r\n        ticktext\r\n    }\r\n}","export default (infoObject) => {    \r\n    const xRange = infoObject.lonMax - infoObject.lonMin;\r\n    const yRange = infoObject.latMax - infoObject.latMin;\r\n    const sizeRatio = xRange / yRange;\r\n\r\n    let height = 40;\r\n    let width = 40;\r\n\r\n    if(isNaN(sizeRatio)){\r\n        height = height / 2;\r\n    } else if (sizeRatio > 1) {\r\n        if(sizeRatio <= 1.5){\r\n            width = width * sizeRatio;\r\n            // height = sizeRatio > 2 ? height / 2 : height / sizeRatio;\r\n        } else {\r\n            width = width * 1.5;\r\n            height = sizeRatio > 3 ? height / 2 : height * (1.5 / sizeRatio);\r\n        }\r\n    } else {\r\n        width = sizeRatio < .5 ? width * .5 : width * sizeRatio;\r\n    }\r\n\r\n    return [height, width];\r\n}","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SparseHistogram from './SparseHistogram';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport chartBase from '../../Utility/chartBase';\r\nimport getChartDimensions from '../../Utility/getChartDimensions';\r\nimport handleChartDateString from '../../Utility/handleChartDatestring';\r\nimport countWebGLContexts from '../../Utility/countWebGLContexts';\r\n\r\nimport { setLoadingMessage, snackbarOpen } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\nimport subTypes from '../../Enums/visualizationSubTypes';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst handleContourMap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n    const { parameters, metadata } = infoObject;\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n    \r\n    // Handle axis labels when crossing 180th meridian\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    const [ height, width ] = getChartDimensions(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const date = dates.length <= 1 ? handleChartDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? `Averaged Values ${handleChartDateString(dates[0], infoObject.hasHour, infoObject.isMonthly)} to ${handleChartDateString(dates[dates.length - 1], infoObject.hasHour, infoObject.isMonthly)}` :  \r\n            splitByDepth ? handleChartDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleChartDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + '[m]':\r\n            !splitByDepth ? `Averaged Values ${parameters.depth1} to ${parameters.depth2}` : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + '[m]' : depths[index].toFixed(2) + '[m]';\r\n\r\n        const latTitle = parameters.lat1 === parameters.lat2 ? `${parameters.lat1}\\xb0` :\r\n            `${parameters.lat1}\\xb0 to ${parameters.lat2}\\xb0`;\r\n\r\n        const lonTitle = parameters.lon1 === parameters.lon2 ? `${parameters.lon1}\\xb0` :\r\n            `${parameters.lon1}\\xb0 to ${parameters.lon2}\\xb0`; \r\n\r\n        var hovertext = subset.map((value, i) => {\r\n            let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n            if(isNaN(value)) return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n                `<br>` +\r\n                `Lon: ${infoObject.lons[i] > 180 ? format('.2f')(infoObject.lons[i] - 360) : format('.2f')(infoObject.lons[i])}\\xb0`\r\n\r\n            return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n            `<br>` +\r\n            `Lon: ${infoObject.lons[i] > 180 ? format('.2f')(infoObject.lons[i] - 360) : format('.2f')(infoObject.lons[i])}\\xb0` + \r\n            '<br>' +\r\n            `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n        });\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                // display:'inline-block',\r\n                width: `${width}vw`,\r\n                height: `${height}vw`,\r\n            }}\r\n\r\n            useResizeHandler={true}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n\r\n                    hoverinfo: 'text',\r\n                    hovertext,\r\n                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'contour',\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: infoObject.zMin > 1 && infoObject.zMin < 1000 ? '.2f' : '.2e'\r\n                    },\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    }\r\n                }\r\n            ]}\r\n\r\n            config={{...chartBase.config}}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                // autosize: true,\r\n                title: {\r\n                    text: `${parameters.fields} [${metadata.Unit}]` + \r\n                        `<br>${date}, ` + \r\n                        `${depth} <br>` + \r\n                        `Lat: ${latTitle}, ` +\r\n                        `Lon: ${lonTitle}`,\r\n                    font: {\r\n                        size: 13\r\n                    }\r\n                },\r\n                xaxis: {title: 'Longitude', color: '#ffffff', ...xTicks},\r\n                yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                // annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\n// const handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n//     const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n//     const dates = Array.from(infoObject.dates);\r\n//     const { parameters, metadata } = infoObject;\r\n\r\n//     return subsets.map((subset, index) => {\r\n\r\n//         const date = parameters.dt1 === parameters.dt2 ? handleChartDateString(parameters.dt1) :\r\n//             handleChartDateString(parameters.dt1) + ' to ' + handleChartDateString(parameters.dt2);\r\n\r\n//         const latTitle = parameters.lat1 === parameters.lat2 ? parameters.lat1 + '\\xb0' :\r\n//             parameters.lat1 + '\\xb0 to ' + parameters.lat2 + '\\xb0';\r\n\r\n//         const lonTitle = parameters.lon1 === parameters.lon2 ? parameters.lon1 + '\\xb0' :\r\n//             parameters.lon1 + '\\xb0 to ' + parameters.lon2 + '\\xb0';\r\n\r\n//         const depth = !infoObject.hasDepth ? 'Surface' :\r\n//             parameters.depth1 === parameters.depth2 ? `${parameters.depth1}[m]` :\r\n//             `${parameters.depth1}[m] to ${parameters.depth2}[m]`;\r\n\r\n//         return (\r\n//         <Plot\r\n//             style= {{\r\n//                 position: 'relative',\r\n//                 // display:'inline-block',\r\n//                 width: '60vw',\r\n//                 height: '40vw'\r\n//             }}\r\n\r\n//             useResizeHandler={true}\r\n\r\n//             data={[\r\n//                 {\r\n//                     x: subset,\r\n//                     name: infoObject.parameters.fields,\r\n//                     type: 'histogram',\r\n//                     marker: {\r\n//                         color: '#00FFFF'\r\n//                     }\r\n//                 }\r\n//             ]}\r\n            \r\n//             key={index}\r\n//             layout= {{\r\n//                 ...chartBase.layout,\r\n//                 plot_bgcolor: 'transparent',\r\n//                 // autosize: true,\r\n//                 title: {\r\n//                     text: `${parameters.fields} [${metadata.Unit}]` + \r\n//                         `<br>${date}, ` + \r\n//                         `${depth} <br>` + \r\n//                         `Lat: ${latTitle}, ` +\r\n//                         `Lon: ${lonTitle}`,\r\n//                     font: {\r\n//                         size: 13\r\n//                     }\r\n//                 },\r\n//                 xaxis: {\r\n//                     title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n//                     exponentformat: 'power',\r\n//                     color: '#ffffff'\r\n//                 },\r\n//                 yaxis:{\r\n//                     color: '#ffffff',\r\n//                     title: 'Frequency'\r\n//                 },\r\n//                 annotations: chartBase.annotations(infoObject.metadata.Distributor)             \r\n//             }}\r\n//             config={{...chartBase.config}}\r\n//         />)\r\n//     })\r\n// }\r\n\r\nconst handleHeatmap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n    const { parameters, metadata } = infoObject;\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    const [ height, width ] = getChartDimensions(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const date = dates.length <= 1 ? handleChartDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? `Averaged Values ${handleChartDateString(dates[0], infoObject.hasHour, infoObject.isMonthly)} to ${handleChartDateString(dates[dates.length - 1], infoObject.hasHour, infoObject.isMonthly)}` :  \r\n            splitByDepth ? handleChartDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleChartDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + '[m]':\r\n            !splitByDepth ? `Averaged Values ${parameters.depth1} to ${parameters.depth2}` : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + '[m]' : depths[index].toFixed(2) + '[m]';\r\n\r\n        const latTitle = parameters.lat1 === parameters.lat2 ? `${parameters.lat1}\\xb0` :\r\n            `${parameters.lat1}\\xb0 to ${parameters.lat2}\\xb0`;\r\n\r\n        const lonTitle = parameters.lon1 === parameters.lon2 ? `${parameters.lon1}\\xb0` :\r\n            `${parameters.lon1}\\xb0 to ${parameters.lon2}\\xb0`; \r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                // display:'inline-block',\r\n                width: `${width}vw`,\r\n                height: `${height}vw`,\r\n            }}\r\n\r\n            useResizeHandler={true}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    zsmooth: subset.length < 20000 ? 'fast' : 'false',\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    colorscale: palette,\r\n                    autocolorscale: false,\r\n\r\n                    // hoverinfo: 'text',\r\n                    // hovertext,\r\n\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n                    \r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            config={{...chartBase.config}}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                // width: `${width}vw`,\r\n                // height: `${height}vw`,\r\n                // autosize: true,\r\n                title: {\r\n                    text: `${parameters.fields} [${metadata.Unit}]` + \r\n                        `<br>${date}, ` + \r\n                        `${depth} <br>` + \r\n                        `Lat: ${latTitle}, ` +\r\n                        `Lon: ${lonTitle}`,\r\n                    font: {\r\n                        size: 13\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: 'Longitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Latitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n                // annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage,\r\n    snackbarOpen\r\n}\r\n\r\nconst SpaceTimeChart = (props) => {\r\n\r\n    const { snackbarOpen } = props;\r\n    const { data, subType } = props.chart;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitByDepth, setSplitByDepth] = useState(true);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const subSets = data.generatePlotData(subType, splitByDate, splitByDepth);\r\n    var plots;\r\n    switch(subType){\r\n        case vizSubTypes.contourMap:\r\n            plots = handleContourMap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.heatmap:\r\n            plots = handleHeatmap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.histogram:\r\n            // plots = handleHistogram(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            return <SparseHistogram chart={{data}}/>;\r\n\r\n        default:\r\n            plots = '';\r\n            break;        \r\n\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        let chartCount = depths ? depths.size : 1;\r\n\r\n        if(subType === vizSubTypes.heatmap){\r\n            let availableWGLContexts = 15 - countWebGLContexts(props.charts);\r\n\r\n            if(!splitByDate && chartCount * dates.size > availableWGLContexts){\r\n                snackbarOpen('Unable to split. Rendering limit exceeded.');\r\n                return;\r\n            }\r\n        }\r\n\r\n        if(subType === vizSubTypes.contourMap){\r\n            if(!splitByDate && chartCount * dates.size > 20){\r\n            snackbarOpen('Unable to split. Rendering limit exceeded.');\r\n            return;\r\n            }\r\n        }\r\n\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    // let chartCount = splitBySpace ? spaces.size : 1;\r\n    //     if(!splitByDate && chartCount * dates.size > 20){\r\n    //         return;\r\n    //     }\r\n    //     else {\r\n    //         props.setLoadingMessage('Re-rendering');\r\n    //         setTimeout(() => {\r\n    //             window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n    //             setSplitByDate(!splitByDate);\r\n    //         }, 100)\r\n    //     }  \r\n    const onToggleSplitByDepth = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDepth(!splitByDepth);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={subType !== subTypes.histogram && handlePaletteChoice}\r\n                onToggleSplitByDepth={depths.size===1 ? null : onToggleSplitByDepth}\r\n                onToggleSplitByDate={dates.size===1 ? null : onToggleSplitByDate}\r\n                splitByDepth={splitByDepth}\r\n                splitByDate={splitByDate}\r\n                handleZValueConfirm={subType !== subTypes.histogram && handleZValueConfirm}\r\n                zValues={subType !== subTypes.histogram && zValues}\r\n                extent={subType !== subTypes.histogram && extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plots}     \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SpaceTimeChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport months from '../../Enums/months';\r\nimport chartBase from '../../Utility/chartBase';\r\nimport handleChartDateString from '../../Utility/handleChartDatestring';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst TimeSeriesChart = (props) => {\r\n\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, dates, parameters, metadata } = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#ff1493', size: 12})\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    let hovertext = variableValues.map((value, i) => {\r\n        return `Time: ${dates[i].slice(0,10)}<br>${parameters.fields}: ${format('.2e')(value)} \\xb1 ${format('.2e')(stds[i])} [${metadata.Unit}]`;\r\n    })\r\n\r\n    const date = parameters.dt1 === parameters.dt2 ? handleChartDateString(dates[0], data.hasHour, data.isMonthly) :\r\n        handleChartDateString(dates[0], data.hasHour, data.isMonthly) + ' to ' + handleChartDateString(dates[dates.length - 1], data.hasHour, data.isMonthly);\r\n\r\n    const lat = parameters.lat1 === parameters.lat2 ? parameters.lat1 + '\\xb0' :\r\n        parameters.lat1 + '\\xb0 to ' + parameters.lat2 + '\\xb0';\r\n\r\n    const lon = parameters.lon1 === parameters.lon2 ? parameters.lon1 + '\\xb0' :\r\n        parameters.lon1 + '\\xb0 to ' + parameters.lon2 + '\\xb0';\r\n\r\n    const depth = parameters.depth2 === 0 ? 'Surface' :\r\n        parameters.depth1 === parameters.depth2 ? `${parameters.depth1}[m]` :\r\n        `${parameters.depth1}[m] to ${parameters.depth2}[m]`;\r\n\r\n    const x = data.isMonthly ? dates.map(date => months[parseInt(date)]) : dates;\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    // display:'inline-block',\r\n                    width: '60vw',\r\n                    height: '40vw'\r\n                }}\r\n\r\n                useResizeHandler={true}\r\n\r\n                data={[\r\n                  {\r\n                    mode: 'lines+markers',\r\n                    x: x,\r\n                    y: variableValues,\r\n                    error_y: {\r\n                        type: 'data',\r\n                        array: stds,\r\n                        opacity: 0.3,\r\n                        color: '#f2f2f2',\r\n                        visible: true\r\n                    },\r\n                    name: parameters.fields,\r\n                    type: 'scatter',\r\n                    line: {color: markerOptions.color},\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    },\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                  },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    plot_bgcolor: 'transparent',\r\n                    title: {\r\n                        text: `${parameters.fields} [${metadata.Unit}]` + \r\n                            `<br>${date}, ` + \r\n                            depth + \r\n                            `<br>Lat: ${lat}, ` +\r\n                            `Lon: ${lon}`,\r\n                        font: {\r\n                            size: 13\r\n                        }\r\n                    },\r\n                  xaxis: {\r\n                      title: data.isMonthy? 'Month' : 'Time',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(TimeSeriesChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nimport handleChartDateString from '../../Utility/handleChartDatestring';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst DepthProfileChart = (props) => {\r\n\r\n    const { setLoadingMessage } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, depths, parameters, metadata } = data;\r\n    var infoObject = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#ff1493', size: 12})\r\n\r\n    let hovertext = variableValues.map((value, i) => {\r\n        return `Depth: ${format('.2f')(depths[i])} [m] <br>${parameters.fields}: ${format('.2e')(value)} \\xb1 ${format('.2e')(stds[i])} [${metadata.Unit}]`;\r\n    })\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }    \r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    const date1 = infoObject.isMonthly ? new Date(parameters.dt1).getMonth() + 1 : parameters.dt1;\r\n    const date2 = infoObject.isMonthly ? new Date(parameters.dt2).getMonth() + 1 : parameters.dt2;\r\n\r\n    const date = date1 === date2 ? handleChartDateString(date1, infoObject.hasHour, infoObject.isMonthly) :\r\n            handleChartDateString(date1, infoObject.hasHour, infoObject.isMonthly) + ' to ' + handleChartDateString(date2, infoObject.hasHour, infoObject.isMonthly);\r\n    \r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    // display:'inline-block',\r\n                    width: '60vw',\r\n                    height: '40vw'\r\n                }}\r\n\r\n                useResizeHandler={true}\r\n\r\n                data={[\r\n                    {   \r\n                        mode: 'lines+markers',\r\n                        y: depths,\r\n                        x: variableValues,\r\n                        error_x: {\r\n                            type: 'data',\r\n                            array: stds,\r\n                            opacity: 0.3,\r\n                            color: '#f2f2f2',\r\n                            visible: true\r\n                        },\r\n                        name: parameters.fields,\r\n                        type: 'scatter',\r\n\r\n                        marker: {\r\n                            line: {color: markerOptions.color},\r\n                            opacity: markerOptions.opacity,\r\n                            size: markerOptions.size,\r\n                            color: markerOptions.color\r\n                        },\r\n\r\n                        hoverinfo: 'text',\r\n                        hovertext\r\n                    },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    plot_bgcolor: 'transparent',\r\n                    title: {\r\n                        text: `${parameters.fields} [${metadata.Unit}]` + \r\n                            `<br>${date}, ` + \r\n                            `${parameters.depth1}[m] to ${parameters.depth2}[m] <br>` + \r\n                            `Lat: ${parameters.lat1}\\xb0 to ${parameters.lat2}\\xb0, ` +\r\n                            `Lon: ${parameters.lon1}\\xb0 to ${parameters.lon2}\\xb0`,\r\n                        font: {\r\n                            size: 13\r\n                        }\r\n                    },\r\n                        \r\n                  yaxis: {\r\n                      title: 'Depth[m]',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power',\r\n                      autorange:'reversed'\r\n                    },\r\n                  xaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(DepthProfileChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { setLoadingMessage, snackbarOpen } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport visualizationSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport handleChartDateString from '../../Utility/handleChartDatestring';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nconst handleSectionMap = (subsets, infoObject, splitByDate, splitBySpace, orientation, palette, zMin, zMax) => {\r\n    const { parameters, metadata } = infoObject;\r\n\r\n    const dates = Array.from(infoObject.dates);\r\n    const depths = Array.from(infoObject.depths);\r\n    const lats = Array.from(infoObject.lats);\r\n    const lons = Array.from(infoObject.lons);\r\n\r\n    const distinctMeridiansOrParallelsForSplitting = \r\n        orientation === 'zonal' ?\r\n        lats : \r\n        lons;\r\n\r\n    const xAxis = orientation === 'zonal' ?\r\n        'Longitude' :\r\n        'Latitude';\r\n\r\n    let xTicks = parameters.lon1 > parameters.lon2 && orientation === 'zonal' ? handleXTicks(infoObject) : {};\r\n\r\n\r\n    return subsets.map((subset, index) => {\r\n        let z = subset;\r\n        let x = [];\r\n        let y = [];\r\n\r\n        if(orientation === 'zonal'){\r\n            for(let i = 0; i < subset.length; i++){\r\n                x.push(lons[Math.floor(i / depths.length)])\r\n            }\r\n        } else {\r\n            for(let i = 0; i < subset.length; i++){\r\n                x.push(lats[Math.floor(i / depths.length)])\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < subset.length; i++){\r\n            y.push(depths[i % depths.length]);\r\n        }\r\n\r\n        const latTitle = orientation === 'meridional' ? `${parameters.lat1}\\xb0 to ${parameters.lat2}\\xb0` :\r\n            splitBySpace ? distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length] + '\\xb0' : \r\n            `Averaged Values ${parameters.lat1}\\xb0 to ${parameters.lat2}\\xb0`;\r\n\r\n        const lonTitle = orientation === 'zonal' ? `${parameters.lon1}\\xb0 to ${parameters.lon2}\\xb0` :\r\n            splitBySpace ? distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length] + '\\xb0' : \r\n            `Averaged Values ${parameters.lon1}\\xb0 to ${parameters.lon2}\\xb0`;\r\n\r\n        const date = dates.length < 2 ? handleChartDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            splitByDate && splitBySpace ? handleChartDateString(dates[Math.floor(index / distinctMeridiansOrParallelsForSplitting.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            splitByDate ? handleChartDateString(dates[index], infoObject.hasHour, infoObject.isMonthly) :\r\n            'Averaged Values ' + handleChartDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) + ' to ' + handleChartDateString(dates[dates.length - 1], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        let hovertext = z.map((value, i) => {\r\n            \r\n            if(orientation === 'zonal'){\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                if(isNaN(value)) return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                    `<br>` +\r\n                    `Lon: ${format('.2f')(x[i] > 180 ? x[i] - 360 : x[i])}\\xb0`\r\n    \r\n                return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                `<br>` +\r\n                `Lon: ${format('.2f')(x[i] > 180 ? x[i] - 360 : x[i])}\\xb0` + \r\n                '<br>' +\r\n                `${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`;\r\n            } else {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                if(isNaN(value)) return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                    `<br>` +\r\n                    `Lat: ${format('.2f')(x[i])}\\xb0`\r\n    \r\n                return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                `<br>` +\r\n                `Lat: ${format('.2f')(x[i])}\\xb0` + \r\n                '<br>' +\r\n                `${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`;\r\n            }\r\n        });\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                // display:'inline-block',\r\n                width: '60vw',\r\n                height: '40vw'\r\n            }}\r\n\r\n            useResizeHandler={true}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    zsmooth: subset.length < 20000 ? 'best' : 'fast',\r\n                    x,\r\n                    y,\r\n                    z,\r\n                    name: parameters.fields,\r\n                    type: infoObject.subType === visualizationSubTypes.contourSectionMap ? 'contour' : 'heatmap',\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: '.2e'\r\n                    },\r\n\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: {\r\n                    text: `${parameters.fields} [${metadata.Unit}]` + \r\n                        `<br>${date}, ` + \r\n                        `${parameters.depth1}[m] to ${parameters.depth2}[m] <br>` + \r\n                        `Lat: ${latTitle}, ` +\r\n                        `Lon: ${lonTitle}`,\r\n                    font: {\r\n                        size: 13\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: `${xAxis}[\\xB0]`,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Depth[m]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    autorange: 'reversed'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: chartBase.annotations(metadata.Distributor)\r\n\r\n            }}   \r\n        />\r\n        )\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage,\r\n    snackbarOpen\r\n}\r\n\r\nconst SectionMapChart = (props) => {\r\n\r\n    const { classes, snackbarOpen } = props;\r\n    const { data } = props.chart;\r\n    const { dates, extent, lats, lons } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitBySpace, setSplitBySpace] = useState(false);\r\n    const [orientation, setOrientation] = useState(data.orientation);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    var spaces = orientation === 'zonal' ? lats : lons;\r\n\r\n    const subsets = data.generatePlotData(orientation, splitByDate, splitBySpace);\r\n    var plots = handleSectionMap(subsets, data, splitByDate, splitBySpace, orientation, palette, zMin, zMax);\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitBySpace = () => {\r\n        let chartCount = splitByDate ? dates.size : 1;\r\n        if(!splitBySpace && chartCount * spaces.size > 20){\r\n            snackbarOpen('Unable to split. Rendering limit exceeded.');\r\n            return;\r\n        }\r\n        else {\r\n            props.setLoadingMessage('Re-rendering');\r\n            setTimeout(() => {\r\n                window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n                setSplitBySpace(!splitBySpace);\r\n            }, 100)\r\n        }\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        let chartCount = splitBySpace ? spaces.size : 1;\r\n        if(!splitByDate && chartCount * dates.size > 20){\r\n            snackbarOpen('Unable to split. Rendering limit exceeded.');\r\n            return;\r\n        }\r\n        else {\r\n            props.setLoadingMessage('Re-rendering');\r\n            setTimeout(() => {\r\n                window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n                setSplitByDate(!splitByDate);\r\n            }, 100)\r\n        }     \r\n    }\r\n\r\n    const switchOrientation = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setOrientation(orientation === 'zonal' ? 'meridional' : 'zonal');\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n            <ChartControlPanel\r\n                orientation={orientation}\r\n                switchOrientation={switchOrientation}\r\n                onToggleSplitBySpace={spaces.size === 1 ? null : onToggleSplitBySpace}\r\n                splitBySpace={splitBySpace}\r\n                onToggleSplitByDate={dates.size === 1 ? null : onToggleSplitByDate}\r\n                splitByDate={splitByDate}\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SectionMapChart));","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport chartBase from '../../Utility/chartBase';\r\nimport handleChartDateString from '../../Utility/handleChartDatestring';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst SparseScatter = (props) => {\r\n    const {\r\n        xValues,\r\n        yValues,\r\n        markerOptions,\r\n        infoObject,\r\n        xTitle,\r\n        yTitle,\r\n        type\r\n    } = props;\r\n\r\n    const { parameters, metadata, hasDepth, variableValues, times, lats, lons, depths } = infoObject;\r\n\r\n    // const title = `${parameters.fields} [${metadata.Unit}]`;\r\n    \r\n    var hovertext;\r\n\r\n    switch(type){\r\n        case 'time':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                let time= times[i].slice(0,20);\r\n                time = time.replace('T', ' ');\r\n                return `Time: ${time}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'latitude':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Lat: ${lats[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'longitude':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Lon: ${lons[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'depth':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Depth: ${depths[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        default:\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                let time= times[i].slice(0,20);\r\n                time = time.replace('T', ' ');\r\n                return `Time: ${time}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n        }\r\n\r\n    const date = parameters.dt1 === parameters.dt2 ? handleChartDateString(parameters.dt1) :\r\n        handleChartDateString(parameters.dt1) + ' to ' + handleChartDateString(parameters.dt2);\r\n\r\n    const lat = parameters.lat1 === parameters.lat2 ? parameters.lat1 + '\\xb0' :\r\n        parameters.lat1 + '\\xb0 to ' + parameters.lat2 + '\\xb0';\r\n\r\n    const lon = parameters.lon1 === parameters.lon2 ? parameters.lon1 + '\\xb0' :\r\n        parameters.lon1 + '\\xb0 to ' + parameters.lon2 + '\\xb0';\r\n\r\n    const depth = !hasDepth ? 'Surface' :\r\n        parameters.depth1 === parameters.depth2 ? `${parameters.depth1}[m]` :\r\n        `${parameters.depth1}[m] to ${parameters.depth2}[m]`;\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                // display:'inline-block',\r\n                width: '60vw',\r\n                height: '40vw'\r\n            }}\r\n\r\n            useResizeHandler={true}\r\n    \r\n            data={[\r\n                {\r\n                    x: xValues,\r\n                    y: yValues,\r\n                    mode: 'markers',\r\n                    name: parameters.fields,\r\n                    type: variableValues.length > 10000 ? 'scattergl' : 'scatter',\r\n                    // type: 'scatter',\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    },\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                },\r\n            ]}\r\n            config={{...chartBase.config}}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                plot_bgcolor: 'transparent',\r\n                // width: 800,\r\n                // height: 570,\r\n                title: {\r\n                    text: `${parameters.fields} [${metadata.Unit}]` + \r\n                        `<br>${date}, ` + \r\n                        depth + \r\n                        `<br>Lat: ${lat}, ` +\r\n                        `Lon: ${lon}`,\r\n                    font: {\r\n                        size: 13\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: xTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: yTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    autorange: type === 'depth' ? 'reversed' : true\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)\r\n            }}            \r\n        />\r\n    )\r\n}\r\n\r\nexport default SparseScatter;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\nimport handleChartDateString from '../../Utility/handleChartDatestring';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport SparseScatter from './SparseScatter';\r\n\r\nconst handleSparseMap = (infoObject, palette, zValues) => {\r\n\r\n    const { parameters, metadata } = infoObject;\r\n\r\n    const date = parameters.dt1 === parameters.dt2 ? handleChartDateString(parameters.dt1) :\r\n        handleChartDateString(parameters.dt1) + ' to ' + handleChartDateString(parameters.dt2);\r\n\r\n    const lat = parameters.lat1 === parameters.lat2 ? parameters.lat1 + '\\xb0' :\r\n        parameters.lat1 + '\\xb0 to ' + parameters.lat2 + '\\xb0';\r\n\r\n    const lon = parameters.lon1 === parameters.lon2 ? parameters.lon1 + '\\xb0' :\r\n        parameters.lon1 + '\\xb0 to ' + parameters.lon2 + '\\xb0';\r\n\r\n    const depth = !infoObject.hasDepth ? 'Surface' :\r\n        parameters.depth1 === parameters.depth2 ? `${parameters.depth1}[m]` :\r\n        `${parameters.depth1}[m] to ${parameters.depth2}[m]`;\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                // display:'inline-block',\r\n                width: '60vw',\r\n                height: '40vw'\r\n            }}\r\n            \r\n            useResizeHandler={true}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zValues[0],\r\n                    zmax: zValues[1],\r\n                    lon: infoObject.lons,\r\n                    lat: infoObject.lats,\r\n                    z: infoObject.variableValues,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    radius: 6,                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'densitymapbox',\r\n                    \r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    },\r\n                }\r\n            ]}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                title: {\r\n                    text: `${parameters.fields} [${metadata.Unit}]` + \r\n                        `<br>${date}, ` + \r\n                        depth + \r\n                        `<br>Lat: ${lat}, ` +\r\n                        `Lon: ${lon}`,\r\n                    font: {\r\n                        size: 13\r\n                    }\r\n                },\r\n                mapbox: {\r\n                    style: \"white-bg\",\r\n                    layers: [\r\n                        {\r\n                            sourcetype: \"raster\",\r\n                            source: [\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"],\r\n                            below: \"traces\"\r\n                        }\r\n                    ],\r\n                    center: infoObject.center,\r\n                    zoom: infoObject.zoom\r\n                },\r\n\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n            }}\r\n            \r\n            config={{\r\n                ...chartBase.config,\r\n                mapboxAccessToken:\r\n                  \"pk.eyJ1IjoiZGVuaG9sdHoiLCJhIjoiY2p1ZW9obTNhMDVxZjQzcDRvMmdlcDN2aiJ9.HvLaX2bcradeE5T-lpTc8w\",\r\n                \r\n              }}\r\n        />)\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n\r\n    tabs: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n\r\n    tab: {\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        fontSize: '15px',\r\n        textTransform: 'none'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nfunction tabProps(index) {\r\n    return {\r\n      id: `sparse-tab-${index}`,\r\n      'aria-controls': `sparse-tab-${index}`,\r\n    };\r\n  }\r\n\r\nconst SparseTabPanel = (props) => {\r\n    const { children, selectedTab, index, controlPanelProps, } = props;\r\n\r\n    return (\r\n        <div hidden={selectedTab !== index}>\r\n            <ChartControlPanel\r\n                // handlePaletteChoice={handlePaletteChoice}\r\n                // handleZValueConfirm={handleZValueConfirm}\r\n                // zValues={zValues}\r\n                // extent={data.extent}\r\n                // downloadCsv={downloadCsv}\r\n                {...controlPanelProps}\r\n            />\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst SparseMap = (props) => {\r\n\r\n    const { classes } = props;\r\n\r\n    const { data } = props.chart;\r\n\r\n    const [palette, setPalette] = useState('Heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [markerOptions, setMarkerOptions] = useState({opacity: .7, color:'#ff1493', size: 12});\r\n    const [tab, setTab] = useState(0);\r\n\r\n    const plot = handleSparseMap(data, palette, zValues)\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setTab(newValue)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    const forceResize = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 30);        \r\n    }\r\n\r\n    const controlPanelProps = {\r\n        map: {\r\n            palette,\r\n            handlePaletteChoice,\r\n            zValues,\r\n            handleZValueConfirm,\r\n            downloadCsv\r\n        },\r\n\r\n        scatter: {\r\n            downloadCsv,\r\n            markerOptions,\r\n            setMarkerOptions,\r\n            handleMarkerOptionsConfirm\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Tabs \r\n                value={tab} \r\n                onChange={handleTabChange} \r\n                aria-label=\"Sparse tabs\" \r\n                centered\r\n                indicatorColor='primary'\r\n                className={classes.tabs}\r\n            >\r\n                <Tab label=\"Map\" {...tabProps(0)} className={classes.tab} onClick={forceResize}/>\r\n                <Tab label=\"By Time\" {...tabProps(1)} className={classes.tab}/>\r\n                <Tab label=\"By Lat\" {...tabProps(2)} className={classes.tab}/>\r\n                <Tab label=\"By Lon\" {...tabProps(3)} className={classes.tab}/>\r\n                {data.hasDepth && <Tab label=\"By Depth\" {...tabProps(4)} className={classes.tab}/>}\r\n            </Tabs>\r\n            <SparseTabPanel selectedTab={tab} index={0} controlPanelProps={controlPanelProps.map}>\r\n                {tab === 0 && plot}\r\n            </SparseTabPanel>\r\n            \r\n            <SparseTabPanel selectedTab={tab} index={1} controlPanelProps={controlPanelProps.scatter}>\r\n                {tab === 1 &&\r\n                    <SparseScatter\r\n                        xValues={data.times}\r\n                        yValues={data.variableValues}\r\n                        markerOptions={markerOptions}\r\n                        infoObject={data}\r\n                        xTitle='Time'\r\n                        yTitle={`${data.parameters.fields}[${data.metadata.Unit}]`}\r\n                        type='time'\r\n                    />\r\n                }\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={2} controlPanelProps={controlPanelProps.scatter}>\r\n                {tab === 2 &&\r\n                    <SparseScatter\r\n                        xValues={data.lats}\r\n                        yValues={data.variableValues}\r\n                        markerOptions={markerOptions}\r\n                        infoObject={data}\r\n                        xTitle='Latitude'\r\n                        yTitle={data.parameters.fields}\r\n                        type='latitude'\r\n                    />                \r\n                }\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={3} controlPanelProps={controlPanelProps.scatter}>\r\n                {tab === 3 && \r\n                    <SparseScatter\r\n                        xValues={data.lons}\r\n                        yValues={data.variableValues}\r\n                        markerOptions={markerOptions}\r\n                        infoObject={data}\r\n                        xTitle='Longitude'\r\n                        yTitle={data.parameters.fields}\r\n                        type='longitude'\r\n                    />                \r\n                }\r\n            </SparseTabPanel>\r\n\r\n            {data.hasDepth &&\r\n                <SparseTabPanel selectedTab={tab} index={4} controlPanelProps={controlPanelProps.scatter}>\r\n                    {tab === 4 &&\r\n                        <SparseScatter\r\n                            xValues={data.variableValues}\r\n                            yValues={data.depths}\r\n                            markerOptions={markerOptions}\r\n                            infoObject={data}\r\n                            xTitle={data.parameters.fields}\r\n                            yTitle='Depth'\r\n                            type='depth'\r\n                        />                    \r\n                    }\r\n                </SparseTabPanel>            \r\n            }\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseMap));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import Plot from 'react-plotly.js';\r\n\r\nimport { IconButton, Paper } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\n\r\n// import colors from '../Enums/colors';\r\nimport storedProcedures from '../../Enums/storedProcedures';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport SpaceTimeChart from './SpaceTimeChart';\r\nimport TimeSeriesChart from './TimeSeriesChart';\r\nimport DepthProfileChart from './DepthProfileChart';\r\nimport SectionMapChart from './SectionMapChart';\r\nimport SparseMap from './SparseMap';\r\nimport SparseHistogram from './SparseHistogram';\r\n\r\nimport spatialResolutions from '../../Enums/spatialResolutions';\r\n\r\nimport { deleteChart } from '../../Redux/actions/visualization';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  deleteChart\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartPaper: {\r\n      margin: '60px auto 20px auto',\r\n      // width: '90%'\r\n      paddingTop: '16px',\r\n      display: 'inline-block'\r\n  },\r\n})\r\n\r\n// const SamplePlot = () => {\r\n//   let x = [0,0,0,0,0,1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4];\r\n//   let y = [0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,];\r\n//   let z = [0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,1,2,3,4,5,6,7,8,9];\r\n  \r\n//   return (\r\n\r\n//       <Plot\r\n//       useResizeHandler={true}\r\n//       style= {{\r\n//           position: 'relative',\r\n//           display:'inline-block',\r\n//           marginTop: '30px',\r\n//           width: '66vw',\r\n//           height: '44vw'\r\n//       }}\r\n      \r\n//       data={[\r\n//           {   \r\n//               x,\r\n//               y,\r\n//               z,\r\n//               connectgaps: false,\r\n//               zsmooth: 'best',\r\n              \r\n//               name: 'Test',\r\n//               type: 'heatmap',\r\n//               contours: {\r\n//                   showlabels: true,\r\n//                   labelfont: {\r\n//                       family: 'Raleway',\r\n//                       size: 12,\r\n//                       color: 'white',\r\n//                   },\r\n//                   labelformat: '.2e'\r\n//               },\r\n//               colorbar: {\r\n//                   title: {\r\n//                       text: `test`\r\n//                   },\r\n//                   exponentformat: 'power'\r\n//               }\r\n//           }\r\n//       ]}\r\n      \r\n//       layout= {{\r\n//         autosize: true,\r\n//           font: {color: '#ffffff'},\r\n//           margin: {\r\n//             t: 50\r\n//           },\r\n//           title: {\r\n//               text: `A sample chart title`,\r\n//               font: {\r\n//                 size: 16\r\n//               }\r\n//           },\r\n//           paper_bgcolor: colors.backgroundGray,\r\n//           xaxis: {title: 'Longitude', color: '#ffffff'},\r\n//           yaxis: {title: 'Latitude', color: '#ffffff'},\r\n//           annotations: [\r\n//               {\r\n//                   text: `Brought to you by chef boyardee`,\r\n//                     font: {\r\n//                         color: 'white',\r\n//                         size: 10\r\n//                     },\r\n//                   yref: 'paper',\r\n//                   y: -.24,\r\n//                   showarrow: false,\r\n//                   xref: 'paper',\r\n//                   x: .5\r\n//                   }\r\n//               ]\r\n              \r\n//           }}   \r\n//           />\r\n//           )\r\n// }\r\n\r\nconst closeChartStyles = {\r\n    closeChartIcon: {\r\n      float: 'right',\r\n      marginTop: '-16px'\r\n    }\r\n}\r\n\r\nconst _CloseChartIcon = (props) => {\r\n  const { classes } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton className={classes.closeChartIcon} color=\"inherit\" onClick={() => props.handleDeleteChart(props.chartIndex)} disableFocusRipple disableRipple>\r\n        <Close/>\r\n      </IconButton>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst CloseChartIcon = withStyles(closeChartStyles)(_CloseChartIcon);\r\n\r\nclass Charts extends Component {\r\n\r\n  handleDeleteChart = (chartIndex) => {\r\n    this.props.deleteChart(chartIndex);\r\n  }\r\n\r\n    render(){\r\n        const { classes, charts } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n              {/* <Paper elevation={12} className={classes.chartPaper}>\r\n              <SamplePlot/> \r\n              </Paper> */}\r\n                {charts.map((chart, index) => {\r\n                    switch(chart.data.parameters.spName){\r\n\r\n                        case storedProcedures.spaceTime:\r\n                          if(chart.subType === vizSubTypes.sparse) {\r\n                            return (\r\n                              <div key={chart.id}>\r\n                                <Paper elevation={12} className={classes.chartPaper} key={chart.id}>\r\n                                  <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                                  <SparseMap chart={chart}/>\r\n                                </Paper>\r\n                              </div>\r\n                            )\r\n                          } else if(chart.data.metadata.Spatial_Resolution === spatialResolutions.irregular) {\r\n                            return (\r\n                              <div key={chart.id}>\r\n                                <Paper elevation={12} className={classes.chartPaper} key={chart.id}>\r\n                                  <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                                  <SparseHistogram chart={chart}/>\r\n                                </Paper>\r\n                              </div>\r\n                            )\r\n                          }\r\n                          else return (\r\n                            <div key={chart.id}>\r\n                              <Paper elevation={12} className={classes.chartPaper} key={chart.id}>\r\n                                <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                                <SpaceTimeChart chart={chart}/>\r\n                              </Paper>\r\n                            </div>\r\n                          )\r\n\r\n                        case storedProcedures.timeSeries:\r\n                          return (\r\n                            <div key={chart.id}>\r\n                              <Paper elevation={12} className={classes.chartPaper} key={chart.id}>\r\n                                <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                                <TimeSeriesChart chart={chart}/>\r\n                              </Paper>\r\n                            </div>\r\n                          )\r\n\r\n                        case storedProcedures.depthProfile:\r\n                          return (\r\n                            <div key={chart.id}>\r\n                              <Paper elevation={12} className={classes.chartPaper} key={chart.id}>\r\n                                <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                                <DepthProfileChart chart={chart}/>\r\n                              </Paper>\r\n                            </div>\r\n                          )\r\n\r\n                        case storedProcedures.sectionMap:\r\n                          return (\r\n                            <div key={chart.id}>\r\n                              <Paper elevation={12} className={classes.chartPaper} key={chart.id}>\r\n                                <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                                <SectionMapChart chart={chart}/>\r\n                              </Paper>\r\n                            </div>\r\n                          )\r\n                        \r\n                        default:\r\n                          return '';\r\n                  }\r\n                })}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { cruiseListRequestSend, cruiseTrajectoryRequestSend, cruiseTrajectoryClear } from '../../Redux/actions/visualization';\r\n\r\nimport states from '../../Enums/asyncRequestStates';\r\nimport colors from '../../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    cruiseList: state.cruiseList,\r\n    getCruiseListState: state.getCruiseListState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseListRequestSend,\r\n    cruiseTrajectoryRequestSend,\r\n    cruiseTrajectoryClear\r\n}\r\n\r\nconst esriFonts = '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif';\r\nconst esriFontColor = 'white';\r\nconst esriBackgroundColor = '#424242';\r\n\r\nconst styles = theme => ({\r\n    outerDiv: {\r\n        padding:'12px',\r\n        maxWidth: '260px',\r\n        backgroundColor: 'transparent',\r\n        color: esriFontColor,\r\n        borderRadius: '4px',\r\n        boxShadow: '2px',\r\n        position: 'relative',\r\n        backdropFilter: 'blur(2px)'\r\n    },\r\n\r\n    cruiseSelect: {\r\n        width: '260px',\r\n        borderRadius: '4px',\r\n    },\r\n\r\n    cruiseInfo: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        margin: '12px auto 0 auto',\r\n    },\r\n\r\n    cruiseInfoCell: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        borderStyle: 'none',\r\n    },\r\n})\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n      <components.Option \r\n        {...props} \r\n        innerProps={{\r\n            ...props.innerProps, \r\n            // Prevent focus / scroll events when mousing over options\r\n            onMouseMove: (e) => e.preventDefault(), \r\n            onMouseOver: (e) => e.preventDefault()\r\n        }}>\r\n    </components.Option>\r\n    )\r\n}\r\n\r\nconst cruiseSort =  (a,b) => a.Name < b.Name ? -1 : 1;\r\n\r\nclass CruiseSelector extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Nickname');\r\n        search.addIndex('Name');\r\n        search.addIndex('Chief_Name');\r\n        search.addIndex('Keywords');\r\n        try{\r\n            if(props.cruiseList && props.cruiseList.length) search.addDocuments(props.cruiseList);\r\n        } catch(e) {\r\n            console.log(e);\r\n            console.log(props.cruiseList);\r\n        }\r\n\r\n        this.state = {\r\n            search,\r\n            searchField: '',\r\n            selectedCruise: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.cruiseList || !this.props.cruiseList.length) this.props.cruiseListRequestSend();\r\n    }\r\n\r\n    getSelectOptionsFromCruiseList = (list) => {\r\n        return list.map(item => ({\r\n            value: item.Name,\r\n            label: item.Name,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    handleCruiseSelect = (selection) => {\r\n        if(selection && selection.data){\r\n            const id = selection.data.ID;\r\n            this.props.cruiseTrajectoryRequestSend(id);\r\n        } else {this.props.cruiseTrajectoryClear()}\r\n\r\n        this.setState({...this.state, selectedCruise: selection});\r\n        this.props.updateParametersFromCruiseBoundary(selection);\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.cruiseList && prevProps.cruiseList.length) && (this.props.cruiseList && this.props.cruiseList.length)){\r\n            this.state.search.addDocuments(this.props.cruiseList);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    render(){\r\n\r\n        const { search, searchField, selectedCruise } = this.state;        \r\n        const { classes, cruiseList} = this.props;\r\n        \r\n        const options = searchField && cruiseList ? this.getSelectOptionsFromCruiseList(search.search(searchField).sort(cruiseSort)) \r\n            : cruiseList ? this.getSelectOptionsFromCruiseList(cruiseList) \r\n            : []\r\n\r\n        return (\r\n            <div id='cruise-selector' className={classes.outerDiv}>\r\n                <div className={classes.blurEffectDiv}></div>\r\n                <Select\r\n                    isLoading={this.props.getCruiseListState === states.inProgress}\r\n                    components={{\r\n                        IndicatorSeparator:'',\r\n                        Option,\r\n                        SingleValue,\r\n                    }}\r\n                    isClearable\r\n                    onInputChange={this.onAutoSuggestChange}\r\n                    filterOption={null}\r\n                    className={classes.cruiseSelect}\r\n                    escapeClearsValue\r\n                    label=\"Cruise\"\r\n                    options={options}\r\n                    onChange={this.handleCruiseSelect}\r\n                    value={this.state.selectedCruise}\r\n                    placeholder=\"Search Cruises\"\r\n                    styles={{\r\n                        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                        menuList: provided => ({...provided, backgroundColor: esriBackgroundColor}),\r\n\r\n                        input: provided => ({...provided,\r\n                            color: 'inherit',\r\n                            fontFamily: esriFonts\r\n                        }),\r\n\r\n                        control: provided => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            border: 'none',\r\n                            boxShadow: '1px 1px 1px 1px #242424',\r\n                            color: esriFontColor,\r\n                            borderRadius: 4,\r\n                            '&:hover': { \r\n                                border: `1px solid white`,\r\n                            },\r\n                            '&:focus-within': {\r\n                                borderColor: colors.orange\r\n                            }\r\n                        }),\r\n\r\n                        placeholder: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: colors.orange,\r\n                            fontSize: '14px'\r\n                        }),\r\n\r\n                        noOptionsMessage: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: esriFontColor,\r\n                            backgroundColor: esriBackgroundColor\r\n                        }),\r\n\r\n                        option: (provided, state) => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            color: state.isFocused ? colors.orange : 'white',\r\n                            '&:hover': { backgroundColor: 'rgba(122,67,0,.5)'}\r\n                        }),\r\n\r\n                        singleValue: (provided, state) => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: 'inherit',\r\n                            paddingRight: '20px',\r\n                        })\r\n                    }}\r\n                    theme={theme => ({\r\n                        ...theme,\r\n                        colors: {\r\n                            ...theme.colors,\r\n                            // Background color of hovered options\r\n                            primary25: '#e0e0e0',\r\n                            primary: '#212121',\r\n                        },\r\n                    })}\r\n                />\r\n                {selectedCruise &&\r\n                    <Table size='small' className={classes.cruiseInfo}>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Cruise:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Name}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Nickname:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Nickname}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            {\r\n                                selectedCruise.data.Start_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Start Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Start_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.End_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        End Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.End_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Chief_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Chief Scientist:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Chief_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Ship_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Ship:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Ship_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CruiseSelector));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\n\r\nimport CruiseSelector from './CruiseSelector';\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { throttle } from 'throttle-debounce';\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nconst drawButtonStyles = (theme) => ({\r\n    outerDiv: {\r\n        // padding:'12px 0 12px 0',\r\n        backgroundColor: 'transparent',\r\n        // width: '180px',\r\n        borderRadius: '4px',\r\n        marginRight: '20px'\r\n    },\r\n\r\n    drawButton: {\r\n        // border: '1px solid #333333',\r\n        border: `1px solid #333333`,\r\n        borderRadius: '4px',\r\n        color: colors.orange,\r\n        cursor: 'pointer',\r\n        padding: '6px',\r\n        width: '160px',\r\n        fontSize:'14px',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        // backgroundColor: 'rgba(255, 128, 0, .8)',\r\n        // backgroundColor: 'transparent',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif',\r\n        '&:hover': { \r\n            borderColor: 'white'\r\n        },\r\n    },\r\n\r\n    helpText: {\r\n        marginTop: 0,\r\n        color: 'white',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif'\r\n    },\r\n\r\n    cancelButton: {\r\n        display: 'none',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nconst DrawButtonRaw = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    return (\r\n        <div className={classes.outerDiv} id='draw-region-div'>\r\n            {showHelp && <p className={classes.helpText}>Click once to draw <br/>and again to finish</p>}\r\n            <button id='draw-button' className={classes.drawButton}>\r\n                Select Region\r\n            </button>\r\n            <button id='cancel-button' className={`${classes.drawButton} ${classes.cancelButton}`}>\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DrawButton = withStyles(drawButtonStyles)(DrawButtonRaw);\r\n\r\nconst polygonSymbol = {\r\n    type: \"polygon-3d\",\r\n    symbolLayers: [\r\n        {\r\n            type: \"fill\",\r\n            material: {\r\n            color: [255, 128, 0, .3]\r\n            },\r\n            outline: {\r\n                color: [255, 128, 0, 1],\r\n                size: '2px'\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nconst polylineSymbol = {\r\n    type: \"line-3d\",\r\n        symbolLayers: [\r\n            {\r\n                type: \"line\",\r\n                size: \"3px\",\r\n                material: {\r\n                    color: {\r\n                        r: 51,\r\n                        g: 51,\r\n                        b: 204,\r\n                        a: 0\r\n                    }\r\n                },\r\n            }\r\n        ]\r\n}\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.sketchModel = new props.esriModules.SketchViewModel({\r\n            layer: props.regionLayer,\r\n            view: props.view,\r\n            polygonSymbol,\r\n            polylineSymbol,\r\n            defaultUpdateOptions: {\r\n                toggleToolOnClick: false,\r\n                tool: \"transform\"\r\n            }\r\n        })\r\n    }\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { view, esriModules, regionLayer, setShowHelp } = this.props;\r\n        var { sketchModel } = this;\r\n\r\n        var drawButton = document.getElementById('draw-button');\r\n        var cancelButton = document.getElementById('cancel-button');\r\n\r\n        const throttledUpdate = throttle(75, (event) => {\r\n            if(event.state === 'active'){\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n            }\r\n        })\r\n\r\n        sketchModel.on(\"create\", (event) => {\r\n            if(event.state === 'active' && event.toolEventInfo && event.toolEventInfo.type === 'vertex-add'){\r\n                sketchModel.complete();\r\n            }\r\n\r\n            if(event.graphic && event.graphic.visible) {\r\n                event.graphic.visible = false;\r\n            }\r\n            if(event.state === 'cancel'){\r\n                setShowHelp(false);\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n\r\n            if(event.state === \"complete\") {\r\n                setShowHelp(false);\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });    \r\n\r\n        sketchModel.on('create', throttledUpdate)\r\n\r\n        sketchModel.on('update', (event) => {\r\n            if(event.toolEventInfo && event.toolEventInfo.type === 'move-stop'){\r\n                if(event.state === 'cancel') return;\r\n                // this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphics[0].geometry.extent));\r\n                this.props.updateDomainFromGraphicExtent(event.graphics[0].geometry.extent);\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });   \r\n        \r\n        drawButton.addEventListener(\"click\", (event) => {\r\n                regionLayer.removeAll();\r\n                setShowHelp(true);\r\n                sketchModel.create('polyline', {\r\n                    mode:'click'            \r\n                });\r\n                drawButton.style.display = 'none';\r\n                cancelButton.style.display = 'inline-block';\r\n        });\r\n\r\n        cancelButton.addEventListener('click', (event) => {\r\n            sketchModel.cancel();\r\n            setShowHelp(false);\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })\r\n\r\n        view.ui.add('draw-region-div', 'bottom-right');\r\n        view.ui.add('cruise-selector', 'top-right');\r\n\r\n        view.ui.remove('zoom');\r\n        view.ui.remove('navigation-toggle');\r\n        view.ui.remove('compass');\r\n        view.ui.remove('attribution');\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst TrajectoryController = React.memo((props) => {\r\n    const { cruiseTrajectory, trajectoryLayer, esriModules } = props;\r\n    \r\n    if(cruiseTrajectory){\r\n        const { lons, lats } = cruiseTrajectory;\r\n\r\n        let midIndex = Math.floor(lons.length / 2);\r\n\r\n        trajectoryLayer.removeAll();\r\n\r\n        var polyLines = [[]];\r\n        var lineIndex = 0;\r\n\r\n        let lonStart = lons[0];\r\n        let latStart = lats[0];\r\n        let maxDistance = 0;\r\n        // var lonMin = lons[0];\r\n        // var lonMax = lons[0];\r\n        // var latMin = lats[0];\r\n        // var latMax = lats[0];\r\n\r\n        // Create a new path array each time 180 lon is crossed\r\n        lons.forEach((lon, i) => {\r\n            let lat = lats[i];\r\n\r\n            let latDistance = Math.abs(lat - latStart);\r\n            let _lonDistance = Math.abs(lon - lonStart);\r\n            let lonDistance = _lonDistance > 180? 360 - _lonDistance : _lonDistance;\r\n\r\n            let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n            maxDistance = distance > maxDistance ? distance : maxDistance;\r\n\r\n            polyLines[lineIndex].push([lon, lat]);\r\n\r\n            if(i < lons.length - 1){\r\n                if((lon > 160 && lon < 180) && (lons[i + 1] > -180 && lons[i + 1] < -160)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n\r\n                if((lon > -180 && lon < -160) && (lon[i + 1] > 160 && lon[i + 1] < 180)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n            }\r\n        })\r\n\r\n        var cruiseTrajectorySymbol = {\r\n            type: 'line-3d',\r\n            symbolLayers: [{\r\n                type: 'line',\r\n                material: { color: [255, 128, 0, 1] },\r\n                cap:  'round',\r\n                join: 'round',\r\n                size: 2\r\n            }]\r\n        }\r\n\r\n        polyLines.forEach(line => {\r\n\r\n            let cruiseTrajectoryGeometry = {\r\n                type: 'polyline',\r\n                paths: line\r\n            }\r\n\r\n            let graphic = new esriModules.Graphic({\r\n                geometry: cruiseTrajectoryGeometry,\r\n                symbol: cruiseTrajectorySymbol\r\n            });\r\n\r\n            trajectoryLayer.add(graphic);\r\n        })\r\n\r\n        try {\r\n            const center = [lons[midIndex], lats[midIndex]];\r\n\r\n            var zoom = 7 - Math.floor(maxDistance / 6);            \r\n    \r\n            props.view.goTo({\r\n                target: center,\r\n                zoom\r\n            }, {\r\n                maxDuration: 2500,\r\n                speedFactor: .5\r\n            });    \r\n\r\n        } catch(e) {console.log(e)}\r\n\r\n    } else {\r\n        trajectoryLayer.removeAll();\r\n\r\n        props.view.goTo({\r\n            target: [-140, 30],\r\n            zoom: 3\r\n        }, {\r\n            maxDuration: 2500,\r\n            speedFactor: .5\r\n        }); \r\n    }\r\n    return '';\r\n})\r\n\r\nclass MapContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showHelp: false\r\n        }\r\n        this.regionLayer = new props.esriModules.GraphicsLayer();\r\n        this.trajectoryLayer = new props.esriModules.GraphicsLayer();\r\n    }\r\n\r\n    render = () => {\r\n        const { classes, esriModules, spParams, cruiseTrajectory, globeUIRef } = this.props;\r\n\r\n\r\n        const lat1 = parseFloat(spParams.lat1);\r\n        const lat2 = parseFloat(spParams.lat2);\r\n        const lon1 = parseFloat(spParams.lon1);\r\n        let _lon2 = parseFloat(spParams.lon2);\r\n        const lon2 = _lon2 < lon1 ? _lon2 + 360 : _lon2;\r\n\r\n        this.regionLayer.removeAll();\r\n\r\n        var polygon = {\r\n            type: 'polygon', \r\n            rings: [\r\n                [lon1, lat1],\r\n                [lon2, lat1],\r\n                [lon2, lat2],\r\n                [lon1, lat2],\r\n                [lon1, lat1]\r\n            ]\r\n        };\r\n\r\n        let regionGraphic = new esriModules.Graphic({\r\n            geometry: polygon,\r\n            symbol: polygonSymbol\r\n        })\r\n\r\n        this.regionLayer.add(regionGraphic);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ \r\n                        basemap: 'satellite',\r\n                        layers: [\r\n                            this.regionLayer,\r\n                            this.trajectoryLayer\r\n                        ],\r\n\r\n                    }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3,\r\n                        highlightOptions: {\r\n                            haloOpacity: 0,\r\n                            haloColor: 'rgba(0, 0, 0, 0)',\r\n                            fillOpacity: 0,\r\n                            color: \"rgba(0, 0, 0, 0)\"\r\n                        }\r\n                    }}\r\n                >\r\n                    <TrajectoryController \r\n                        cruiseTrajectory={cruiseTrajectory}\r\n                        trajectoryLayer={this.trajectoryLayer}\r\n                        esriModules={esriModules}\r\n                    />\r\n                    <UiComponents\r\n                        updateDomainFromGraphicExtent = {this.props.updateDomainFromGraphicExtent}\r\n                        esriModules={esriModules}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                        regionLayer={this.regionLayer}\r\n                        setShowHelp={(showHelp) => this.setState({...this.state, showHelp})}\r\n                        ref={globeUIRef}\r\n                    />\r\n                </Scene>\r\n                <DrawButton showHelp={this.state.showHelp}/>\r\n                <CruiseSelector updateParametersFromCruiseBoundary={this.props.updateParametersFromCruiseBoundary}/>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MapContainer);","const cleanSPParams = ({depth1, depth2, dt1, dt2, fields, lat1, lat2, lon1, lon2, spName, tableName}) => ({\r\n    depth1: parseFloat(depth1),\r\n    depth2: parseFloat(depth2),\r\n    dt1,\r\n    dt2,\r\n    fields,\r\n    lat1: parseFloat(lat1),\r\n    lat2: parseFloat(lat2),\r\n    lon1: parseFloat(lon1),\r\n    lon2: parseFloat(lon2),\r\n    spName,\r\n    tableName,\r\n})\r\n\r\nexport default cleanSPParams;","const localDateToString = (date) => {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate()\r\n\r\n    let nYear = year.toString();\r\n    let nMonth = month < 10 ? '0' + month.toString() : month.toString();\r\n    let nDay = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return nYear + '-' + nMonth + '-' + nDay;\r\n}\r\n\r\nexport default localDateToString;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\nimport storedProcedures from '../../Enums/storedProcedures';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from '../User/LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\nimport VizControlPanel from './VizControlPanel';\r\nimport DownloadConfirmationDialog from './DownloadConfirmationDialog';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend, cruiseListRequestSend, completedShowCharts } from '../../Redux/actions/visualization';\r\nimport { retrievalRequestSend, datasetRetrievalRequestSend } from '../../Redux/actions/catalog';\r\n\r\nimport { loadModules } from 'esri-loader';\r\n\r\nimport depthUtils from '../../Utility/depthCounter';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport Charts from './Charts';\r\nimport MapContainer from './MapContainer';\r\nimport colors from '../../Enums/colors'\r\nimport cleanSPParams from '../../Utility/cleanSPParams';\r\nimport localDateToString from '../../Utility/localDateToString';\r\nimport utcDateStringToLocal from '../../Utility/utcDateStringToLocal';\r\nimport TopNavBar from '../UI/TopNavBar';\r\nimport temporalResolutions from '../../Enums/temporalResolutions';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.sectionMap\r\n        },\r\n        [vizSubTypes.contourSectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.contourSectionMap\r\n        },\r\n        [vizSubTypes.timeSeries]: {\r\n            sp: storedProcedures.timeSeries,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: storedProcedures.depthProfile,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.heatmap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.heatmap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.contourMap\r\n        },\r\n        [vizSubTypes.sparse]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.sparse\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    loadingMessage: state.loadingMessage,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    cruiseList: state.cruiseList,\r\n    showChartsOnce: state.showChartsOnce,\r\n    datasets: state.datasets\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n    cruiseListRequestSend,\r\n    completedShowCharts,\r\n    datasetRetrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    background: {\r\n        backgroundColor: colors.backgroundGray\r\n    },\r\n\r\n    showCharts: {\r\n        display: 'inline-block',\r\n        // width: '90%'\r\n    }\r\n})\r\n\r\nconst baseSPParams = {\r\n    tableName: '',\r\n    fields: null,\r\n    depth1: 0,\r\n    depth2: 0,\r\n    dt1: new Date(),\r\n    dt2: new Date(),\r\n    lat1: 0,\r\n    lat2: 0,\r\n    lon1: 0,\r\n    lon2: 0,\r\n    selectedVizType: ''\r\n}\r\n\r\nclass Visualization extends Component {\r\n    globeUIRef = React.createRef();\r\n\r\n    state = {\r\n        filteredData: [],\r\n        opacity: 1,\r\n        showCharts: false,\r\n        showUI: false,\r\n        surfaceOnly: false,\r\n        irregularSpatialResolution: false,\r\n        downloadTarget: null,\r\n\r\n        spParams: baseSPParams\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.cruiseList) this.props.cruiseListRequestSend();\r\n        if(!this.props.datasets) this.props.datasetRetrievalRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'GraphicsLayer',\r\n            'SketchViewModel',\r\n            'Utils',\r\n            'Graphic',\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/layers/GraphicsLayer',\r\n            'esri/widgets/Sketch/SketchViewModel',\r\n            'esri/geometry/support/webMercatorUtils',\r\n            'esri/Graphic',\r\n        ], {version: 'next'});\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    handleSetDownloadTarget = (downloadTarget) => {\r\n        this.setState({...this.state, downloadTarget})\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.showChartsOnce) {\r\n            this.props.completedShowCharts();\r\n            this.setState({...this.state, showCharts: true})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleLatLonChange = (event) => {\r\n        this.setState({\r\n            ...this.state, \r\n            spParams: {...this.state.spParams, [event.target.name]: event.target.value},\r\n        })\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt1:newDate}});\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt2:newDate}});\r\n        }\r\n    }\r\n\r\n    onVisualize = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, selectedVizType } = this.state.spParams;\r\n\r\n        let mapping = mapVizType(selectedVizType);\r\n        let parameters = cleanSPParams({\r\n            depth1,\r\n            depth2,\r\n            dt1: localDateToString(dt1),\r\n            dt2: localDateToString(dt2),\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        });\r\n\r\n        let payload = {\r\n            parameters,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        if(fields) {\r\n            let surfaceOnly = !fields.data.Depth_Min;\r\n            let irregularSpatialResolution = fields.data.Spatial_Resolution === 'Irregular';\r\n\r\n            let dt1 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt1 : utcDateStringToLocal(fields.data.Time_Min);\r\n            let dt2 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt2 : \r\n                irregularSpatialResolution ? utcDateStringToLocal(fields.data.Time_Max) :\r\n                utcDateStringToLocal(fields.data.Time_Min);\r\n\r\n            let lat1 = irregularSpatialResolution ? fields.data.Lat_Min : this.state.spParams.lat1;\r\n            let lat2 = irregularSpatialResolution ? fields.data.Lat_Max : this.state.spParams.lat2;\r\n            let lon1 = irregularSpatialResolution ? fields.data.Lon_Min : this.state.spParams.lon1;\r\n            let lon2 = irregularSpatialResolution ? fields.data.Lon_Max : this.state.spParams.lon2;\r\n            let depth1 = irregularSpatialResolution ? fields.data.Depth_Min || 0 : \r\n                depthUtils.piscesTable.has(fields.data.Table_Name) ? 0 :\r\n                depthUtils.darwinTable.has(fields.data.Table_Name) ? 0 : \r\n                this.state.spParams.depth1;\r\n\r\n            let depth2 = irregularSpatialResolution ? fields.data.Depth_Max || 0 : \r\n                depthUtils.piscesTable.has(fields.data.Table_Name) ? ((depthUtils.piscesDepths[0] + depthUtils.piscesDepths[1]) / 2).toFixed(2) :\r\n                depthUtils.darwinTable.has(fields.data.Table_Name) ? ((depthUtils.darwinDepths[0] + depthUtils.darwinDepths[1]) / 2) : \r\n                this.state.spParams.depth2;\r\n\r\n            if(irregularSpatialResolution){\r\n                this.globeUIRef.current.props.view.goTo({\r\n                    target: [(parseFloat(lon1) + parseFloat(lon2)) / 2, (parseFloat(lat1) + parseFloat(lat2)) / 2],\r\n                    zoom: 3\r\n                }, {\r\n                    maxDuration: 2500,\r\n                    speedFactor: .5\r\n                }); \r\n            }\r\n\r\n            let tableName = fields.data.Table_Name;\r\n            \r\n            this.setState({...this.state,\r\n                surfaceOnly,\r\n                irregularSpatialResolution,\r\n                spParams: {...this.state.spParams, \r\n                    fields,\r\n                    dt1,\r\n                    dt2,\r\n                    lat1,\r\n                    lat2,\r\n                    lon1,\r\n                    lon2,\r\n                    depth1,\r\n                    depth2,\r\n                    tableName,\r\n                    selectedVizType: ''\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    updateParametersFromCruiseBoundary = (cruise) => {\r\n        if(cruise && this.state.spParams.fields){\r\n            this.props.snackbarOpen('Setting chart parameters to cruise boundaries.')\r\n            this.setState({...this.state,\r\n                spParams: {...this.state.spParams,\r\n                    lat1: cruise.data.Lat_Min,\r\n                    lat2: cruise.data.Lat_Max,\r\n                    lon1: cruise.data.Lon_Min,\r\n                    lon2: cruise.data.Lon_Max,\r\n                    dt1: utcDateStringToLocal(cruise.data.Start_Time),\r\n                    dt2: utcDateStringToLocal(cruise.data.End_Time)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleShowCharts = () => {\r\n        this.setState({...this.state, showCharts: true})\r\n    }\r\n\r\n    handleShowGlobe = () => {\r\n        this.setState({...this.state, showCharts: false})\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromGraphicExtent = (extent) => {\r\n        var _lon1 = extent.xmin > -180 ? extent.xmin : extent.xmin + 360;\r\n        var _lon2 = extent.xmax < 180 ? extent.xmax : extent.xmax - 360;\r\n\r\n        var newCoordinates = {\r\n            lat1: extent.ymin.toFixed(3),\r\n            lat2: extent.ymax.toFixed(3),\r\n            lon1: _lon1.toFixed(3),\r\n            lon2: _lon2.toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    resetSPParams = () => {\r\n        this.setState({...this.state, spParams: baseSPParams})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        return (\r\n            <div>\r\n                <TopNavBar/>\r\n                <DownloadConfirmationDialog\r\n                    {...this.state.spParams}\r\n                    downloadTarget={this.state.downloadTarget}\r\n                    handleSetDownloadTarget={this.handleSetDownloadTarget}\r\n                />\r\n\r\n                <VizControlPanel\r\n                    handleSetDownloadTarget={this.handleSetDownloadTarget}\r\n                    toggleChartView={this.toggleChartView}\r\n                    toggleShowUI={this.toggleShowUI}\r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                    {...this.state.spParams}\r\n                    surfaceOnly={this.state.surfaceOnly}\r\n                    irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                    showCharts={this.state.showCharts}\r\n                    handleShowCharts={this.handleShowCharts}\r\n                    handleShowGlobe={this.handleShowGlobe}\r\n                    resetSPParams={this.resetSPParams}\r\n                />\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer\r\n                            globeUIRef={this.globeUIRef}\r\n                            updateDomainFromGraphicExtent={this.updateDomainFromGraphicExtent}\r\n                            updateParametersFromCruiseBoundary={this.updateParametersFromCruiseBoundary}\r\n                            esriModules={this.state.esriModules}\r\n                            spParams={this.state.spParams}\r\n                            cruiseTrajectory={this.props.cruiseTrajectory}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                <div className={this.state.showCharts ? classes.showCharts : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../../Enums/asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend, googleLoginRequestSend } from '../../Redux/actions/user';\r\n\r\nimport GoogleSignInButton from './GoogleSignInButton';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults,\r\n    googleLoginRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n\r\n    googleIconWrapper: {\r\n        marginRight: '100px',\r\n        marginLeft: '-8px'\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    onGoogleSignin = (user) => {\r\n        this.props.googleLoginRequestSend(user.Zi.id_token);\r\n    }\r\n\r\n    onDialogEnter = () => {\r\n        // clean this up\r\n        window.gapi.auth2.getAuthInstance().attachClickHandler(\"g-signin2\");\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                onEnter={this.onDialogEnter}\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Please enter your username and password, or <Link onClick={this.handleClose} component={RouterLink} to={{pathname: '/register'}}>Register.</Link>\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <div className={classes.googleIconWrapper}>\r\n                                <GoogleSignInButton text='Sign in with Google'/>\r\n                            </div>\r\n\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Spinner from 'react-spinkit';\r\n\r\nconst styles = theme => ({\r\n    loader: {\r\n        backgroundColor: '#000000',\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        opacity: 0.5,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        zIndex: 9998\r\n    },\r\n\r\n    loaderContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItem: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 9999,\r\n        opacity: 1\r\n    },\r\n\r\n    spinnerText: {\r\n        zIndex: 10000,\r\n        color: '#FF8000',\r\n        marginTop: '25px',\r\n        opacity: 1\r\n    },\r\n\r\n    spinner: {\r\n        opacity: 1\r\n    }\r\n})\r\n\r\nconst LoadingOverlay = (props) => {\r\n    const { classes, loadingMessage } = props;\r\n\r\n    if(loadingMessage && loadingMessage.length){\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div className={classes.loaderContent}>\r\n                    <Spinner className={classes.spinner} color='#FF8000' name=\"ball-pulse-rise\" fadeIn='quarter'/>\r\n                    <Typography variant='h6' className={classes.spinnerText}>{loadingMessage}</Typography>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return '';\r\n\r\n}\r\n\r\nexport default withStyles(styles)(LoadingOverlay);","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from '../User/LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper';\r\nimport LoadingOverlay from './LoadingOverlay';\r\n\r\nimport { loginDialogWasCleared } from '../../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog,\r\n    loadingMessage: state.loadingMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n                <LoadingOverlay loadingMessage={this.props.loadingMessage}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { googleLoginRequestSend } from '../Redux/actions/user';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    googleLoginRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    landingWrapper: {\r\n        margin: '15vh auto'\r\n    },\r\n\r\n    welcomeMessage: {\r\n        color: '#ffffff',\r\n        maxWidth: '500px',\r\n        margin: `${theme.spacing(2)}px auto`\r\n    }\r\n})\r\n\r\nclass LandingPage extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.landingWrapper}>\r\n                <img \r\n                    src='/images/large_cmap_logo.png'\r\n                    alt='Simons CMAP Logo'\r\n                    height='290'\r\n                    width='600'\r\n                />\r\n                <Typography variant=\"body2\" component=\"p\" className={classes.welcomeMessage}>\r\n                    Welcome to Simons CMAP. This application is currently under heavy development, and some features may be incomplete.\r\n                </Typography>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingPage));","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { showLoginDialog } from '../../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user\r\n})\r\n\r\nconst Login = (props) => {\r\n\r\n    useEffect(() => {\r\n        if(!props.user) props.showLoginDialog();\r\n        else window.location.href = \"/catalog\";\r\n    })\r\n    \r\n    return (\r\n        ''\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { IconButton, Tooltip, Paper, Button, TextField, Typography, Grid } from '@material-ui/core';\r\nimport { Edit } from '@material-ui/icons';\r\n\r\nimport { updateUserInfoRequestSend } from '../../Redux/actions/user';\r\n\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport states from '../../Enums/asyncRequestStates';\r\nimport colors from '../../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    updateUserInfoRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60vw',\r\n        margin: `${theme.spacing(16)}px auto 0 auto`,\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2)\r\n    },\r\n\r\n    textField: {\r\n        margin: theme.spacing(1),\r\n        width: '80%'\r\n    },\r\n\r\n    buttonGrid: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n\r\n    editButton: {\r\n        float: 'right',\r\n        display: 'inline-block',\r\n        marginTop: '-16px'\r\n    },\r\n\r\n    header: {\r\n        paddingLeft: theme.spacing(3),\r\n        display: 'inline-block',\r\n        marginTop: '-4px',\r\n        float: 'left'\r\n    }\r\n})\r\n\r\nconst userProperties = {\r\n    firstName: {\r\n        label:'First Name',\r\n        name: 'firstName',\r\n        type: 'text',\r\n        requirement: 'Must be 2 or more alphabetical characters.',\r\n    },\r\n\r\n    lastName: {\r\n        label:'Last Name',\r\n        name: 'lastName',\r\n        type: 'text',\r\n        requirement: 'Must be 2 or more alphabetical characters.',\r\n    },\r\n\r\n    institute: {\r\n        label:'Institute',\r\n        name: 'institute',\r\n        type: 'text',\r\n        requirement: 'Maximum length is 150 characters.',\r\n    },\r\n\r\n    department: {\r\n        label:'Department',\r\n        name: 'department',\r\n        type: 'text',\r\n        requirement: 'Maximum length is 150 characters.',\r\n    },\r\n\r\n    country: {\r\n        label:'Country',\r\n        name: 'country',\r\n        type: 'text',\r\n        requirement: 'Maximum length is 150 characters.',\r\n    }\r\n}\r\n\r\nconst userToState = (user) => ({\r\n    editable: false,\r\n    firstName: {\r\n        value: user.firstName,\r\n        valid: true\r\n    },\r\n\r\n    lastName: {\r\n        value: user.lastName,\r\n        valid: true\r\n    },\r\n    institute: {\r\n        value: user.institute || '',\r\n        valid: true\r\n    },\r\n    department: {\r\n        value: user.department || '',\r\n        valid: true\r\n    },\r\n    country: {\r\n        value: user.country || '',\r\n        valid: true\r\n    },\r\n    email: {\r\n        value: user.email || '',\r\n        valid: true\r\n    }\r\n})\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        if(!props.user) return;\r\n\r\n        this.state = {\r\n            ...userToState(props.user),\r\n            editable: false,\r\n            infoHasChanged: false\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.handleValidation(fieldName, newValue);\r\n        this.setState({\r\n            ...this.state,\r\n            infoHasChanged: true,\r\n            [fieldName]: {\r\n                value: newValue,\r\n                valid\r\n            }\r\n        })\r\n    };\r\n\r\n    handleValidation = (fieldName, newValue) => {\r\n        let value = newValue.trim();\r\n        let pattern = /$^/;\r\n\r\n        switch(fieldName){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    handleEdit = () => {\r\n        this.setState({...this.state, editable: true})\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({...userToState(this.props.user), editable: false, infoHasChanged: false})\r\n    }\r\n\r\n    handleConfirm = () => {\r\n        this.props.updateUserInfoRequestSend({\r\n            firstName: this.state.firstName.value.trim(),\r\n            lastName: this.state.lastName.value.trim(),\r\n            institute: this.state.institute.value.trim(),\r\n            department: this.state.department.value.trim(),\r\n            country: this.state.country.value.trim()\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.user) {\r\n            window.location.href = \"/login\";\r\n            return '';\r\n        }\r\n\r\n        const { classes } = this.props;\r\n        const { editable, infoHasChanged } = this.state;\r\n\r\n        let formIsValid = true;\r\n        Object.keys(userProperties).forEach((property) => {\r\n            if(!this.state[property].valid) formIsValid = false;\r\n        })\r\n\r\n        return (\r\n            <Paper className={classes.root} elevation={6}>\r\n\r\n                <Typography variant='h5' align='left' className={classes.header}>\r\n                    Profile\r\n                </Typography>\r\n\r\n                <Tooltip title='Edit Information'>\r\n                    <IconButton className={classes.editButton} color=\"primary\" onClick={this.handleEdit} disableFocusRipple disableRipple>\r\n                            <Edit/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n                <Grid container spacing={1}>\r\n                    {\r\n                        Object.keys(userProperties).map((property, index) => (\r\n                            <Grid key={index} item xs={6}>\r\n                                <TextField\r\n                                    name={property}\r\n                                    label={userProperties[property].label}\r\n                                    value={this.state[property].value}\r\n                                    error={!this.state[property].valid}\r\n                                    helperText={this.state[property].valid ? '' : userProperties[property].requirement}\r\n                                    key={index}\r\n                                    onChange={this.handleChange}\r\n                                    inputProps={{\r\n                                        readOnly: !editable\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    className={classes.textField}\r\n                                />\r\n                            </Grid>\r\n                        ))\r\n                    }\r\n\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            name='email'\r\n                            label= 'Email'\r\n                            value={this.state.email.value}\r\n                            inputProps={{\r\n                                readOnly: true\r\n                            }}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            className={classes.textField}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                { editable &&\r\n                    <Grid className={classes.buttonGrid} container>\r\n                            <Grid item xs={9}></Grid>\r\n                            <Grid item xs={1}>\r\n                                <Button onClick={this.handleCancel}>Cancel</Button>\r\n\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2}>\r\n                                <Button\r\n                                    onClick={this.handleConfirm}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={!infoHasChanged || !formIsValid}\r\n                                >\r\n                                    Confirm\r\n                                </Button>\r\n                            </Grid>\r\n                    </Grid>\r\n                }\r\n\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Profile));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport './Stylesheets/App.scss';\n\nimport colors from './Enums/colors';\n\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\n\nimport Home from './Components/Home';\nimport Catalog from './Components/Catalog/Catalog';\nimport Register from './Components/User/Register';\nimport Visualization from './Components/Visualization/Visualization';\nimport GlobalUIComponentWrapper from './Components/UI/GlobalUIComponentWrapper';\nimport LandingPage from './Components/LandingPage';\nimport TopNavBar from './Components/UI/TopNavBar';\nimport Login from './Components/User/Login';\nimport Profile from './Components/User/Profile';\n\nimport { initializeGoogleAuth } from './Redux/actions/user';\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    error: {\n      main: colors.errorYellow\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: colors.backgroundGray,\n      paper: colors.backgroundGray\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange,\n        borderRadius: '10%'\n      }\n    },\n\n    MuiListItemIcon: {\n      root: {\n        minWidth: '40px'\n      }\n    },\n\n    MuiFormHelperText: {\n      filled: {\n        paddingLeft: '1px',\n        paddingRight: '1px',\n        fontSize: '13px'\n      }\n    },\n\n    MuiListItem: {\n      gutters: {\n        paddingLeft: '6px',\n        paddingRight: '10px'\n      },\n\n      root: {\n        paddingTop: '4px',\n        paddingBottom: '4px'\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: 'transparent',\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },\n\n    MuiButtonGroup: {\n      groupedOutlined: {\n        '&:not(:first-child)': {\n          marginLeft: 0\n        }\n      }\n    },\n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiFilledInput: {\n      input: {\n        paddingLeft: '6px',\n      },\n\n      inputSelect: {\n        paddingBottom: '6px'\n      },\n\n      adornedEnd: {\n        paddingRight: '6px'\n      },\n\n      root: {\n        backgroundColor: 'transparent',\n        '&:hover': {\n          backgroundColor: 'transparent',\n        },\n        '&:disabled': {\n          backgroundColor: 'transparent',\n        }\n      }\n    }\n  }\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  loadingMessage: state.loadingMessage\n})\n\nconst mapDispatchToProps = {\n  initializeGoogleAuth\n}\n\nclass App extends Component {\n\n  componentDidMount = () => {\n    window.gapi.load('auth2', () => this.props.initializeGoogleAuth());\n  }\n\n  render() {\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <div className=\"App\">\n          <MuiThemeProvider theme={theme}>\n          <BrowserRouter>\n            <GlobalUIComponentWrapper/>\n            <TopNavBar/>\n            <Switch>          \n              <Route exact path='/apikeymanagement' component={ Home } />\n              <Route exact path='/' component={ LandingPage } />\n              <Route exact path='/catalog' component={ Catalog } />\n              <Route exact path='/login' component={ Login } />\n              <Route exact path='/register' component={ Register } />\n              <Route exact path='/visualization' component={Visualization} />\n              <Route exact path='/profile' component={Profile} />\n            </Switch>\n          </BrowserRouter>\n          </MuiThemeProvider>\n        </div>\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './Stylesheets/index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\n\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}