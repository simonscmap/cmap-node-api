{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","Enums/spatialResolutions.js","Utility/mapSpatialResolutionToNumber.js","Utility/flattenArray.js","Utility/splitData.js","Utility/mergeArraysAndComputeMeans.js","Utility/mergeArrays.js","Enums/visualizationSubTypes.js","Enums/temporalResolutions.js","Classes/SpaceTimeData.js","Enums/storedProcedures.js","Classes/TimeSeriesData.js","Classes/DepthProfileData.js","Enums/months.js","Classes/SectionMapData.js","Classes/SparseData.js","api.js","Redux/sagas.js","Redux/store.js","Enums/colors.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/TopNavBar.js","Components/Home.js","Components/GridDetail.js","Components/DatasetDescriptionDialog.js","Components/ConnectedTooltip.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/validation.js","Components/TableStatsDialog.js","Utility/mapTemporalResolutionToNumber.js","Components/DataRetrievalForm.js","Utility/utcDateStringToLocal.js","Utility/depthCounter.js","Components/VizControlPanel.js","Components/DownloadConfirmationDialog.js","Utility/handleXTicks.js","Utility/handleChartDatestring.js","Utility/chartBase.js","Components/ChartComponents/ChartControlPanel.js","Components/ChartComponents/SpaceTimeChart.js","Components/ChartComponents/TimeSeriesChart.js","Components/ChartComponents/DepthProfileChart.js","Components/ChartComponents/SectionMapChart.js","Components/ChartComponents/SparseScatter.js","Components/ChartComponents/SparseMap.js","Components/ChartComponents/SparseHistogram.js","Components/Charts.js","Components/CruiseSelector.js","Components/MapContainer.js","Utility/cleanSPParams.js","Utility/localDateToString.js","Components/Visualization.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/LoadingOverlay.js","Components/GlobalUIComponentWrapper.js","Components/LandingPage.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","DATASET_RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","REFRESH_LOGIN","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","TABLE_STATS_REQUEST_SEND","CRUISE_TRAJECTORY_REQUEST_SEND","CRUISE_LIST_REQUEST_SEND","CSV_DOWNLOAD_REQUEST_SEND","DOWNLOAD_TEXT_AS_CSV","initialState","catalog","datasetRequestState","datasets","snackbarIsOpen","snackbarMessage","loadingMessage","showHelp","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","getCruiseTrajectoryRequestState","cruiseTrajectory","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","cruiseList","getCruiseListRequestState","showChartsOnce","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","datasetsRequestState","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","trajectory","defineProperty","datasetLongName","tableStats","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","refreshLogin","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","datasetRetrievalRequestSend","datasetRetrievalRequestProcessing","datasetRetrievalRequestSuccess","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","setLoadingMessage","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addChart","tableStatsRequestProcessing","tableStatsRequestSuccess","cruiseTrajectoryRequestSend","id","visualizationActionTypes","cruiseTrajectoryRequestSuccess","cruiseTrajectoryRequestProcessing","cruiseListRequestSend","cruiseListRequestSuccess","cruiseListRequestFailure","cruiseListRequestProcessing","triggerShowCharts","csvDownloadRequestSend","query","fileName","csvDownloadRequestProcessing","downloadTextAsCsv","text","datasetName","apiUrl","spatialResolutions","irregular","halfDegree","quarterDegree","twentyFifthDegree","fourKm","twelfthDegree","seventyKm","oneDegree","mapSpatialResolutionToNumber","resolution","_map","flattenArray","arr","flattenedArray","i","length","j","push","splitData","changeInterval","numDistinct","Math","floor","mergeArraysAndComputeMeans","mergeTargetDistance","nextMergeStartDistance","numArraysPerMerge","mergedArrays","travelDistance","subArray","sum","count","k","isNaN","mergeArrays","subTypes","sectionMap","contourSectionMap","timeSeries","histogram","depthProfile","heatmap","contourMap","sparse","temporalResolutions","threeMinutes","sixHourly","daily","weekly","monthly","annual","monthlyClimatology","threeDay","eightDayRunning","eightDays","SpaceTimeData","_this","this","classCallCheck","generateCsv","dates","Array","from","depths","hasDepth","csvArray","parameters","fields","variableValues","lats","lons","join","metadata","hasHours","isMonthly","Set","zMin","zMax","extent","indexAdjust","lonMin","lonMax","latMin","latMax","distinctLatCount","distinctLonCount","row","lat","parseFloat","_lon","lon","lon1","hasHour","Table_Name","Temporal_Resolution","time","value","add","Date","setUTCHours","toISOString","size","lonCount","latCount","quantile1","quantile","quantile2","undefined","toPrecision","spatialResolution","Spatial_Resolution","round","subType","splitByDate","splitByDepth","variableValueSubsets","_this2","depthInterval","dateInterval","map","subset","vizSubTypes","storedProcedures","spaceTime","TimeSeriesData","stds","depth","depthIndexAdjust","csvString","DepthProfileData","months","SectionMapData","lonInterval","latInterval","orientation","lonArray","max","apply","min","splitBySpace","spaceCount","SparseData","variableIndex","Depth_Min","times","latDistance","abs","lonDistance","distance","sqrt","console","log","_zoom","zoom","lonCenter","latCenter","center","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","reduce","queryString","key","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","csvParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","CSVParser","columns","on","record","read","sent","ok","abrupt","getReader","done","write","decode","stop","_callee2","_context2","Dataset_Long_Name","keyRetrieval","_callee3","_context3","json","keyCreation","_ref4","_callee4","description","_context4","trim","_x","arguments","visualization","storedProcedureRequest","_ref5","_callee5","vizData","_context5","t0","spName","status","e","_x2","getTableStats","_ref6","_callee6","tableName","_context6","_x3","cruiseTrajectoryRequest","_ref7","_callee7","_context7","_x4","_callee8","_context8","csvDownload","_ref9","_callee9","_context9","_x5","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","datasetRetrieval","queryRequest","cruiseListRequest","tableStatsRequest","csvDownloadRequest","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchDatasetRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","watchCruiseTrajectoryRequest","watchCruiseListRequest","watchTableStatsRequest","watchCsvDownloadRequest","watchDownloadTextAsCsv","watchRefreshLogin","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_marked6","_marked7","_marked8","visualizationActions","_marked9","_context10","delay","finalize","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","csv","blob","url","_context15","Blob","URL","createObjectURL","document","createElement","setAttribute","appendChild","click","removeChild","_marked15","_context16","_marked16","_context17","takeLatest","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","_context22","_marked22","_context23","_marked23","_context24","_marked24","_context25","_marked25","_context26","_marked26","_context27","_marked27","_context28","_marked28","_context29","_marked29","_context30","_marked30","_context31","_marked31","_context32","_marked32","_context33","all","_marked33","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","colors","orange","backgroundGray","aqua","errorYellow","withStyles","theme","centered","position","top","props","classes","react_default","CircularProgress","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleClick","handleChange","event","setState","target","wrapper","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","warningCaption","Grid","container","alignItems","justify","spacing","item","TextField","margin","name","onChange","placeholder","descriptionField","Button","disabled","color","onClick","Components_LoadingSpinner","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","fontSize","useEffect","Link","component","RouterLink","to","pathname","toggleShowHelp","TopNavBar","handleLogOut","clearState","username","password","handleNavigate","route","history","handleOutsideNavigate","open","_this$props","navWrapper","href","navLink","rightNavLink","withRouter","appBar","backgroundColor","boxShadow","toolBar","zIndex","paddingLeft","textAlign","boxSizing","textDecoration","marginRight","&:hover","fontWeight","display","cursor","float","rightLinkWrapper","Home","Fragment","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping1","tableMapping2","title","padding","height","infoCard","gridClass","maxHeight","gridItem","justifyContent","verticalAlign","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","maxWidth","variableDetailTable","marginLeft","tableLayout","variableDetailTableRow","variableDetailTableCell","borderBottomColor","textOverflow","paddingRight","gridDetailTypography","boldText","rightGridItem","datasetDescriptionButton","buttonTextWrapper","xs","src","context","Dataset_Name","Icon_URL","alt","Time_Min","slice","Time_Max","Depth_Max","direction","alignContent","Data_Source","Distributor","handleDescribeDataset","markdown","& img","& a","palette","primary","main","Dialog","onClose","clearDescription","DialogTitle","DialogContent","react_markdown_default","source","tooltip","secondary","opacity","Tooltip","placement","popper","children","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","describedDataset","dataset","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","onGridSizeChanged","handleColumnRowGroupChanged","forEach","column","setColumnVisible","colId","handleDownloadCatalog","header","render","gridPaper","Components_DatasetDescriptionDialog","Components_ConnectedTooltip","gridSearch","autoFocus","label","InputLabelProps","shrink","downloadButton","gridWrapper","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","enableCellTextSelection","suppressContextMenu","getRowStyle","node","detail","background","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","detailGridOptions","textTransform","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","firstName","optional","lastName","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","validation","depthOneIsLower","depthOneOutOfBounds","depthTwoOutOfBounds","negative","date","dateOneIsLater","dateOneOutOfBounds","dateTwoOutOfBounds","latOneIsHigher","latOneOutOfBounds","latTwoOutOfBounds","lonOneIsHigher","lonOneOutOfBounds","lonTwoOutOfBounds","dataIsIrregular","dateRangeRequired","depthRangeRequired","surfaceOnlyDataset","irregularOnly","dataSizeTooLarge","generic","invalid","dataSizeWarning","dataSizePrevent","variableMissing","vizTypeMissing","Long_Name","Comment","DialogContentText","Sensor","Lat_Min","Lat_Max","Lon_Min","Lon_Max","Variable_Min","Unit","Variable_Max","Variable_Mean","Variable_Std","mapTemporalResolutionToNumber","reactWindowListRef","React","createRef","MenuList","componentDidUpdate","prevProps","prevState","findIndex","child","isFocused","current","scrollToItem","options","_getValue","getValue","slicedToArray","initialOffset","indexOf","dist_index_esm","style","itemCount","itemSize","initialScrollOffset","ref","_ref","DropdownIndicator","chunk_5d200a41_browser_esm","ArrowDropDown","SingleValue","assign","Option","DataRetrievalForm","search","addDocuments","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","handleVisualizationSpeedDialClose","visualizationSpeedDialOpen","handleVisualizationSpeedDialOpen","handleVisualizationSpeedDialClick","getSelectOptionsFromCatalogItems","items","Variable","onAutoSuggestChange","searchString","searchField","estimateDataSize","_this2$props","dt1","dt2","lat1","lat2","lon2","selectedVizType","date1","date2","res","dayDiff","checkStartDepth","surfaceOnly","depth1","depth2","replace","toFixed","checkEndDepth","checkStartDate","checkEndDate","checkStartLat","checkEndLat","checkStartLon","checkEndLon","checkHeatmap","irregularSpatialResolution","checkContour","checkSection","checkHistogram","checkTimeSeries","checkDepthProfile","checkSparseMap","checkGeneralWarn","checkGeneralPrevent","JsSearch","searchIndex","addIndex","_this3","_this$state","_this$props2","_validations","fill","_validations2","startDepthMessage","endDepthMessage","startLatMessage","endLatMessage","startLonMessage","endLonMessage","heatmapMessage","contourMessage","sectionMapMessage","histogramMessage","timeSeriesMessage","depthProfileMessage","sparseMapMessage","generalWarnMessage","generalPreventMessage","parametersAreInvalid","some","showUI","displayNone","Components_TableStatsDialog","dataRetrievalFormPaper","shortenHeight","react_select_browser_esm","isLoading","components","IndicatorSeparator","isClearable","onInputChange","filterOption","variableSelect","escapeClearsValue","updateFields","styles","menu","provided","input","fontFamily","control","border","borderColor","&:focus-within","noOptionsMessage","option","_ref2",":active","&:after","singleValue","primary25","IconButton","LibraryBooks","datePickerGridSection","material_ui_pickers_esm","format","minDate","maxDate","autoOk","handleStartDateChange","inputVariant","handleEndDateChange","FormControl","InputLabel","htmlFor","OutlinedInput","aria-describedby","labelWidth","FormHelperText","handleLatLonChange","vizTypeSelectFormControl","Select","inputProps","MenuItem","onVisualize","generalMessage","dataRetrievalFormField","retrieveDataButton","visualizationSpeedDial","visualizeButton","borderRadius","visualizeButtonText","dominantBaseline","textAnchor","vizSelect","utcDateStringToLocal","utcString","utcYear","getUTCFullYear","utcMonth","getUTCMonth","utcDate","getUTCDate","newDate","setFullYear","darwinDepths","piscesDepths","piscesTable","darwinTable","exports","has","overrideDisabledStyle","clearCharts","getDatePlaceholder","valueOf","month","getMonth","day","getDate","getFullYear","groupHeaderHeight","selectRef","resetAfterIndex","scrollOffset","foundFocus","groupHasFocus","scrollTo","groupHeights","grandChild","totalHeight","acc","cur","estimatedItemSize","Group","hasFocus","element","sensor","CustomHeading","headingProps","headingLabel","firstChild","selectProps","hidden","customHeading","icon","typography","iconClass","ListItem","select","focusedOption","Icon","handleSetDownloadTarget","stopPropagation","CloudDownload","Doc_URL","Info","ArrowRight","innerProps","onMouseMove","preventDefault","onMouseOver","GroupHeading","formatOptionLabel","meta","VizControlPanel","handleOpenControlPanel","showControlPanel","handleCloseControlPanel","values","sort","opt1","opt2","estimateCsvSize","member","parseInt","Variable_Count","handleDownloadCsvClick","handleResetSPParams","resetSPParams","dateCount","depthUtils","checkStartDateValid","checkEndDateValid","dataSize","handleShowChartsAndResize","setTimeout","dispatchEvent","Event","handleShowCharts","indexStrategy","maxDateMessage","showCharts","handleShowGlobe","catalogMinDate","setHours","catalogMaxDate","zeroedDT1","zeroedDT2","minDateMessage","checkDisableVisualizeList","errorCount","errorSizeAdjust","disableVisualizeMessage","checkDisableVisualize","visualizeButtonTooltip","closePanelChevron","aria-label","ChevronLeft","openPanelChevron","ChevronRight","Drawer","drawer","paper","drawerPaper","anchor","ButtonGroup","groupedButtons","depressed","Language","InsertChartOutlined","clearChartsButton","Delete","resetSPParamsButton","Cached","inputValue","backdropFilter","valueContainer","borderBottom","tableStatsButton","datePicker","KeyboardButtonProps","datePickerInputAdornment","formGridItem","FormHelperTextProps","InputProps","padLeft","vizButtonTooltip","fullWidth","bottom","drawerPaperError1","drawerPaperError2","drawerPaperError3","drawerPaperError4","drawerPaperError5","navDrawerWidth","controlPanelForm","borderLeft","&:disabled","fontVariant","borderRight","tableStatsRequestSend","DownloadConfirmationDialog","downloadTarget","find","handleFullDatasetDownload","variable","handleSubsetDownload","sampleMember","timeMin","timeMax","subsetLat1","subsetLat2","subsetLon1","subsetLon2","subsetTime1","subsetTime2","depthMin","depthMax","subsetDepth1","subsetDepth2","dateRatio","totalRows","totalColumns","Variables","split","totalDataPoints","fullDataAvailable","totalDays","subsetDays","totalLatSize","subsetLatSize","latRatio","totalLonSize","subsetLonSize","lonRatio","depthRatio","totalDepthSize","subsetDepthSize","subsetDataPoints","subsetAvailable","timeString1","timeString2","timeStringMin","timeStringMax","tableFooter","DialogActions","handleXTicks","infoObject","sectionSize","lonRange","tickvals","ceil","ticktext","tickmode","handleChartDatestring","dateString","chartBase","layout","font","paper_bgcolor","config","displaylogo","annotations","distributor","xref","yref","yshift","showarrow","colorscaleOptions","chartWrapper","popover","paddingBottom","iconButton","colorForm","lastIcon","borderTopRightRadius","borderBottomRightRadius","buttonGroup","colorscaleMenu","onToggleSplitByDate","onToggleSplitBySpace","onToggleSplitByDepth","switchOrientation","downloadCsv","handleZValueConfirm","zValues","markerOptions","handleMarkerOptionsConfirm","_useState","useState","_useState2","paletteAnchorElement","setPaletteAnchorElement","_React$useState","_React$useState2","zScalePopoverAnchorElement","setZScalePopoverAnchorElement","_React$useState3","_React$useState4","localZMin","setLocalZMin","_React$useState5","_React$useState6","localZMax","setLocalZMax","zScalePopoverOpen","zScalePopoverID","handleZScalePopoverClose","zScaleValidations","zMinMessage","zMaxMessage","_React$useState7","_React$useState8","markerOptionsAnchorElement","setMarkerOptionsAnchorElement","_React$useState9","_React$useState10","localMarkerOpacity","setLocalMarkerOpacity","_React$useState11","_React$useState12","localMarkerColor","setLocalMarkerColor","_React$useState13","_React$useState14","localMarkerSize","setLocalMarkerSize","previousOpacity","useRef","usePreviousOpacity","previousColor","usePreviousColor","previousSize","usePreviousSize","markerPopoverOpen","markerPopoverID","handleMarkerOptionsClose","markerOptionsValidations","checkLocalMarkerOpacity","checkLocalMarkerSize","localMarkerOpacityMessage","localMarkerSizeMessage","DateRange","LineWeight","currentTarget","SwapVert","handlePaletteChoice","Palette","Gamepad","Menu","anchorEl","keepMounted","Popover","anchorOrigin","vertical","horizontal","transformOrigin","buttonBlock","iconButtonWrapper","plots","_props$chart","chart","setSplitByDate","_useState3","_useState4","setSplitByDepth","_useState5","_useState6","subTypeState","_useState7","_useState8","setPalette","_useState9","_useState10","setZValues","_zValues","subSets","generatePlotData","subsets","xTicks","variableName","handleDateString","hovertext","formatter","react_plotly_default","zauto","zmin","zmax","x","y","z","connectgaps","autocolorscale","colorscale","hoverinfo","contours","coloring","showlabels","labelfont","family","labelformat","colorbar","exponentformat","xaxis","yaxis","handleContourMap","zsmooth","handleHeatmap","handleHistogram","ChartComponents_ChartControlPanel","requestAnimationFrame","setMarkerOptions","mode","error_y","array","visible","line","marker","plot_bgcolor","error_x","autorange","setSplitBySpace","setOrientation","spaces","distinctMeridiansOrParallelsForSplitting","mergedOrSplitAxis","xAxis","spaceTitle","visualizationSubTypes","handleSectionMap","SparseScatter","xValues","yValues","xTitle","yTitle","tabProps","aria-controls","SparseTabPanel","selectedTab","controlPanelProps","tabs","tab","setTab","plot","mapbox","sourcetype","below","mapboxAccessToken","handleSparseMap","scatter","Tabs","indicatorColor","Tab","SparseMap_SparseTabPanel","ChartComponents_SparseScatter","Charts","chartPaper","ChartComponents_SparseMap","ChartComponents_SparseHistogram","ChartComponents_SpaceTimeChart","ChartComponents_TimeSeriesChart","ChartComponents_DepthProfileChart","ChartComponents_SectionMapChart","chartsContainer","cruiseTrajectoryClear","esriFonts","cruiseSort","b","Name","CruiseSelector","getSelectOptionsFromCruiseList","list","handleCruiseSelect","selection","ID","selectedCruise","updateParametersFromCruiseBoundary","outerDiv","blurEffectDiv","getCruiseListState","cruiseSelect","menuList","cruiseInfo","cruiseInfoCell","Nickname","Start_Time","End_Time","Chief_Name","Ship_Name","borderStyle","DrawButton","drawButton","helpText","cancelButton","polygonSymbol","symbolLayers","material","outline","UiComponents","shouldComponentUpdate","nextProps","nextState","sketchModel","esriModules","SketchViewModel","layer","regionLayer","view","defaultUpdateOptions","toggleToolOnClick","tool","setShowHelp","getElementById","throttledUpdate","throttle","updateDomainFromGraphicExtent","Utils","webMercatorToGeographic","graphic","geometry","toolEventInfo","graphics","addEventListener","removeAll","create","cancel","ui","remove","TrajectoryController","memo","trajectoryLayer","polyLines","lineIndex","lonStart","latStart","maxDistance","_lonDistance","cruiseTrajectorySymbol","cap","cruiseTrajectoryGeometry","paths","Graphic","symbol","goTo","maxDuration","speedFactor","MapContainer","_this3$props","spParams","globeUIRef","_lon2","polygon","rings","regionGraphic","esm","mapProperties","basemap","viewProperties","MapContainer_UiComponents","measurementPositions","Components_CruiseSelector","GraphicsLayer","cleanSPParams","localDateToString","year","toString","mapVizType","vizType","_mapping","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","completedShowCharts","baseSPParams","Visualization","filteredData","_this$state$spParams","mapping","cruise","toggleShowUI","_lon1","xmin","xmax","newCoordinates","ymin","ymax","esriModuleNames","loadModules","version","loadedModules","accumulator","currentValue","currentIndex","Components_DownloadConfirmationDialog","Components_DataRetrievalForm","Components_VizControlPanel","toggleChartView","Components_MapContainer","Components_Charts","userLoginRequestSend","LoginDialog","handleLogin","handleClose","aria-labelledby","onSubmit","snackbarClose","centerText","Snackbar","autoHideDuration","loader","right","loaderContent","flexDirection","alignItem","spinnerText","spinner","dist","fadeIn","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","Components_LoginDialog","Components_SnackbarWrapper","Components_LoadingOverlay","inlineBlock","LandingPage","landingWrapper","welcomeMessage","createMuiTheme","useNextVariants","contrastText","default","overrides","MuiIconButton","MuiListItemIcon","MuiFormHelperText","filled","MuiListItem","gutters","MuiToolbar","MuiOutlinedInput","&$focused","MuiButtonGroup","groupedOutlined","&:not(:first-child)","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","MuiFilledInput","inputSelect","adornedEnd","App","vizRef","utils","DateFnsUtils","MuiThemeProvider","react_router_dom","Components_GlobalUIComponentWrapper","react_router","exact","path","LicenseManager","setLicenseKey","rootElement","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ae6efb7c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';\r\n\r\nexport const DATASET_RETRIEVAL_REQUEST_SEND = 'DATASET_CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const DATASET_RETRIEVAL_REQUEST_SUCCESS = 'DATASET_CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const DATASET_RETRIEVAL_REQUEST_FAILURE = 'DATASET_CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const DATASET_RETRIEVAL_REQUEST_PROCESSING = 'DATASET_CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';\r\n\r\nexport const REFRESH_LOGIN = 'REFRESH_LOGIN';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    case interfaceActionTypes.SET_LOADING_MESSAGE: return {...state, loadingMessage: action.payload.message}\r\n    \r\n    case interfaceActionTypes.TOGGLE_SHOW_HELP: return {...state, showHelp: !state.showHelp}\r\n    \r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\n\r\nexport const TABLE_STATS_REQUEST_SEND = 'ABLE_STATS_REQUEST_SEND';\r\nexport const TABLE_STATS_REQUEST_PROCESSING = 'TABLE_STATS_REQUEST_PROCESSING';\r\nexport const TABLE_STATS_REQUEST_SUCCESS = 'TABLE_STATS_REQUEST_SUCCESS';\r\nexport const TABLE_STATS_REQUEST_FAILURE = 'TABLE_STATS_REQUEST_FAILURE';\r\n\r\nexport const CRUISE_TRAJECTORY_REQUEST_SEND = 'CRUISE_TRAJECTORY_REQUEST_SEND';\r\nexport const CRUISE_TRAJECTORY_REQUEST_SUCCESS = 'CRUISE_TRAJECTORY_REQUEST_SUCCESS';\r\nexport const CRUISE_TRAJECTORY_REQUEST_FAILURE = 'CRUISE_TRAJECTORY_REQUEST_FAILURE';\r\nexport const CRUISE_TRAJECTORY_REQUEST_PROCESSING = 'CRUISE_TRAJECTORY_REQUEST_PROCESSING';\r\nexport const CRUISE_TRAJECTORY_CLEAR = 'CRUISE_TRAJECTORY_CLEAR';\r\n\r\nexport const CRUISE_LIST_REQUEST_SEND = 'CRUISE_LIST_REQUEST_SEND';\r\nexport const CRUISE_LIST_REQUEST_SUCCESS = 'CRUISE_LIST_REQUEST_SUCCESS';\r\nexport const CRUISE_LIST_REQUEST_FAILURE = 'CRUISE_LIST_REQUEST_FAILURE';\r\nexport const CRUISE_LIST_REQUEST_PROCESSING = 'CRUISE_LIST_REQUEST_PROCESSING';\r\n\r\nexport const TRIGGER_SHOW_CHARTS = 'TRIGGER_SHOW_CHARTS';\r\nexport const COMPLETED_SHOW_CHARTS = 'COMPLETED_SHOW_CHARTS';\r\n\r\nexport const CSV_DOWNLOAD_REQUEST_SEND = 'CSV_DOWNLOAD_REQUEST_SEND';\r\nexport const CSV_DOWNLOAD_REQUEST_SUCCESS = 'CSV_DOWNLOAD_REQUEST_SUCCESS';\r\nexport const CSV_DOWNLOAD_REQUEST_FAILURE = 'CSV_DOWNLOAD_REQUEST_FAILURE';\r\nexport const CSV_DOWNLOAD_REQUEST_PROCESSING = 'CSV_DOWNLOAD_REQUEST_PROCESSING';\r\n\r\nexport const DOWNLOAD_TEXT_AS_CSV = 'DOWNLOAD_TEXT_AS_CSV';","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n    datasetRequestState: null,\r\n    datasets: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n    loadingMessage: '',\r\n    showHelp: false,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    getCruiseTrajectoryRequestState: null,\r\n    cruiseTrajectory: null,\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    cruiseList: [],\r\n    getCruiseListRequestState: null,\r\n    showChartsOnce: null\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SUCCESS: return {...state,\r\n      datasetsRequestState: states.succeeded, \r\n      datasets: action.payload.datasets\r\n    }\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_FAILURE: return {...state, datasetsRequestState: states.failed}\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_PROCESSING: return {...state, datasetsRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';\r\n\r\nexport const SET_LOADING_MESSAGE = 'SET_LOADING_MESSAGE';\r\n\r\nexport const TOGGLE_SHOW_HELP = 'TOGGLE_SHOW_HELP';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING: return {...state, getCruiseTrajectoryRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS: return {...state,\r\n            cruiseTrajectory: action.payload.trajectory,\r\n            getCruiseTrajectoryRequestState: states.succeeded\r\n        }\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR: return {...state, cruiseTrajectory: null}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE: return {...state, getCruiseTrajectoryRequestState: states.failed}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING: return {...state, getCruiseListRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS: return {\r\n            ...state,\r\n            getCruiseListRequestState: states.succeeded,\r\n            cruiseList: action.payload.cruiseList\r\n        }\r\n\r\n        case visualizationActionTypes.TRIGGER_SHOW_CHARTS: return {...state, showChartsOnce: true}\r\n        case visualizationActionTypes.COMPLETED_SHOW_CHARTS: return {...state, showChartsOnce: false}\r\n\r\n        case visualizationActionTypes.TABLE_STATS_REQUEST_SUCCESS: return {\r\n            ... state, \r\n            datasets: {\r\n                ...state.datasets,\r\n                [action.payload.datasetLongName]: {\r\n                    ...state.datasets[action.payload.datasetLongName],\r\n                    tableStats: action.payload.tableStats\r\n                }\r\n            }}\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n\r\nexport const refreshLogin = () => ({\r\n    type: userActionTypes.REFRESH_LOGIN\r\n})","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const datasetRetrievalRequestSend = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const datasetRetrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const datasetRetrievalRequestSuccess = (datasets) => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        datasets\r\n    }\r\n})\r\n\r\nexport const datasetRetrievalRequestFailure = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})\r\n\r\nexport const setLoadingMessage = (message) => ({\r\n    type:interfaceActionTypes.SET_LOADING_MESSAGE,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const toggleShowHelp = () => ({\r\n    type: interfaceActionTypes.TOGGLE_SHOW_HELP\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const tableStatsRequestSend = (tableName, datasetLongName) => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_SEND,\r\n    payload: {\r\n        tableName,\r\n        datasetLongName\r\n    }\r\n})\r\n\r\nexport const tableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const tableStatsRequestSuccess = (tableStats, datasetLongName) => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_SUCCESS,\r\n    payload: {\r\n        tableStats,\r\n        datasetLongName\r\n    }\r\n})\r\n\r\nexport const tableStatsRequestFailure = () => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_FAILURE\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSuccess = (trajectory) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS,\r\n    payload: {\r\n        trajectory\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseTrajectoryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const cruiseTrajectoryClear = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR\r\n})\r\n\r\nexport const cruiseListRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SEND,\r\n})\r\n\r\nexport const cruiseListRequestSuccess = (cruiseList) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS,\r\n    payload: {\r\n        cruiseList\r\n    }\r\n})\r\n\r\nexport const cruiseListRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseListRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const triggerShowCharts = () => ({\r\n    type: visualizationActionTypes.TRIGGER_SHOW_CHARTS\r\n})\r\n\r\nexport const completedShowCharts = () => ({\r\n    type: visualizationActionTypes.COMPLETED_SHOW_CHARTS\r\n})\r\n\r\nexport const csvDownloadRequestSend = (query, fileName) => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SEND,\r\n    payload: {\r\n        query,\r\n        fileName\r\n    }\r\n})\r\n\r\nexport const csvDownloadRequestFailure = () => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_FAILURE\r\n})\r\n\r\nexport const csvDownloadRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_PROCESSING\r\n})\r\n\r\nexport const csvDownloadRequestSuccess = (text) => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SUCCESS,\r\n    payload: {\r\n        text\r\n    }\r\n})\r\n\r\n//dataset download\r\nexport const downloadTextAsCsv = (text, datasetName) => ({\r\n    type: visualizationActionTypes.DOWNLOAD_TEXT_AS_CSV,\r\n    payload: {\r\n        text,\r\n        datasetName\r\n    }\r\n})","// export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\nexport const apiUrl = 'https://simonscmap.dev';","const spatialResolutions = {\r\n    irregular: 'Irregular',\r\n    halfDegree: '1/2° X 1/2°' ,\r\n    quarterDegree: '1/4° X 1/4°' ,\r\n    twentyFifthDegree: '1/25° X 1/25°' ,\r\n    fourKm: '4km X 4km',\r\n    twelfthDegree: '1/12° X 1/12°',\r\n    seventyKm: '70km X 70km',\r\n    oneDegree: '1° X 1°'\r\n}\r\n\r\nexport default spatialResolutions;","import spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nconst mapSpatialResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [spatialResolutions.halfDegree] : .5,\r\n        [spatialResolutions.quarterDegree] : .25,\r\n        [spatialResolutions.twentyFifthDegree] : .04,\r\n        [spatialResolutions.fourKm] : .041672,\r\n        [spatialResolutions.twelfthDegree] : .083333,\r\n        [spatialResolutions.oneDegree] : 1,\r\n        [spatialResolutions.seventyKm] : .25\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapSpatialResolutionToNumber;","// Flattens an array by 1 level\r\n// [[[],[]], [[],[]], [[],[]]] => [[], [], [], [], [], []]\r\n\r\nconst flattenArray = (arr) => {\r\n    let flattenedArray = [];\r\n\r\n    for(let i = 0; i < arr.length; i++){\r\n        for(let j = 0; j < arr[i].length; j++){\r\n            flattenedArray.push(arr[i][j]);\r\n        }\r\n    }\r\n\r\n    return flattenedArray;\r\n}\r\n\r\nexport default flattenArray;","// Interval is number of indices between changes in this parameter, or in order words\r\n// how many times will we see the same value for this parameter in a row before it changes\r\n// as we iterate through the values array.\r\n// We use modulo for cases where data.length / interval is larger than the number of \r\n// distinct values for that parameter.\r\n\r\nconst splitData = (data, changeInterval, numDistinct) => {\r\n    var splitData = [];\r\n\r\n    for(let i = 0; i < numDistinct; i++){\r\n        splitData.push([]);\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        let index = Math.floor(i / changeInterval) % numDistinct;\r\n        splitData[index].push(data[i]);\r\n    }\r\n\r\n    return splitData;\r\n}\r\n\r\nexport default splitData;","// mergeTargetDistance - number of hops between arrays being merged\r\n// mergeTargetNumber - number of arrays being merged - implicit\r\n// nextStartDistance - once a merge is complete how many hops to next start\r\nconst mergeArraysAndComputeMeans = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n    \r\n    // Find each merging start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        // Iterate through each value in the first array of this merge. Count\r\n        // the number of values summed so we can ignore nulls and compute a mean.\r\n        for(let j = 0; j < data[i].length; j ++){\r\n            let sum = 0;\r\n            let count = 0;\r\n\r\n            // Aggregate values of all merge targets\r\n            for(let k = i; k < i + (mergeTargetDistance * numArraysPerMerge); k += mergeTargetDistance){\r\n                if(isNaN(data[k][j])) {\r\n                    continue;\r\n                } else {                    \r\n                    sum += data[k][j];\r\n                    count ++;\r\n                }\r\n            }\r\n            subArray.push(count < 1 ? null : sum / (count));\r\n        }\r\n\r\n        mergedArrays.push(subArray)\r\n    }\r\n\r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArraysAndComputeMeans;","const mergeArrays = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n\r\n    // Find each merge start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        for(let j = i; j <= i + travelDistance; j += mergeTargetDistance){\r\n            subArray = [...subArray, ...data[j]];\r\n        }\r\n\r\n        mergedArrays.push(subArray);\r\n    }\r\n   \r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArrays;\r\n\r\n","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    contourSectionMap: 'Contour Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    heatmap: 'Heatmap',\r\n    contourMap: 'Contour Map',\r\n    sparse: 'Sparse'\r\n}\r\n\r\nexport default subTypes;","const temporalResolutions = {\r\n    threeMinutes: 'Three Minutes',\r\n    sixHourly: 'Six Hourly',\r\n    daily: 'Daily',\r\n    weekly: 'Weekly',\r\n    monthly: 'Monthly',\r\n    annual: 'Annual',\r\n    irregular: 'Irregular',\r\n    monthlyClimatology: 'Monthly Climatology',\r\n    threeDay: 'Three Days',\r\n    eightDayRunning: 'Eight Day Running',\r\n    eightDays: 'Eight Days '\r\n}\r\n\r\nexport default temporalResolutions;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/mergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nclass SpaceTimeData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n\r\n        this.hasDepth = null;\r\n        this.hasHours = null;\r\n        this.isMonthly = null;\r\n\r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n        this.indexAdjust = null;\r\n        this.payload = payload;\r\n        this.lats = [];\r\n        this.lons = [];\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n\r\n        this.distinctLatCount = null;\r\n        this.distinctLonCount = null;\r\n    }\r\n\r\n    add(row) {\r\n        \r\n        let lat = parseFloat(row[1]);\r\n        let _lon = parseFloat(row[2]);\r\n        let lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n\r\n        if(this.hasDepth === null) {\r\n            this.hasHour = this.metadata.Table_Name === 'tblWind_NRT';\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n            this.hasDepth = row.length === 5 && !this.hasHour;\r\n            this.indexAdjust = this.hasDepth || this.hasHour? 1 : 0;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n        }\r\n\r\n        let value = parseFloat(row[3 + this.indexAdjust]);\r\n\r\n        if(this.hasDepth){\r\n            this.depths.add(row[3]);\r\n        }\r\n\r\n        var time;\r\n        if(this.hasHour){\r\n            time = new Date(row[0]);\r\n            time.setUTCHours(row[3])\r\n            time = time.toISOString();\r\n        } else time = row[0];\r\n        this.dates.add(time);\r\n        this.lats.push(lat);\r\n\r\n        this.lons.push(lon);\r\n\r\n        if(lon < this.lonMin) this.lonMin = lon;\r\n        if(lon > this.lonMax) this.lonMax = lon;\r\n        if(lat < this.latMin) this.latMin = lat;\r\n        if(lat > this.latMax) this.latMax = lat;\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n\r\n        if(this.depths.size === 0) this.depths.add('Surface');\r\n\r\n        this.lonCount = this.lons.length / this.dates.size / this.depths.size;\r\n        this.latCount = this.lats.length / this.dates.size / this.depths.size;\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : parseFloat(quantile1.toPrecision(4));\r\n        this.zMax = quantile2 === undefined ? null : parseFloat(quantile2.toPrecision(4));\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n        \r\n        this.distinctLatCount = Math.round((this.latMax - this.latMin) / spatialResolution) + 1;\r\n        this.distinctLonCount = Math.round((this.lonMax - this.lonMin) / spatialResolution) + 1;\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {        \r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const latInterval = this.distinctLonCount;\r\n        const depthInterval = latInterval * this.distinctLatCount;\r\n        const dateInterval = depthInterval * this.depths.size;\r\n\r\n        // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n        variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, depthInterval, this.depths.size));\r\n        variableValueSubsets = flattenArray(variableValueSubsets);\r\n\r\n        // Contour and heatmap compute mean variable values per lat and lon\r\n        // when not split by date and/or time\r\n        if(subType === vizSubTypes.contourMap || subType === vizSubTypes.heatmap) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    this.depths.size, \r\n                    this.depths.size\r\n                    );\r\n    \r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    this.depths.size, \r\n                    1, \r\n                    this.dates.size\r\n                    );\r\n    \r\n            } else {\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    variableValueSubsets.length, \r\n                    variableValueSubsets.length\r\n                    );            \r\n            }\r\n        } \r\n        \r\n        // Histograms split and aggregate without computing means\r\n        else if (subType === vizSubTypes.histogram) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets, \r\n                    1,\r\n                    this.depths.size,\r\n                    this.depths.size\r\n                    );\r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets,\r\n                    this.depths.size,\r\n                    1,\r\n                    this.dates.size\r\n                );\r\n            } else {\r\n                variableValueSubsets = [this.variableValues];\r\n            }\r\n        }\r\n\r\n        // Nothing here yet\r\n        else {}\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${depths[Math.floor(i / (this.variableValues.length / (dates.length * depths.length))) % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SpaceTimeData;","const storedProcedures = {\r\n    sectionMap: 'uspSectionMap',\r\n    timeSeries: 'uspTimeSeries',\r\n    spaceTime: 'uspSpaceTime',\r\n    depthProfile: 'uspDepthProfile'\r\n}\r\n\r\nexport default storedProcedures;","class TimeSeriesData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.dates = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depth = null;\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.depthIndexAdjust = row.length === 6 ? 1 : 0;\r\n            this.lat = row[1];\r\n            this.lon = row[2];\r\n            this.depth = row.length === 6 ? row[3] : false;\r\n        }\r\n\r\n        this.variableValues.push(row[3 + this.depthIndexAdjust]);\r\n        this.stds.push(row[4 + this.depthIndexAdjust]);\r\n        this.dates.push(row[0]);\r\n    }\r\n\r\n    finalize() {\r\n        if(this.depth === false) this.depth = 'Surface';\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }    \r\n\r\n    generateCsv() {\r\n        let csvString = `time,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.dates[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default TimeSeriesData;","class DepthProfileData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depths = [];\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.lat = parseFloat(row[0]);\r\n            this.lon = parseFloat(row[1]);\r\n        }\r\n\r\n        this.variableValues.push(parseFloat(row[2]));\r\n        this.stds.push(parseFloat(row[3]));\r\n        this.depths.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        // pass\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }\r\n    \r\n    generateCsv() {\r\n        let csvString = `depth,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default DepthProfileData;","export default [\r\n    null,\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n]","import { quantile, extent } from 'd3-array';\r\n\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nimport months from '../Enums/months';\r\n\r\nclass SectionMapData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.subType = payload.subType\r\n        \r\n        this.dates = new Set();\r\n        this.depths = new Set();\r\n        this.lats = new Set();\r\n        this.lons = new Set();\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n\r\n        this.variableValues = [];\r\n        \r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.orientation = null;\r\n    }\r\n\r\n    // time, lat, lon, depth, value\r\n    add(row) {        \r\n        const time = row[0];\r\n        const lat = parseFloat(row[1]);\r\n        var _lon = parseFloat(row[2]);\r\n        const lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n        const depth = parseFloat(row[3]);\r\n        const value = parseFloat(row[4]);\r\n\r\n        if(this.variableValues.length === 0) {\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n        }        \r\n\r\n        this.depths.add(depth);\r\n        this.dates.add(this.isMonthly ? months[time] : time);\r\n        this.lats.add(lat);\r\n        this.lons.add(lon);\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : parseFloat(quantile1.toPrecision(4));\r\n        this.zMax = quantile2 === undefined ? null : parseFloat(quantile2.toPrecision(4));\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        this.orientation = this.lons.size > this.lats.size ? 'zonal' : 'meridional';\r\n\r\n        let lonArray = Array.from(this.lons);\r\n        this.lonMax = Math.max(...lonArray);\r\n        this.lonMin = Math.min(...lonArray);\r\n        // console.log(this.variableValues);\r\n    }\r\n\r\n    // Direction is meridional or zonal\r\n    generatePlotData(orientation, splitByDate, splitBySpace) {\r\n        let latCount = this.lats.size;\r\n        let lonCount = this.lons.size;\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const lonInterval = this.depths.size;\r\n        const latInterval = lonInterval * lonCount;\r\n        const dateInterval = latInterval * latCount;\r\n\r\n        var variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n\r\n        var spaceCount;\r\n\r\n        if(orientation === 'zonal') {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, latInterval, latCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = latCount;\r\n        }\r\n\r\n        else {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, lonInterval, lonCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = lonCount;\r\n        }\r\n\r\n        // console.log('Split by space');\r\n        // console.log(variableValueSubsets);\r\n\r\n        if(splitByDate && splitBySpace){\r\n            // pass\r\n        } else if (splitByDate){\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                spaceCount,\r\n                spaceCount\r\n            )\r\n        } else if (splitBySpace) {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                spaceCount,\r\n                1,\r\n                this.dates.size\r\n            )\r\n        } else {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                variableValueSubsets.length,\r\n                variableValueSubsets.length\r\n            )\r\n        }\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n        let lons = Array.from(this.lons);\r\n        let lats = Array.from(this.lats);\r\n\r\n        const lonInterval = depths.length;\r\n        const latInterval = lonInterval * lons.length;\r\n\r\n        var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${lats[Math.floor(i / latInterval) % lats.length]},${lons[Math.floor(i / lonInterval) % lons.length]},${depths[i % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SectionMapData;","import { quantile, extent } from 'd3-array';\r\n\r\nclass SparseData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = null;\r\n        this.variableIndex = payload.metadata.Depth_Min ? 4 : 3;\r\n        this.depths = [];\r\n        this.times = [];\r\n        this.variableValues = [];\r\n        this.lats = [];\r\n        this.lons = [];\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n    }\r\n\r\n    add(row) {\r\n        let lat = parseFloat(row[1]);\r\n        let lon = parseFloat(row[2]);\r\n\r\n        if(this.hasDepth === null){\r\n            this.hasDepth = Boolean(this.metadata.Depth_Min);\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n        }\r\n\r\n        if(row[this.variableIndex]){\r\n\r\n            this.times.push(row[0]);\r\n            this.lats.push(lat);\r\n            this.lons.push(lon);\r\n            if(this.hasDepth) this.depths.push(parseFloat(row[3]));\r\n            this.variableValues.push(parseFloat(row[this.variableIndex]));\r\n\r\n            if(lat < this.latMin) this.latMin = lat;\r\n            if(lat > this.latMax) this.latMax = lat;\r\n            \r\n            if(lon < this.lonMin) this.lonMin = lon;\r\n            if(lon > this.lonMax) this.lonMax = lon;\r\n        }\r\n    }\r\n\r\n    finalize() {\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let latDistance = Math.abs(this.latMax - this.latMin);\r\n        let lonDistance = Math.abs(this.lonMax - this.lonMin);\r\n        let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n\r\n        console.log('Distance: ', distance);\r\n\r\n        let _zoom = 4 - Math.floor(distance / 12);\r\n        this.zoom = _zoom < 0 ? 0 : _zoom;\r\n\r\n        let lonCenter = (this.lonMax + this.lonMin) / 2;\r\n        let latCenter = (this.latMax + this.latMin) / 2;\r\n        this.center = { \r\n            lon: lonCenter, \r\n            lat: latCenter\r\n        }\r\n\r\n        console.log(this);\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        return this.variableValues;\r\n    }\r\n\r\n    generateCsv(){\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SparseData;","import CSVParser from 'csv-parse';\r\n\r\nimport { apiUrl } from './config';\r\nimport SpaceTimeData from './Classes/SpaceTimeData';\r\n\r\nimport storedProcedures from './Enums/storedProcedures';\r\nimport TimeSeriesData from './Classes/TimeSeriesData';\r\nimport DepthProfileData from './Classes/DepthProfileData';\r\nimport SectionMapData from './Classes/SectionMapData';\r\nimport SparseData from './Classes/SparseData';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            catalog.push(record)\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.catalog.datasets = async() => {\r\n    const decoder = new TextDecoder();\r\n    let datasets = {};\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            datasets[record.Dataset_Long_Name] = record;\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog/datasets', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return datasets;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(payload) => {\r\n    const decoder = new TextDecoder();\r\n    var vizData;\r\n\r\n    switch(payload.parameters.spName) {\r\n        case storedProcedures.spaceTime:\r\n            if(payload.subType === 'Sparse') vizData = new SparseData(payload);\r\n            else vizData = new SpaceTimeData(payload);\r\n            break;\r\n\r\n        case storedProcedures.timeSeries:\r\n            vizData = new TimeSeriesData(payload);\r\n            break;\r\n\r\n        case storedProcedures.depthProfile:\r\n            vizData = new DepthProfileData(payload);\r\n            break;\r\n\r\n        case storedProcedures.sectionMap:\r\n            vizData = new SectionMapData(payload);\r\n            break;\r\n\r\n        default:\r\n            console.log('Unknown sproc name');\r\n    }\r\n\r\n    let response = await fetch(apiUrl + '/api/data/sp?' + storedProcedureParametersToUri(payload.parameters), fetchOptions);\r\n\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            vizData.add(record);\r\n        }\r\n    })\r\n\r\n    csvParser.on('error', (e) => {\r\n        console.log(e);\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n    return await response.json();\r\n}\r\n\r\napi.visualization.cruiseTrajectoryRequest = async(payload) => {\r\n    const cruiseId = payload.id;\r\n    const decoder = new TextDecoder();\r\n    let trajectory = {lats: [], lons: []};\r\n\r\n    let response = await fetch(apiUrl + '/api/data/cruisetrajectory?' + `id=${payload.id}`, fetchOptions);\r\n\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            trajectory.lats.push(parseFloat(record[1]));\r\n            trajectory.lons.push(parseFloat(record[2]));\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return trajectory;\r\n}\r\n\r\napi.visualization.cruiseList = async() => {\r\n    let response = await fetch(apiUrl + '/api/data/cruiselist', fetchOptions);\r\n\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;   \r\n}\r\n\r\napi.visualization.csvDownload = async(payload) => {\r\n    let response = await fetch(apiUrl + `/api/data/query?query=${payload.query}`, fetchOptions);\r\n    if(response.ok) return await response.text();\r\n    else return {failed: true, status: response.status}\r\n}\r\n\r\nexport default api;","import { put, takeLatest, all, call, delay } from 'redux-saga/effects';\r\n// import { eventChannel } from 'redux-saga';\r\nimport Cookies from 'js-cookie';\r\n// import worker from '../worker';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    \r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){    \r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    \r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    \r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    \r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* datasetRetrieval(){\r\n    yield put(catalogActions.datasetRetrievalRequestProcessing());\r\n    let datasets = yield call(api.catalog.datasets);\r\n\r\n    if(!datasets){\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else {\r\n        yield put(catalogActions.datasetRetrievalRequestSuccess(datasets));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    \r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    \r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload);\r\n    yield delay(50);\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'));\r\n    yield delay(70);\r\n    \r\n    // Result will be an object containing variable values and describing date shape\r\n    if(result.failed){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        if(result.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(\"An error occurred. Please try again.\"));\r\n        }\r\n    } else {\r\n        if(result.variableValues.length > 0){\r\n            result.finalize();\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            // yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            yield put(visualizationActions.triggerShowCharts());\r\n            yield put(visualizationActions.addChart({subType: action.payload.subType, data:result}));\r\n           \r\n        } else {\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges. Try selecting a different date or depth range.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* cruiseTrajectoryRequest(action) {\r\n    yield put(visualizationActions.cruiseTrajectoryRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Cruise Data'));\r\n    let result = yield call(api.visualization.cruiseTrajectoryRequest, action.payload);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n\r\n    if(result.failed){\r\n        if(result.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(`Unable to Fetch Cruise Data`));\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.cruiseTrajectoryRequestSuccess(result));\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n    }\r\n}\r\n\r\nfunction* cruiseListRequest() {\r\n    yield put(visualizationActions.cruiseListRequestProcessing());\r\n    let cruiseList = yield call(api.visualization.cruiseList);\r\n\r\n    if(!cruiseList) {\r\n        yield put(visualizationActions.cruiseListRequestFailure());\r\n    } else{\r\n        yield put(visualizationActions.cruiseListRequestSuccess(cruiseList));\r\n    }\r\n}\r\n\r\nfunction* tableStatsRequest(action){\r\n    yield put(visualizationActions.tableStatsRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Dataset Information'));\r\n    let result = yield call(api.visualization.getTableStats, action.payload.tableName);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n\r\n    if(result.failed){\r\n        if(result.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(`Unable to Fetch Dataset Information`));\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.tableStatsRequestSuccess(result, action.payload.datasetLongName));\r\n    }\r\n}\r\n\r\nfunction* csvDownloadRequest(action){\r\n    yield put(visualizationActions.csvDownloadRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let response = yield call(api.visualization.csvDownload, action.payload);\r\n    yield put(interfaceActions.setLoadingMessage(''))\r\n    if(response.failed) {\r\n        if(response.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen('An error occurred. Please try again.'))\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.downloadTextAsCsv(response, action.payload.fileName));\r\n    }\r\n}\r\n\r\nfunction* downloadTextAsCsv(action){\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'))\r\n    let csv = action.payload.text;\r\n    const blob = new Blob([csv], {type: 'text/csv'});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.setAttribute('hidden', '');\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `${action.payload.datasetName}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n}\r\n\r\nfunction* refreshLogin(){\r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.showLoginDialog());\r\n    yield put(interfaceActions.snackbarOpen(\"Your session has expired. Please log in again.\"));\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchDatasetRetrieval(){\r\n    yield takeLatest(catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SEND, datasetRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\nfunction* watchCruiseTrajectoryRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND, cruiseTrajectoryRequest);\r\n}\r\n\r\nfunction* watchCruiseListRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_LIST_REQUEST_SEND, cruiseListRequest);\r\n}\r\n\r\nfunction* watchTableStatsRequest(){\r\n    yield takeLatest(visualizationActionTypes.TABLE_STATS_REQUEST_SEND, tableStatsRequest)\r\n}\r\n\r\nfunction* watchCsvDownloadRequest(){\r\n    yield takeLatest(visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SEND, csvDownloadRequest);\r\n}\r\n\r\nfunction* watchDownloadTextAsCsv(){\r\n    yield takeLatest(visualizationActionTypes.DOWNLOAD_TEXT_AS_CSV, downloadTextAsCsv);\r\n}\r\n\r\nfunction* watchRefreshLogin(){\r\n    yield takeLatest(userActionTypes.REFRESH_LOGIN, refreshLogin);\r\n}\r\n\r\n// function createWorkerChannel(worker) {\r\n//     return eventChannel(emit => {\r\n//         worker.onmessage = message => {\r\n//             emit(message);\r\n//         }\r\n\r\n//         const unsubscribe = () => {\r\n//             worker.teminate();\r\n//         }\r\n      \r\n//         return unsubscribe;\r\n//     })\r\n// }\r\n\r\n// function* watchWorkerChannel(){\r\n//     const workerChannel = yield call(createWorkerChannel, worker);\r\n\r\n//     while (true) {\r\n//         const message = yield take(workerChannel);\r\n//         yield put(message.data.type, message.data.payload);\r\n//         //   yield put({ type: INCOMING_PONG_PAYLOAD, payload })\r\n//         //   yield fork(pong, socket)\r\n//       }\r\n// }\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchDatasetRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        watchCruiseTrajectoryRequest(),\r\n        watchCruiseListRequest(),\r\n        watchTableStatsRequest(),\r\n        // watchWorkerChannel(),\r\n        watchCsvDownloadRequest(),\r\n        watchDownloadTextAsCsv(),\r\n        watchRefreshLogin()\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","const colors = {\r\n    orange: '#FF8000',\r\n    // orange: '#ffa245',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9',\r\n    errorYellow: '#ffe336'\r\n}\r\n\r\nexport default colors;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    },\r\n    warningCaption: {\r\n        color: colors.orange,\r\n        fontSize: '11px',\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    wrapper: {\r\n        marginTop: theme.spacing(16)\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            \r\n            <div className={classes.wrapper}>\r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Key\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                        <Typography variant='caption' className={classes.warningCaption}>\r\n                            This API key is a unique identifier, and should not be shared.\r\n                        </Typography>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"body2\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n                </Paper>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires a user account. Please <Link component={RouterLink} to={{pathname: '/apikeymanagement'}} onClick={() => props.showLoginDialog()}> log in\r\n            </Link> or <Link component={RouterLink} to={{pathname: '/register'}}> register\r\n            </Link>.\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen, toggleShowHelp } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    appBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    toolBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    navWrapper: {\r\n        position: 'fixed',\r\n        width: '100vw',\r\n        top: '0px',\r\n        backgroundColor: 'transparent',\r\n        zIndex: 50,\r\n        paddingTop: '10px',\r\n        paddingLeft: '20px',\r\n        textAlign: 'left',\r\n        boxSizing: 'border-box'\r\n    },\r\n\r\n    navLink: {\r\n        textDecoration: 'none',\r\n        marginRight: 20,\r\n        color: 'white',\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        },\r\n        fontSize: '13px',\r\n        fontWeight: 100,\r\n        display: 'inline-block',\r\n        cursor: 'pointer' \r\n    },\r\n\r\n    rightNavLink: {\r\n        float: 'right'\r\n    },\r\n\r\n    rightLinkWrapper: {\r\n        display:'inline-block',\r\n        textAlign: 'right'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen,\r\n    toggleShowHelp\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    handleNavigate = (route) => {\r\n        this.props.restoreInterfaceDefaults()\r\n        this.props.history.push(route);\r\n    }\r\n\r\n    handleOutsideNavigate = (url) => {\r\n        window.open(url, '_blank')\r\n    }\r\n\r\n    render(){\r\n        const { classes, history, showHelp } = this.props;\r\n        const { pathname } = history.location;\r\n\r\n        return (\r\n            <div className={classes.navWrapper}>\r\n                <Typography variant='caption' href='/' component='a' className={classes.navLink}>Home</Typography>\r\n                <Typography variant='caption' to='/catalog' component={Link} className={classes.navLink}>Catalog</Typography>\r\n                {pathname !== '/visualization' && <Typography variant='caption' to='/apikeymanagement' component={Link} className={classes.navLink}>API Keys</Typography>}\r\n                {pathname !== '/visualization' && <Typography variant='caption' to='/visualization' component={Link} className={classes.navLink}>Visualization</Typography>}\r\n                {this.props.user && <Typography variant='caption' onClick={() => this.handleLogOut()} className={`${classes.navLink} ${pathname === '/visualization' ? '' : classes.rightNavLink}`}>Log Out</Typography>}\r\n                {/* <Typography variant='caption' onClick={this.props.toggleShowHelp} className={classes.navLink}>{showHelp ? 'Hide Help' : 'Help(beta) '}</Typography> */}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' onClick={() => this.props.showLoginDialog()} className={`${classes.navLink} ${classes.rightNavLink}`}>Log In</Typography>}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' to='/register' component={Link} className={classes.navLink}>Register</Typography>}\r\n            </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user ? <ApiKeyManagement/> : <LoginRequiredPrompt/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport { Typography, Grid, Table, TableBody, TableCell, TableRow, Button } from '@material-ui/core';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst tableMapping1 = [\r\n    ['Long Name', 'Long_Name'],\r\n    ['Short Name', 'Variable'],\r\n    ['Dataset Name', 'Dataset_Name'],\r\n    ['Study Domain', 'Study_Domain'],\r\n    ['Process Level', 'Process_Level'],\r\n    ['SQL Table Name', 'Table_Name'],\r\n    ['Temporal Resolution', 'Temporal_Resolution']\r\n];\r\n\r\nconst tableMapping2 = [\r\n    ['Unit', 'Unit'],\r\n    ['Mean Value', 'Variable_Mean'],\r\n    ['Value Std', 'Variable_Std'],\r\n    ['Spatial Resolution', 'Spatial_Resolution'],\r\n    ['Start Latitude[\\xb0]', 'Lat_Min'],\r\n    ['End Latitude[\\xb0]', 'Lat_Max'],\r\n    ['Start Longitude[\\xb0]', 'Lon_Min'],\r\n    ['End Longitude[\\xb0]', 'Lon_Max']\r\n];\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        // width: '90%',\r\n        // margin: '0px auto 5px 10px',\r\n        padding: '10px',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(1),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        height: '100%',\r\n        maxHeight: '280px'\r\n    },\r\n    gridItem: {\r\n        // height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        verticalAlign: 'middle',\r\n        maxHeight: '280px'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        maxWidth: '80%',\r\n        maxHeight: '260px'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        tableLayout: 'fixed',\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '24px',\r\n        width: '100%'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black',\r\n        fontSize: '11px',\r\n        maxWidth: '100%',\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        paddingRight: '14px'\r\n    },\r\n\r\n    gridDetailTypography: {\r\n        fontSize: '11px',\r\n        whiteSpace: 'normal',\r\n        width: '100%',\r\n        display: 'block',\r\n    },\r\n\r\n    boldText: {\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n    rightGridItem: {\r\n        maxWidth: '100%',\r\n        paddingTop: '10px',\r\n        boxSizing: 'border-box'\r\n    },\r\n\r\n    datasetDescriptionButton: {\r\n        backgroundColor: '#FF8000',\r\n        color: 'white',\r\n        '&:hover': {\r\n            backgroundColor: '#ab5600',\r\n        },\r\n        fontSize: '12px',\r\n        maxWidth: '100%',\r\n    },\r\n    \r\n    buttonTextWrapper: {\r\n        textOverflow: 'ellipsis',\r\n        maxWidth: '100%',\r\n        overflow: 'hidden'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n                <Grid container className={classes.gridClass}>\r\n                    <Grid container item xs={10} spacing={2}>\r\n                        <Grid item xs={4} className={classes.gridItem}>\r\n                            <img src={props.context.datasets[props.data.Dataset_Name].Icon_URL} alt=\"Mission Icon\" className={classes.vizSampleImage}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4} className={classes.gridItem}>\r\n                            <Table className={classes.variableDetailTable} size='small'>\r\n                                <TableBody>\r\n                                    {tableMapping1.map((row, index) => (\r\n                                        <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell} title={props.data[row[1]]}>{props.data[row[1]]}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                        <TableRow key={tableMapping1.length + 1} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>Start Date</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data.Time_Min.slice(0,10)}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow key={tableMapping1.length + 2} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>End Date</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data.Time_Max.slice(0,10)}</TableCell>\r\n                                        </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4} className={classes.gridItem}>\r\n                            <Table className={classes.variableDetailTable} size='small'>\r\n                                <TableBody>\r\n                                    {tableMapping2.map((row, index) => (\r\n                                        <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                        <TableRow key={tableMapping2.length + 1} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>Maximum Depth[m]</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data.Depth_Max || 'Surface Only'}</TableCell>\r\n                                        </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                <Grid container direction='column' item xs={2} alignContent='center' alignItems='center'>\r\n                    <Grid item xs={4} className={classes.rightGridItem}>\r\n                        <Typography variant='caption' className={`${classes.gridDetailTypography} ${classes.boldText}`}>\r\n                            Source:\r\n                        </Typography>\r\n                        <Typography variant='caption' className={classes.gridDetailTypography}>\r\n                            {props.data.Data_Source}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4} className={classes.rightGridItem}>\r\n                        <Typography variant='caption' className={`${classes.gridDetailTypography} ${classes.boldText}`}>\r\n                            Distributor:\r\n                        </Typography>\r\n                        <Typography variant='caption' className={classes.gridDetailTypography}>\r\n                            {props.data.Distributor}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4} className={classes.rightGridItem}>\r\n                        <Button \r\n                            variant='contained' \r\n                            className={classes.datasetDescriptionButton} \r\n                            onClick={() => props.context.handleDescribeDataset(props.data.Dataset_Name)}\r\n                        >\r\n                            <span className={classes.buttonTextWrapper}>Dataset Details</span>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst styles = (theme) => ({\r\n    markdown: {\r\n        '& img': {\r\n            maxWidth: '100%',\r\n            margin: '20px auto 20px auto',\r\n            display: 'block'\r\n        },\r\n        '& a': {\r\n            color: theme.palette.primary.main,\r\n            textDecoration: 'none'\r\n        }\r\n    }\r\n})\r\n\r\nconst DatasetDescriptionDialog = (props) => {\r\n    const { description, classes } = props;\r\n    return (\r\n        <React.Fragment>\r\n            { description ?\r\n            <Dialog open={Boolean(description)} onClose={props.clearDescription} maxWidth={false}>\r\n                <DialogTitle>{props.datasetName}</DialogTitle>\r\n                <DialogContent>\r\n                    <ReactMarkdown source={description} className={classes.markdown}/>\r\n                </DialogContent>\r\n            </Dialog> :\r\n            ''\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(DatasetDescriptionDialog));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = theme => ({\r\n  tooltip: {\r\n      color: theme.palette.secondary.main,\r\n      opacity: 1\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst ConnectedTooltip = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    if(!showHelp) {\r\n        return (\r\n            <React.Fragment>\r\n                {props.children}\r\n            </React.Fragment>\r\n        )}\r\n    else {\r\n        return (\r\n            <Tooltip \r\n                placement={props.placement} \r\n                open={showHelp} \r\n                title={props.title} \r\n                className={classes.tooltip}\r\n                classes={{\r\n                    popper: classes.tooltip\r\n                }}\r\n            >\r\n                {props.children}\r\n            </Tooltip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(ConnectedTooltip));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\nimport DatasetDescriptionDialog from './DatasetDescriptionDialog';\r\n\r\nimport stringify from 'csv-stringify/lib/sync';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper, Button, Grid, Tooltip } from '@material-ui/core';\r\n\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"Long_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"Variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"Table_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"Dataset_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"Make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"Sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"Study_Domain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"Process_Level\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"Spatial_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"Temporal_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"Unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'Keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '70vh', \r\n    width: '92%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '70px 2vw 30px 2vw',\r\n    padding: '20px'\r\n  },\r\n\r\n  downloadButton: {\r\n    margin: '6px 0 0 0',\r\n    textTransform: 'none',\r\n    color: 'black',\r\n    backgroundColor: '#FF8000',\r\n    '&:hover': {\r\n      backgroundColor: '#ab5600',\r\n  }\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: '',\r\n    describedDataset: ''\r\n  }\r\n\r\n  handleDescribeDataset = (dataset) => {\r\n    this.setState({...this.state, describedDataset: dataset})\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  onGridSizeChanged = (params) => {\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  handleDownloadCatalog = () => {\r\n    let csv = stringify(this.props.catalog, {\r\n      header: true\r\n    });\r\n\r\n    const blob = new Blob([csv], {type: 'text/csv'});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.setAttribute('hidden', '');\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `CMAP_Catalog.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  }\r\n\r\n  render = () => {\r\n    const { classes, datasets } = this.props;\r\n    const { describedDataset } = this.state;\r\n    const description = !datasets ? '' : !datasets[describedDataset] ? '' : datasets[describedDataset].Description;\r\n\r\n    return (\r\n      <Paper elevation={12} className={classes.gridPaper}>\r\n        <DatasetDescriptionDialog \r\n          description={description}\r\n          clearDescription={() => this.handleDescribeDataset('')}\r\n          datasetName={describedDataset}\r\n        />\r\n        <Grid container>\r\n          <Grid item xs={3}>\r\n\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <ConnectedTooltip placement title='Enter one or more search terms.' placement='top'>\r\n              <TextField              \r\n                className={classes.gridSearch}\r\n                autoFocus={true}\r\n                margin=\"normal\"\r\n                id=\"name\"\r\n                type=\"text\"\r\n                variant='outlined'\r\n                name='filterText'\r\n                value={this.state.filterText}\r\n                onChange={this.handleChange}\r\n                label=\"Search Variables\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </ConnectedTooltip>\r\n\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Tooltip placement='top' title='Download the full catalog in CSV format'>\r\n              <Button \r\n                className={classes.downloadButton}\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={this.handleDownloadCatalog}            \r\n              >\r\n                  Download\r\n              </Button>\r\n            </Tooltip>\r\n          </Grid>\r\n\r\n          <Grid item xs={1}>\r\n\r\n          </Grid>\r\n        </Grid>\r\n\r\n          \r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              onGridSizeChanged={this.onGridSizeChanged}\r\n              suppressDragLeaveHidesColumns= {true}\r\n              enableCellTextSelection={true}\r\n              suppressContextMenu={true}\r\n\r\n              // Additional props\r\n              context={{\r\n                datasets,\r\n                handleDescribeDataset: this.handleDescribeDataset\r\n              }}\r\n\r\n              // Setting related to styling\r\n              getRowStyle= {function(params) {\r\n                if (params.node.detail) {\r\n                    return { background: 'transparent' }\r\n                }\r\n              }}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n              // detailGrid\r\n              detailGridOptions= {{\r\n                enableCellTextSelection:true\r\n              }}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nimport { retrievalRequestSend, datasetRetrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog,\r\n    datasets: state.datasets\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend,\r\n    datasetRetrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.datasets) this.props.datasetRetrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog && this.props.datasets) return <AGGridWrapper catalog={this.props.catalog} datasets={this.props.datasets}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const validation = {\r\n    depth: {\r\n        depthOneIsLower: 'Cannot be larger than end',\r\n        depthOneOutOfBounds: 'Must be smaller than $',\r\n        depthTwoOutOfBounds: 'Must be larger than $',\r\n        negative: 'Cannot be negative'\r\n    },\r\n\r\n    date: {\r\n        dateOneIsLater: 'Cannot be after end',\r\n        dateOneOutOfBounds: 'Must be before $',\r\n        dateTwoOutOfBounds: 'Must be after $'\r\n    },\r\n\r\n    lat: {\r\n        latOneIsHigher: 'Cannot be larger than end.',\r\n        latOneOutOfBounds: 'Must be less than $',\r\n        latTwoOutOfBounds: 'Must be greater than $'\r\n    },\r\n\r\n    lon: {\r\n        lonOneIsHigher: 'Cannot be larger than end.',\r\n        lonOneOutOfBounds: 'Must be less than $',\r\n        lonTwoOutOfBounds: 'Must be greater than $'\r\n    },\r\n\r\n    type: {\r\n        dataIsIrregular: '$ is not available for sparse data',\r\n        dateRangeRequired: '$ requires a range of dates',\r\n        depthRangeRequired: '$ requires a range of depths',\r\n        surfaceOnlyDataset: '$ contains only surface data',\r\n        irregularOnly: 'Sparse map is only available for sparse data',\r\n        dataSizeTooLarge: 'Data set is too large for this visualization type.'\r\n    },\r\n\r\n    generic: {\r\n        invalid: 'Invalid input',\r\n        dataSizeWarning: 'Wait time and application performance may be poor due to size of data.',\r\n        dataSizePrevent: 'Data set is too large. Please reduce date range or area size.',\r\n        variableMissing: 'Please select a variable',\r\n        vizTypeMissing: 'Please select a visualization type'\r\n    }\r\n}\r\n\r\nexport default validation;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    const { data } = props;\r\n\r\n    if(!data) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{data.Long_Name}</DialogTitle>\r\n            <DialogContent>\r\n                { data.Comment &&\r\n                    <DialogContentText>\r\n                        {data.Comment}\r\n                    </DialogContentText>\r\n                }\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Dataset</TableCell>\r\n                                <TableCell title={data.Dataset_Name}>{data.Dataset_Name.length > 25 ? data.Dataset_Name.slice(0,23) + '...' : data.Dataset_Name}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Table Name</TableCell>\r\n                                <TableCell title={data.Table_Name}>{data.Table_Name > 25 ? data.Table_Name.slice(0,23) + '...' : data.Table_Name}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Source</TableCell>\r\n                                <TableCell title={data.Data_Source}>{data.Data_Source > 25 ? data.Data_Source.slice(0,23) + '...' : data.Data_Source}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Distributor</TableCell>\r\n                                <TableCell title={data.Distributor}>{data.Distributor.length > 25 ? data.Distributor.slice(0,23) + '...' : data.Distributor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{data.Sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{data.Spatial_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{data.Temporal_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{data.Time_Min ? data.Time_Min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{data.Time_Max ? data.Time_Max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lat_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lat_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lon_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{data.Depth_Min ? `${data.Depth_Min}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{data.Depth_Max ? `${data.Depth_Max}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            {data.Variable_Min &&\r\n                                <TableRow>\r\n                                    <TableCell>Minimum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Min}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Max &&\r\n                                <TableRow>\r\n                                    <TableCell>Maximum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Max}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Mean && \r\n                                <TableRow>\r\n                                    <TableCell>Mean Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Mean}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Std &&\r\n                                <TableRow>\r\n                                    <TableCell>Standard Deviation({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Std}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);\r\n\r\n// Variable_Max: \"4.999\"\r\n// Variable_Mean: \"-0.0000008547\"\r\n// Variable_Min: \"-4.9956\"\r\n// Variable_Std: \"0.1428013424\"","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nconst mapTemporalResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [temporalResolutions.threeMinutes] : 1,\r\n        [temporalResolutions.sixHourly] : 1,\r\n        [temporalResolutions.daily] : 1,\r\n        [temporalResolutions.weekly] : 7,\r\n        [temporalResolutions.monthly] : 30,\r\n        [temporalResolutions.annual] : 365,\r\n        [temporalResolutions.irregular] : null,\r\n        [temporalResolutions.monthlyClimatology]: 30,\r\n        [temporalResolutions.threeDay]: 3,\r\n        [temporalResolutions.eightDayRunning]: 8,\r\n        [temporalResolutions.eightDays]: 8\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapTemporalResolutionToNumber;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { ArrowDropDown, LibraryBooks } from '@material-ui/icons';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend } from '../Redux/actions/visualization';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    dataRetrievalFormPaper: {\r\n        width: '1000px',\r\n        height: '260px',\r\n        padding: theme.spacing(2.5),\r\n        position:'fixed',\r\n        top: '10px',\r\n        left: '50%',\r\n        marginLeft: '-600px',\r\n        zIndex: 2,\r\n        paddingTop: theme.spacing(1.5),\r\n    },\r\n\r\n    dataRetrievalFormField: {\r\n        padding:`0px ${theme.spacing(1)}`\r\n    },\r\n\r\n    retrieveDataButton: {\r\n        margin:'10px auto'\r\n    },\r\n\r\n    variableSelect: {\r\n        margin: '0 30px 20px 30px'\r\n    },\r\n\r\n    visualizationSpeedDial: {\r\n        position: 'relative',\r\n        top: '5px',\r\n        left: '30px'\r\n    },\r\n\r\n    visualizeButton: {\r\n        borderRadius:'10%',\r\n        width: '100px',\r\n        height:'40px',\r\n        margin: 'auto 0',\r\n        backgroundColor: theme.palette\r\n    },\r\n\r\n    visualizeButtonText: {\r\n        dominantBaseline: \"middle\",\r\n        textAnchor: \"middle\"\r\n    },\r\n\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    datePickerGridSection: {\r\n        paddingLeft: '40px !important',\r\n        paddingRight: '40px !important'\r\n    },\r\n\r\n    shortenHeight: {\r\n        height: '60px'\r\n    },\r\n\r\n    vizSelect: {\r\n        minWidth: 120\r\n    },\r\n\r\n    gridItem: {\r\n        height: '48px'\r\n    },\r\n\r\n    generalMessage: {\r\n        textAlign: 'left'\r\n    },\r\n\r\n    vizTypeSelectFormControl: {\r\n        width: 150\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend\r\n}\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nconst reactWindowListRef = React.createRef();\r\nclass MenuList extends Component {\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if(!(this.props.children && this.props.children.length)) return;\r\n        let index = this.props.children.findIndex(child => child.props && child.props.isFocused);\r\n        reactWindowListRef.current.scrollToItem(index);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <ReactWindowList\r\n                style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length === 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <ArrowDropDown />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nclass DataRetrievalForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('Variable');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            visualizationSpeedDialOpen: false,\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.Variable,\r\n            label: item.Variable === item.Long_Name ? (item.Variable.length > 48 ? item.Variable.slice(0,45) + '...' : item.Variable) : (item.Variable.length > 23 ? item.Variable.slice(0,23) : item.Variable) + ' : ' + (item.Long_Name.length > 38 ? item.Long_Name.slice(0,35) + '...' : item.Long_Name),\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Histogram');\r\n        return '';\r\n    }\r\n\r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Depth Profile');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = () => {\r\n        if(this.estimateDataSize() > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = () => {\r\n        if(this.estimateDataSize() > 50000000) return validation.generic.dataSizePrevent;\r\n        return ''\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartDate(),\r\n                this.checkEndDate(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(),\r\n                this.checkGeneralPrevent()\r\n            ];\r\n        } else validations = Array(17).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startDateMessage,\r\n            endDateMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage\r\n        ] = validations;\r\n\r\n        const parametersAreInvalid = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage\r\n        ].some(message => message.length);\r\n\r\n        return (\r\n            <div className={this.props.showUI ? '' : classes.displayNone} id='drf'>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n                <Paper className={classes.dataRetrievalFormPaper}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={11} className={classes.shortenHeight}>\r\n                            <Select\r\n                                isLoading = {catalogRequestState === states.inProgress}\r\n                                components={{\r\n                                    IndicatorSeparator:'',\r\n                                    DropdownIndicator,\r\n                                    Option,\r\n                                    MenuList,\r\n                                    SingleValue,\r\n                                }}\r\n                                isClearable\r\n                                onInputChange={this.onAutoSuggestChange}\r\n                                filterOption={null}\r\n                                className={classes.variableSelect}\r\n                                autoFocus\r\n                                escapeClearsValue\r\n                                name=\"fields\"\r\n                                label=\"Variables\"\r\n                                options={options}\r\n                                onChange={this.props.updateFields}\r\n                                value={fields}\r\n                                placeholder=\"Variable Search\"\r\n                                styles={{\r\n                                    menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                                    input: provided => ({...provided,\r\n                                        color: 'white',\r\n                                        fontFamily: '\"Lato\", sans-serif'\r\n                                    }),\r\n\r\n                                    control: provided => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        border: '1px solid #333333',\r\n                                        '&:hover': { borderColor: 'white' },\r\n                                        '&:focus-within': { borderColor: colors.orange },\r\n                                    }),\r\n\r\n                                    placeholder: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        fontSize: '14px'\r\n                                    }),\r\n\r\n                                    noOptionsMessage: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        backgroundColor: colors.backgroundGray\r\n                                    }),\r\n\r\n                                    option: (provided, { data, isFocused }) => {\r\n                                        return ({...provided,\r\n                                        backgroundColor: isFocused ? '#383838' : '#424242',\r\n                                        color: data.data.Sensor === 'Satellite' ? '#1acf02' : data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        '&:hover': { backgroundColor: '#383838' },\r\n                                        ':active': { backgroundColor: '#383838' },\r\n                                        '&:after': { \r\n                                            content: data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            float: 'left'\r\n                                        },\r\n                                    })},\r\n\r\n                                    singleValue: (provided, state) => ({...provided,\r\n                                        fontFamily: state.data.data.Sensor === 'Satellite' ? 'Font Awesome 5 Free': '\"Lato\", sans-serif',\r\n                                        color: state.data.data.Sensor === 'Satellite' ? '#1acf02' : state.data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        paddingRight: '20px',\r\n                                        '&:after': { \r\n                                            content: state.data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            fontSize: '18px',\r\n                                            position: 'relative',\r\n                                            left: '8px',\r\n                                            top: '3px'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n                                    colors: {\r\n                                    ...theme.colors,\r\n                                    // Background color of hovered options\r\n                                    primary25: '#e0e0e0',\r\n                                    primary: '#212121',\r\n                                    },\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={1}>\r\n                            <IconButton\r\n                                disabled={!fields}\r\n                                onClick={this.handleTableStatsDialogOpen}\r\n                            >\r\n                                <LibraryBooks/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel htmlFor=\"depth1-input\" >Start Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth1-input\"\r\n                                        value={depth1}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth1-error\"\r\n                                        labelWidth={105}\r\n                                        name='depth1'\r\n                                    />\r\n                                    <FormHelperText id=\"depth1-error\">{startDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"depth2-input\" >End Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth2-input\"\r\n                                        value={depth2}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth2-error\"\r\n                                        labelWidth={95}\r\n                                        name='depth2'\r\n                                    />\r\n                                    <FormHelperText id=\"depth2-error\">{endDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat1-input\" >{'Start Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat1-input\"\r\n                                        value={lat1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lat1'\r\n                                    />\r\n                                    <FormHelperText id=\"lat1-error\">{startLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat2-input\" >{'End Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat2-input\"\r\n                                        value={lat2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lat2'\r\n                                    />\r\n                                    <FormHelperText id=\"lat2-error\">{endLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon1-input\" >{'Start Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon1-input\"\r\n                                        value={lon1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lon1'\r\n                                    />\r\n                                    <FormHelperText id=\"lon1-error\">{startLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon2-input\" >{'End Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon2-input\"\r\n                                        value={lon2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lon2'\r\n                                    />\r\n                                    <FormHelperText id=\"lon2-error\">{endLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={2}>\r\n                                <FormControl variant='outlined' className={classes.vizTypeSelectFormControl}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        labelWidth={35}\r\n                                        value={selectedVizType}\r\n                                        variant='outlined'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'outlined'\r\n                                        }}\r\n                                        >\r\n                                        <MenuItem disabled={Boolean(heatmapMessage)} value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>\r\n                                        <MenuItem disabled={Boolean(contourMessage)} value={vizSubTypes.contourMap}>Contour</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sectionMapMessage)} value={vizSubTypes.sectionMap}>Section Map</MenuItem>\r\n                                        <MenuItem disabled={Boolean(histogramMessage)} value={vizSubTypes.histogram}>Histogram</MenuItem>                                    \r\n                                        <MenuItem disabled={Boolean(timeSeriesMessage)} value={vizSubTypes.timeSeries}>Time Series</MenuItem>\r\n                                        <MenuItem disabled={Boolean(depthProfileMessage)} value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sparseMapMessage)} value={vizSubTypes.sparse}>Sparse Map</MenuItem>\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2}>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={() => this.props.onVisualize()}\r\n                                    disabled={!selectedVizType || parametersAreInvalid || !fields}\r\n                                >\r\n                                    Visualize\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <Typography variant='caption' color='error' className={classes.generalMessage}>\r\n                                    {generalPreventMessage || generalWarnMessage}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataRetrievalForm));","const utcDateStringToLocal = (utcString) => {\r\n    let date = new Date(utcString);\r\n    let utcYear = date.getUTCFullYear();\r\n    let utcMonth = date.getUTCMonth();\r\n    let utcDate = date.getUTCDate();\r\n\r\n    let newDate = new Date();\r\n    newDate.setFullYear(utcYear, utcMonth, utcDate);\r\n    return newDate;\r\n}\r\n\r\nexport default utcDateStringToLocal;","\r\nconst darwinDepths = [\r\n    5,\r\n    15,\r\n    25,\r\n    35,\r\n    45,\r\n    55,\r\n    65,\r\n    75.005,\r\n    85.025,\r\n    95.095,\r\n    105.31,\r\n    115.87,\r\n    127.15,\r\n    139.74,\r\n    154.47,\r\n    172.4,\r\n    194.735,\r\n    222.71,\r\n    257.47,\r\n    299.93,\r\n    350.68,\r\n    409.93,\r\n    477.47,\r\n    552.71,\r\n    634.735,\r\n    722.4,\r\n    814.47,\r\n    909.74,\r\n    1007.155,\r\n    1105.905,\r\n    1205.535,\r\n    1306.205,\r\n    1409.15,\r\n    1517.095,\r\n    1634.175,\r\n    1765.135,\r\n    1914.15,\r\n    2084.035,\r\n    2276.225,\r\n    2491.25,\r\n    2729.25,\r\n    2990.25,\r\n    3274.25,\r\n    3581.25,\r\n    3911.25,\r\n    4264.25,\r\n    4640.25,\r\n    5039.25,\r\n    5461.25,\r\n    5906.25\r\n]\r\n\r\nconst piscesDepths = [\r\n    0.494024991989,\r\n    1.54137504101,\r\n    2.64566898346,\r\n    3.81949496269,\r\n    5.07822418213,\r\n    6.44061422348,\r\n    7.92956018448,\r\n    9.5729970932,\r\n    11.404999733,\r\n    13.4671401978,\r\n    15.8100700378,\r\n    18.4955596924,\r\n    21.5988197327,\r\n    25.2114105225,\r\n    29.4447307587,\r\n    34.4341506958,\r\n    40.3440513611,\r\n    47.3736915588,\r\n    55.764289856,\r\n    65.8072662354,\r\n    77.8538513184,\r\n    92.3260726929,\r\n    109.729301453,\r\n    130.666000366,\r\n    155.850692749,\r\n    186.125595093,\r\n    222.475204468,\r\n    266.040313721,\r\n    318.127410889,\r\n    380.213012695,\r\n    453.937713623,\r\n    541.088928223,\r\n    643.566772461,\r\n    763.333129883,\r\n    902.339294434,\r\n    1062.43994141,\r\n    1245.29101562,\r\n    1452.25097656,\r\n    1684.28405762,\r\n    1941.89294434,\r\n    2225.07788086,\r\n    2533.3359375,\r\n    2865.70288086,\r\n    3220.82006836,\r\n    3597.03198242,\r\n    3992.48388672,\r\n    4405.22412109,\r\n    4833.29101562,\r\n    5274.78417969,\r\n    5727.91699219\r\n]\r\n\r\nconst _piscesTables = [\r\n    'tblPisces_NRT',\r\n    'tblPisces_NRT_Calendar'\r\n]\r\n\r\nconst _darwinTable = [\r\n    'tblDarwin_Chl_Climatology',\r\n    'tblDarwin_Ecosystem',\r\n    'tblDarwin_Nutrient',\r\n    'tblDarwin_Nutrient_Climatology',\r\n    'tblDarwin_Ocean_Color',\r\n    'tblDarwin_Phytoplankton',\r\n    'tblDarwin_Plankton_Climatology'\r\n]\r\n\r\nconst piscesTable = new Set(_piscesTables);\r\nconst darwinTable = new Set(_darwinTable);\r\n\r\nconst exports = {\r\n    count: (field, depth1, depth2) => {\r\n        const { Table_Name: table } = field.data;\r\n        var count = 0;\r\n    \r\n        if(piscesTable.has(table)) {\r\n            for(let i = 0; i < piscesDepths.length; i++){\r\n                if(piscesDepths[i] > depth2) break;\r\n                if(piscesDepths[i] > depth1) count ++; \r\n            }\r\n        } else if (darwinTable.has(table)) {\r\n            for(let i = 0; i < darwinDepths.length; i++){\r\n                if(darwinDepths[i] > depth2) break;\r\n                if(darwinDepths[i] > depth1) count ++; \r\n            }\r\n        } else {}\r\n        return count;\r\n    },\r\n\r\n    piscesTable,\r\n    darwinTable,\r\n    piscesDepths,\r\n    darwinDepths\r\n}\r\n\r\nexport default exports;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { VariableSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport { Divider, ButtonGroup, Grid, IconButton, Icon, ListItem, MenuItem, Typography, Drawer, TextField, FormControl, InputLabel, Button, Tooltip} from '@material-ui/core';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { Cached, LibraryBooks, ArrowRight, ChevronLeft, ChevronRight, InsertChartOutlined, Language, Delete, CloudDownload, Info } from '@material-ui/icons';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend, clearCharts, csvDownloadRequestSend } from '../Redux/actions/visualization';\r\nimport { snackbarOpen } from '../Redux/actions/ui';\r\n\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport depthUtils from '../Utility/depthCounter';\r\n\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst navDrawerWidth = 320;\r\n\r\nconst errorHeightAdjust = 23;\r\n\r\nconst styles = theme => ({\r\n    drawer: {\r\n        width: navDrawerWidth,\r\n        top: 32,\r\n        bottom: 'auto',\r\n        overflow: 'visible'\r\n    },\r\n\r\n    drawerPaper: {\r\n        width: navDrawerWidth,\r\n        height: '540px',\r\n        top: 'calc(50% - 270px)',\r\n        borderRadius: '0 4px 4px 0',\r\n        boxShadow: '2px 2px  2px 2px #242424',\r\n        border: 'none',\r\n        overflow: 'visible',\r\n        backgroundColor: '#424242'\r\n    },\r\n\r\n    drawerPaperError1: {\r\n        height: `${540 + errorHeightAdjust}px`\r\n    },\r\n\r\n    drawerPaperError2: {\r\n        height: `${540 + errorHeightAdjust * 2}px`\r\n    },\r\n\r\n    drawerPaperError3: {\r\n        height: `${540 + errorHeightAdjust * 3}px`\r\n    },\r\n\r\n    drawerPaperError4: {\r\n        height: `${540 + errorHeightAdjust * 4}px`\r\n    },\r\n\r\n    drawerPaperError5: {\r\n        height: `${540 + errorHeightAdjust * 5}px`\r\n    },\r\n\r\n  openPanelChevron: {\r\n    position: 'fixed',\r\n    left: '5px',\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  closePanelChevron: {\r\n    position: 'fixed',\r\n    left: navDrawerWidth + 5,\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  groupedButtons: {\r\n      width: '50%',\r\n      border: '1px solid #313131',\r\n      borderRadius: 0,\r\n      backgroundColor: '#3c3c3c'\r\n  },\r\n\r\n  controlPanelForm: {\r\n      marginTop: theme.spacing(1)\r\n  },\r\n\r\n  tableStatsButton: {\r\n      borderRadius: 0,\r\n      paddingTop: '11px',\r\n      backgroundColor: '#424242'\r\n  },\r\n\r\n    formGridItem: {\r\n        borderLeft: '1px solid #313131',\r\n        backgroundColor: '#424242'\r\n    },\r\n\r\n  vizTypeSelectFormControl: {\r\n      width: '100%',\r\n      '&:disabled': {\r\n        backgroundColor: 'transparent'\r\n    }\r\n  },\r\n\r\n  depressed: {\r\n      boxShadow: 'inset 1px 1px 5px #1c1c1c'\r\n  },\r\n\r\n  padLeft: {\r\n      padding: '6px 0 2px 7px'\r\n  },\r\n\r\n  visualizeButton: {\r\n      height: '56px',\r\n      borderRadius: 0,\r\n      backgroundColor: '#424242',\r\n      color: theme.palette.primary.main,\r\n      fontVariant: 'normal',\r\n      '&:disabled': {\r\n        backgroundColor: 'transparent'\r\n    },\r\n      '&:hover': {backgroundColor: '#874400'}\r\n  },\r\n\r\n  helperText: {\r\n    color: 'yellow'\r\n  },\r\n\r\n  vizButtonTooltip: {\r\n    color: 'yellow'\r\n  },\r\n\r\n  datePickerInputAdornment: {\r\n      padding: 0\r\n  },\r\n\r\n  clearChartsButton: {\r\n      borderRadius: 0,\r\n      backgroundColor: '#3c3c3c',\r\n      width: '100%',\r\n      borderRight: '1px solid #313131'\r\n\r\n  },\r\n\r\n  resetSPParamsButton: {\r\n    borderRadius: 0,\r\n    backgroundColor: '#3c3c3c',\r\n    width: '100%',\r\n  },\r\n\r\n  datePicker: {\r\n      width: '100%'\r\n  }\r\n\r\n});\r\n\r\nconst overrideDisabledStyle = {\r\n    backgroundColor: 'transparent'\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    showHelp: state.showHelp,\r\n    datasets: state.datasets\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend,\r\n    clearCharts,\r\n    csvDownloadRequestSend,\r\n    snackbarOpen\r\n}\r\n\r\nconst getDatePlaceholder = (date) => {\r\n    if(isNaN(new Date(date)).valueOf()) return 'yyyy-MM-dd';\r\n    \r\n    let month  = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let year = date.getFullYear();\r\n    return [year, month < 10 ? '0' + month : month, day < 10 ? '0' + day : day].join('-');\r\n}\r\n\r\nconst groupHeaderHeight = 37;\r\nconst height = 35;\r\n\r\nconst reactWindowListRef = React.createRef();\r\nconst selectRef = React.createRef();\r\n\r\nclass MenuList extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n      if(reactWindowListRef.current) reactWindowListRef.current.resetAfterIndex(0);\r\n      if(!(this.props.children && this.props.children.length)) return;\r\n      let scrollOffset = 0;\r\n      let foundFocus = false;\r\n      this.props.children.forEach(child => {\r\n        if(foundFocus) return;\r\n\r\n        let count = groupHeaderHeight;\r\n        let groupHasFocus= false;\r\n        for(let i = 0; i < child.props.children.length; i++){\r\n          if(child.props.children[i].props.isFocused) {\r\n            foundFocus = true;\r\n            groupHasFocus = true;\r\n            break;\r\n          }\r\n          count += 37.6;\r\n        }\r\n\r\n        if(groupHasFocus) scrollOffset += count;\r\n        else scrollOffset += 37.6;\r\n      })\r\n      if(foundFocus) reactWindowListRef.current.scrollTo(scrollOffset > 150 ? scrollOffset - 150 : 0);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n\r\n        if(!children || !children.length) return '';\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        const groupHeights = children.map(child => {\r\n          return child.props.children.some(grandChild => grandChild.props.isFocused) ? child.props.children.length * 37.6 + groupHeaderHeight : groupHeaderHeight;\r\n        });\r\n        const totalHeight = groupHeights.reduce((acc, cur) => acc + cur, 0);\r\n        const estimatedItemSize = totalHeight / children.length;\r\n        const getItemSize = index => groupHeights[index];\r\n\r\n        return (\r\n            <ReactWindowList\r\n                // height={(options.length == 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                height={totalHeight < 400 ? totalHeight :  400}\r\n                estimatedItemSize={estimatedItemSize}\r\n                itemCount={children.length}\r\n                itemSize={getItemSize}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={{...style}}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\nclass Group extends Component {\r\n    render() {\r\n        const hasFocus = this.props.children.some(element => element.props.isFocused);\r\n        const sensor = this.props.children[0].props.data.data.Sensor;\r\n\r\n      return (\r\n          <React.Fragment>\r\n            <CustomHeading \r\n              {...this.props.headingProps} \r\n              headingLabel={this.props.data.label} \r\n              firstChild={this.props.children[0].props.data}\r\n              hasFocus={hasFocus}\r\n              sensor={sensor}\r\n              tableName={this.props.children[0].props.data.data.Table_Name}\r\n              selectProps={this.props.selectProps}\r\n            />\r\n            <div hidden={!hasFocus}>\r\n              {this.props.children.map(child => child)}\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n    }    \r\n}\r\n\r\nconst customHeadingStyles = (theme) => ({\r\n    customHeading: {\r\n        backgroundColor: 'rgba(0,0,0,.5)',\r\n        height: groupHeaderHeight,\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(122,67,0,.5)',\r\n        },\r\n        boxShadow: '0px 1px 1px 1px #242424'\r\n    },\r\n\r\n    icon: {\r\n        marginRight: '10px',\r\n        width: '30px'\r\n    },\r\n\r\n    typography: {\r\n        width: '650px'\r\n    }\r\n})\r\n\r\nconst _CustomHeading = props => {\r\n    const { classes, sensor, selectProps } = props;\r\n    let iconClass;\r\n\r\n    if(sensor === 'Satellite') iconClass = 'fa-satellite';\r\n    else if(sensor === 'Blend') iconClass = 'fa-laptop';\r\n    else iconClass = 'fa-ship';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <ListItem \r\n          button \r\n          alignItems='center' \r\n          onClick={() => selectRef.current.select.setState({focusedOption: props.hasFocus ? null : props.firstChild})}\r\n          className={classes.customHeading}\r\n        >\r\n            <Icon fontSize='small' color='inherit' className={`fas ${iconClass} ${classes.icon}`}></Icon>\r\n        <Typography className={classes.typography}>\r\n            {props.headingLabel.length > 70 ? props.headingLabel.slice(0,67) + '...' : props.headingLabel}\r\n        </Typography>\r\n\r\n        <Tooltip title='Download Data' placement='right'>\r\n            <IconButton \r\n                color='inherit' \r\n                onClick={(e) => {\r\n                    // selectProps.handleDownloadCsvClick(tableName, props.headingLabel);\r\n                    selectProps.handleSetDownloadTarget({dataset: props.headingLabel})\r\n                    selectProps.onAutoSuggestChange(props.headingLabel, {action: 'input-change'})\r\n                    e.stopPropagation();\r\n                }}>\r\n                <CloudDownload/>\r\n            </IconButton>\r\n        </Tooltip>\r\n\r\n        { selectProps.datasets[props.headingLabel] &&\r\n            <Tooltip title='Dataset Info' placement='right'>\r\n                <IconButton \r\n                    color='inherit' \r\n                    onClick={(e) => {\r\n                        window.open(selectProps.datasets[props.headingLabel].Doc_URL);\r\n                        e.stopPropagation();\r\n                    }}\r\n                >\r\n                    <Info/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        }\r\n        </ListItem>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\nconst CustomHeading = withStyles(customHeadingStyles)(_CustomHeading);\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n    <components.DropdownIndicator {...props}>\r\n        <ArrowRight/>\r\n    </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n      <components.Option \r\n        {...props} \r\n        innerProps={{\r\n            ...props.innerProps, \r\n            // Prevent focus / scroll events when mousing over options\r\n            onMouseMove: (e) => e.preventDefault(), \r\n            onMouseOver: (e) => e.preventDefault()\r\n        }}>\r\n    </components.Option>\r\n    )\r\n}\r\n\r\nconst GroupHeading = (props) => '';\r\n\r\nconst formatOptionLabel = (option, meta) => {\r\n    return option.label;\r\n}\r\n\r\nclass VizControlPanel extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.indexStrategy = new JsSearch.AllSubstringsIndexStrategy()\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        search.addIndex('Table_Name');\r\n        search.addIndex('Dataset_Name');\r\n        search.addIndex('Study_Domain');\r\n        search.addIndex('Spatial_Resolution');\r\n        search.addIndex('Temporal_Resolution');\r\n\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: '',\r\n            showControlPanel: true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search});\r\n        }\r\n    }\r\n\r\n    handleOpenControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: true})\r\n    }\r\n\r\n    handleCloseControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: false})\r\n    }      \r\n    \r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        var options = {};\r\n\r\n        items.forEach(item => {\r\n            if(!options[item.Dataset_Name]){\r\n                options[item.Dataset_Name] = {\r\n                    label: item.Dataset_Name,\r\n                    options: []\r\n                }\r\n            }\r\n\r\n            options[item.Dataset_Name].options.push({\r\n                value: item.Variable,\r\n                label: item.Long_Name.length < 80 ? item.Long_Name : item.Long_Name.slice(0,78) + '...',\r\n                data: item\r\n            })\r\n        });\r\n\r\n        let sortedOptions = Object.values(options).sort((opt1, opt2) => {\r\n            return opt1.label < opt2.label ? -1 : 1;\r\n        })\r\n\r\n        return sortedOptions;\r\n    }\r\n\r\n    estimateCsvSize = (datasetName) => {\r\n        // let members = [];\r\n        let count = 0;\r\n        this.props.catalog.forEach((member, i) => {\r\n            if(member.Dataset_Name === datasetName){\r\n                count += parseInt(member.Variable_Count) || 0;\r\n                // members.push(member);\r\n            }\r\n        })\r\n        return count;\r\n    }\r\n\r\n    handleDownloadCsvClick = (tableName, datasetName) => {\r\n        let query = `select%20*%20from%20${tableName}`;\r\n        let count = this.estimateCsvSize(datasetName);\r\n        if(count < 3000000){\r\n            this.props.csvDownloadRequestSend(query, datasetName);\r\n        } else {\r\n            this.props.snackbarOpen('Data set too large');\r\n        }\r\n    }\r\n\r\n    handleResetSPParams = () => {\r\n        this.props.resetSPParams();\r\n        this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') {\r\n            this.setState({...this.state, searchField: searchString});\r\n            selectRef.current.select.setState({focusedOption: null})\r\n        }\r\n        if(action.action ==='set-value') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, depth1, depth2, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        \r\n        const dayDiff = (date2 - date1) / 86400000;\r\n        \r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n        \r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const depthCount = depthUtils.count(fields, depth1, depth2) || 1;\r\n        \r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * depthCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDateValid = () => {\r\n        if(isNaN(new Date(this.props.dt1)).valueOf() || !this.props.dt1) return 'Start date is invalid';\r\n    }\r\n\r\n    checkEndDateValid = () => {\r\n        if(isNaN(new Date(this.props.dt2)).valueOf() || !this.props.dt1) return 'End date is invalid';\r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 > this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        return '';\r\n    }\r\n    \r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = (dataSize) => {\r\n        if(!this.props.selectedVizType) return '';\r\n        if(dataSize > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = (dataSize) => {\r\n        if(this.props.selectedVizType !== vizSubTypes.histogram && this.props.selectedVizType !== vizSubTypes.heatmap && dataSize > 1200000){\r\n            return validation.generic.dataSizePrevent;\r\n        }\r\n        if(dataSize > 6000000) return validation.generic.dataSizePrevent;\r\n        if(!this.props.fields) return validation.generic.variableMissing;\r\n        if(!this.props.selectedVizType) return validation.generic.vizTypeMissing;\r\n        return ''}\r\n\r\n    handleShowChartsAndResize = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 30);\r\n        this.props.handleShowCharts();     \r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField, showControlPanel } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly,\r\n            showCharts,\r\n            handleShowGlobe,\r\n            handleChange,\r\n            handleLatLonChange,\r\n            datasets\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        const dataSize = this.estimateDataSize();\r\n\r\n        var catalogMinDate = fields && utcDateStringToLocal(fields.data.Time_Min).setHours(0,0,0,0);\r\n        var catalogMaxDate = fields && utcDateStringToLocal(fields.data.Time_Max).setHours(0,0,0,0);\r\n        var zeroedDT1 = dt1.setHours(0,0,0,0);\r\n        var zeroedDT2 = dt2.setHours(0,0,0,0);\r\n        \r\n        var minDate = fields ? catalogMinDate : '';\r\n\r\n        let minDateMessage = fields && zeroedDT2 < catalogMinDate ? 'End cannot be before dataset start date' : '';\r\n        var maxDateMessage;\r\n        var maxDate;\r\n\r\n        if(!fields){\r\n            maxDate = zeroedDT2;\r\n            maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after end' : '';\r\n        } else {\r\n            \r\n\r\n            if(catalogMaxDate < zeroedDT2){\r\n                maxDate = catalogMaxDate;\r\n                maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after dataset end date' : '';\r\n            } else {\r\n                maxDate = zeroedDT2;\r\n                maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after end' : '';\r\n            }\r\n        }\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(dataSize),\r\n                this.checkGeneralPrevent(dataSize),\r\n                this.checkStartDateValid(),\r\n                this.checkEndDateValid()\r\n            ];\r\n        } else validations = Array(16).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage,\r\n            startDateValidMessage,\r\n            endDateValidMessage\r\n        ] = validations;\r\n\r\n        const checkDisableVisualizeList = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage,\r\n            minDateMessage,\r\n            maxDateMessage,\r\n            startDateValidMessage,\r\n            endDateValidMessage\r\n        ];\r\n\r\n        let cdvl = checkDisableVisualizeList;\r\n        let errorCount = 0;\r\n        \r\n        if(cdvl[0] || cdvl[1]) errorCount ++;\r\n        if(cdvl[2] || cdvl[3]) errorCount ++;\r\n        if(cdvl[4] || cdvl[5]) errorCount ++;\r\n        if(cdvl[7] || cdvl[9]) errorCount ++;\r\n        if(cdvl[8] || cdvl[10]) errorCount ++;\r\n\r\n        const errorSizeAdjust = errorCount > 0 ? 'drawerPaperError' + errorCount : '';\r\n\r\n        const checkDisableVisualize = () => {\r\n            for(let i = 0; i < checkDisableVisualizeList.length; i++){\r\n                if(checkDisableVisualizeList[i]) return checkDisableVisualizeList[i];\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        const disableVisualizeMessage = checkDisableVisualize();\r\n\r\n        const visualizeButtonTooltip = disableVisualizeMessage ? disableVisualizeMessage : generalWarnMessage ? generalWarnMessage : '';\r\n\r\n        return (\r\n            <div>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n\r\n                { showControlPanel ? \r\n\r\n                        <IconButton \r\n                            className={classes.closePanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleCloseControlPanel}>\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                :\r\n                    \r\n                        <IconButton \r\n                            className={classes.openPanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleOpenControlPanel}>\r\n                            <ChevronRight />\r\n                        </IconButton>\r\n                }\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={showControlPanel}\r\n                    classes={{\r\n                        paper: `${classes.drawerPaper} ${classes[errorSizeAdjust]}`,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >\r\n                    <ButtonGroup>\r\n                        <Tooltip title='Show Globe' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${!showCharts && classes.depressed}`} \r\n                                onClick={handleShowGlobe}\r\n                                color='inherit'\r\n                            >\r\n                                <Language/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        \r\n                        <Tooltip title='Show Charts' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${showCharts && classes.depressed}`}\r\n                                onClick={this.handleShowChartsAndResize}\r\n                                color='inherit'\r\n                            >\r\n                                <InsertChartOutlined/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ButtonGroup>\r\n                    \r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            <Tooltip title='Clear Charts' placement='bottom'>\r\n                                <IconButton color='inherit' onClick={this.props.clearCharts} className={classes.clearChartsButton}>\r\n                                    <Delete/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <Tooltip title='Reset Parameters' placement='right'>\r\n                                <IconButton color='inherit' onClick={this.handleResetSPParams} className={classes.resetSPParamsButton}>\r\n                                    <Cached/>\r\n                                </IconButton>\r\n                            </Tooltip>                            \r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <form>\r\n                        <Grid container>\r\n                            <Grid item xs={10}>\r\n                                <ConnectedTooltip placement='top' title='Enter one or more search terms.'>\r\n                                    <Select\r\n                                        // onMenuOpen={() => {\r\n                                        //     setTimeout(() => selectRef.current.select.setState({...selectRef.current.select.state, focusedOption: null}), 1)\r\n                                            \r\n                                        // }}\r\n                                        formatOptionLabel={formatOptionLabel}\r\n                                        handleSetDownloadTarget={this.props.handleSetDownloadTarget}\r\n                                        handleTableStatsDialogOpen={this.handleTableStatsDialogOpen}\r\n                                        isLoading = {catalogRequestState === states.inProgress}\r\n                                        onAutoSuggestChange = {this.onAutoSuggestChange}\r\n                                        datasets = {datasets}\r\n                                        components={{\r\n                                            IndicatorSeparator:'',\r\n                                            DropdownIndicator,\r\n                                            GroupHeading,\r\n                                            Group,\r\n                                            Option,\r\n                                            MenuList,\r\n                                            // SingleValue\r\n                                        }}\r\n                                        handleDownloadCsvClick = {this.handleDownloadCsvClick}\r\n                                        escapeClearsValue\r\n                                        ref={selectRef}\r\n                                        onInputChange={this.onAutoSuggestChange}\r\n                                        filterOption={null}\r\n                                        className={classes.variableSelect}\r\n                                        isClearable\r\n                                        inputValue={this.state.searchField}\r\n                                        name=\"fields\"\r\n                                        label=\"Variables\"\r\n                                        options={options}\r\n                                        onChange={this.props.updateFields}\r\n                                        value={fields}\r\n                                        placeholder=\"Variable Search\"\r\n                                        styles={{\r\n                                            menu: provided => ({\r\n                                                ...provided, \r\n                                                zIndex: 1300, \r\n                                                top: '-8px',\r\n                                                left: navDrawerWidth,\r\n                                                width: '980px',\r\n                                                borderRadius: '4px',\r\n                                                boxShadow: '2px 2px 2px 2px #242424',\r\n                                                overflow: 'hidden',\r\n                                                backgroundColor: 'rgba(0,0,0,.5)',\r\n                                                backdropFilter: 'blur(5px)',\r\n                                            }),\r\n\r\n                                            valueContainer: provided => ({\r\n                                                ...provided,\r\n                                                padding: '0 0 0 6px',\r\n                                                fontWeight: 100\r\n                                            }),\r\n\r\n                                            input: provided => ({...provided,\r\n                                                color: 'white',\r\n                                                fontFamily: '\"Lato\", sans-serif'\r\n                                            }),\r\n\r\n                                            control: provided => ({...provided,\r\n                                                backgroundColor: '#424242',\r\n                                                border: 'none',\r\n                                                borderBottom: '1px solid #333333',\r\n                                                borderRadius: 0,\r\n                                                '&:hover': { borderColor: 'white' },\r\n                                                '&:focus-within': { borderColor: colors.orange },\r\n                                                height: '56px'\r\n                                            }),\r\n\r\n                                            placeholder: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                fontSize: '14px',\r\n                                                fontWeight: 300\r\n                                            }),\r\n\r\n                                            noOptionsMessage: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                backgroundColor: colors.backgroundGray\r\n                                            }),\r\n\r\n                                            option: (provided, { data, isFocused }) => {\r\n                                                return ({...provided,\r\n                                                    fontWeight: 400,\r\n                                                    fontSize: '16px',\r\n                                                    backgroundColor: 'transparent',\r\n                                                    color: isFocused ? colors.orange : 'white',\r\n                                                    '&:hover': { backgroundColor: 'rgba(122,67,0,.5)'},\r\n                                                    // '&:active': { backgroundColor: 'rgba(0,0,0,.5)', color: colors.orange},\r\n                                            })},\r\n\r\n                                            singleValue: (provided, state) => ({...provided,\r\n                                                color: 'white',\r\n                                                fontWeight: 400\r\n                                            })\r\n                                        }}\r\n                                        theme={theme => ({\r\n                                            ...theme,\r\n                                            colors: {\r\n                                            ...theme.colors,\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                </ConnectedTooltip>\r\n                            </Grid>\r\n                            <Grid item xs={2} className={classes.tableStatsButton}>\r\n                                <IconButton \r\n                                    size='small' \r\n                                    onClick={this.handleTableStatsDialogOpen}                                     \r\n                                    disabled={!fields}\r\n                                >\r\n                                    <LibraryBooks/>\r\n                                </IconButton>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder={getDatePlaceholder(dt1)}\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    maxDate={maxDate}\r\n                                    minDate={null}\r\n                                    maxDateMessage={maxDateMessage}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder={getDatePlaceholder(dt2)}\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={minDate}\r\n                                    maxDate={null}\r\n                                    minDateMessage={minDateMessage}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat1-input\"\r\n                                    error={Boolean(startLatMessage)}\r\n                                    label={\"Start Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat1}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startLatMessage}\r\n                                    name='lat1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat2-input\"\r\n                                    error={Boolean(endLatMessage)}\r\n                                    label={\"End Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat2}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endLatMessage}\r\n                                    name='lat2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon1-input\"\r\n                                    error={Boolean(startLonMessage)}\r\n                                    label={\"Start Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon1}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startLonMessage}\r\n                                    name='lon1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon2-input\"\r\n                                    error={Boolean(endLonMessage)}\r\n                                    label={\"End Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon2}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endLonMessage}\r\n                                    name='lon2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"depth1-input\"\r\n                                    error={Boolean(startDepthMessage)}\r\n                                    label=\"Start Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth1}\r\n                                    onChange={handleChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startDepthMessage}\r\n                                    name='depth1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"depth2-input\"\r\n                                    error={Boolean(endDepthMessage)}\r\n                                    label=\"End Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth2}\r\n                                    onChange={handleChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endDepthMessage}\r\n                                    name='depth2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <FormControl variant='filled' className={classes.vizTypeSelectFormControl} disabled={!fields}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        className={classes.vizTypeSelectFormControl}\r\n                                        style={overrideDisabledStyle}\r\n                                        value={selectedVizType}\r\n                                        variant='filled'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'filled'\r\n                                        }}\r\n                                        >\r\n                                        {!heatmapMessage && <MenuItem value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>}\r\n                                        {!contourMessage && <MenuItem value={vizSubTypes.contourMap}>Contour Heatmap</MenuItem>}\r\n                                        {!sectionMapMessage && <MenuItem value={vizSubTypes.sectionMap}>Section Map</MenuItem>}\r\n                                        {!sectionMapMessage && <MenuItem value={vizSubTypes.contourSectionMap}>Contour Section Map</MenuItem>}\r\n                                        {!histogramMessage && <MenuItem value={vizSubTypes.histogram}>Histogram</MenuItem>}                      \r\n                                        {!timeSeriesMessage && <MenuItem value={vizSubTypes.timeSeries}>Time Series</MenuItem>}\r\n                                        {!depthProfileMessage && <MenuItem value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>}\r\n                                        {!sparseMapMessage && <MenuItem value={vizSubTypes.sparse}>Sparse Map</MenuItem>}\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Tooltip placement='right' title={visualizeButtonTooltip} className={classes.vizButtonTooltip}>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        className={classes.visualizeButton}\r\n                                        variant='contained'\r\n                                        onClick={() => this.props.onVisualize()}\r\n                                        disabled={Boolean(disableVisualizeMessage) || !fields || !selectedVizType}\r\n                                        fullWidth\r\n                                    >\r\n                                        Visualize\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </form>                    \r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography, Table, TableBody, TableCell, TableRow, TableHead, TableFooter } from '@material-ui/core';\r\n\r\nimport { tableStatsRequestSend, csvDownloadRequestSend } from '../Redux/actions/visualization';\r\n\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\nimport depthUtils from '../Utility/depthCounter';\r\n\r\nconst styles = (theme) => ({\r\n    tableFooter: {\r\n        fontSize: '11px',\r\n        margin: '5px 0px 0px 10px'\r\n    },\r\n\r\n    table: {\r\n        marginTop: '9px'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    datasets: state.datasets,\r\n    catalog: state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    tableStatsRequestSend,\r\n    csvDownloadRequestSend\r\n}\r\n\r\nclass DownloadConfirmationDialog extends Component {\r\n\r\n    componentDidUpdate = () => {\r\n        const { downloadTarget, datasets, catalog, tableStatsRequestSend } = this.props;\r\n        if(downloadTarget && datasets && !datasets[downloadTarget.dataset].tableStats){\r\n            const firstMember = catalog.find(item => item.Dataset_Name === downloadTarget.dataset);\r\n            tableStatsRequestSend(firstMember.Table_Name, downloadTarget.dataset);\r\n        }\r\n    }\r\n\r\n    handleFullDatasetDownload = (tableName) => {\r\n        let query = `select%20*%20from%20${tableName}`;\r\n        const fileName = this.props.downloadTarget.variable || this.props.downloadTarget.dataset;\r\n        this.props.csvDownloadRequestSend(query, fileName);\r\n    }\r\n\r\n    handleSubsetDownload = (tableName, dt1, dt2, lat1, lat2, lon1, lon2, depth1, depth2) => {\r\n        let query = `select * from ${tableName} where time between '${dt1}' and '${dt2}' and ` +\r\n            `lat between ${lat1} and ${lat2} and ` +\r\n            `lon between ${lon1} and ${lon2}`\r\n        console.log(query);\r\n        const fileName = this.props.downloadTarget.variable || this.props.downloadTarget.dataset;\r\n        this.props.csvDownloadRequestSend(query, fileName);\r\n    }\r\n\r\n    render() {\r\n        const { classes, datasets, downloadTarget, lat1, lat2, lon1, lon2, dt1, dt2, depth1, depth2, catalog } = this.props;\r\n\r\n        if(!downloadTarget || ! datasets ||  !catalog) return '';\r\n        \r\n        const tableStats = datasets[downloadTarget.dataset].tableStats;\r\n\r\n        if(!tableStats) return '';\r\n\r\n        const sampleMember = catalog.find(item => item.Dataset_Name === downloadTarget.dataset);\r\n        const { Lat_Min, Lat_Max, Lon_Min, Lon_Max, Time_Min, Time_Max, Depth_Min, Depth_Max } = sampleMember;\r\n        const latMin = parseFloat(Lat_Min);\r\n        const latMax = parseFloat(Lat_Max);\r\n        const lonMin = parseFloat(Lon_Min);\r\n        const lonMax = parseFloat(Lon_Max);\r\n        const timeMin = Date.parse(Time_Min);\r\n        const timeMax = Date.parse(Time_Max);\r\n\r\n        const subsetLat1 = lat1 < latMin ? latMin :\r\n            lat1 > latMax ? latMax :\r\n            lat1;\r\n\r\n        const subsetLat2 = lat2 < latMin ? latMin :\r\n        lat2 > latMax ? latMax :\r\n        lat2;\r\n\r\n        const subsetLon1 = lon1 < lonMin ? lonMin :\r\n            lon1 > lonMax ? lonMax :\r\n            lon1;\r\n\r\n        const subsetLon2 = lon2 < lonMin ? lonMin :\r\n            lon2 > lonMax ? lonMax :\r\n            lon2;\r\n\r\n        const subsetTime1 = dt1 < timeMin ? timeMin :\r\n            dt1 > timeMax ? timeMax :\r\n            dt1;\r\n\r\n        const subsetTime2 = dt2 < timeMin ? timeMin :\r\n            dt2 > timeMax ? timeMax:\r\n            dt2;\r\n\r\n        if(Depth_Max){\r\n            var depthMin = parseFloat(Depth_Min);\r\n            var depthMax = parseFloat(Depth_Max);\r\n\r\n            var subsetDepth1 = depth1 < depthMin ? depthMin : \r\n                depth1 > depthMax ? depthMax : \r\n                depth1;\r\n\r\n            var subsetDepth2 = depth2 < depthMin ? depthMin : \r\n                depth2 > depthMax ? depthMax : \r\n                depth2;\r\n        }        \r\n\r\n        const tableName = sampleMember.Table_Name;\r\n        \r\n        const totalRows = tableStats.lat.count;\r\n        const variableColumns = datasets[downloadTarget.dataset].Variables && datasets[downloadTarget.dataset].Variables.split(',').length;\r\n        const depthColumns = tableStats.depth ? 1 : 0;\r\n        const fixedColumns = 3;\r\n\r\n        const totalColumns = variableColumns + depthColumns + fixedColumns;\r\n\r\n        const totalDataPoints = totalRows * totalColumns;\r\n        const fullDataAvailable = totalDataPoints < 40000000;\r\n\r\n        var dateRatio;\r\n\r\n        if(sampleMember.Temporal_Resolution === temporalResolutions.monthlyClimatology){\r\n            const subsetMonths = new Date(subsetTime2).getMonth() - new Date(subsetTime1).getMonth();\r\n            dateRatio = (subsetMonths + 1) / 12;\r\n        } else {\r\n            var totalDays = (timeMax - timeMin) / 86400000 || 1;\r\n            var subsetDays = (subsetTime2 - subsetTime1) / 86400000 || 1;\r\n            dateRatio = totalDays > subsetDays ? subsetDays / totalDays : 1;\r\n        }\r\n\r\n        const totalLatSize = (latMax - latMin) || 1;\r\n        const subsetLatSize = (subsetLat2 - subsetLat1) || 1;\r\n        const latRatio = totalLatSize > subsetLatSize ? subsetLatSize / totalLatSize : 1;\r\n\r\n        const totalLonSize = (lonMax - lonMin) || 1;\r\n        const subsetLonSize = subsetLon2 > subsetLon1 ? (subsetLon2 - subsetLon1) || 1 : (subsetLon2 + 360 - subsetLon1) || 1;\r\n        const lonRatio = totalLonSize > subsetLonSize ? subsetLonSize / totalLonSize : 1;\r\n\r\n        var depthRatio = 1;\r\n\r\n        if(sampleMember.Depth_Max) {\r\n            console.log('Found Depth_Max');\r\n            if(depthUtils.piscesTable.has(sampleMember.Table_Name)){\r\n                console.log('Found Pisces')\r\n                let depthCount = depthUtils.count({data: sampleMember}, subsetDepth1, subsetDepth2);\r\n                depthRatio = depthCount / depthUtils.piscesDepths.length || 1;\r\n            } else if (depthUtils.darwinTable.has(sampleMember.Table_Name)){\r\n                console.log('Found darwin');\r\n                let depthCount = depthUtils.count({data: sampleMember}, subsetDepth1, subsetDepth2);\r\n                depthRatio = depthCount / depthUtils.darwinDepths.length || 1;\r\n            } else {\r\n                var totalDepthSize = depthMax - depthMin || 1;\r\n                var subsetDepthSize = subsetDepth2 - subsetDepth1 || 1;\r\n                depthRatio = subsetDepthSize > totalDepthSize ? 1 : subsetDepthSize / totalDepthSize;\r\n            }\r\n        }\r\n\r\n        // console.log(depthRatio);\r\n\r\n        const subsetDataPoints = Math.floor(totalDataPoints * dateRatio * latRatio * lonRatio * depthRatio);\r\n\r\n        const subsetAvailable = subsetDataPoints <= 20000000;\r\n\r\n        const timeString1 = new Date(subsetTime1).toISOString().slice(0,10);\r\n        const timeString2 = new Date(subsetTime2).toISOString().slice(0,10);\r\n        const timeStringMin = sampleMember.Temporal_Resolution === temporalResolutions.monthlyClimatology ? \r\n            'Monthly' : new Date(timeMin).toISOString().slice(0,10);\r\n        const timeStringMax = sampleMember.Temporal_Resolution === temporalResolutions.monthlyClimatology ? \r\n            'Monthly' : new Date(timeMax).toISOString().slice(0,10);\r\n\r\n        console.log('Total data points: ', totalDataPoints);\r\n        console.log('Total rows: ', totalRows);\r\n        console.log('Total columns: ', totalColumns)\r\n        console.log('Subset data points: ', subsetDataPoints);\r\n        console.log('Date Ratio: ', dateRatio);\r\n        console.log('Lat Ratio: ', latRatio);\r\n        console.log('Lon ratio: ', lonRatio);\r\n        console.log('Depth Ratio: ', depthRatio)\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <Dialog open={Boolean(downloadTarget)} onClose={() => this.props.handleSetDownloadTarget(null)} maxWidth={false}>\r\n                    <DialogTitle>Downloading {downloadTarget.variable && `${downloadTarget.variable} from `} {downloadTarget.dataset}</DialogTitle>\r\n                    \r\n                    <DialogContent>\r\n                        {fullDataAvailable ? \r\n                            `The full dataset is available for download.` :\r\n                            `The full dataset is too large for download.`\r\n                        }\r\n                    </DialogContent>\r\n                    \r\n                    <DialogContent>\r\n                        <Typography>\r\n                            The described subset contains approximately {subsetDataPoints} data points:\r\n                            {!subsetAvailable && 'This is over the limit of 20,000,000 data points. Please reduce lat, lon, time, or depth range to enable download.'}\r\n                        </Typography>\r\n\r\n                        <Table size='small'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Parameter</TableCell>\r\n                                    <TableCell>Subset Start</TableCell>\r\n                                    <TableCell>Subset End</TableCell>\r\n                                    <TableCell>Dataset Min</TableCell>\r\n                                    <TableCell>Dataset Max</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell>Time</TableCell>\r\n                                    <TableCell>{timeString1}</TableCell>\r\n                                    <TableCell>{timeString2}</TableCell>\r\n                                    <TableCell>{timeStringMin}</TableCell>\r\n                                    <TableCell>{timeStringMax}</TableCell>\r\n                                </TableRow>\r\n\r\n                                <TableRow>\r\n                                    <TableCell>Latitude[{'\\xb0'}]</TableCell>\r\n                                    <TableCell>{subsetLat1}</TableCell>\r\n                                    <TableCell>{subsetLat2}</TableCell>\r\n                                    <TableCell>{latMin}</TableCell>\r\n                                    <TableCell>{latMax}</TableCell>\r\n                                </TableRow>\r\n\r\n                                <TableRow>\r\n                                    <TableCell>Longitude[{'\\xb0'}]</TableCell>\r\n                                    <TableCell>{subsetLon1}</TableCell>\r\n                                    <TableCell>{subsetLon2}</TableCell>\r\n                                    <TableCell>{lonMin}</TableCell>\r\n                                    <TableCell>{lonMax}</TableCell>\r\n                                </TableRow>\r\n\r\n                                <TableRow>\r\n                                    <TableCell>Depth[m]</TableCell>\r\n                                    <TableCell>{isNaN(subsetDepth1) ? 'NA' : subsetDepth1}</TableCell>\r\n                                    <TableCell>{isNaN(subsetDepth2) ? 'NA' : subsetDepth2}</TableCell>\r\n                                    <TableCell>{isNaN(depthMin) ? 'NA' : depthMin}</TableCell>\r\n                                    <TableCell>{isNaN(depthMax) ? 'NA' : depthMax}</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                                \r\n                        </Table>\r\n\r\n                        <Typography className={classes.tableFooter}>\r\n                            *Subset start and end values may automatically adjust to fit dataset boundaries.\r\n                        </Typography>\r\n\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={() => this.props.handleSetDownloadTarget(null)}>\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        {subsetAvailable &&\r\n                            <Button onClick={() => this.handleSubsetDownload(tableName, timeString1, timeString2, subsetLat1, subsetLat2, subsetLon1, subsetLon2, subsetDepth1, subsetDepth2)}>\r\n                                Download Subset\r\n                            </Button>                            \r\n                        }\r\n\r\n                        {fullDataAvailable && \r\n                            <Button onClick={() => this.handleFullDatasetDownload(tableName)}>\r\n                                Download Full Dataset\r\n                            </Button>\r\n                        }\r\n                    </DialogActions>\r\n                </Dialog> \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DownloadConfirmationDialog));","export default (infoObject) => {\r\n\r\n    let lonRange = infoObject.lonMax - infoObject.lonMin;\r\n\r\n    let sectionSize;\r\n    if(lonRange < 2){\r\n        sectionSize = (lonRange / 6).toFixed(2);\r\n    } else {\r\n        sectionSize = Math.floor(lonRange / 6);\r\n    }\r\n\r\n    let tickvals = Array.from(Array(5), (e, i) => Math.ceil(infoObject.lonMin + ((i + 1) * sectionSize)));\r\n    let ticktext = tickvals.map(e => e > 180 ? e - 360 : e);\r\n\r\n    return {\r\n        tickmode: 'array',\r\n        tickvals,\r\n        ticktext\r\n    }\r\n}","import months from '../Enums/months';\r\n\r\nexport default (dateString, hasHour, isMonthly) => isMonthly ? months[parseInt(dateString)] : hasHour ? dateString.slice(0,10) + ' ' + dateString.slice(11,16): dateString.slice(0,10);","import colors from '../Enums/colors';\r\n\r\nexport default {\r\n    layout: {\r\n        font: {color: '#ffffff'},\r\n        paper_bgcolor: colors.backgroundGray,\r\n        // plot_bgcolor: 'transparent'\r\n    },\r\n\r\n    config: {\r\n        displaylogo: false\r\n    },\r\n\r\n    annotations: (distributor, height) => (\r\n        [\r\n            {\r\n                text: `Source: ${distributor.length < 30 ? \r\n                    distributor : \r\n                    distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                font: {\r\n                    color: 'white',\r\n                    size: 10\r\n                },\r\n                xref: 'paper',\r\n                yref: 'paper',\r\n                yshift: height ? 0 - height + 160 : -290,\r\n                showarrow: false,\r\n            }\r\n        ]\r\n    )\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DateRange, Waves, CloudDownload, Palette, SwapVert, Gamepad, LineWeight, Rotate90DegreesCcw, Info } from '@material-ui/icons';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { ButtonGroup } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    popover: {\r\n        width: '470px',\r\n        height: '120px',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5)\r\n    },\r\n\r\n    iconButton: {\r\n        boxShadow: '0px 1px 1px 1px #242424',\r\n    },\r\n\r\n    colorForm: {\r\n        width: '100%'\r\n    },\r\n\r\n    lastIcon: {\r\n        borderTopRightRadius: '10%',\r\n        borderBottomRightRadius: '10%'\r\n    },\r\n\r\n    buttonGroup: {\r\n        display: 'block',\r\n        margin: '0px auto 8px auto',\r\n        maxWidth: '700px'\r\n    },\r\n\r\n    depressed: {\r\n        boxShadow: 'inset 1px 1px 5px #262626'\r\n    },\r\n\r\n    colorscaleMenu: {\r\n        maxHeight: '400px'\r\n    },\r\n})\r\n\r\nconst colorscaleOptions = [\r\n    'Default',\r\n    'Greys', \r\n    'YlGnBu', \r\n    'Greens', \r\n    'YlOrRd',\r\n    'Bluered',\r\n    'RdBu',\r\n    'Reds',\r\n    'Blues',\r\n    'Picnic',\r\n    'Rainbow',\r\n    'Portland',\r\n    'Jet',\r\n    'Hot',\r\n    'Blackbody',\r\n    'Earth',\r\n    'Electric',\r\n    'Viridis',\r\n    'Cividis'];\r\n\r\nfunction usePreviousSize(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction usePreviousColor(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction usePreviousOpacity(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nconst ChartControlPanel = (props) => {\r\n\r\n    const { \r\n        classes, \r\n        onToggleSplitByDate,\r\n        splitByDate,\r\n        onToggleSplitByDepth,\r\n        splitByDepth,\r\n        onToggleSplitBySpace,\r\n        splitBySpace,\r\n        switchOrientation,\r\n        orientation, \r\n        downloadCsv, \r\n        handleZValueConfirm,\r\n        zValues,\r\n        markerOptions,\r\n        handleMarkerOptionsConfirm,\r\n    } = props;\r\n\r\n    const [paletteAnchorElement, setPaletteAnchorElement] = useState(null);\r\n\r\n    let handleOpenPalette = (event) => {\r\n        setPaletteAnchorElement(event.currentTarget);\r\n    }\r\n\r\n    // Local version, not from props\r\n    let handlePaletteChoice = (option) => {\r\n        setPaletteAnchorElement(null);\r\n        props.handlePaletteChoice(option);\r\n    }\r\n\r\n    const [zScalePopoverAnchorElement, setZScalePopoverAnchorElement] = React.useState(null);\r\n    const [localZMin, setLocalZMin] = React.useState(zValues && zValues[0]);\r\n    const [localZMax, setLocalZMax] = React.useState(zValues && zValues[1]);\r\n\r\n    const zScalePopoverOpen = Boolean(zScalePopoverAnchorElement);\r\n    const zScalePopoverID = zScalePopoverOpen ? 'zscale-popover' : undefined;\r\n\r\n    const handleZScalePopoverClose = () => {\r\n        setZScalePopoverAnchorElement(null);\r\n    };\r\n    \r\n    const checkLocalZMin = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMin)) return 'Invalid value';\r\n    }\r\n\r\n    const checkLocalZMax = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMax)) return 'Invalid value';\r\n    }\r\n\r\n    const zScaleValidations = [\r\n        checkLocalZMin(),\r\n        checkLocalZMax()\r\n    ];\r\n\r\n    const [\r\n        zMinMessage,\r\n        zMaxMessage\r\n    ] = zScaleValidations;\r\n\r\n    const handleLocalZConfirm = () => {\r\n        handleZValueConfirm([localZMin, localZMax]);\r\n        handleZScalePopoverClose();\r\n    }\r\n\r\n    const [markerOptionsAnchorElement, setMarkerOptionsAnchorElement] = React.useState(null);\r\n    const [localMarkerOpacity, setLocalMarkerOpacity] = React.useState(markerOptions && markerOptions.opacity);\r\n    const [localMarkerColor, setLocalMarkerColor] = React.useState(markerOptions && markerOptions.color);\r\n    const [localMarkerSize, setLocalMarkerSize] = React.useState(markerOptions && markerOptions.size);\r\n\r\n    if(markerOptions){\r\n        var previousOpacity = usePreviousOpacity(markerOptions.opacity);\r\n        var previousColor = usePreviousColor(markerOptions.color);\r\n        var previousSize = usePreviousSize(markerOptions.size);\r\n        \r\n        useEffect(() => {\r\n            if(markerOptions.opacity !== previousOpacity){\r\n                setLocalMarkerOpacity(markerOptions.opacity);\r\n            }\r\n    \r\n            if(markerOptions.color !== previousColor){\r\n                setLocalMarkerColor(markerOptions.color);\r\n            }\r\n    \r\n            if(markerOptions.size !== previousSize){\r\n                setLocalMarkerSize(markerOptions.size);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const markerPopoverOpen = Boolean(markerOptionsAnchorElement);\r\n    const markerPopoverID = markerPopoverOpen ? 'marker-popover' : undefined;\r\n\r\n    const handleMarkerOptionsClose = () => {\r\n        setMarkerOptionsAnchorElement(null);\r\n    }\r\n\r\n    const checkLocalMarkerOpacity = () => {\r\n        if(localMarkerOpacity < 0.1 || localMarkerOpacity > 1 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerOpacity)){\r\n            return 'Opacity should be 0.1 to 1'\r\n        }\r\n    }\r\n\r\n    const checkLocalMarkerSize = () => {\r\n        if(localMarkerSize < 1 || localMarkerSize > 18 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerSize)){\r\n            return 'Size should be 1 to 18'\r\n        }\r\n    }\r\n\r\n    const markerOptionsValidations = [\r\n        checkLocalMarkerOpacity(),\r\n        checkLocalMarkerSize()\r\n    ]\r\n\r\n    const [\r\n        localMarkerOpacityMessage,\r\n        localMarkerSizeMessage\r\n    ] = markerOptionsValidations;\r\n\r\n    const handleLocalMarkerOptionsConfirm = () => {\r\n        handleMarkerOptionsConfirm({opacity: localMarkerOpacity, color: localMarkerColor, size: localMarkerSize});\r\n        handleMarkerOptionsClose();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup className={classes.buttonGroup}>\r\n\r\n                {Boolean(onToggleSplitByDate) && \r\n                    <Tooltip placement='top' title='Split By Date'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDate && classes.depressed}`} \r\n                            onClick={onToggleSplitByDate}\r\n                        >\r\n                            <DateRange/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n{/* \r\n                {Boolean(onToggleSplitByDepth) && \r\n                    <Tooltip placement='top' title='Split By Depth'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDepth && classes.depressed}`} \r\n                            onClick={onToggleSplitByDepth}\r\n                        >\r\n                            <Waves/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                } */}\r\n\r\n                {Boolean(onToggleSplitBySpace) && \r\n                    <Tooltip placement='top' title={orientation === 'zonal' ? 'Split by Latitude' : 'Split by Longitude'}>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitBySpace && classes.depressed}`} \r\n                            onClick={onToggleSplitBySpace}\r\n                        >\r\n                            <LineWeight/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {/* {Boolean(switchOrientation) && \r\n                    <Tooltip placement='top' title={orientation === 'zonal' ? 'Switch to Meridional' : 'Switch to Zonal'}>\r\n                        <IconButton color='inherit' className={classes.iconButton} \r\n                            onClick={switchOrientation}\r\n                        >\r\n                            <Rotate90DegreesCcw/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                } */}\r\n\r\n                <Tooltip placement='top' title='Download CSV'>\r\n                    <IconButton color='inherit' onClick={downloadCsv} className={classes.iconButton} >\r\n                        <CloudDownload/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n                {Boolean(handleZValueConfirm) &&\r\n                    <Tooltip title='Change Colorscale Range' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setZScalePopoverAnchorElement(event.currentTarget)} className={classes.iconButton}>\r\n                            <SwapVert/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {Boolean(props.handlePaletteChoice) &&\r\n                    <Tooltip title='Change Palette' placement='top'>\r\n                        <IconButton disabled={!Boolean(props.handlePaletteChoice)} color='inherit' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                            <Palette/>\r\n                        </IconButton>                \r\n                    </Tooltip>      \r\n                }\r\n\r\n                {Boolean(props.handleMarkerOptionsConfirm) &&\r\n                    <Tooltip title='Marker Options' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setMarkerOptionsAnchorElement(event.currentTarget)} className={`${classes.iconButton} ${classes.lastIcon}`} >\r\n                            <Gamepad/>\r\n                        </IconButton>                \r\n                    </Tooltip>\r\n                }\r\n\r\n                {/* <Tooltip title='Plot Info' placement='top'>\r\n                    <IconButton color='inherit' onClick={() => console.log('Info!')} className={`${classes.iconButton}`} >\r\n                        <Info/>\r\n                    </IconButton>                \r\n                </Tooltip> */}\r\n                \r\n            </ButtonGroup>\r\n            \r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={paletteAnchorElement}\r\n                keepMounted\r\n                open={Boolean(paletteAnchorElement)}\r\n                onClose={() => setPaletteAnchorElement(null)}\r\n                className={classes.colorscaleMenu}\r\n            >\r\n                {colorscaleOptions.map((option, index) => (\r\n                    <MenuItem onClick={() => handlePaletteChoice(option === 'Default' ? 'heatmap' : option)} key={index}>{option}</MenuItem>\r\n                ))}\r\n                \r\n            </Menu>\r\n            \r\n            {/* zscale popover */}\r\n            <Popover\r\n                id={zScalePopoverID}\r\n                open={zScalePopoverOpen}\r\n                anchorEl={zScalePopoverAnchorElement}\r\n                onClose={handleZScalePopoverClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMinMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-min-input' >Min</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-min-input'\r\n                                    value={localZMin}\r\n                                    onChange={(event) => setLocalZMin(event.target.value)}\r\n                                    aria-describedby='local-zmin-error'\r\n                                    labelWidth={36}\r\n                                    name='local-zmin'\r\n                                />\r\n                                <FormHelperText id='local-zmin-error'>{zMinMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-max-input' >Max</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-max-input'\r\n                                    value={localZMax}\r\n                                    onChange={(event) => setLocalZMax(event.target.value)}\r\n                                    aria-describedby=\"local-zmax-error\"\r\n                                    labelWidth={36}\r\n                                    name='local-zmax'\r\n                                />\r\n                                <FormHelperText id=\"local-zmax-error\">{zMaxMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={7}>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleZScalePopoverClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalZConfirm}\r\n                                disabled={Boolean(zMinMessage || zMaxMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n                \r\n            {/* Marker popover */}\r\n            <Popover\r\n                id={markerPopoverID}\r\n                open={markerPopoverOpen}\r\n                anchorEl={markerOptionsAnchorElement}\r\n                onClose={handleMarkerOptionsClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(localMarkerOpacityMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-opacity' >Opacity</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='local-marker-opacity'\r\n                                    value={localMarkerOpacity}\r\n                                    onChange={(event) => setLocalMarkerOpacity(event.target.value)}\r\n                                    aria-describedby='local-marker-opacity'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-opacity'\r\n                                />\r\n                            <FormHelperText id=\"local-marker-opacity-error\">{localMarkerOpacityMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                // error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-size' >Size</InputLabel>\r\n                                <OutlinedInput\r\n                                    error={Boolean(localMarkerSizeMessage)}\r\n                                    id='local-marker-size'\r\n                                    value={localMarkerSize}\r\n                                    onChange={(event) => setLocalMarkerSize(event.target.value)}\r\n                                    aria-describedby=\"local-marker-size\"\r\n                                    labelWidth={36}\r\n                                    name='local-marker-size'\r\n                                />\r\n                                <FormHelperText id=\"local-marker-size-error\">{localMarkerSizeMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                className={classes.colorForm}\r\n                            >\r\n                                <InputLabel htmlFor='z-min-input'>Color</InputLabel>\r\n                                <OutlinedInput\r\n                                    type='color'\r\n                                    id='marker-color'\r\n                                    value={localMarkerColor}\r\n                                    onChange={(event) => setLocalMarkerColor(event.target.value)}\r\n                                    aria-describedby='local-marker-color'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-color'\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={1}></Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleMarkerOptionsClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalMarkerOptionsConfirm}\r\n                                disabled={Boolean(localMarkerOpacityMessage || localMarkerSizeMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ChartControlPanel);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport handleDateString from '../../Utility/handleChartDatestring';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\nimport subTypes from '../../Enums/visualizationSubTypes';\r\n\r\nconst determineHeight = (infoObject) => {\r\n    const latRange = infoObject.latMax - infoObject.latMin;\r\n    const lonRange = infoObject.lonMax - infoObject.lonMin;\r\n    return (((latRange / lonRange) * 800) * .83) + 60;\r\n}\r\n// equal 608 wide, 670 high\r\n// height half 608 / 267\r\n\r\nconst handleContourMap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n    \r\n    // Handle axis labels when crossing 180th meridian\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    // let height = determineHeight(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        var hovertext = subset.map((value, i) => {\r\n            let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n            if(isNaN(value)) return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n                `<br>` +\r\n                `Lon: ${infoObject.lons[i] > 180 ? format('.2f')(infoObject.lons[i] - 360) : format('.2f')(infoObject.lons[i])}\\xb0`\r\n\r\n            return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n            `<br>` +\r\n            `Lon: ${infoObject.lons[i] > 180 ? format('.2f')(infoObject.lons[i] - 360) : format('.2f')(infoObject.lons[i])}\\xb0` + \r\n            '<br>' +\r\n            `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n        });\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n\r\n                    hoverinfo: 'text',\r\n                    hovertext,\r\n                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'contour',\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: infoObject.zMin > 1 && infoObject.zMin < 1000 ? '.2f' : '.2e'\r\n                    },\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    }\r\n                }\r\n            ]}\r\n\r\n            config={{...chartBase.config}}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: {\r\n                    text: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                },\r\n                xaxis: {title: 'Longitude', color: '#ffffff', ...xTicks},\r\n                yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                // annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHeatmap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    // let height = determineHeight(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    zsmooth: subset.length < 20000 ? 'fast' : 'false',\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    colorscale: palette,\r\n                    autocolorscale: false,\r\n\r\n                    // hoverinfo: 'text',\r\n                    // hovertext,\r\n\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n                    \r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            config={{...chartBase.config}}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: {\r\n                    text: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                    font: {\r\n                        size: 16\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: 'Longitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Latitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n                // annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SpaceTimeChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitByDepth, setSplitByDepth] = useState(true);\r\n    const [subTypeState, setSubTypeState] = useState(subType);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const subSets = data.generatePlotData(subTypeState, splitByDate, splitByDepth);\r\n    var plots;\r\n\r\n    switch(subTypeState){\r\n        case vizSubTypes.contourMap:\r\n            plots = handleContourMap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.heatmap:\r\n            plots = handleHeatmap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.histogram:\r\n            plots = handleHistogram(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        default:\r\n            plots = '';\r\n            break;        \r\n\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDepth = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDepth(!splitByDepth);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={subTypeState !== subTypes.histogram && handlePaletteChoice}\r\n                onToggleSplitByDepth={depths.size===1 ? null : onToggleSplitByDepth}\r\n                onToggleSplitByDate={dates.size===1 ? null : onToggleSplitByDate}\r\n                splitByDepth={splitByDepth}\r\n                splitByDate={splitByDate}\r\n                handleZValueConfirm={subTypeState !== subTypes.histogram && handleZValueConfirm}\r\n                zValues={subTypeState !== subTypes.histogram && zValues}\r\n                extent={subTypeState !== subTypes.histogram && extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plots}     \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SpaceTimeChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst TimeSeriesChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, dates, parameters, metadata } = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#ff1493', size: 12})\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    let hovertext = variableValues.map((value, i) => {\r\n        return `Time: ${dates[i].slice(0,10)}<br>${parameters.fields}: ${format('.2e')(value)} \\xb1 ${format('.2e')(stds[i])} [${metadata.Unit}]`;\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                        mode: 'lines+markers',\r\n                    x: dates,\r\n                    y: variableValues,\r\n                    error_y: {\r\n                        type: 'data',\r\n                        array: stds,\r\n                        opacity: 0.3,\r\n                        color: '#f2f2f2',\r\n                        visible: true\r\n                    },\r\n                    name: parameters.fields,\r\n                    type: 'scatter',\r\n                    line: {color: markerOptions.color},\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    },\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                  },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    plot_bgcolor: 'transparent',\r\n                    width: 800,\r\n                    height: 570,\r\n                    title: `${parameters.fields} [${metadata.Unit}]  ${parameters.dt1} to ${parameters.dt2}`,\r\n                  xaxis: {\r\n                      title: 'Time',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: parameters.fields,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(TimeSeriesChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst DepthProfileChart = (props) => {\r\n\r\n    const { classes, setLoadingMessage } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, depths, parameters, metadata } = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#ff1493', size: 12})\r\n\r\n    let hovertext = variableValues.map((value, i) => {\r\n        return `Depth: ${format('.2f')(depths[i])} [m] <br>${parameters.fields}: ${format('.2e')(value)} \\xb1 ${format('.2e')(stds[i])} [${metadata.Unit}]`;\r\n    })\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }    \r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                    {   \r\n                        mode: 'lines+markers',\r\n                        y: depths,\r\n                        x: variableValues,\r\n                        error_x: {\r\n                            type: 'data',\r\n                            array: stds,\r\n                            opacity: 0.3,\r\n                            color: '#f2f2f2',\r\n                            visible: true\r\n                        },\r\n                        name: parameters.fields,\r\n                        type: 'scatter',\r\n\r\n                        marker: {\r\n                            line: {color: markerOptions.color},\r\n                            opacity: markerOptions.opacity,\r\n                            size: markerOptions.size,\r\n                            color: markerOptions.color\r\n                        },\r\n\r\n                        hoverinfo: 'text',\r\n                        hovertext\r\n                    },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    plot_bgcolor: 'transparent',\r\n                    width: 800,\r\n                    height: 570,\r\n                    title: `${parameters.fields} [${metadata.Unit}]  ${parameters.depth1} to ${parameters.depth2} meters`,\r\n                  yaxis: {\r\n                      title: 'Depth[m]',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power',\r\n                      autorange:'reversed'\r\n                    },\r\n                  xaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(DepthProfileChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport visualizationSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\n\r\nconst handleSectionMap = (subsets, infoObject, splitByDate, splitBySpace, orientation, palette, zMin, zMax) => {\r\n\r\n    const dates = Array.from(infoObject.dates);\r\n    const depths = Array.from(infoObject.depths);\r\n    const lats = Array.from(infoObject.lats);\r\n    const lons = Array.from(infoObject.lons);\r\n\r\n    const distinctMeridiansOrParallelsForSplitting = \r\n        orientation === 'zonal' ?\r\n        lats : \r\n        lons;\r\n\r\n    const mergedOrSplitAxis = \r\n        orientation === 'zonal' ?\r\n        'Latitude' :\r\n        'Longitude';\r\n\r\n    const xAxis = orientation === 'zonal' ?\r\n        'Longitude' :\r\n        'Latitude';\r\n\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 && orientation === 'zonal' ? handleXTicks(infoObject) : {};\r\n\r\n\r\n    return subsets.map((subset, index) => {\r\n        let z = subset;\r\n        let x = [];\r\n        let y = [];\r\n\r\n        if(orientation === 'zonal'){\r\n            for(let i = 0; i < subset.length; i++){\r\n                x.push(lons[Math.floor(i / depths.length)])\r\n            }\r\n        } else {\r\n            for(let i = 0; i < subset.length; i++){\r\n                x.push(lats[Math.floor(i / depths.length)])\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < subset.length; i++){\r\n            y.push(depths[i % depths.length]);\r\n        }\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length < 2 ?\r\n            dates[0].slice(0,10) :\r\n            !splitByDate ? \r\n                'Merged Dates' : \r\n                splitBySpace ? \r\n                    dates[Math.floor(index/distinctMeridiansOrParallelsForSplitting.length)].slice(0, 10) : \r\n                    dates[index].slice(0,10);\r\n                \r\n        const spaceTitle = distinctMeridiansOrParallelsForSplitting.length <= 1 ? `${orientation === 'zonal' ? 'Lat' : 'Lon'} ${distinctMeridiansOrParallelsForSplitting[0]}\\xb0` : \r\n            !splitBySpace ? `Merged ${mergedOrSplitAxis}s` : \r\n            `${orientation === 'zonal' ? 'Lat' : 'Lon'} ${distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length]}\\xb0`;\r\n\r\n        let hovertext = z.map((value, i) => {\r\n            \r\n            if(orientation === 'zonal'){\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                if(isNaN(value)) return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                    `<br>` +\r\n                    `Lon: ${format('.2f')(x[i] > 180 ? x[i] - 360 : x[i])}\\xb0`\r\n    \r\n                return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                `<br>` +\r\n                `Lon: ${format('.2f')(x[i] > 180 ? x[i] - 360 : x[i])}\\xb0` + \r\n                '<br>' +\r\n                `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n            } else {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                if(isNaN(value)) return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                    `<br>` +\r\n                    `Lat: ${format('.2f')(x[i])}\\xb0`\r\n    \r\n                return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                `<br>` +\r\n                `Lat: ${format('.2f')(x[i])}\\xb0` + \r\n                '<br>' +\r\n                `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n            }\r\n        });\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    zsmooth: subset.length < 20000 ? 'best' : 'fast',\r\n                    x,\r\n                    y,\r\n                    z,\r\n                    name: infoObject.parameters.fields,\r\n                    type: infoObject.subType === visualizationSubTypes.contourSectionMap ? 'contour' : 'heatmap',\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: '.2e'\r\n                    },\r\n\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName} [${infoObject.metadata.Unit}] ${spaceTitle} ${date}`,\r\n                xaxis: {\r\n                    title: `${xAxis}[\\xB0]`, \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Depth[m]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    autorange: 'reversed'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />\r\n        )\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SectionMapChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { dates, extent, lats, lons } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitBySpace, setSplitBySpace] = useState(false);\r\n    const [orientation, setOrientation] = useState(data.orientation);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    var spaces = orientation === 'zonal' ? lats : lons;\r\n\r\n    const subsets = data.generatePlotData(orientation, splitByDate, splitBySpace);\r\n    var plots = handleSectionMap(subsets, data, splitByDate, splitBySpace, orientation, palette, zMin, zMax);\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitBySpace = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitBySpace(!splitBySpace);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const switchOrientation = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setOrientation(orientation === 'zonal' ? 'meridional' : 'zonal');\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n            <ChartControlPanel\r\n                orientation={orientation}\r\n                switchOrientation={switchOrientation}\r\n                onToggleSplitBySpace={spaces.size === 1 ? null : onToggleSplitBySpace}\r\n                splitBySpace={splitBySpace}\r\n                onToggleSplitByDate={dates.size === 1 ? null : onToggleSplitByDate}\r\n                splitByDate={splitByDate}\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                downloadCsv={downloadCsv}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SectionMapChart));","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst SparseScatter = (props) => {\r\n    const {\r\n        xValues,\r\n        yValues,\r\n        markerOptions,\r\n        infoObject,\r\n        xTitle,\r\n        yTitle,\r\n        type\r\n    } = props;\r\n\r\n    const { parameters, metadata, hasDepth, variableValues, times, lats, lons, depths } = infoObject;\r\n\r\n    const title = `${parameters.fields} [${metadata.Unit}]`;\r\n    \r\n    var hovertext;\r\n\r\n    switch(type){\r\n        case 'time':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                let time= times[i].slice(0,20);\r\n                time = time.replace('T', ' ');\r\n                return `Time: ${time}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'latitude':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Lat: ${lats[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'longitude':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Lon: ${lons[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'depth':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Depth: ${depths[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        default:\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                let time= times[i].slice(0,20);\r\n                time = time.replace('T', ' ');\r\n                return `Time: ${time}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n        }\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n    \r\n            data={[\r\n                {\r\n                    x: xValues,\r\n                    y: yValues,\r\n                    mode: 'markers',\r\n                    name: parameters.fields,\r\n                    type: variableValues.length > 1000 ? 'scattergl' : 'scatter',\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    },\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                },\r\n            ]}\r\n            config={{...chartBase.config}}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                plot_bgcolor: 'transparent',\r\n                width: 800,\r\n                height: 570,\r\n                title,\r\n                xaxis: {\r\n                    title: xTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: yTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    autorange: type === 'depth' ? 'reversed' : true\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)\r\n            }}            \r\n        />\r\n    )\r\n}\r\n\r\nexport default SparseScatter;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport SparseScatter from './SparseScatter';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst handleSparseMap = (infoObject, palette, zValues) => {\r\n\r\n    var hovertext = infoObject.variableValues.map((value, i) => {\r\n        let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n\r\n        return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n        `<br>` +\r\n        `Lon: ${format('.2f')(infoObject.lons[i])}\\xb0` + \r\n        '<br>' +\r\n        `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n    });\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zValues[0],\r\n                    zmax: zValues[1],\r\n                    lon: infoObject.lons,\r\n                    lat: infoObject.lats,\r\n                    z: infoObject.variableValues,\r\n                    zmin:'',\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    radius: 6,                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'densitymapbox',\r\n                    \r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    },\r\n                }\r\n            ]}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                mapbox: {\r\n                    style: \"white-bg\",\r\n                    layers: [\r\n                        {\r\n                            sourcetype: \"raster\",\r\n                            source: [\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"],\r\n                            below: \"traces\"\r\n                        }\r\n                    ],\r\n                    center: infoObject.center,\r\n                    zoom: infoObject.zoom\r\n                },\r\n\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n            }}\r\n            \r\n            config={{\r\n                ...chartBase.config,\r\n                mapboxAccessToken:\r\n                  \"pk.eyJ1IjoiZGVuaG9sdHoiLCJhIjoiY2p1ZW9obTNhMDVxZjQzcDRvMmdlcDN2aiJ9.HvLaX2bcradeE5T-lpTc8w\",\r\n                \r\n              }}\r\n        />)\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n\r\n    tabs: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n\r\n    tab: {\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        fontSize: '15px',\r\n        textTransform: 'none'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nfunction tabProps(index) {\r\n    return {\r\n      id: `sparse-tab-${index}`,\r\n      'aria-controls': `sparse-tab-${index}`,\r\n    };\r\n  }\r\n\r\nconst SparseTabPanel = (props) => {\r\n    const { children, selectedTab, index, controlPanelProps, } = props;\r\n    console.log('A tab panel re-rendered');\r\n    console.log(controlPanelProps)\r\n\r\n    return (\r\n        <div hidden={selectedTab !== index}>\r\n            <ChartControlPanel\r\n                // handlePaletteChoice={handlePaletteChoice}\r\n                // handleZValueConfirm={handleZValueConfirm}\r\n                // zValues={zValues}\r\n                // extent={data.extent}\r\n                // downloadCsv={downloadCsv}\r\n                {...controlPanelProps}\r\n            />\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst SparseMap = (props) => {\r\n\r\n    const { classes } = props;\r\n\r\n    const { data } = props.chart;\r\n\r\n    const [palette, setPalette] = useState('Heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [markerOptions, setMarkerOptions] = useState({opacity: .7, color:'#ff1493', size: 12});\r\n    const [tab, setTab] = useState(0);\r\n\r\n    const plot = handleSparseMap(data, palette, zValues)\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setTab(newValue)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    const forceResize = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 30);        \r\n    }\r\n\r\n    const controlPanelProps = {\r\n        map: {\r\n            palette,\r\n            handlePaletteChoice,\r\n            zValues,\r\n            handleZValueConfirm,\r\n            downloadCsv\r\n        },\r\n\r\n        scatter: {\r\n            downloadCsv,\r\n            markerOptions,\r\n            setMarkerOptions,\r\n            handleMarkerOptionsConfirm\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Tabs \r\n                value={tab} \r\n                onChange={handleTabChange} \r\n                aria-label=\"Sparse tabs\" \r\n                centered\r\n                indicatorColor='primary'\r\n                className={classes.tabs}\r\n            >\r\n                <Tab label=\"Map\" {...tabProps(0)} className={classes.tab} onClick={forceResize}/>\r\n                <Tab label=\"By Time\" {...tabProps(1)} className={classes.tab}/>\r\n                <Tab label=\"By Lat\" {...tabProps(2)} className={classes.tab}/>\r\n                <Tab label=\"By Lon\" {...tabProps(3)} className={classes.tab}/>\r\n                {data.hasDepth && <Tab label=\"By Depth\" {...tabProps(4)} className={classes.tab}/>}\r\n            </Tabs>\r\n            <SparseTabPanel selectedTab={tab} index={0} controlPanelProps={controlPanelProps.map}>\r\n                {plot}\r\n            </SparseTabPanel>\r\n            \r\n            <SparseTabPanel selectedTab={tab} index={1} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.times}\r\n                    yValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Time'\r\n                    yTitle={data.parameters.fields}\r\n                    type='time'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={2} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.lats}\r\n                    yValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Latitude'\r\n                    yTitle={data.parameters.fields}\r\n                    type='latitude'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={3} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.lons}\r\n                    yValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Longitude'\r\n                    yTitle={data.parameters.fields}\r\n                    type='longitude'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            {data.hasDepth &&\r\n                <SparseTabPanel selectedTab={tab} index={4} controlPanelProps={controlPanelProps.scatter}>\r\n                    <SparseScatter\r\n                        xValues={data.variableValues}\r\n                        yValues={data.depths}\r\n                        markerOptions={markerOptions}\r\n                        infoObject={data}\r\n                        xTitle={data.parameters.fields}\r\n                        yTitle='Depth'\r\n                        type='depth'\r\n                    />\r\n                </SparseTabPanel>            \r\n            }\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseMap));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport handleDateString from '../../Utility/handleChartDatestring';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SparseHistogram = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { metadata, parameters } = data;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: data.variableValues,\r\n                    name: data.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${parameters.fields} [${metadata.Unit}]`,\r\n                xaxis: {\r\n                    title: `${parameters.fields} [${metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseHistogram));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../Enums/colors';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nimport SpaceTimeChart from './ChartComponents/SpaceTimeChart';\r\nimport TimeSeriesChart from './ChartComponents/TimeSeriesChart';\r\nimport DepthProfileChart from './ChartComponents/DepthProfileChart';\r\nimport SectionMapChart from './ChartComponents/SectionMapChart';\r\nimport SparseMap from './ChartComponents/SparseMap';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\nimport SparseHistogram from './ChartComponents/SparseHistogram';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsContainer: {\r\n        margin: '300px 0 0 100px'\r\n    },\r\n\r\n    chartPaper: {\r\n      margin: '60px auto 0px auto',\r\n      width: '1000px',\r\n      paddingTop: '16px'\r\n  },\r\n\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n    }\r\n})\r\n\r\nconst SamplePlot = () => {\r\n  let x = [0,0,0,0,0,1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4];\r\n  let y = [0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,];\r\n  let z = [0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,1,2,3,4,5,6,7,8,9];\r\n  // z = z.map(() => Math.floor(Math.random() * 100));\r\n  return (\r\n\r\n      <Plot\r\n      style= {{\r\n          position: 'relative',\r\n          display:'inline-block',\r\n          marginTop: '50px'\r\n      }}\r\n      \r\n      data={[\r\n          {   \r\n              x,\r\n              y,\r\n              z,\r\n              connectgaps: false,\r\n              zsmooth: 'best',\r\n              \r\n              name: 'Test',\r\n              type: 'heatmap',\r\n              contours: {\r\n                  showlabels: true,\r\n                  labelfont: {\r\n                      family: 'Raleway',\r\n                      size: 12,\r\n                      color: 'white',\r\n                  },\r\n                  labelformat: '.2e'\r\n              },\r\n              colorbar: {\r\n                  title: {\r\n                      text: `test`\r\n                  },\r\n                  exponentformat: 'power'\r\n              }\r\n          }\r\n      ]}\r\n      \r\n      layout= {{\r\n          font: {color: '#ffffff'},\r\n          margin: {\r\n            t: 50\r\n          },\r\n          title: {\r\n              text: `A sample chart title`,\r\n              // yanchor: 'bottom',\r\n              // y: .9,\r\n              // yref: 'container',\r\n              font: {\r\n                size: 18\r\n              }\r\n          },\r\n          paper_bgcolor: colors.backgroundGray,\r\n          xaxis: {title: 'Longitude', color: '#ffffff'},\r\n          yaxis: {title: 'Latitude', color: '#ffffff'},\r\n          annotations: [\r\n              {\r\n                  text: `test`,\r\n                      font: {\r\n                          color: 'white',\r\n                          size: 10\r\n                      },\r\n                      xref: 'paper',\r\n                      yref: 'paper',\r\n                      yshift: -202,\r\n                      showarrow: false,\r\n                  }\r\n              ]\r\n              \r\n          }}   \r\n          />\r\n          )\r\n      }\r\n      \r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n        const { classes, charts } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n              {/* <SamplePlot/>  */}\r\n                {charts.map((chart, index) => {\r\n                    switch(chart.data.parameters.spName){\r\n\r\n                        case storedProcedures.spaceTime:\r\n                          if(chart.subType === vizSubTypes.sparse) {\r\n                            return (\r\n                              <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                                <SparseMap chart={chart}/>\r\n                              </Paper>\r\n                            )\r\n                          } else if(chart.data.metadata.Spatial_Resolution === spatialResolutions.irregular) {\r\n                            return (\r\n                              <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                                <SparseHistogram chart={chart}/>\r\n                              </Paper>\r\n                            )\r\n                          }\r\n                          else return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <SpaceTimeChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.timeSeries:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <TimeSeriesChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.depthProfile:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <DepthProfileChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.sectionMap:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <SectionMapChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n                        \r\n                        default:\r\n                          return '';\r\n                  }\r\n                })}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { cruiseListRequestSend, cruiseTrajectoryRequestSend, cruiseTrajectoryClear } from '../Redux/actions/visualization';\r\n\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    cruiseList: state.cruiseList,\r\n    getCruiseListState: state.getCruiseListState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseListRequestSend,\r\n    cruiseTrajectoryRequestSend,\r\n    cruiseTrajectoryClear\r\n}\r\n\r\nconst esriFonts = '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif';\r\nconst esriFontColor = 'white';\r\nconst esriBackgroundColor = '#424242';\r\nconst esriHoverFontColor = '#242424';\r\nconst esriHoverBackgroundColor = '#949393';\r\n\r\nconst styles = theme => ({\r\n    outerDiv: {\r\n        padding:'12px',\r\n        maxWidth: '260px',\r\n        backgroundColor: 'transparent',\r\n        color: esriFontColor,\r\n        borderRadius: '4px',\r\n        boxShadow: '2px',\r\n        position: 'relative',\r\n        backdropFilter: 'blur(2px)'\r\n    },\r\n\r\n    cruiseSelect: {\r\n        width: '260px',\r\n        borderRadius: '4px',\r\n    },\r\n\r\n    cruiseInfo: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        margin: '12px auto 0 auto',\r\n    },\r\n\r\n    cruiseInfoCell: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        borderStyle: 'none',\r\n    },\r\n\r\n    // blurEffectDiv: {\r\n    //     filter: 'blur(5px)',\r\n    //     position: 'absolute',\r\n    //     top: '0px',\r\n    //     left: '0px',\r\n    //     right: '0px',\r\n    //     bottom: '0px',\r\n    //     zIndex: 99999999\r\n    // }\r\n})\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n      <components.Option \r\n        {...props} \r\n        innerProps={{\r\n            ...props.innerProps, \r\n            // Prevent focus / scroll events when mousing over options\r\n            onMouseMove: (e) => e.preventDefault(), \r\n            onMouseOver: (e) => e.preventDefault()\r\n        }}>\r\n    </components.Option>\r\n    )\r\n}\r\n\r\nconst cruiseSort =  (a,b) => a.Name < b.Name ? -1 : 1;\r\n\r\nclass CruiseSelector extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Nickname');\r\n        search.addIndex('Name');\r\n        search.addIndex('Chief_Name');\r\n        search.addIndex('Keywords');\r\n        try{\r\n            if(props.cruiseList && props.cruiseList.length) search.addDocuments(props.cruiseList);\r\n        } catch(e) {\r\n            console.log(e);\r\n            console.log(props.cruiseList);\r\n        }\r\n\r\n        this.state = {\r\n            search,\r\n            searchField: '',\r\n            selectedCruise: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.cruiseList || !this.props.cruiseList.length) this.props.cruiseListRequestSend();\r\n    }\r\n\r\n    getSelectOptionsFromCruiseList = (list) => {\r\n        return list.map(item => ({\r\n            value: item.Name,\r\n            label: item.Name,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    handleCruiseSelect = (selection) => {\r\n        if(selection && selection.data){\r\n            const id = selection.data.ID;\r\n            this.props.cruiseTrajectoryRequestSend(id);\r\n        } else {this.props.cruiseTrajectoryClear()}\r\n\r\n        this.setState({...this.state, selectedCruise: selection});\r\n        this.props.updateParametersFromCruiseBoundary(selection);\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.cruiseList && prevProps.cruiseList.length) && (this.props.cruiseList && this.props.cruiseList.length)){\r\n            this.state.search.addDocuments(this.props.cruiseList);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    render(){\r\n\r\n        const { search, searchField, selectedCruise } = this.state;        \r\n        const { classes, cruiseList} = this.props;\r\n        \r\n        const options = searchField && cruiseList ? this.getSelectOptionsFromCruiseList(search.search(searchField).sort(cruiseSort)) \r\n            : cruiseList ? this.getSelectOptionsFromCruiseList(cruiseList) \r\n            : []\r\n\r\n        return (\r\n            <div id='cruise-selector' className={classes.outerDiv}>\r\n                <div className={classes.blurEffectDiv}></div>\r\n                <Select\r\n                    isLoading={this.props.getCruiseListState === states.inProgress}\r\n                    components={{\r\n                        IndicatorSeparator:'',\r\n                        Option,\r\n                        SingleValue,\r\n                    }}\r\n                    isClearable\r\n                    onInputChange={this.onAutoSuggestChange}\r\n                    // inputValue={this.state.searchField}\r\n                    filterOption={null}\r\n                    className={classes.cruiseSelect}\r\n                    escapeClearsValue\r\n                    label=\"Cruise\"\r\n                    options={options}\r\n                    onChange={this.handleCruiseSelect}\r\n                    value={this.state.selectedCruise}\r\n                    placeholder=\"Search Cruises\"\r\n                    styles={{\r\n                        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                        menuList: provided => ({...provided, backgroundColor: esriBackgroundColor}),\r\n\r\n                        input: provided => ({...provided,\r\n                            color: 'inherit',\r\n                            fontFamily: esriFonts\r\n                        }),\r\n\r\n                        control: provided => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            border: 'none',\r\n                            boxShadow: '1px 1px 1px 1px #242424',\r\n                            color: esriFontColor,\r\n                            borderRadius: 4,\r\n                            '&:hover': { \r\n                                border: `1px solid white`,\r\n                            },\r\n                            '&:focus-within': {\r\n                                borderColor: colors.orange\r\n                            }\r\n                        }),\r\n\r\n                        placeholder: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: colors.orange,\r\n                            fontSize: '14px'\r\n                        }),\r\n\r\n                        noOptionsMessage: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: esriFontColor,\r\n                            backgroundColor: esriBackgroundColor\r\n                        }),\r\n\r\n                        option: (provided, state) => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            color: state.isFocused ? colors.orange : 'white',\r\n                            '&:hover': { backgroundColor: 'rgba(122,67,0,.5)'}\r\n                        }),\r\n\r\n                        singleValue: (provided, state) => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: 'inherit',\r\n                            paddingRight: '20px',\r\n                        })\r\n                    }}\r\n                    theme={theme => ({\r\n                        ...theme,\r\n                        colors: {\r\n                            ...theme.colors,\r\n                            // Background color of hovered options\r\n                            primary25: '#e0e0e0',\r\n                            primary: '#212121',\r\n                        },\r\n                    })}\r\n                />\r\n                {selectedCruise &&\r\n                    <Table size='small' className={classes.cruiseInfo}>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Cruise:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Name}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Nickname:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Nickname}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            {\r\n                                selectedCruise.data.Start_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Start Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Start_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.End_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        End Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.End_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Chief_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Chief Scientist:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Chief_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Ship_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Ship:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Ship_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CruiseSelector));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\n\r\nimport CruiseSelector from './CruiseSelector';\r\nimport colors from '../Enums/colors';\r\n\r\nimport { throttle } from 'throttle-debounce';\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nconst drawButtonStyles = (theme) => ({\r\n    outerDiv: {\r\n        // padding:'12px 0 12px 0',\r\n        backgroundColor: 'transparent',\r\n        // width: '180px',\r\n        borderRadius: '4px',\r\n        marginRight: '20px'\r\n    },\r\n\r\n    drawButton: {\r\n        // border: '1px solid #333333',\r\n        border: `1px solid #333333`,\r\n        borderRadius: '4px',\r\n        color: colors.orange,\r\n        cursor: 'pointer',\r\n        padding: '6px',\r\n        width: '160px',\r\n        fontSize:'14px',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        // backgroundColor: 'rgba(255, 128, 0, .8)',\r\n        // backgroundColor: 'transparent',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif',\r\n        '&:hover': { \r\n            borderColor: 'white'\r\n        },\r\n    },\r\n\r\n    helpText: {\r\n        marginTop: 0,\r\n        color: 'white',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif'\r\n    },\r\n\r\n    cancelButton: {\r\n        display: 'none',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nconst DrawButtonRaw = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    return (\r\n        <div className={classes.outerDiv} id='draw-region-div'>\r\n            {showHelp && <p className={classes.helpText}>Click once to draw <br/>and again to finish</p>}\r\n            <button id='draw-button' className={classes.drawButton}>\r\n                Select Region\r\n            </button>\r\n            <button id='cancel-button' className={`${classes.drawButton} ${classes.cancelButton}`}>\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DrawButton = withStyles(drawButtonStyles)(DrawButtonRaw);\r\n\r\nconst polygonSymbol = {\r\n    type: \"polygon-3d\",\r\n    symbolLayers: [\r\n        {\r\n            type: \"fill\",\r\n            material: {\r\n            color: [255, 128, 0, .3]\r\n            },\r\n            outline: {\r\n                color: [255, 128, 0, 1],\r\n                size: '2px'\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nconst emptyExtent = {\r\n    xmin: 0,\r\n    xmax: 0,\r\n    ymin: 0,\r\n    ymax: 0\r\n}\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.sketchModel = new props.esriModules.SketchViewModel({\r\n            layer: props.regionLayer,\r\n            view: props.view,\r\n            polygonSymbol,\r\n            defaultUpdateOptions: {\r\n                toggleToolOnClick: false,\r\n                tool: \"transform\"\r\n            }\r\n        })\r\n    }\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { view, esriModules, regionLayer, setShowHelp } = this.props;\r\n        var { sketchModel } = this;\r\n\r\n        // const updateOptions = {\r\n\r\n        // }\r\n\r\n        // var sketchModel = new esriModules.SketchViewModel({\r\n        //     layer: regionLayer,\r\n        //     view,\r\n        //     polygonSymbol,\r\n        //     defaultUpdateOptions: updateOptions\r\n        // })\r\n\r\n        var drawButton = document.getElementById('draw-button');\r\n        var cancelButton = document.getElementById('cancel-button');\r\n\r\n        let cr = this;\r\n\r\n        const throttledUpdate = throttle(75, (event) => {\r\n            if(event.state === 'active'){\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n            }\r\n        })\r\n\r\n        sketchModel.on(\"create\", (event) => {\r\n            if(event.graphic && event.graphic.visible) {\r\n                event.graphic.visible = false;\r\n            }\r\n            if(event.state === 'cancel'){\r\n                setShowHelp(false);\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n\r\n            if(event.state === \"complete\") {\r\n                setShowHelp(false);\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });    \r\n\r\n        sketchModel.on('create', throttledUpdate)\r\n\r\n        sketchModel.on('update', (event) => {\r\n            if(event.toolEventInfo && event.toolEventInfo.type === 'move-stop'){\r\n                if(event.state === 'cancel') return;\r\n                // this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphics[0].geometry.extent));\r\n                this.props.updateDomainFromGraphicExtent(event.graphics[0].geometry.extent);\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });   \r\n        \r\n        drawButton.addEventListener(\"click\", (event) => {\r\n                regionLayer.removeAll();\r\n                setShowHelp(true);\r\n                sketchModel.create('rectangle', {\r\n                    mode:'click'            \r\n                });\r\n                drawButton.style.display = 'none';\r\n                cancelButton.style.display = 'inline-block';\r\n        });\r\n\r\n        cancelButton.addEventListener('click', (event) => {\r\n            sketchModel.cancel();\r\n            setShowHelp(false);\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })\r\n\r\n        view.ui.add('draw-region-div', 'bottom-right');\r\n        view.ui.add('cruise-selector', 'top-right');\r\n\r\n        view.ui.remove('zoom');\r\n        view.ui.remove('navigation-toggle');\r\n        view.ui.remove('compass');\r\n        view.ui.remove('attribution');\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst TrajectoryController = React.memo((props) => {\r\n    const { cruiseTrajectory, trajectoryLayer, esriModules } = props;\r\n    \r\n    if(cruiseTrajectory){\r\n        const { lons, lats } = cruiseTrajectory;\r\n\r\n        trajectoryLayer.removeAll();\r\n\r\n        var polyLines = [[]];\r\n        var lineIndex = 0;\r\n\r\n        let lonStart = lons[0];\r\n        let latStart = lats[0];\r\n        let maxDistance = 0;\r\n\r\n        // Create a new path array each time 180 lon is crossed\r\n        lons.forEach((lon, i) => {\r\n            let lat = lats[i];\r\n\r\n            let latDistance = Math.abs(lat - latStart);\r\n            let _lonDistance = Math.abs(lon - lonStart);\r\n            let lonDistance = _lonDistance > 180? 360 - _lonDistance : _lonDistance;\r\n\r\n            let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n            maxDistance = distance > maxDistance ? distance : maxDistance;\r\n\r\n            polyLines[lineIndex].push([lon, lat]);\r\n\r\n            if(i < lons.length - 1){\r\n                if((lon > 160 && lon < 180) && (lons[i + 1] > -180 && lons[i + 1] < -160)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n\r\n                if((lon > -180 && lon < -160) && (lon[i + 1] > 160 && lon[i + 1] < 180)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n            }\r\n        })\r\n\r\n        var cruiseTrajectorySymbol = {\r\n            type: 'line-3d',\r\n            symbolLayers: [{\r\n                type: 'line',\r\n                material: { color: [255, 128, 0, 1] },\r\n                cap:  'round',\r\n                join: 'round',\r\n                size: 2\r\n            }]\r\n        }\r\n\r\n        polyLines.forEach(line => {\r\n\r\n            let cruiseTrajectoryGeometry = {\r\n                type: 'polyline',\r\n                paths: line\r\n            }\r\n\r\n            let graphic = new esriModules.Graphic({\r\n                geometry: cruiseTrajectoryGeometry,\r\n                symbol: cruiseTrajectorySymbol\r\n            });\r\n\r\n            trajectoryLayer.add(graphic);\r\n        })\r\n\r\n        try {\r\n            const center = [lons[0], lats[0]];\r\n\r\n            var zoom = 7 - Math.floor(maxDistance / 10);            \r\n    \r\n            props.view.goTo({\r\n                target: center,\r\n                zoom\r\n            }, {\r\n                maxDuration: 2500,\r\n                speedFactor: .5\r\n            });    \r\n\r\n        } catch(e) {console.log(e)}\r\n\r\n    } else {\r\n        trajectoryLayer.removeAll();\r\n\r\n        props.view.goTo({\r\n            target: [-140, 30],\r\n            zoom: 3\r\n        }, {\r\n            maxDuration: 2500,\r\n            speedFactor: .5\r\n        }); \r\n    }\r\n    return '';\r\n})\r\n\r\nclass MapContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showHelp: false\r\n        }\r\n        this.regionLayer = new props.esriModules.GraphicsLayer();\r\n        this.trajectoryLayer = new props.esriModules.GraphicsLayer();\r\n    }\r\n\r\n    render = () => {\r\n        const { classes, esriModules, spParams, cruiseTrajectory, globeUIRef } = this.props;\r\n\r\n\r\n        const lat1 = parseFloat(spParams.lat1);\r\n        const lat2 = parseFloat(spParams.lat2);\r\n        const lon1 = parseFloat(spParams.lon1);\r\n        let _lon2 = parseFloat(spParams.lon2);\r\n        const lon2 = _lon2 < lon1 ? _lon2 + 360 : _lon2;\r\n\r\n        this.regionLayer.removeAll();\r\n\r\n        var polygon = {\r\n            type: 'polygon', \r\n            rings: [\r\n                [lon1, lat1],\r\n                [lon2, lat1],\r\n                [lon2, lat2],\r\n                [lon1, lat2],\r\n                [lon1, lat1]\r\n            ]\r\n        };\r\n\r\n        let regionGraphic = new esriModules.Graphic({\r\n            geometry: polygon,\r\n            symbol: polygonSymbol\r\n        })\r\n\r\n        this.regionLayer.add(regionGraphic);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ \r\n                        basemap: 'satellite',\r\n                        layers: [\r\n                            this.regionLayer,\r\n                            this.trajectoryLayer\r\n                        ]\r\n                    }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3\r\n                    }}\r\n                >\r\n                    <TrajectoryController \r\n                        cruiseTrajectory={cruiseTrajectory}\r\n                        trajectoryLayer={this.trajectoryLayer}\r\n                        esriModules={esriModules}\r\n                    />\r\n                    <UiComponents\r\n                        updateDomainFromGraphicExtent = {this.props.updateDomainFromGraphicExtent}\r\n                        esriModules={esriModules}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                        regionLayer={this.regionLayer}\r\n                        setShowHelp={(showHelp) => this.setState({...this.state, showHelp})}\r\n                        ref={this.props.globeUIRef}\r\n                    />\r\n                </Scene>\r\n                <DrawButton showHelp={this.state.showHelp}/>\r\n                <CruiseSelector updateParametersFromCruiseBoundary={this.props.updateParametersFromCruiseBoundary}/>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MapContainer);","const cleanSPParams = ({depth1, depth2, dt1, dt2, fields, lat1, lat2, lon1, lon2, spName, tableName}) => ({\r\n    depth1: parseFloat(depth1),\r\n    depth2: parseFloat(depth2),\r\n    dt1,\r\n    dt2,\r\n    fields,\r\n    lat1: parseFloat(lat1),\r\n    lat2: parseFloat(lat2),\r\n    lon1: parseFloat(lon1),\r\n    lon2: parseFloat(lon2),\r\n    spName,\r\n    tableName,\r\n})\r\n\r\nexport default cleanSPParams;","const localDateToString = (date) => {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate()\r\n\r\n    let nYear = year.toString();\r\n    let nMonth = month < 10 ? '0' + month.toString() : month.toString();\r\n    let nDay = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return nYear + '-' + nMonth + '-' + nDay;\r\n}\r\n\r\nexport default localDateToString;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\nimport DataRetrievalForm from './DataRetrievalForm';\r\nimport VizControlPanel from './VizControlPanel';\r\nimport DownloadConfirmationDialog from './DownloadConfirmationDialog';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend, cruiseListRequestSend, completedShowCharts } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend, datasetRetrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport { loadModules } from 'esri-loader';\r\n\r\nimport depthUtils from '../Utility/depthCounter';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport Charts from './Charts';\r\nimport MapContainer from './MapContainer';\r\nimport colors from '../Enums/colors'\r\nimport cleanSPParams from '../Utility/cleanSPParams';\r\nimport localDateToString from '../Utility/localDateToString';\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport TopNavBar from './TopNavBar';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.sectionMap\r\n        },\r\n        [vizSubTypes.contourSectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.contourSectionMap\r\n        },\r\n        [vizSubTypes.timeSeries]: {\r\n            sp: storedProcedures.timeSeries,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: storedProcedures.depthProfile,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.heatmap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.heatmap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.contourMap\r\n        },\r\n        [vizSubTypes.sparse]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.sparse\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    loadingMessage: state.loadingMessage,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    cruiseList: state.cruiseList,\r\n    showChartsOnce: state.showChartsOnce,\r\n    datasets: state.datasets\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n    cruiseListRequestSend,\r\n    completedShowCharts,\r\n    datasetRetrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    background: {\r\n        backgroundColor: colors.backgroundGray\r\n    },\r\n\r\n    showCharts: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst baseSPParams = {\r\n    tableName: '',\r\n    fields: null,\r\n    depth1: 0,\r\n    depth2: 0,\r\n    dt1: new Date(),\r\n    dt2: new Date(),\r\n    lat1: 0,\r\n    lat2: 0,\r\n    lon1: 0,\r\n    lon2: 0,\r\n    selectedVizType: ''\r\n}\r\n\r\nclass Visualization extends Component {\r\n    globeUIRef = React.createRef();\r\n\r\n    state = {\r\n        filteredData: [],\r\n        opacity: 1,\r\n        showCharts: false,\r\n        showUI: false,\r\n        surfaceOnly: false,\r\n        irregularSpatialResolution: false,\r\n        downloadTarget: null,\r\n\r\n        spParams: baseSPParams\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.cruiseList) this.props.cruiseListRequestSend();\r\n        if(!this.props.datasets) this.props.datasetRetrievalRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'GraphicsLayer',\r\n            'SketchViewModel',\r\n            'Utils',\r\n            'Graphic',\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/layers/GraphicsLayer',\r\n            'esri/widgets/Sketch/SketchViewModel',\r\n            'esri/geometry/support/webMercatorUtils',\r\n            'esri/Graphic',\r\n        ], {version: 'next'});\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    handleSetDownloadTarget = (downloadTarget) => {\r\n        this.setState({...this.state, downloadTarget})\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.showChartsOnce) {\r\n            this.props.completedShowCharts();\r\n            this.setState({...this.state, showCharts: true})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleLatLonChange = (event) => {\r\n        this.setState({\r\n            ...this.state, \r\n            spParams: {...this.state.spParams, [event.target.name]: event.target.value},\r\n        })\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt1:newDate}});\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt2:newDate}});\r\n        }\r\n    }\r\n\r\n    onVisualize = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, selectedVizType } = this.state.spParams;\r\n\r\n        let mapping = mapVizType(selectedVizType);\r\n        let parameters = cleanSPParams({\r\n            depth1,\r\n            depth2,\r\n            dt1: localDateToString(dt1),\r\n            dt2: localDateToString(dt2),\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        });\r\n\r\n        let payload = {\r\n            parameters,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        if(fields) {\r\n            let surfaceOnly = !fields.data.Depth_Min;\r\n            let irregularSpatialResolution = fields.data.Spatial_Resolution === 'Irregular';\r\n\r\n            let dt1 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt1 : utcDateStringToLocal(fields.data.Time_Min);\r\n            let dt2 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt2 : \r\n                irregularSpatialResolution ? utcDateStringToLocal(fields.data.Time_Max) :\r\n                utcDateStringToLocal(fields.data.Time_Min);\r\n\r\n            let lat1 = irregularSpatialResolution ? fields.data.Lat_Min : this.state.spParams.lat1;\r\n            let lat2 = irregularSpatialResolution ? fields.data.Lat_Max : this.state.spParams.lat2;\r\n            let lon1 = irregularSpatialResolution ? fields.data.Lon_Min : this.state.spParams.lon1;\r\n            let lon2 = irregularSpatialResolution ? fields.data.Lon_Max : this.state.spParams.lon2;\r\n            let depth1 = irregularSpatialResolution ? fields.data.Depth_Min || 0 : \r\n                depthUtils.piscesTable.has(fields.data.Table_Name) ? 0 :\r\n                depthUtils.darwinTable.has(fields.data.Table_Name) ? 0 : \r\n                this.state.spParams.depth1;\r\n\r\n            let depth2 = irregularSpatialResolution ? fields.data.Depth_Max || 0 : \r\n                depthUtils.piscesTable.has(fields.data.Table_Name) ? ((depthUtils.piscesDepths[0] + depthUtils.piscesDepths[1]) / 2).toFixed(2) :\r\n                depthUtils.darwinTable.has(fields.data.Table_Name) ? (depthUtils.darwinDepths[0] + depthUtils.darwinDepths[1]) : \r\n                this.state.spParams.depth2;\r\n\r\n            if(irregularSpatialResolution){\r\n                this.globeUIRef.current.props.view.goTo({\r\n                    target: [(parseFloat(lon1) + parseFloat(lon2)) / 2, (parseFloat(lat1) + parseFloat(lat2)) / 2],\r\n                    zoom: 3\r\n                }, {\r\n                    maxDuration: 2500,\r\n                    speedFactor: .5\r\n                }); \r\n            }\r\n\r\n            let tableName = fields.data.Table_Name;\r\n            \r\n            this.setState({...this.state,\r\n                surfaceOnly,\r\n                irregularSpatialResolution,\r\n                spParams: {...this.state.spParams, \r\n                    fields,\r\n                    dt1,\r\n                    dt2,\r\n                    lat1,\r\n                    lat2,\r\n                    lon1,\r\n                    lon2,\r\n                    depth1,\r\n                    depth2,\r\n                    tableName,\r\n                    selectedVizType: ''\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    updateParametersFromCruiseBoundary = (cruise) => {\r\n        if(cruise && this.state.spParams.fields){\r\n            this.props.snackbarOpen('Setting chart parameters to cruise boundaries.')\r\n            this.setState({...this.state,\r\n                spParams: {...this.state.spParams,\r\n                    lat1: cruise.data.Lat_Min,\r\n                    lat2: cruise.data.Lat_Max,\r\n                    lon1: cruise.data.Lon_Min,\r\n                    lon2: cruise.data.Lon_Max,\r\n                    dt1: utcDateStringToLocal(cruise.data.Start_Time),\r\n                    dt2: utcDateStringToLocal(cruise.data.End_Time)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleShowCharts = () => {\r\n        this.setState({...this.state, showCharts: true})\r\n    }\r\n\r\n    handleShowGlobe = () => {\r\n        this.setState({...this.state, showCharts: false})\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromGraphicExtent = (extent) => {\r\n        var _lon1 = extent.xmin > -180 ? extent.xmin : extent.xmin + 360;\r\n        var _lon2 = extent.xmax < 180 ? extent.xmax : extent.xmax - 360;\r\n\r\n        var newCoordinates = {\r\n            lat1: extent.ymin.toFixed(3),\r\n            lat2: extent.ymax.toFixed(3),\r\n            lon1: _lon1.toFixed(3),\r\n            lon2: _lon2.toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    resetSPParams = () => {\r\n        this.setState({...this.state, spParams: baseSPParams})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        return (\r\n            <div>\r\n                <TopNavBar/>\r\n                <DownloadConfirmationDialog\r\n                    {...this.state.spParams}\r\n                    downloadTarget={this.state.downloadTarget}\r\n                    handleSetDownloadTarget={this.handleSetDownloadTarget}\r\n                />\r\n                <DataRetrievalForm \r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                   {...this.state.spParams}\r\n                   surfaceOnly={this.state.surfaceOnly}\r\n                   irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                />\r\n                <VizControlPanel\r\n                    handleSetDownloadTarget={this.handleSetDownloadTarget}\r\n                    toggleChartView={this.toggleChartView}\r\n                    toggleShowUI={this.toggleShowUI}\r\n                    showCharts={this.state.showCharts}\r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                    {...this.state.spParams}\r\n                    surfaceOnly={this.state.surfaceOnly}\r\n                    irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                    showCharts={this.state.showCharts}\r\n                    handleShowCharts={this.handleShowCharts}\r\n                    handleShowGlobe={this.handleShowGlobe}\r\n                    resetSPParams={this.resetSPParams}\r\n                />\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer\r\n                            globeUIRef={this.globeUIRef}\r\n                            updateDomainFromGraphicExtent={this.updateDomainFromGraphicExtent}\r\n                            updateParametersFromCruiseBoundary={this.updateParametersFromCruiseBoundary}\r\n                            esriModules={this.state.esriModules}\r\n                            spParams={this.state.spParams}\r\n                            cruiseTrajectory={this.props.cruiseTrajectory}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                <div className={this.state.showCharts ? classes.showCharts : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password, or <Link onClick={this.handleClose} component={RouterLink} to={{pathname: '/register'}}>Register.</Link>\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Spinner from 'react-spinkit';\r\n\r\nconst styles = theme => ({\r\n    loader: {\r\n        backgroundColor: '#000000',\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        opacity: 0.5,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        zIndex: 9998\r\n    },\r\n\r\n    loaderContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItem: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 9999,\r\n        opacity: 1\r\n    },\r\n\r\n    spinnerText: {\r\n        zIndex: 10000,\r\n        color: '#FF8000',\r\n        marginTop: '25px',\r\n        opacity: 1\r\n    },\r\n\r\n    spinner: {\r\n        opacity: 1\r\n    }\r\n})\r\n\r\nconst LoadingOverlay = (props) => {\r\n    const { classes, loadingMessage } = props;\r\n\r\n    if(loadingMessage && loadingMessage.length){\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div className={classes.loaderContent}>\r\n                    <Spinner className={classes.spinner} color='#FF8000' name=\"ball-pulse-rise\" fadeIn='quarter'/>\r\n                    <Typography variant='h6' className={classes.spinnerText}>{loadingMessage}</Typography>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return '';\r\n\r\n}\r\n\r\nexport default withStyles(styles)(LoadingOverlay);","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper';\r\nimport LoadingOverlay from './LoadingOverlay';\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog,\r\n    loadingMessage: state.loadingMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n                <LoadingOverlay loadingMessage={this.props.loadingMessage}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nconst styles = theme => ({\r\n    landingWrapper: {\r\n        margin: '15vh auto'\r\n    },\r\n\r\n    welcomeMessage: {\r\n        color: '#ffffff',\r\n        maxWidth: '500px',\r\n        margin: `${theme.spacing(2)}px auto`\r\n    }\r\n})\r\n\r\nclass LandingPage extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.landingWrapper}>\r\n                <img \r\n                    src='/images/large_cmap_logo.png'\r\n                    height='290'\r\n                    width='600'\r\n                />\r\n                <Typography variant=\"body2\" component=\"p\" className={classes.welcomeMessage}>\r\n                    Welcome to Simons CMAP. This application is currently under heavy development, and some features may be incomplete.\r\n                </Typography>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingPage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport './App.scss';\n\nimport colors from './Enums/colors';\n\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\n\nimport Home from './Components/Home';\nimport Catalog from './Components/Catalog';\nimport Register from './Components/Register';\nimport Visualization from './Components/Visualization';\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\nimport LandingPage from './Components/LandingPage';\nimport TopNavBar from './Components/TopNavBar';\n\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    error: {\n      main: colors.errorYellow\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: colors.backgroundGray,\n      paper: colors.backgroundGray\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange,\n        borderRadius: '10%'\n      }\n    },\n\n    MuiListItemIcon: {\n      root: {\n        minWidth: '40px'\n      }\n    },\n\n    MuiFormHelperText: {\n      filled: {\n        paddingLeft: '1px',\n        paddingRight: '1px',\n        fontSize: '13px'\n      }\n    },\n\n    MuiListItem: {\n      gutters: {\n        paddingLeft: '6px',\n        paddingRight: '10px'\n      },\n\n      root: {\n        paddingTop: '4px',\n        paddingBottom: '4px'\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: 'transparent',\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },\n\n    MuiButtonGroup: {\n      groupedOutlined: {\n        '&:not(:first-child)': {\n          marginLeft: 0\n        }\n      }\n    },\n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiFilledInput: {\n      input: {\n        paddingLeft: '6px',\n      },\n\n      inputSelect: {\n        paddingBottom: '6px'\n      },\n\n      adornedEnd: {\n        paddingRight: '6px'\n      },\n\n      root: {\n        backgroundColor: 'transparent',\n        '&:hover': {\n          backgroundColor: 'transparent',\n        },\n        '&:disabled': {\n          backgroundColor: 'transparent',\n        }\n      }\n    }\n  }\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  loadingMessage: state.loadingMessage\n})\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.vizRef = React.createRef();\n  }\n\nrender() {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n        <BrowserRouter>\n          <GlobalUIComponentWrapper/>\n          <TopNavBar/>\n          <Switch>          \n            <Route exact path='/apikeymanagement' component={ Home } />\n            <Route exact path='/' component={ LandingPage } />\n            <Route exact path='/catalog' component={ Catalog } />\n            <Route exact path='/register' component={ Register } />\n            <Route exact path='/visualization' component={Visualization} />\n          </Switch>\n        </BrowserRouter>\n        </MuiThemeProvider>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n}\n\nexport default connect(mapStateToProps, null)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\n\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}