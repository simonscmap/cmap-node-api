{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","Enums/spatialResolutions.js","Utility/MapSpatialResolutionToNumber.js","Utility/GenerateSpatialArray.js","Utility/FlattenArray.js","Utility/SplitData.js","Utility/MergeArraysAndComputeMeans.js","Utility/MergeArrays.js","Enums/visualizationSubTypes.js","Classes/SpaceTimeData.js","Enums/storedProcedures.js","Classes/TimeSeriesData.js","Classes/DepthProfileData.js","Classes/SectionMapData.js","api.js","Redux/sagas.js","Redux/store.js","Components/LoadingSpinner.js","Components/TopNavBar.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/Home.js","Components/GridDetail.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/colors.js","Components/TableStatsDialog.js","Components/DataRetrievalForm.js","Components/DebugButton.js","Components/ClearVisualizationsButton.js","Components/GoBackButton.js","Components/ChartTypes/SpaceTimeChart.js","Components/ChartTypes/TimeSeriesChart.js","Components/ChartTypes/DepthProfileChart.js","Components/ChartTypes/SectionMapChart.js","Components/Charts.js","Components/ToggleChartViewButton.js","Components/ToggleHideUIButton.js","Components/MapContainer.js","Components/Visualization.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/GlobalUIComponentWrapper.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","GET_TABLE_STATS","initialState","catalog","snackbarIsOpen","snackbarMessage","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","tableStats","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addChart","getTableStatsRequestProcessing","storeTableStats","apiUrl","spatialResolutions","irregular","halfDegree","quarterDegree","twentyFifthDegree","fourKm","twelfthDegree","seventyKm","oneDegree","mapSpatialResolutionToNumber","resolution","_map","defineProperty","generateSpatialArray","start","end","arr","i","push","flattenArray","flattenedArray","length","j","splitData","changeInterval","numDistinct","Math","floor","mergeArraysAndComputeMeans","mergeTargetDistance","nextMergeStartDistance","numArraysPerMerge","mergedArrays","travelDistance","subArray","sum","count","k","mergeArrays","subTypes","sectionMap","timeSeries","histogram","depthProfile","heatmap","contourMap","SpaceTimeData","classCallCheck","this","parameters","metadata","hasDepth","depths","Set","dates","variableValues","lonStart","latStart","lonCount","latCount","zMin","zMax","depthIndexAdjust","row","parseFloat","add","spatialResolution","Spatial_Resolution","lonsList","lon2","latsList","lat2","console","log","Date","quantile","lats","lons","subType","splitByDate","splitByDepth","_this","size","variableValueSubsets","depthInterval","dateInterval","map","subset","vizSubTypes","storedProcedures","spaceTime","TimeSeriesData","stds","lat","lon","depth","DepthProfileData","SectionMapData","orientation","latsDistinct","lonsDistinct","plotLats","plotLons","zonalPlotDepths","meridionalPlotDepths","depthsList","Array","from","splitBySpace","spaceCount","lonInterval","latInterval","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","reduce","queryString","key","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","csvParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","CSVParser","columns","on","record","read","sent","ok","abrupt","getReader","done","write","decode","value","stop","keyRetrieval","_callee2","_context2","json","keyCreation","_ref3","_callee3","description","_context3","trim","_x","apply","arguments","visualization","storedProcedureRequest","_ref4","_callee4","vizData","_context4","t0","spName","finalize","_x2","getTableStats","_ref5","_callee5","tableName","_context5","_x3","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","queryRequest","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","watchGetTableStats","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_context6","_marked6","_context7","_marked7","_context8","visualizationActions","query","_marked8","_context9","fields","_marked9","_context10","_marked10","_context11","takeLatest","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","visualizationActionTypes","_marked18","_context19","_marked19","_context20","_marked20","_context21","all","_marked21","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","withStyles","theme","centered","position","top","props","classes","react_default","createElement","CircularProgress","className","customVariant","mapDispatchToProps","TopNavBar","possibleConstructorReturn","getPrototypeOf","handleChange","event","setState","target","name","handleLogOut","clearState","username","password","getCurrentPath","pathname","beepBoop","set","AppBar","Toolbar","Tabs","onChange","Tab","component","Link","to","label","onClick","firstName","lastName","Component","connect","ownProps","withRouter","inlineBlock","display","keyCreationRequestSend","ApiKeyManagement","componentDidMount","handleClick","Fragment","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","Grid","container","alignItems","justify","spacing","item","TextField","margin","id","placeholder","descriptionField","Button","disabled","color","Components_LoadingSpinner","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","useEffect","RouterLink","Home","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","wrapper","height","infoCard","padding","gridClass","gridItem","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","variableDetailTable","marginLeft","marginRight","variableDetailTableRow","variableDetailTableCell","borderBottomColor","xs","src","imageSource","alt","Dataset_Description","Data_Source","Distributor","detailCellRendererParams","template","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","textAlign","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","handleColumnRowGroupChanged","forEach","column","setColumnVisible","colId","render","gridPaper","gridSearch","autoFocus","InputLabelProps","shrink","gridWrapper","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","optional","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","colors","orange","backgroundGray","aqua","Dialog","open","onClose","DialogTitle","Variable","DialogContent","DialogContentText","Long_Name","Sensor","Temporal_Resolution","Time_Min","slice","Time_Max","Lat_Min","Lat_Max","Lon_Min","Lon_Max","Depth_Min","Depth_Max","visualizationSpeedDialActions","icon","Map","Timeline","BarChart","Waves","Language","LeakAdd","MenuList","_this$props","options","children","maxHeight","_getValue","getValue","slicedToArray","initialOffset","indexOf","dist_index_esm","style","backgroundColor","itemCount","itemSize","initialScrollOffset","_ref","DropdownIndicator","chunk_5d200a41_browser_esm","ArrowDropDown","SingleValue","assign","Option","DataRetrievalForm","componentDidUpdate","prevProps","search","addDocuments","filterVariables","variableWrapper","searchString","values","join","split","some","term","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","handleVisualizationSpeedDialClose","visualizationSpeedDialOpen","handleVisualizationSpeedDialOpen","handleVisualizationSpeedDialClick","getSelectOptionsFromCatalogItems","items","onAutoSuggestChange","searchField","JsSearch","searchIndex","addIndex","_this2","_this$state","_this$props2","depth1","depth2","dt1","dt2","lat1","lon1","depthIsInvalid","latIsInvalid","lonIsInvalid","showUI","displayNone","Components_TableStatsDialog","dataRetrievalFormPaper","shortenHeight","react_select_browser_esm","isLoading","components","IndicatorSeparator","isClearable","onInputChange","filterOption","variableSelect","escapeClearsValue","updateFields","styles","menu","provided","zIndex","input","fontFamily","control","border","&:hover","borderColor","&:focus-within","fontSize","noOptionsMessage","option","&:after","float","singleValue","paddingRight","primary25","primary","IconButton","LibraryBooks","datePickerGridSection","material_ui_pickers_esm","format","disableFuture","autoOk","handleStartDateChange","inputVariant","handleEndDateChange","SpeedDial","ariaLabel","ButtonProps","visualizeButton","visualizationSpeedDial","x","y","fill","fontVariant","visualizeButtonText","onBlur","onFocus","onMouseEnter","onMouseLeave","direction","SpeedDialAction","tooltipTitle","onVisualize","tooltipPlacement","dataRetrievalFormField","retrieveDataButton","borderRadius","palette","dominantBaseline","textAnchor","paddingLeft","buttonPaper","bottom","textDecoration","cursor","goBackText","statePieces","statePiece","clearCharts","clearMaps","buttonProps","chartWrapper","boxShadow","buttonBlock","_props$chart","chart","_useState","useState","_useState2","setSplitByDate","_useState3","_useState4","setSplitByDepth","_useState5","_useState6","subTypeState","setSubTypeState","plots","subSets","generatePlotData","subsets","infoObject","variableName","date","toFixed","react_plotly_default","zauto","zmin","zmax","z","contours","coloring","showlabels","labelfont","family","labelformat","colorbar","text","Unit","exponentformat","layout","font","xaxis","yaxis","paper_bgcolor","annotations","xref","yref","yshift","showarrow","handleContourMap","zsmooth","e","handleHeatmap","handleHistogram","error_y","array","opacity","visible","line","setSplitBySpace","setOrientation","numSpaceSplits","splitOrientation","alternateOrientation","distinctMeridiansOrParallelsForSplitting","xAxisLabel","spaceTitle","handleSectionMap","Charts","chartsContainer","ChartTypes_SpaceTimeChart","ChartTypes_TimeSeriesChart","ChartTypes_DepthProfileChart","ChartTypes_SectionMapChart","ChartsText","childClass","numberOfCharts","showCharts","toggleChartView","ToggleChartViewButton_ChartsText","toggleShowUI","UiComponents","shouldComponentUpdate","nextProps","nextState","measurementWidget","esriModules","AreaMeasurement3D","view","watch","updateDomainFromMap","viewModel","tool","model","viewData","positionsGeographic","ui","Search","React","MapContainer","esm","mapProperties","basemap","viewProperties","center","zoom","MapContainer_UiComponents","measurementPositions","mapVizType","vizType","_mapping","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","isNaN","parseDate","mm","getUTCMonth","dd","getUTCDate","getUTCFullYear","Visualization","filteredData","dateSliderPosition","variable","pickedIndex","pickedLon","pickedLat","spParams","dateString","parametersAreInvalid","_this$state$spParams","_this$state$spParams2","mapping","Table_Name","handleDateSliderChange","pickedInfo","datum","time","handleOpacitySliderChange","coordinates","newCoordinates","min","max","esriModuleNames","loadModules","loadedModules","accumulator","currentValue","currentIndex","Components_DataRetrievalForm","Components_GoBackButton","Components_ToggleChartViewButton","ToggleHideUIButton","Components_DebugButton","Components_ClearVisualizationsButton","Components_MapContainer","Components_Charts","userLoginRequestSend","LoginDialog","handleLogin","handleClose","aria-labelledby","onSubmit","preventDefault","DialogActions","snackbarClose","centerText","Snackbar","autoHideDuration","anchorOrigin","horizontal","vertical","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","Components_LoginDialog","Components_SnackbarWrapper","routes","react_router_dom","Components_GlobalUIComponentWrapper","react_router","exact","path","createMuiTheme","typography","useNextVariants","contrastText","main","secondary","background","default","grey","paper","overrides","MuiIconButton","MuiToolbar","MuiOutlinedInput","&$focused","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","App","componentDidCatch","info","utils","DateFnsUtils","MuiThemeProvider","hasError","LicenseManager","setLicenseKey","rootElement","document","getElementById","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.00a8e893.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\n\r\nexport const GET_TABLE_STATS = 'GET_TABLE_STATS';\r\nexport const GET_TABLE_STATS_REQUEST_PROCESSING = 'GET_TABLE_STATS_REQUEST_PROCESSING';\r\nexport const STORE_TABLE_STATS = 'STORE_TABLE_STATS';\r\n","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    tableStats: {}\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING: return {...state, getTableStatsRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.STORE_TABLE_STATS: return {...state,\r\n            getTableStatsRequestState: states.succeeded,\r\n            tableStats: {\r\n                ...state.tableStats,\r\n                ...action.payload.tableStats\r\n            }\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload:\r\n    {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const getTableStats = (tableName) => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS,\r\n    payload: {\r\n        tableName\r\n    }\r\n})\r\n\r\nexport const getTableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storeTableStats = (tableStats) => ({\r\n    type: visualizationActionTypes.STORE_TABLE_STATS,\r\n    payload: {\r\n        tableStats\r\n    }\r\n})","export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\n// export const apiUrl = 'https://simonscmap.dev';","const spatialResolutions = {\r\n    irregular: 'Irregular',\r\n    halfDegree: '1/2° X 1/2°' ,\r\n    quarterDegree: '1/4° X 1/4°' ,\r\n    twentyFifthDegree: '1/25° X 1/25°' ,\r\n    fourKm: '4km X 4km',\r\n    twelfthDegree: '1/12° X 1/12°',\r\n    seventyKm: '70km X 70km',\r\n    oneDegree: '1° X 1°'\r\n}\r\n\r\nexport default spatialResolutions;","import spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nconst mapSpatialResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [spatialResolutions.halfDegree] : .5,\r\n        [spatialResolutions.quarterDegree] : .25,\r\n        [spatialResolutions.twentyFifthDegree] : .04,\r\n        [spatialResolutions.fourKm] : .041672,\r\n        [spatialResolutions.twelfthDegree] : .083333,\r\n        [spatialResolutions.oneDegree] : 1,\r\n        [spatialResolutions.seventyKm] : .25\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapSpatialResolutionToNumber;","const generateSpatialArray = (start, resolution, end) => {\r\n    let arr = [];\r\n\r\n    for(let i = start; i <= end; i += resolution){\r\n        arr.push(i);\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nexport default generateSpatialArray;","// Flattens an array by 1 level\r\n// [[[],[]], [[],[]], [[],[]]] => [[], [], [], [], [], []]\r\n\r\nconst flattenArray = (arr) => {\r\n    let flattenedArray = [];\r\n\r\n    for(let i = 0; i < arr.length; i++){\r\n        for(let j = 0; j < arr[i].length; j++){\r\n            flattenedArray.push(arr[i][j]);\r\n        }\r\n    }\r\n\r\n    return flattenedArray;\r\n}\r\n\r\nexport default flattenArray;","// Interval number of indices between changes in this parameter, or in order words\r\n// how many times will we see the same value for this parameter in a row before it changes\r\n// as we iterate through the values array.\r\n// We use modulo for cases where data.length / interval is larger than the number of \r\n// distinct values for that parameter.\r\n\r\nconst splitData = (data, changeInterval, numDistinct) => {\r\n    var splitData = [];\r\n\r\n    for(let i = 0; i < numDistinct; i++){\r\n        splitData.push([]);\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        let index = Math.floor(i / changeInterval) % numDistinct;\r\n        splitData[index].push(data[i]);\r\n    }\r\n\r\n    return splitData;\r\n}\r\n\r\nexport default splitData;","// mergeTargetDistance - number of hops between arrays being merged\r\n// mergeTargetNumber - number of arrays being merged - implicit\r\n// nextStartDistance - once a merge is complete how many hops to next start\r\nconst mergeArraysAndComputeMeans = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n    \r\n    // Find each merging start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        // Iterate through each value in the first array of this merge. Count\r\n        // the number of values summed so we can ignore nulls and compute a mean.\r\n        for(let j = 0; j < data[i].length; j ++){\r\n            let sum = 0;\r\n            let count = 0;\r\n\r\n            // Aggregate values of all merge targets\r\n            for(let k = i; k < i + (mergeTargetDistance * numArraysPerMerge); k += mergeTargetDistance){\r\n                if(data[k][j] !== null) {\r\n                    sum += data[k][j];\r\n                    count ++;\r\n                };\r\n            }\r\n            subArray.push(count < 1 ? null : sum / (count));\r\n        }\r\n\r\n        mergedArrays.push(subArray)\r\n    }\r\n\r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArraysAndComputeMeans;","const mergeArrays = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n\r\n    // Find each merge start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        for(let j = i; j <= i + travelDistance; j += mergeTargetDistance){\r\n            subArray = [...subArray, ... data[j]];\r\n        }\r\n\r\n        mergedArrays.push(subArray);\r\n    }\r\n   \r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArrays;\r\n\r\n","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    heatmap: 'Heatmap',\r\n    contourMap: 'Contour Map'\r\n}\r\n\r\nexport default subTypes;","import { quantile } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/MapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/FlattenArray';\r\nimport splitData from '../Utility/SplitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/MergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/MergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\n\r\nclass SpaceTimeData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = null;\r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n        this.lonStart = null;\r\n        this.latStart = null;\r\n        this.lonCount = null;\r\n        this.latCount = null;\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        // Only on first row\r\n        if(this.hasDepth === null) {\r\n            this.hasDepth = row.length === 5;\r\n            this.lonStart = parseFloat(row[2]);\r\n            this.latStart = parseFloat(row[1]);\r\n            this.depthIndexAdjust = this.hasDepth ? 1 : 0;\r\n        }\r\n\r\n        if(this.hasDepth){\r\n            this.depths.add(row[3]);\r\n        }\r\n\r\n        this.dates.add(row[0]);\r\n\r\n        this.variableValues.push(parseFloat(row[3 + this.depthIndexAdjust]));\r\n    }\r\n\r\n    finalize() {\r\n        const spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n\r\n        // Simple arrays of lats and lons\r\n        let lonsList = generateSpatialArray(this.lonStart, spatialResolution, this.parameters.lon2);\r\n        let latsList = generateSpatialArray(this.latStart, spatialResolution, this.parameters.lat2);\r\n\r\n        this.lonCount = lonsList.length;\r\n        this.latCount = latsList.length;\r\n\r\n        console.log('Calculating quantiles');\r\n        let start = new Date();\r\n        this.zMin = quantile(this.variableValues, .08);\r\n        console.log(new Date() - start);\r\n        start = new Date();\r\n        this.zMax = quantile(this.variableValues, .92);\r\n        console.log(new Date() - start);\r\n\r\n        // Expanded arrays to be used in plots\r\n        let lats = [];\r\n        let lons = []\r\n\r\n        console.log('Generating spatial arrays');\r\n        start = new Date();\r\n        for(let i = 0; i < latsList.length; i ++){\r\n            for(let j = 0; j < lonsList.length; j++){\r\n                lats.push(latsList[i]);\r\n                lons.push(lonsList[j]);\r\n            }\r\n        }\r\n\r\n        this.lats = lats;\r\n        this.lons = lons;\r\n        console.log(new Date() - start);\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        if(this.depths.size === 0) this.depths.add('Surface');\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const lonInterval = 1;\r\n        const latInterval = this.lonCount;\r\n        const depthInterval = latInterval * this.latCount;\r\n        const dateInterval = depthInterval * this.depths.size;\r\n\r\n        // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n        variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, depthInterval, this.depths.size));\r\n        variableValueSubsets = flattenArray(variableValueSubsets);\r\n\r\n        // Contour and heatmap compute mean variable values per lat and lon\r\n        // when not split by date and/or time\r\n        if(subType === vizSubTypes.contourMap || subType === vizSubTypes.heatmap) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    this.depths.size, \r\n                    this.depths.size\r\n                    );\r\n    \r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    this.depths.size, \r\n                    1, \r\n                    this.dates.size\r\n                    );\r\n    \r\n            } else {\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    variableValueSubsets.length, \r\n                    variableValueSubsets.length\r\n                    );            \r\n            }\r\n        } \r\n        \r\n        // Histograms split and aggregate without computing means\r\n        else if (subType === vizSubTypes.histogram) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets, \r\n                    1,\r\n                    this.depths.size,\r\n                    this.depths.size\r\n                    );\r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets,\r\n                    this.depths.size,\r\n                    1,\r\n                    this.dates.size\r\n                );\r\n            } else {\r\n                variableValueSubsets = [this.variableValues];\r\n            }\r\n        }\r\n\r\n        // Nothing here yet\r\n        else {}\r\n\r\n        return variableValueSubsets;\r\n    }    \r\n}\r\n\r\nexport default SpaceTimeData;","const storedProcedures = {\r\n    sectionMap: 'uspSectionMap',\r\n    timeSeries: 'uspTimeSeries',\r\n    spaceTime: 'uspSpaceTime',\r\n    depthProfile: 'uspDepthProfile'\r\n}\r\n\r\nexport default storedProcedures;","class TimeSeriesData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.dates = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depth = null;\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.depthIndexAdjust = row.length === 6 ? 1 : 0;\r\n            this.lat = row[1];\r\n            this.lon = row[2];\r\n            this.depth = row.length === 6 ? row[3] : false;\r\n        }\r\n\r\n        this.variableValues.push(row[3 + this.depthIndexAdjust]);\r\n        this.stds.push(row[4 + this.depthIndexAdjust]);\r\n        this.dates.push(row[0]);\r\n    }\r\n\r\n    finalize() {\r\n        if(this.depth === false) this.depth = 'Surface';\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }    \r\n}\r\n\r\nexport default TimeSeriesData;","class DepthProfileData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depths = [];\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.lat = parseFloat(row[0]);\r\n            this.lon = parseFloat(row[1]);\r\n        }\r\n\r\n        this.variableValues.push(parseFloat(row[2]));\r\n        this.stds.push(parseFloat(row[3]));\r\n        this.depths.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        // pass\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }    \r\n}\r\n\r\nexport default DepthProfileData;","import { quantile } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/MapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/FlattenArray';\r\nimport splitData from '../Utility/SplitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/MergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/MergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\n\r\nclass SectionMapData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        \r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n        \r\n        this.lonStart = null;\r\n        this.latStart = null;\r\n        this.lonCount = null;\r\n        this.latCount = null;\r\n        \r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.orientation = null;\r\n        this.latsDistinct = null;\r\n        this.lonsDistinct = null;\r\n\r\n        this.plotLats = null;\r\n        this.plotLons = null;\r\n        this.zonalPlotDepths = null;\r\n        this.meridionalPlotDepths = null;\r\n    }\r\n\r\n    // time, lat, lon, depth, value\r\n    add(row) {\r\n        // Only on first row\r\n        if(this.latStart === null) {\r\n            this.latStart = parseFloat(row[1]);\r\n            this.lonStart = parseFloat(row[2]);\r\n        }\r\n\r\n        this.depths.add(row[3]);\r\n        this.dates.add(row[0]);\r\n\r\n        this.variableValues.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        const spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n\r\n        // Simple arrays of lats and lons\r\n        let lonsList = generateSpatialArray(this.lonStart, spatialResolution, this.parameters.lon2);\r\n        let latsList = generateSpatialArray(this.latStart, spatialResolution, this.parameters.lat2);\r\n\r\n        this.lonCount = lonsList.length;\r\n        this.latCount = latsList.length;\r\n\r\n        this.lonsDistinct = lonsList;\r\n        this.latsDistinct = latsList;\r\n\r\n        console.log('Calculating quantiles');\r\n        let start = new Date();\r\n        this.zMin = quantile(this.variableValues, .08);\r\n        console.log(new Date() - start);\r\n        start = new Date();\r\n        this.zMax = quantile(this.variableValues, .92);\r\n        console.log(new Date() - start);\r\n\r\n        // Expanded arrays to be used in plots\r\n        let lats = [];\r\n        let lons = []\r\n\r\n        console.log('Generating spatial arrays');\r\n        start = new Date();\r\n\r\n        for(let i = 0; i < latsList.length; i ++){\r\n            for(let j = 0; j < this.depths.size; j++){\r\n                lats.push(latsList[i]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < lonsList.length; i ++){\r\n            for(let j = 0; j < this.depths.size; j++){\r\n                lons.push(lonsList[i]);\r\n            }\r\n        }\r\n\r\n        this.plotLats = lats;\r\n        this.plotLons = lons;\r\n\r\n        let zonalPlotDepths = [];\r\n        let meridionalPlotDepths = [];\r\n        let depthsList = Array.from(this.depths).map(depth => parseFloat(depth));\r\n\r\n        for(let i = 0; i < this.latsDistinct.length; i++){\r\n            for(let j = depthsList.length - 1; j > -1; j--){\r\n                meridionalPlotDepths.push(depthsList[j]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < this.lonsDistinct.length; i++){\r\n            for(let j = depthsList.length - 1; j > -1; j--){\r\n                zonalPlotDepths.push(depthsList[j]);\r\n            }\r\n        }\r\n\r\n        this.zonalPlotDepths = zonalPlotDepths;\r\n        this.meridionalPlotDepths = meridionalPlotDepths;\r\n        \r\n        this.orientation = this.lonCount > this.latCount ? 'zonal' : 'meridional';\r\n        console.log(new Date() - start);\r\n    }\r\n\r\n    // Direction is meridional or zonal\r\n    generatePlotData(orientation, splitByDate, splitBySpace) {\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const depthInterval = 1;\r\n        const lonInterval = this.depths.size;\r\n        const latInterval = lonInterval * this.lonCount;\r\n        const dateInterval = latInterval * this.latCount;\r\n\r\n        // // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n\r\n        // either latCount or lonCount depending on orientation\r\n        let spaceCount;\r\n\r\n        if(orientation == 'zonal') {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, latInterval, this.latCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = this.latCount;\r\n        }\r\n\r\n        else {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, lonInterval, this.lonCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = this.lonCount;\r\n        }\r\n\r\n        if(splitByDate && splitBySpace){\r\n            // pass\r\n        } else if (splitByDate){\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                spaceCount,\r\n                spaceCount\r\n            )\r\n        } else if (splitBySpace) {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                spaceCount,\r\n                1,\r\n                this.dates.size\r\n            )\r\n        } else {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                variableValueSubsets.length,\r\n                variableValueSubsets.length\r\n            )\r\n        }\r\n\r\n        return variableValueSubsets;\r\n    }    \r\n}\r\n\r\nexport default SectionMapData;","import ndjson from 'ndjson';\r\nimport CSVParser from 'csv-parse';\r\n\r\nimport { apiUrl } from './config';\r\nimport SpaceTimeData from './Classes/SpaceTimeData';\r\n\r\nimport storedProcedures from './Enums/storedProcedures';\r\nimport TimeSeriesData from './Classes/TimeSeriesData';\r\nimport DepthProfileData from './Classes/DepthProfileData';\r\nimport SectionMapData from './Classes/SectionMapData';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    // let ndjsonParser = ndjson.parse();\r\n    // ndjsonParser.on('data', data => {\r\n    //     catalog.push(data);\r\n    // })\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            catalog.push(record)\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/catalog/new', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\n// api.visualization.queryRequest = async(query) => {\r\n//     const decoder = new TextDecoder();\r\n//     let vizData = [];\r\n\r\n//     let ndjsonParser = ndjson.parse();\r\n\r\n//     ndjsonParser.on('data', data => {\r\n//         vizData.push(data);\r\n//     })\r\n\r\n//     let response = await fetch(apiUrl + '/dataretrieval/query?query=' + query, fetchOptions);\r\n\r\n//     if(!response.ok) return false;\r\n\r\n//     let body = response.body;\r\n//     let reader = body.getReader();\r\n//     let readerIsDone = false;\r\n\r\n//     while(!readerIsDone){\r\n//         let chunk = await reader.read();\r\n//         if(chunk.done) {\r\n//             readerIsDone = true;\r\n//         }\r\n//         else {\r\n//             ndjsonParser.write(decoder.decode(chunk.value));\r\n//         };\r\n//     }\r\n//     return vizData;\r\n// }\r\n\r\napi.visualization.storedProcedureRequest = async(payload) => {\r\n    const decoder = new TextDecoder();\r\n    var vizData;\r\n\r\n    switch(payload.parameters.spName) {\r\n        case storedProcedures.spaceTime:\r\n            vizData = new SpaceTimeData(payload);\r\n            break;\r\n\r\n        case storedProcedures.timeSeries:\r\n            vizData = new TimeSeriesData(payload);\r\n            break;\r\n\r\n        case storedProcedures.depthProfile:\r\n            vizData = new DepthProfileData(payload);\r\n            break;\r\n\r\n        case storedProcedures.sectionMap:\r\n            vizData = new SectionMapData(payload);\r\n            break;\r\n\r\n        default:\r\n            console.log('Unknown sproc name');\r\n    }\r\n\r\n    let response = await fetch(apiUrl + '/api/data/sp?' + storedProcedureParametersToUri(payload.parameters), fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            vizData.add(record);\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    vizData.finalize();\r\n    // console.log(vizData);\r\n    // throw new Error();\r\n    return vizData;\r\n}\r\n\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;\r\n}\r\n\r\nexport default api;\r\n\r\n// Test for splitData\r\n// let depthMap = {};\r\n//     let dateMap = {};\r\n\r\n//     let depthCount = 0;\r\n//     vizData.depths.forEach(depth => {\r\n//         depthMap[depth] = depthCount;\r\n//         depthCount ++;\r\n//     })\r\n\r\n//     let dateCount = 0;\r\n//     vizData.dates.forEach(date => {\r\n//         dateMap[date] = dateCount;\r\n//         dateCount ++;\r\n//     })\r\n    \r\n//     let splitData = vizData.generatePlotData(true,true);\r\n//     console.log(splitData);\r\n//     for(let i = 0; i < tempArr.length; i++){\r\n//         let theValue = tempArr[i].Fe\r\n//         let theIndex = dateMap[tempArr[i].time] * vizData.depths.size + depthMap[tempArr[i].depth];\r\n//         console.log(splitData[theIndex]);\r\n//         console.log(theValue);\r\n//         if(splitData[theIndex].includes(theValue)) console.log('correct');\r\n//         else {\r\n//             console.log('Incorrect'); \r\n//             return;\r\n//         }\r\n//     }\r\n\r\n//     console.log(depthMap);\r\n//     console.log(dateMap);","import { put, takeLatest, all, call } from 'redux-saga/effects';\r\nimport Cookies from 'js-cookie';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    \r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){    \r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    \r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    \r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(action){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    \r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    \r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    \r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    console.log(action);\r\n    console.log(`Retrieving ${action.payload.parameters.fields}`);\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    \r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload);\r\n    console.log(`Got ${action.payload.parameters.fields}`);\r\n    \r\n    // Result will be an object containing variable values and describing date shape\r\n    if(!result){\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen(\"Request failed\"));\r\n    } else {\r\n        if(result.variableValues.length > 0){\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            yield put(visualizationActions.addChart({subType: action.payload.subType, data:result}));\r\n           \r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges. Try selecting a different date or depth range.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* getTableStats(action){\r\n    yield put(visualizationActions.getTableStatsRequestProcessing());\r\n    let result = yield call(api.visualization.getTableStats, action.payload.tableName);\r\n    \r\n    if(result) {\r\n        yield put(visualizationActions.storeTableStats({[action.payload.tableName]:result}));\r\n    } else {\r\n        yield put(interfaceActions.snackbarOpen(`Failed to retrieve table stats for ${action.payload.tableName}`)); \r\n    }\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\nfunction* watchGetTableStats(){\r\n    yield takeLatest(visualizationActionTypes.GET_TABLE_STATS, getTableStats);\r\n}\r\n  \r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        watchGetTableStats()\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return state;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    getCurrentPath = () => {\r\n        switch(this.props.location.pathname){\r\n            case '/apikeymanagement': return 0;\r\n            case '/': return 1;\r\n            case '/visualization': return 2;\r\n            case '/register': return 3;\r\n            default: return 0;\r\n        }\r\n    };\r\n\r\n    // Debug button\r\n    beepBoop = () => {\r\n        console.log(this.props);\r\n        Cookies.set('hi','there');\r\n        Cookies.get();\r\n    };\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <Tabs value={this.getCurrentPath() || 0} onChange={this.handleChange}>\r\n                        <Tab key='0' component={Link} to={{pathname: '/apikeymanagement'}} label='API Keys' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='1' component={Link} to={{pathname: '/'}} label='Catalog' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='2' component={Link} to={{pathname: '/visualization'}} label='Visualization' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        {this.props.user ? '' : <Tab key='3' component={Link} to={{pathname: '/register'}} label='Register' onClick={this.props.restoreInterfaceDefaults}/>}\r\n                        {this.props.user ? '' : <Tab key='4' label='Log In' onClick={this.props.showLoginDialog}/>}\r\n                        {this.props.user ? <Tab key='5' label={`Welcome ${this.props.user.firstName} ${this.props.user.lastName}!`}/> : ''}\r\n                        {this.props.user ? <Tab key='4' label='Log Out' onClick={this.handleLogOut}/> : ''}                        \r\n                        <Tab key='6' label='Debug' onClick={this.beepBoop}/>\r\n                    </Tabs>                    \r\n                </Toolbar>\r\n                {/* <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/> */}\r\n            </AppBar>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>       \r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Keys\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n            </Paper>\r\n            </React.Fragment>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires a user account. Please <Link component={RouterLink} to={{pathname: '/apikeymanagement'}} onClick={() => props.showLoginDialog()}> log in\r\n            </Link> or <Link component={RouterLink} to={{pathname: '/register'}}> register\r\n            </Link>.\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user ? <ApiKeyManagement/> : <LoginRequiredPrompt/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'Variable'],\r\n    ['Spatial Resolution', 'Spatial_Resolution'],\r\n    ['Temporal Resolution', 'Temporal_Resolution'],\r\n    ['Unit', 'Unit'],\r\n    ['Process Level', 'Process_Level'],\r\n    ['Study Domain', 'Study_Domain'],\r\n    ['SQL Table Name', 'Table_Name']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        margin: '-10px auto 0px auto',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(2),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing(2),\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        width: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={8} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={imageSource + 'viz_sample.png'} alt=\"Sample Visualization\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.Dataset_Description}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.Data_Source}\r\n                        </Typography> <br></br>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.Distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable} size='small'>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst detailCellRendererParams = {\r\n  template:\r\n    '<div style=\"height: 100%; box-sizing: border-box\" class=\"testClass\">' +\r\n      '  <div style=\"height: 10%;\">Call Details</div>' +\r\n      '  <div ref=\"eDetailGrid\" style=\"height: 90%;\"></div>' +\r\n    \"</div>\"\r\n}\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"Long_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"Variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"Table_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"Dataset_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"Make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"Sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"Study_Domain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"Process_Level\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"Spatial_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"Temporal_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"Unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'Keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '60vh', \r\n    width: '90%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '60px 5vw',\r\n    padding: '30px'\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n        <Paper elevation={12} className={classes.gridPaper}>\r\n          <TextField\r\n            className={classes.gridSearch}\r\n            autoFocus={true}\r\n            margin=\"normal\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            variant='outlined'\r\n            name='filterText'\r\n            value={this.state.filterText}\r\n            onChange={this.handleChange}\r\n            label=\"Variable Search\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n          />\r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              suppressDragLeaveHidesColumns= {true}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n              detailCellRendererParams={detailCellRendererParams}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog) return <AGGridWrapper catalog={this.props.catalog}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n        else if(this.props.catalogRequestState === states.failed) return <p>Failed to get catalog. Have you tried turning it off and then on again?</p>\r\n        else return <p>I don't know how we got here. Please debug the catalog retrieval process.</p>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const colors = {\r\n    orange: '#FF8000',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9'\r\n}\r\n\r\nexport default colors;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    const { classes, data } = props;\r\n\r\n    if(!data) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{data.Variable}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {data.Long_Name}\r\n                </DialogContentText>\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{data.Sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{data.Spatial_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{data.Temporal_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{data.Time_Min ? data.Time_Min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{data.Time_Max ? data.Time_Max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{data.Lat_Min}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{data.Lat_Max}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{data.Lon_Min}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{data.Lon_Max}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{data.Depth_Min || 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{data.Depth_Max || 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as List } from \"react-window\";\r\n\r\n// import createFilterOptions from \"react-select-fast-filter-options\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/TextField';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport { \r\n    BarChart,\r\n    Map,\r\n    Timeline,\r\n    Waves,\r\n    Language,\r\n    LeakAdd,\r\n    ArrowDropDown,\r\n    LibraryBooks\r\n} from '@material-ui/icons';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport { Button } from '@material-ui/core';\r\nimport TableStatsDialog from './TableStatsDialog';\r\n\r\nconst styles = (theme) => ({\r\n    dataRetrievalFormPaper: {\r\n        width: '1200px',\r\n        height: '205px',\r\n        padding: theme.spacing(2.5),\r\n        position:'fixed',\r\n        top: '10px',\r\n        left: '50%',\r\n        marginLeft: '-600px',\r\n        zIndex: 2,\r\n        paddingTop: theme.spacing(1.5),\r\n    },\r\n\r\n    dataRetrievalFormField: {\r\n        padding:`0px ${theme.spacing(1)}`\r\n    },\r\n\r\n    retrieveDataButton: {\r\n        margin:'10px auto'\r\n    },\r\n\r\n    variableSelect: {\r\n        margin: '0 30px 20px 30px'\r\n    },\r\n\r\n    visualizationSpeedDial: {\r\n        position: 'relative',\r\n        top: '5px',\r\n        left: '30px'\r\n    },\r\n\r\n    visualizeButton: {\r\n        borderRadius:'10%',\r\n        width: '100px',\r\n        height:'40px',\r\n        margin: 'auto 0',\r\n        backgroundColor: theme.palette\r\n    },\r\n\r\n    visualizeButtonText: {\r\n        dominantBaseline: \"middle\",\r\n        textAnchor: \"middle\"\r\n    },\r\n\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    datePickerGridSection: {\r\n        paddingLeft: '40px !important',\r\n        paddingRight: '40px !important'\r\n    },\r\n\r\n    shortenHeight: {\r\n        height: '60px'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nconst visualizationSpeedDialActions = [\r\n    {icon: <Map/>, name: vizSubTypes.sectionMap },\r\n    {icon: <Timeline/>, name: vizSubTypes.timeSeries},\r\n    {icon: <BarChart/>, name: vizSubTypes.histogram},\r\n    {icon: <Waves/>, name: vizSubTypes.depthProfile},\r\n    {icon: <Language/>, name: vizSubTypes.heatmap},\r\n    {icon: <LeakAdd/>, name: vizSubTypes.contourMap}\r\n];\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nclass MenuList extends Component {\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <List\r\n                style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length === 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <ArrowDropDown />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nclass DataRetrievalForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('Variable');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            visualizationSpeedDialOpen: false,\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: '',\r\n        }\r\n    }\r\n\r\n    // When we get the catalog add them to the search\r\n    // This is not reactive - it mutates the search piece of state in \r\n    // a way that is not visible to react and will not trigger a re-render.\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    // Includes every variable that returns true when filtering\r\n    // variableWrapper parameter is {label, value, variable object}\r\n    filterVariables = (variableWrapper, searchString) => {\r\n\r\n        // Create one string from all column values (using Boolean to remove falsey elements)\r\n        let values = Object.values(variableWrapper.data).filter(Boolean).join(' ');\r\n\r\n        let searchTerms = searchString.split(' ');\r\n\r\n        // array.some method will return a true as soon as we failed to\r\n        // find one search term, which we negate.\r\n        return !searchTerms.some(term => values.indexOf(term) === -1)\r\n    }\r\n\r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.Variable,\r\n            label: item.Variable === item.Long_Name ? item.Variable : item.Variable + ' : ' + item.Long_Name,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField } = this.state;\r\n        \r\n        const { classes, \r\n            tableName,\r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            catalog,\r\n            depthIsInvalid,\r\n            latIsInvalid,\r\n            lonIsInvalid,\r\n            catalogRequestState\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        return (\r\n            <div className={this.props.showUI ? '' : classes.displayNone}>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n                <Paper className={classes.dataRetrievalFormPaper}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={11} className={classes.shortenHeight}>\r\n                            <Select\r\n                                isLoading = {catalogRequestState === states.inProgress}\r\n                                components={{\r\n                                    IndicatorSeparator:'',\r\n                                    DropdownIndicator,\r\n                                    Option,\r\n                                    MenuList,\r\n                                    SingleValue,\r\n                                }}\r\n                                isClearable\r\n                                onInputChange={this.onAutoSuggestChange}\r\n                                filterOption={null}\r\n                                className={classes.variableSelect}\r\n                                autoFocus\r\n                                escapeClearsValue\r\n                                name=\"fields\"\r\n                                label=\"Variables\"\r\n                                options={options}\r\n                                onChange={this.props.updateFields}\r\n                                value={fields}\r\n                                placeholder=\"Variable Search\"\r\n                                styles={{\r\n                                    menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                                    input: provided => ({...provided,\r\n                                        color: 'white',\r\n                                        fontFamily: '\"Lato\", sans-serif'\r\n                                    }),\r\n\r\n                                    control: provided => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        border: '1px solid #333333',\r\n                                        '&:hover': { borderColor: 'white' },\r\n                                        '&:focus-within': { borderColor: colors.orange },\r\n                                    }),\r\n\r\n                                    placeholder: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        fontSize: '14px'\r\n                                    }),\r\n\r\n                                    noOptionsMessage: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        backgroundColor: colors.backgroundGray\r\n                                    }),\r\n\r\n                                    option: (provided, state) => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        color: state.data.data.Sensor === 'Satellite' ? '#1acf02' : state.data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        '&:hover': { backgroundColor: '#383838' },\r\n                                        '&:after': { \r\n                                            content: state.data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            float: 'left'\r\n                                        },\r\n                                    }),\r\n\r\n                                    singleValue: (provided, state) => ({...provided,\r\n                                        fontFamily: state.data.data.Sensor === 'Satellite' ? 'Font Awesome 5 Free': '\"Lato\", sans-serif',\r\n                                        color: state.data.data.Sensor === 'Satellite' ? '#1acf02' : state.data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        paddingRight: '20px',\r\n                                        '&:after': { \r\n                                            content: state.data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            fontSize: '18px',\r\n                                            position: 'relative',\r\n                                            left: '8px',\r\n                                            top: '3px'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n                                    colors: {\r\n                                    ...theme.colors,\r\n                                    // Background color of hovered options\r\n                                    primary25: '#e0e0e0',\r\n                                    primary: '#212121',\r\n                                    },\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={1}>\r\n                            <IconButton\r\n                                disabled={this.props.fields === null}\r\n                                onClick={this.handleTableStatsDialogOpen}\r\n                            >\r\n                                <LibraryBooks/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    disableFuture\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    disableFuture\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startDepth\"\r\n                                    label=\"Start Depth(m)\"\r\n                                    name=\"depth1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={depthIsInvalid(this.props.depth1)}\r\n                                    value={depth1}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endDepth\"\r\n                                    label=\"End Depth(m)\"\r\n                                    name=\"depth2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={depthIsInvalid(this.props.depth2)}\r\n                                    value={depth2}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startLat\"\r\n                                    label=\"Start Latitude(deg)\"\r\n                                    name=\"lat1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={latIsInvalid(lat1)}\r\n                                    value={lat1}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endLat\"\r\n                                    label=\"End Latitude(deg)\"\r\n                                    name=\"lat2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={latIsInvalid(lat2)}\r\n                                    value={lat2}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startLon\"\r\n                                    label=\"Start Longitude(deg)\"\r\n                                    name=\"lon1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={lonIsInvalid(lon1)}\r\n                                    value={lon1}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endLon\"\r\n                                    label=\"End Longitude(deg)\"\r\n                                    name=\"lon2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={lonIsInvalid(lon2)}\r\n                                    value={lon2}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>   \r\n                        </Grid>\r\n                        <SpeedDial\r\n                            ariaLabel=\"Visualization Speed Dial\"\r\n                            disabled\r\n                            ButtonProps={{\r\n                                variant: 'round',\r\n                                classes: {\r\n                                    root: classes.visualizeButton\r\n                                },\r\n                                color: 'secondary'\r\n                            }}\r\n                            className={classes.visualizationSpeedDial}\r\n                            icon={<svg height=\"30\" width=\"200\">\r\n                                    <text x=\"50%\" y=\"50%\" fill='white' fontVariant='normal' className={classes.visualizeButtonText}>Visualize</text>\r\n                                </svg>}\r\n                            onBlur={this.handleVisualizationSpeedDialClose}\r\n                            onClick={this.handleVisualizationSpeedDialClick}\r\n                            onClose={this.handleVisualizationSpeedDialClose}\r\n                            onFocus={this.handleVisualizationSpeedDialOpen}\r\n                            onMouseEnter={this.handleVisualizationSpeedDialOpen}\r\n                            onMouseLeave={this.handleVisualizationSpeedDialClose}\r\n                            open={this.state.visualizationSpeedDialOpen}\r\n                            direction= 'right'\r\n                        >\r\n                            {visualizationSpeedDialActions.map(action => (                                   \r\n                                <SpeedDialAction\r\n                                    key={action.name}\r\n                                    icon={action.icon}\r\n                                    tooltipTitle={action.name}\r\n                                    onClick={() => this.props.onVisualize(action.name)}\r\n                                    tooltipPlacement='bottom'\r\n                                />\r\n                            ))}\r\n                        </SpeedDial>                            \r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataRetrievalForm));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    ...state\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        bottom: '10px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst DebugButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    const logState = () => {\r\n        props.statePieces.forEach(statePiece => {\r\n            console.log(statePiece);\r\n            console.log(props[statePiece]);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={logState}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Debug</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DebugButton));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { clearCharts, clearMaps } from '../Redux/actions/visualization';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    clearCharts,\r\n    clearMaps\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '250px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst ClearVisualizationsButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    const clearVisualizations = () => {\r\n        props.clearCharts();\r\n        props.clearMaps();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={clearVisualizations}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Clear</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ClearVisualizationsButton));\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '10px',\r\n        zIndex: 2,\r\n        textDecoration:'none'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst GoBackButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} component={Link} to={{pathname: '/'}}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Go Back</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(GoBackButton);","import React, { useState } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { Paper, Typography } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nconst handleContourMap = (subsets, infoObject, splitByDate, splitByDepth) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        \r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Merged Depths' : \r\n            depths[index % depths.length].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: infoObject.zMin,\r\n                    zmax: infoObject.zMax,\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'contour',\r\n                    contours: {\r\n                        coloring: 'heatmap',\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: '.2e'\r\n                    },\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    }\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {title: 'Longitude', color: '#ffffff'},\r\n                yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = !splitByDate ? 'Aggregated Time' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Aggregated Depth' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHeatmap = (subsets, infoObject, splitByDate, splitByDepth) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        try {\r\n            return (\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n    \r\n                data={[\r\n                    {   \r\n                        zauto: false,\r\n                        zmin: infoObject.zMin,\r\n                        zmax: infoObject.zMax,\r\n                        zsmooth: subset.length < 20000 ? 'best' : 'fast',\r\n                        x: infoObject.lons,\r\n                        y: infoObject.lats,\r\n                        z: subset,\r\n                        name: infoObject.parameters.fields,\r\n                        type: 'heatmap',\r\n                        colorbar: {\r\n                            title: {\r\n                                text: `[${infoObject.metadata.Unit}]`\r\n                            },\r\n                            exponentformat:'power'\r\n                        }\r\n                    }\r\n                ]}                \r\n                key={index}\r\n\r\n                layout= {{\r\n                    font: {color: '#ffffff'},\r\n                    title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}   ${date}`,\r\n                    xaxis: {\r\n                        title: 'Longitude[\\xB0]', \r\n                        color: '#ffffff',\r\n                        exponentformat: 'power'\r\n                    },\r\n                    yaxis: {\r\n                        title: 'Latitude[\\xB0]', \r\n                        color: '#ffffff',\r\n                        exponentformat: 'power'\r\n                    },\r\n                    paper_bgcolor: colors.backgroundGray,\r\n                    annotations: [\r\n                        {\r\n                            text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                                infoObject.metadata.Distributor : \r\n                                infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                            font: {\r\n                                color: 'white',\r\n                                size: 10\r\n                            },\r\n                            xref: 'paper',\r\n                            yref: 'paper',\r\n                            yshift: -202,\r\n                            showarrow: false,\r\n                        }\r\n                    ]\r\n    \r\n                }}   \r\n            />)\r\n        } catch (e) {\r\n            console.log('Failed to plot subset');\r\n            console.log(subset);\r\n        }\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n        backgroundColor: colors.backgroundGray\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst buttonProps = {\r\n    size: 'small',\r\n    color: 'primary',\r\n    variant: 'contained'\r\n}\r\n\r\nconst SpaceTimeChart = (props) => {\r\n    console.log('SpaceTimeChart');\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { lats, lons, dates, depths } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitByDepth, setSplitByDepth] = useState(false);\r\n    const [subTypeState, setSubTypeState] = useState(subType);\r\n\r\n    console.log('Generating plot subsets');\r\n    let start = new Date();\r\n    const subSets = data.generatePlotData(subTypeState, splitByDate, splitByDepth);\r\n    console.log(new Date() - start);\r\n    var plots;\r\n    console.log('Creating plots');\r\n    start = new Date();\r\n    switch(subTypeState){\r\n        case vizSubTypes.contourMap:\r\n            plots = handleContourMap(subSets, data, splitByDate, splitByDepth);\r\n            break;\r\n\r\n        case vizSubTypes.heatmap:\r\n            plots = handleHeatmap(subSets, data, splitByDate, splitByDepth);\r\n            break;\r\n\r\n        case vizSubTypes.histogram:\r\n            plots = handleHistogram(subSets, data, splitByDate, splitByDepth);\r\n            break;\r\n\r\n        default:\r\n            plots = '';\r\n            break;        \r\n\r\n    }\r\n        \r\n    console.log(new Date() - start);\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n                <Button {...buttonProps} disabled={dates.size===1} onClick={() => setSplitByDate(!splitByDate)}>{splitByDate ? 'Merge Dates' : 'Split By Date'}</Button>\r\n                <Button {...buttonProps} disabled={depths.size===1} onClick={() => setSplitByDepth(!splitByDepth)}>{splitByDepth ? 'Merge Depths' : 'Split By Depth'}</Button>\r\n                \r\n                {subTypeState == vizSubTypes.heatmap ? '' : \r\n                    <Button {...buttonProps} \r\n                        onClick={() => setSubTypeState(vizSubTypes.heatmap)}\r\n                        >Switch to Heatmap\r\n                    </Button>\r\n                }\r\n                \r\n                {subTypeState == vizSubTypes.contourMap ? '' : \r\n                    <Button {...buttonProps} \r\n                        onClick={() => setSubTypeState(vizSubTypes.contourMap)}\r\n                        >Switch to Contour\r\n                    </Button>\r\n                }\r\n                \r\n                {subTypeState == vizSubTypes.histogram ? '' : \r\n                    <Button {...buttonProps}\r\n                        onClick={() => setSubTypeState(vizSubTypes.histogram)}\r\n                        >Switch to Histogram\r\n                    </Button>\r\n                }\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(SpaceTimeChart);\r\n\r\n{/* <div key={index} className={classes.chartWrapper}>\r\n<Plot\r\n    style= {{\r\n        position: 'relative',\r\n        display:'inline-block'\r\n    }}\r\n    key={index}\r\n    layout= {{...chart.layout,\r\n\r\n        title: `${chart.parameters.fields} - ${chart.subType} - ${chart.parameters.dt1} - ${Number(chart.parameters.depth1) || 'Surface'}`,\r\n        font: {... chart.layout.font,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        xaxis: {...chart.layout.xaxis,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        yaxis: {...chart.layout.yaxis,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        paper_bgcolor: colors.backgroundGray,\r\n\r\n        annotations: [\r\n            {\r\n                text: `Source: ${chart.metadata.distributor.length < 30 ? \r\n                        chart.metadata.distributor : \r\n                        chart.metadata.distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                font: {\r\n                    color: 'white',\r\n                    size: 10\r\n                },\r\n                xref: 'paper',\r\n                yref: 'paper',\r\n                yshift: -202,\r\n                showarrow: false,\r\n            }\r\n        ]\r\n    }}\r\n    data={chart.data}\r\n/>\r\n</div>   */}\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { Paper, Typography } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n        backgroundColor: colors.backgroundGray\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst buttonProps = {\r\n    size: 'small',\r\n    color: 'primary',\r\n    variant: 'contained'\r\n}\r\n\r\nconst TimeSeriesChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { stds, variableValues, dates, parameters, metadata, zMin, zMax } = data;\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n            </div>\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                  x: dates,\r\n                  y: variableValues,\r\n                  error_y: {\r\n                    type: 'data',\r\n                    array: stds,\r\n                    opacity: 0.2,\r\n                    color: 'gray',\r\n                    visible: true\r\n                  },\r\n                  name: parameters.fields,\r\n                  type: 'scatter',\r\n                  line: {color: '#e377c2'},\r\n                  },\r\n                ]}\r\n\r\n                layout= {{\r\n                    title: `${parameters.fields}[${metadata.Unit}]  ${parameters.dt1} to ${parameters.dt2}`,\r\n\r\n                    paper_bgcolor: colors.backgroundGray,\r\n                    font: {\r\n                        color: '#ffffff'\r\n                    },\r\n                  xaxis: {\r\n                      title: 'Time',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: parameters.fields,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: [\r\n                    {\r\n                        text: `Source: ${metadata.Distributor.length < 30 ? \r\n                                metadata.Distributor : \r\n                                metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TimeSeriesChart);","import React, { useState } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { Paper, Typography } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n        backgroundColor: colors.backgroundGray\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst buttonProps = {\r\n    size: 'small',\r\n    color: 'primary',\r\n    variant: 'contained'\r\n}\r\n\r\nconst DepthProfileChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { stds, variableValues, depths, parameters, metadata } = data;\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n            </div>\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                  x: depths,\r\n                  y: variableValues,\r\n                  error_y: {\r\n                    type: 'data',\r\n                    array: stds,\r\n                    opacity: 0.2,\r\n                    color: 'gray',\r\n                    visible: true\r\n                  },\r\n                  name: parameters.fields,\r\n                  type: 'scatter',\r\n                  line: {color: '#e377c2'},\r\n                  },\r\n                ]}\r\n\r\n                layout= {{\r\n                    title: `${parameters.fields}[${metadata.Unit}]  ${parameters.depth1} to ${parameters.depth2} meters`,\r\n\r\n                    paper_bgcolor: colors.backgroundGray,\r\n                    font: {\r\n                        color: '#ffffff'\r\n                    },\r\n                  xaxis: {\r\n                      title: 'Depth[m]',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: [\r\n                    {\r\n                        text: `Source: ${metadata.Distributor.length < 30 ? \r\n                                metadata.Distributor : \r\n                                metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(DepthProfileChart);","import React, { useState } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { Paper, Typography } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nconst handleSectionMap = (subsets, infoObject, splitByDate, splitBySpace, orientation) => {\r\n\r\n    const dates = Array.from(infoObject.dates);\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n\r\n    const distinctMeridiansOrParallelsForSplitting = \r\n        orientation === 'zonal' ?\r\n        infoObject.latsDistinct : \r\n        infoObject.lonsDistinct;\r\n\r\n    const xAxisLabel = \r\n        orientation === 'zonal' ?\r\n        'Longitude' : \r\n        'Latitude';\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length < 2 ?\r\n            dates[0] :\r\n            !splitByDate ? \r\n                'Merged Dates' : \r\n                splitBySpace ? \r\n                    dates[Math.floor(index/distinctMeridiansOrParallelsForSplitting.length)].slice(0, 10) : \r\n                    dates[index];\r\n                \r\n        const spaceTitle = distinctMeridiansOrParallelsForSplitting.length <= 1 ? distinctMeridiansOrParallelsForSplitting[0] : \r\n            !splitBySpace ? `Merged ${xAxisLabel}s` : \r\n            `${distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length]} ${orientation === 'zonal' ? \r\n            'Parallel' :\r\n            'Meridian'}`\r\n \r\n\r\n        try {\r\n            return (\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n    \r\n                data={[\r\n                    {   \r\n                        zauto: false,\r\n                        zmin: infoObject.zMin,\r\n                        zmax: infoObject.zMax,\r\n                        zsmooth: subset.length < 20000 ? 'best' : 'fast',\r\n                        x: orientation === 'zonal' ? infoObject.plotLons : infoObject.plotLats,\r\n                        y: orientation === 'zonal' ? infoObject.zonalPlotDepths : infoObject.meridionalPlotDepths,\r\n                        z: subset,\r\n                        name: infoObject.parameters.fields,\r\n                        type: 'heatmap',\r\n                        colorbar: {\r\n                            title: {\r\n                                text: `[${infoObject.metadata.Unit}]`\r\n                            },\r\n                            exponentformat:'power'\r\n                        }\r\n                    }\r\n                ]}                \r\n                key={index}\r\n\r\n                layout= {{\r\n                    font: {color: '#ffffff'},\r\n                    title: `${variableName}[${infoObject.metadata.Unit}]  ${spaceTitle}   ${date}`,\r\n                    xaxis: {\r\n                        title: `${xAxisLabel}[\\xB0]`, \r\n                        color: '#ffffff',\r\n                        exponentformat: 'power'\r\n                    },\r\n                    yaxis: {\r\n                        title: 'Depth[m]', \r\n                        color: '#ffffff',\r\n                        exponentformat: 'power'\r\n                    },\r\n                    paper_bgcolor: colors.backgroundGray,\r\n                    annotations: [\r\n                        {\r\n                            text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                                infoObject.metadata.Distributor : \r\n                                infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                            font: {\r\n                                color: 'white',\r\n                                size: 10\r\n                            },\r\n                            xref: 'paper',\r\n                            yref: 'paper',\r\n                            yshift: -202,\r\n                            showarrow: false,\r\n                        }\r\n                    ]\r\n    \r\n                }}   \r\n            />\r\n            )\r\n        } catch (e) {\r\n            console.log('Failed to plot subset');\r\n            console.log(subset);\r\n        }\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n        backgroundColor: colors.backgroundGray\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst buttonProps = {\r\n    size: 'small',\r\n    color: 'primary',\r\n    variant: 'contained'\r\n}\r\n\r\nconst SectionMapChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { lats, lons, dates, latsDistinct, lonsDistinct } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitBySpace, setSplitBySpace] = useState(false);\r\n    const [orientation, setOrientation] = useState(data.orientation);\r\n\r\n    const numSpaceSplits = \r\n        orientation === 'zonal' ?\r\n        latsDistinct.length : \r\n        lonsDistinct.length\r\n\r\n    const splitOrientation = orientation === 'zonal' ?\r\n        'Longitudes' : \r\n        'Latitudes'\r\n\r\n    const alternateOrientation = orientation === 'zonal' ? 'meridional' : 'zonal';\r\n\r\n    const subsets = data.generatePlotData(orientation, splitByDate, splitBySpace);\r\n    var plots = handleSectionMap(subsets, data, splitByDate, splitBySpace, orientation);\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n                <Button {...buttonProps} disabled={dates.size === 1} onClick={() => setSplitByDate(!splitByDate)}>{splitByDate ? 'Merge Dates' : 'Split By Date'}</Button>\r\n                <Button {...buttonProps} disabled={numSpaceSplits === 1} onClick={() => setSplitBySpace(!splitBySpace)}>{splitBySpace ? `Merge ${splitOrientation}` : `Split By ${splitOrientation}`}</Button>\r\n                <Button {...buttonProps} disabled={numSpaceSplits === 1} onClick={() => setOrientation(alternateOrientation)}>Switch to {alternateOrientation}</Button>\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(SectionMapChart);\r\n\r\n{/* <div key={index} className={classes.chartWrapper}>\r\n<Plot\r\n    style= {{\r\n        position: 'relative',\r\n        display:'inline-block'\r\n    }}\r\n    key={index}\r\n    layout= {{...chart.layout,\r\n\r\n        title: `${chart.parameters.fields} - ${chart.subType} - ${chart.parameters.dt1} - ${Number(chart.parameters.depth1) || 'Surface'}`,\r\n        font: {... chart.layout.font,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        xaxis: {...chart.layout.xaxis,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        yaxis: {...chart.layout.yaxis,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        paper_bgcolor: colors.backgroundGray,\r\n\r\n        annotations: [\r\n            {\r\n                text: `Source: ${chart.metadata.distributor.length < 30 ? \r\n                        chart.metadata.distributor : \r\n                        chart.metadata.distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                font: {\r\n                    color: 'white',\r\n                    size: 10\r\n                },\r\n                xref: 'paper',\r\n                yref: 'paper',\r\n                yshift: -202,\r\n                showarrow: false,\r\n            }\r\n        ]\r\n    }}\r\n    data={chart.data}\r\n/>\r\n</div>   */}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport { Paper, Typography } from '@material-ui/core';\r\n\r\nimport colors from '../Enums/colors';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\n\r\nimport SpaceTimeChart from './ChartTypes/SpaceTimeChart';\r\nimport TimeSeriesChart from './ChartTypes/TimeSeriesChart';\r\nimport DepthProfileChart from './ChartTypes/DepthProfileChart';\r\nimport SectionMapChart from './ChartTypes/SectionMapChart';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsContainer: {\r\n        margin: '260px 0 0 100px'\r\n    },\r\n\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n        backgroundColor: colors.backgroundGray\r\n    }\r\n})\r\n\r\n\r\n\r\nconst handleTimeSeries = (chart) => ({\r\n    parameters: chart.parameters,\r\n    metadata: chart.metadata,\r\n    subType: chart.subType,\r\n    data: [\r\n      {\r\n      x: chart.data.map(row => row.time || row.month),\r\n      y: chart.data.map(row => row[chart.parameters.fields]),\r\n      error_y: {\r\n        type: 'data',\r\n        array: chart.data.map(row => row[chart.parameters.fields + '_std']),\r\n        opacity: 0.2,\r\n        color: 'gray',\r\n        visible: true\r\n      },\r\n      name: chart.parameters.fields,\r\n      type: 'scatter',\r\n      line: {color: '#e377c2'},\r\n      },\r\n    ],\r\n    layout: {\r\n      xaxis: {title: chart.data[0].time ? 'Time' : 'Month'},\r\n      yaxis: {title: chart.parameters.fields}\r\n    }\r\n  })\r\n\r\nconst handleSectionMap = (chart) => ({\r\n    parameters: chart.parameters,\r\n    metadata: chart.metadata,\r\n    subType: chart.subType,\r\n    data: [\r\n      {\r\n      x: chart.data.map(row => row.lat),\r\n      y: chart.data.map(row => row.depth),\r\n      z: chart.data.map(row => row[chart.parameters.fields]),\r\n      name: chart.parameters.fields,\r\n      type: 'heatmap',\r\n      }\r\n    ],\r\n    layout: {\r\n      xaxis: {title: 'Latitude'},\r\n      yaxis: {autorange: 'reversed', title: 'Depth [m]'}\r\n    }\r\n  })\r\n\r\nconst handleDepthProfile = (chart) => ({\r\n    parameters: chart.parameters,\r\n    metadata: chart.metadata,\r\n    subType: chart.subType,\r\n    data: [\r\n      {\r\n        x: chart.data.map(row => row.depth),\r\n        y: chart.data.map(row => row[chart.parameters.fields]),\r\n        error_y: {\r\n          type: 'data',\r\n          array: chart.data.map(row => row[chart.parameters.fields] + '_std'),\r\n          opacity: 0.2,\r\n          color: 'gray',\r\n          visible: true\r\n        },\r\n        name: chart.parameters.fields,\r\n        type: 'scatter',\r\n        line: {color: '#e377c2'},\r\n        },\r\n    ],\r\n    layout: {\r\n      xaxis: {title: 'Depth [m]'},\r\n      yaxis: {title: chart.parameters.fields}\r\n    }\r\n  })\r\n\r\n\r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n        const { classes, charts } = this.props;\r\n\r\n        return (\r\n            <div className={classes.chartsContainer}>\r\n                {charts.map((chart, index) => {\r\n                    switch(chart.data.parameters.spName){\r\n                        case storedProcedures.spaceTime:\r\n                          return <SpaceTimeChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.timeSeries:\r\n                          return <TimeSeriesChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.depthProfile:\r\n                          return <DepthProfileChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.sectionMap:\r\n                          return <SectionMapChart chart={chart} key={index}/>\r\n                        \r\n                        default:\r\n                          break;\r\n                  }\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));\r\n\r\n{/* <div key={index} className={classes.chartWrapper}>\r\n<Plot\r\n    style= {{\r\n        position: 'relative',\r\n        display:'inline-block'\r\n    }}\r\n    key={index}\r\n    layout= {{...chart.layout,\r\n\r\n        title: `${chart.parameters.fields} - ${chart.subType} - ${chart.parameters.dt1} - ${Number(chart.parameters.depth1) || 'Surface'}`,\r\n        font: {... chart.layout.font,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        xaxis: {...chart.layout.xaxis,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        yaxis: {...chart.layout.yaxis,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        paper_bgcolor: colors.backgroundGray,\r\n\r\n        annotations: [\r\n            {\r\n                text: `Source: ${chart.metadata.distributor.length < 30 ? \r\n                        chart.metadata.distributor : \r\n                        chart.metadata.distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                font: {\r\n                    color: 'white',\r\n                    size: 10\r\n                },\r\n                xref: 'paper',\r\n                yref: 'paper',\r\n                yshift: -202,\r\n                showarrow: false,\r\n            }\r\n        ]\r\n    }}\r\n    data={chart.data}\r\n/>\r\n</div>   */}","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport colors from '../Enums/colors';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '90px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    },\r\n\r\n    numberOfCharts: {\r\n        color: colors.orange\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst ChartsText = (props) => (\r\n    <React.Fragment>\r\n        Charts<span className={props.childClass}>{props.charts.length ? `(${props.charts.length})` : ''}</span>\r\n    </React.Fragment>\r\n)\r\n\r\nconst ToggleChartViewButton = (props) => {\r\n    const { classes, showCharts, charts } = props;\r\n\r\n    return (\r\n        <div>            \r\n            <Paper className={classes.buttonPaper} onClick={props.toggleChartView}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>{showCharts ? 'Globe' : <ChartsText charts={charts} childClass={classes.numberOfCharts}/>}</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(ToggleChartViewButton));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '170px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst GoBackButton = (props) => {\r\n    const { classes, showUI } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={props.toggleShowUI}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>{showUI ? 'Hide UI' : 'Show UI'}</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(GoBackButton);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() { \r\n        var measurementWidget = new this.props.esriModules.AreaMeasurement3D({view: this.props.view})\r\n        measurementWidget.watch('viewModel.measurement.area.text', () => {\r\n            this.props.updateDomainFromMap(measurementWidget.viewModel.tool.model.viewData.positionsGeographic);\r\n        })    \r\n    \r\n        this.props.view.ui.add(measurementWidget, 'bottom-right');\r\n        this.props.view.ui.add(new this.props.esriModules.Search({view: this.props.view}),'bottom-right')\r\n        // this.props.view.ui.add(new this.props.esriModules.Fullscreen({view: this.props.view}),'bottom-left')\r\n        return null;\r\n    }\r\n}\r\n\r\nclass MapContainer extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ basemap: 'satellite' }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3\r\n                    }}\r\n                >\r\n                    <UiComponents\r\n                        updateDomainFromMap={this.props.updateDomainFromMap}\r\n                        esriModules={{...this.props.esriModules}}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                    />\r\n                </Scene>    \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MapContainer));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\n// import VizTooltip from './VizTooltip';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport DataRetrievalForm from './DataRetrievalForm';\r\nimport DebugButton from './DebugButton';\r\nimport ClearVisualizationsButton from  './ClearVisualizationsButton';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { loadModules } from '@esri/react-arcgis';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport GoBackButton from './GoBackButton';\r\nimport Charts from './Charts';\r\nimport ToggleChartViewButton from './ToggleChartViewButton';\r\nimport ToggleHideUIButton from './ToggleHideUIButton';\r\nimport MapContainer from './MapContainer';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.sectionMap\r\n        }, \r\n        [vizSubTypes.timeSeries]: {\r\n            sp: storedProcedures.timeSeries,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: storedProcedures.depthProfile,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.heatmap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.heatmap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.contourMap\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    }\r\n})\r\n\r\nconst depthIsInvalid = (depth) => isNaN(depth) || depth < 0; \r\n\r\nconst lonIsInvalid = (lon) => isNaN(lon) || lon > 180 || lon < -180;\r\n\r\nconst latIsInvalid = (lat) => isNaN(lat) || lat > 90 || lat < -90;\r\n\r\nconst parseDate = (date) => {\r\n    var mm = date.getUTCMonth() + 1; // getMonth() is zero-based\r\n    var dd = date.getUTCDate();\r\n\r\n    return [date.getUTCFullYear(),\r\n        (mm>9 ? '' : '0') + mm,\r\n        (dd>9 ? '' : '0') + dd\r\n        ]\r\n        .join('-');    \r\n}\r\n\r\nclass Visualization extends Component {\r\n\r\n    state = {\r\n        filteredData: [],\r\n        dateSliderPosition: 3,\r\n        variable: 'SiO2_darwin_3day',\r\n        opacity: 1,\r\n        pickedIndex: null,\r\n        pickedLon: null,\r\n        pickedLat: null,\r\n        showCharts: false,\r\n        showUI: true,\r\n\r\n        spParams: {\r\n            tableName: '',\r\n            fields: null,\r\n            depth1: '0',\r\n            depth2: '3',\r\n            dt1: '2012-05-05',\r\n            dt2: '2012-05-12',\r\n            lat1: '38',\r\n            lat2: '40',\r\n            lon1: '-52',\r\n            lon2: '-50'\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'Fullscreen',\r\n            'EsriSceneView',\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/widgets/Fullscreen',\r\n            'esri/views/SceneView',\r\n        ]);\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        // Filter data on starting date\r\n        if(!prevProps.sampleData && this.props.sampleData){\r\n            this.handleDateSliderChange(null, 3);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleStartDateChange = (date) => {\r\n        let dateString = date instanceof Date ? parseDate(date) : date;\r\n        this.setState({...this.state, spParams: {...this.state.spParams, dt1:dateString}});\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        let dateString = date instanceof Date ? parseDate(date) : date;\r\n        this.setState({...this.state, spParams: {...this.state.spParams, dt2:dateString}});\r\n    }\r\n\r\n    parametersAreInvalid = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, fields } = this.state.spParams;\r\n\r\n        if(!fields){\r\n            this.props.snackbarOpen('Please select a variable.');\r\n            return true;\r\n        }\r\n\r\n        if(depthIsInvalid(depth1)){\r\n            this.props.snackbarOpen('Starting depth must be a positive number.');\r\n            return true;\r\n        } \r\n\r\n        if(depthIsInvalid(depth2)){\r\n            this.props.snackbarOpen('Ending depth must be a positive number.');\r\n            return true;\r\n        }\r\n\r\n        if(latIsInvalid(lat1)){\r\n            this.props.snackbarOpen('Please select a starting latitude between -90 and 90.');\r\n            return true;\r\n        }\r\n\r\n        if(latIsInvalid(lat2)){\r\n            this.props.snackbarOpen('Please select an ending latitude between -90 and 90.');\r\n            return true;\r\n        }\r\n\r\n        if(lonIsInvalid(lon1)){\r\n            this.props.snackbarOpen('Please select a starting longitude between -180 and 180.');\r\n            return true;\r\n        }\r\n\r\n        if(lonIsInvalid(lon2)){\r\n            this.props.snackbarOpen('Please select an ending longitude between -180 and 180.');\r\n            return true;\r\n        }\r\n\r\n        if(isNaN(Date.parse(dt1))){\r\n            this.props.snackbarOpen('Please enter a valid starting date.');\r\n            return true;\r\n        }\r\n\r\n        if(isNaN(Date.parse(dt2))){\r\n            this.props.snackbarOpen('Please enter a valid ending date.');\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    onVisualize = (vizType) => {\r\n        if(this.parametersAreInvalid()) return;\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, fields } = this.state.spParams;\r\n    \r\n        let mapping = mapVizType(vizType);\r\n        let parameters = {\r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        };\r\n\r\n        let payload = {\r\n            parameters,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        console.log('UpdateFields')\r\n        if(fields) {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: fields.data.Table_Name}});\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    handleDateSliderChange = (event, value) => {\r\n        this.setState({...this.state, \r\n            dateSliderPosition: value,\r\n            pickedInfo: null,\r\n            filteredData: this.props.sampleData.filter(datum => datum.time === `1994-01-${this.state.dateSliderPosition > 9 ? this.state.dateSliderPosition : \"0\" + this.state.dateSliderPosition}T00:00:00.000Z`)\r\n        });\r\n    }\r\n\r\n    handleOpacitySliderChange = (event, value) => {\r\n        this.setState({...this.state, opacity: value})\r\n    }\r\n\r\n    toggleChartView = () => {\r\n        this.setState({...this.state, showCharts: !this.state.showCharts});\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromMap = (coordinates) => {\r\n        if(!coordinates || !coordinates.length) return null;\r\n        \r\n        var lons = coordinates.map(a => a[0]);\r\n        var lats = coordinates.map(a => a[1]);\r\n\r\n        var newCoordinates = {\r\n            lat1: Math.min(...lats).toFixed(3),\r\n            lat2: Math.max(...lats).toFixed(3),\r\n            lon1: Math.min(...lons).toFixed(3),\r\n            lon2: Math.max(...lons).toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, showUI: true, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        // const { lon1, lon2, lat1, lat2 } = this.state;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n \r\n        return (\r\n            <div>\r\n                <DataRetrievalForm \r\n                    handleChange={this.handleChange} \r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                    depthIsInvalid={depthIsInvalid}\r\n                    latIsInvalid={latIsInvalid}\r\n                    lonIsInvalid={lonIsInvalid}\r\n                   {...this.state.spParams}\r\n                />\r\n                <GoBackButton/>\r\n                <ToggleChartViewButton toggleChartView={this.toggleChartView} showCharts={this.state.showCharts}/>\r\n                <ToggleHideUIButton toggleShowUI={this.toggleShowUI} showUI={this.state.showUI}/>\r\n                <DebugButton statePieces={['maps','charts', 'storedProcedureRequestState', 'catalog']}/>\r\n                <ClearVisualizationsButton/>\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer \r\n                            updateDomainFromMap={this.updateDomainFromMap}\r\n                            // measurementPositions={[[lon1, lat1, 0], [lon1, lat2, 0], [lon2, lat2, 0], [lon2, lat1, 0]]}\r\n                            esriModules={this.state.esriModules}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                {this.props.storedProcedureRequestState === states.inProgress && <LoadingSpinner customVariant='centered' size='36'/>}\r\n\r\n                <div className={this.state.showCharts ? '' : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));\r\n\r\n\r\n// Viz demo layers\r\n// new ColumnLayer({\r\n//     id: `SiO2-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 520000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [255,0,0] : [60,60,60],\r\n//     getElevation: d => d[this.state.variable],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'SiO2_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].SiO2_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`SiO2: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n//   }),\r\n\r\n//   new ColumnLayer({\r\n//     id: `DIN-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 50000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [0,255,0] : [60,60,60],\r\n//     getElevation: d => d['DIN_darwin_3day'],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'DIN_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].DIN_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`DIN: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n// }),\r\n\r\n// new ColumnLayer({\r\n//     id: `PO4-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 2000000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [43, 172, 219] : [60,60,60],\r\n//     getElevation: d => d['PO4_darwin_3day'],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'PO4_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].PO4_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`PO4: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n// })\r\n\r\n// Deck.gl stuff:\r\n\r\n// source: Natural Earth http://www.naturalearthdata.com/ via geojson.xyz\r\n// const COUNTRIES = 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_50m_admin_0_scale_rank.geojson';\r\n\r\n// const spatialResolutionToMetersMapping = {\r\n//     '1/12° X 1/12°': null,\r\n//     '1/2° X 1/2°': null,\r\n//     '1/25° X 1/25°': null,\r\n//     '1/4° X 1/4°': 30000,\r\n//     '1° X 1°': null,\r\n//     '4km X 4km': null,\r\n//     '70km X 70km': null,\r\n//     'Irregular': null\r\n// }\r\n\r\n// const ambientLight = new AmbientLight({\r\n//     color: [255, 255, 255],\r\n//     intensity: 1000000.0\r\n//   });\r\n\r\n// const lightingEffect = new LightingEffect({ambientLight});\r\n\r\n// const INITIAL_VIEW_STATE = {\r\n//   latitude: 35,\r\n//   longitude: -50,\r\n//   zoom: 3,\r\n//   bearing: 0,\r\n//   pitch: 10\r\n// };\r\n\r\n// let colormap = require('colormap')\r\n\r\n// const paletteSize = 48\r\n\r\n// let colors = colormap({\r\n//     colormap: 'hot',\r\n//     format: 'rba',\r\n//     alpha: [255,255],\r\n//     nshades: paletteSize\r\n// })\r\n\r\n// const minMax = (array, key) => {\r\n//     let min = array[0][key];\r\n//     let max = array[0][key];\r\n//     for(let i = 0; i < array.length; i ++){\r\n//         if(array[i][key] > max || max === null) max = array[i][key];\r\n//         if(array[i][key] < min || min === null) min = array[i][key];\r\n//     }\r\n//     return [min, max];\r\n// }\r\n\r\n// const handleheatmap = (map) => {\r\n//     if(!map.data.length) {\r\n//         console.log(`No data in map ${map.parameters.fields}`);\r\n//         console.log(map);\r\n//         return;\r\n//     }\r\n\r\n//     let minAndMaxArray = minMax(map.data, map.parameters.fields);\r\n//     let min = minAndMaxArray[0];\r\n//     let max = minAndMaxArray[1];\r\n//     let step = (max - min) / paletteSize;\r\n//     console.log(min, max, step);\r\n\r\n//     console.log(`Rendering ${map.data.length} data points.`);\r\n\r\n//     const getColor = (row) => {\r\n//         let index = Math.floor((row[map.parameters.fields] - min) / step);\r\n//         return colors[index] ? colors[index].slice(0,3) : null;\r\n//     }\r\n\r\n//     return new PointCloudLayer({\r\n//     id: 'point-cloud-layer',\r\n//     data: map.data,\r\n//     pickable: false,\r\n//     coordinateSystem: COORDINATE_SYSTEM.LNGLAT,\r\n//     sizeUnits:'meters',\r\n//     pointSize: 28000,\r\n//     getPosition: d => d[map.parameters.fields] ? [d.lon, d.lat] : [600,600],\r\n//     getColor,\r\n//     opacity: 1,\r\n//     // material: null,\r\n//     parameters:{\r\n//         depthTest: false\r\n//       }\r\n//   })\r\n// }\r\n\r\n// const handleHexMap = (map) => {\r\n//     if(!map.data.length) {\r\n//         console.log(`No data in map ${map.parameters.fields}`);\r\n//         console.log(map);\r\n//         return;\r\n//     }\r\n\r\n//     console.log(`Binning and rendering ${map.data.length} data points.`);\r\n\r\n//     // const getColorWeight = (point) => point[map.parameters.fields];\r\n//     const reducer = (accumulator, point) => accumulator + point[map.parameters.fields];\r\n//     const getColorValue = (points) => {\r\n//         return points.reduce(reducer, 0)/points.length;\r\n//     }\r\n\r\n//     return new HexagonLayer({\r\n//     id: 'hexagon-later',\r\n//     radius: 30000,\r\n//     data: map.data,\r\n//     pickable: false,\r\n//     getColorValue,\r\n//     // colorAggregation: 'MEAN',\r\n//     // getColorWeight,\r\n//     getPosition: d => d[map.parameters.fields] ? [d.lon, d.lat] : [0,0],\r\n//   })\r\n// }\r\n\r\n/* <DeckGL \r\n                        // effects={[lightingEffect]}\r\n                        material={null}\r\n                        controller\r\n                        parameters={{\r\n                            depthTest: false\r\n                          }}\r\n                        initialViewState={INITIAL_VIEW_STATE}\r\n                        layers= {[\r\n                            new GeoJsonLayer({\r\n                                id:\"base-map\",\r\n                                data:COUNTRIES,\r\n                                stroked: true,\r\n                                filled: true,\r\n                                lineWidthMinPixels: 1,\r\n                                opacity: 1,\r\n                                getLineDashArray:[3, 3],\r\n                                getLineColor: [0,0,0],\r\n                                getFillColor: [60,60,60]\r\n                            }),\r\n                            ...processedMaps\r\n                        ]\r\n                        }\r\n                    >\r\n                    </DeckGL> */\r\n\r\n// Inside render function\r\n// const processedMaps = this.props.maps.map(map => {\r\n//     switch(map.subType){\r\n//         case subTypes.heatmap:\r\n//             return handleHeatmap(map);\r\n//         case subTypes.hexMap:\r\n//             return handleHexMap(map);\r\n//         default:\r\n//             console.log(`Unknown map type ${map.subType}`);\r\n//     }\r\n// })\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password, or <Link onClick={this.handleClose} component={RouterLink} to={{pathname: '/register'}}>Register.</Link>\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper'\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React from 'react'\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\r\n\r\nimport Home from './Components/Home';\r\nimport Catalog from './Components/Catalog';\r\nimport Register from './Components/Register';\r\nimport Visualization from './Components/Visualization';\r\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\r\n\r\nexport default props => (\r\n    <BrowserRouter>\r\n      <GlobalUIComponentWrapper/>\r\n      <Switch>          \r\n        <Route exact path='/apikeymanagement' component={ Home } />\r\n        <Route exact path='/' component={ Catalog } />\r\n        <Route exact path='/register' component={ Register } />\r\n        <Route exact path='/visualization' component={ Visualization } />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )","import React, { Component } from 'react';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { shadows } from '@material-ui/system';\nimport grey from '@material-ui/core/colors/grey';\n\nimport './App.scss';\nimport Routes from './routes';\n\nimport colors from './Enums/colors';\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: grey[800],\n      paper: grey[800]\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: grey[800],\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },    \n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    }\n  }\n});\n\nclass App extends Component {\n\n  componentDidCatch = (error, info) => {\n    console.log('Error:');\n    console.log(error);\n    console.log('Info');\n    console.log(info);\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <div className=\"App\">\n          <MuiThemeProvider theme={theme}>\n            <Routes />\n          </MuiThemeProvider>\n        </div>\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}