{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","Enums/spatialResolutions.js","Utility/mapSpatialResolutionToNumber.js","Utility/flattenArray.js","Utility/splitData.js","Utility/mergeArraysAndComputeMeans.js","Utility/mergeArrays.js","Enums/visualizationSubTypes.js","Enums/temporalResolutions.js","Classes/SpaceTimeData.js","Enums/storedProcedures.js","Classes/TimeSeriesData.js","Classes/DepthProfileData.js","Enums/months.js","Classes/SectionMapData.js","Classes/SparseData.js","api.js","Redux/sagas.js","Redux/store.js","Enums/colors.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/TopNavBar.js","Components/Home.js","Components/GridDetail.js","Components/DatasetDescriptionDialog.js","Components/VariableDescriptionDialog.js","Components/ConnectedTooltip.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/validation.js","Components/TableStatsDialog.js","Utility/mapTemporalResolutionToNumber.js","Utility/utcDateStringToLocal.js","Utility/depthCounter.js","Utility/countWebGLContexts.js","Components/VizControlPanel.js","Components/DownloadConfirmationDialog.js","Utility/handleChartDatestring.js","Utility/chartBase.js","Components/ChartComponents/ChartControlPanel.js","Components/ChartComponents/SparseHistogram.js","Utility/handleXTicks.js","Utility/getChartDimensions.js","Components/ChartComponents/SpaceTimeChart.js","Components/ChartComponents/TimeSeriesChart.js","Components/ChartComponents/DepthProfileChart.js","Components/ChartComponents/SectionMapChart.js","Components/ChartComponents/SparseScatter.js","Components/ChartComponents/SparseMap.js","Components/Charts.js","Components/CruiseSelector.js","Components/MapContainer.js","Utility/cleanSPParams.js","Utility/localDateToString.js","Components/Visualization.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/LoadingOverlay.js","Components/GlobalUIComponentWrapper.js","Components/LandingPage.js","Components/Login.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","DATASET_RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","REFRESH_LOGIN","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","TABLE_STATS_REQUEST_SEND","CRUISE_TRAJECTORY_REQUEST_SEND","CRUISE_LIST_REQUEST_SEND","CSV_DOWNLOAD_REQUEST_SEND","DOWNLOAD_TEXT_AS_CSV","initialState","catalog","datasetRequestState","datasets","snackbarIsOpen","snackbarMessage","loadingMessage","showHelp","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","getCruiseTrajectoryRequestState","cruiseTrajectory","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","cruiseList","getCruiseListRequestState","showChartsOnce","chartID","reducedReducer","reduceReducers","state","action","type","payload","datasetsRequestState","keys","message","layers","newLayer","mapInfo","chartInfo","id","slice","chartIndex","trajectory","datasetLongName","tableStats","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","refreshLogin","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","datasetRetrievalRequestSend","datasetRetrievalRequestProcessing","datasetRetrievalRequestSuccess","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","setLoadingMessage","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addChart","tableStatsRequestProcessing","tableStatsRequestSuccess","cruiseTrajectoryRequestSend","visualizationActionTypes","cruiseTrajectoryRequestSuccess","cruiseTrajectoryRequestProcessing","cruiseListRequestSend","cruiseListRequestSuccess","cruiseListRequestFailure","cruiseListRequestProcessing","triggerShowCharts","csvDownloadRequestSend","query","fileName","csvDownloadRequestProcessing","downloadTextAsCsv","text","datasetName","apiUrl","spatialResolutions","irregular","halfDegree","quarterDegree","twentyFifthDegree","fourKm","twelfthDegree","seventyKm","oneDegree","mapSpatialResolutionToNumber","resolution","flattenArray","arr","flattenedArray","i","length","j","push","splitData","changeInterval","numDistinct","Math","floor","mergeArraysAndComputeMeans","mergeTargetDistance","nextMergeStartDistance","numArraysPerMerge","mergedArrays","travelDistance","subArray","sum","count","k","isNaN","mergeArrays","subTypes","sectionMap","contourSectionMap","timeSeries","histogram","depthProfile","heatmap","contourMap","sparse","temporalResolutions","threeMinutes","sixHourly","daily","weekly","monthly","annual","monthlyClimatology","threeDay","eightDayRunning","eightDays","SpaceTimeData","generateCsv","dates","Array","from","depths","hasDepth","csvArray","parameters","fields","variableValues","lats","lons","join","this","metadata","hasHours","isMonthly","Set","zMin","zMax","extent","indexAdjust","lonMin","lonMax","latMin","latMax","distinctLatCount","distinctLonCount","row","lat","parseFloat","_lon","lon","lon1","hasHour","Table_Name","Temporal_Resolution","time","value","add","Date","setUTCHours","toISOString","size","lonCount","latCount","quantile1","quantile","quantile2","undefined","toPrecision","spatialResolution","Spatial_Resolution","round","subType","splitByDate","splitByDepth","variableValueSubsets","depthInterval","dateInterval","map","subset","vizSubTypes","storedProcedures","spaceTime","TimeSeriesData","stds","depth","depthIndexAdjust","csvString","DepthProfileData","SectionMapData","lonInterval","latInterval","orientation","months","lonArray","max","min","splitBySpace","spaceCount","SparseData","variableIndex","Depth_Min","times","latDistance","abs","lonDistance","distance","sqrt","_zoom","zoom","lonCenter","latCenter","center","console","log","fetchOptions","credentials","postOptions","method","headers","storedProcedureParametersToUri","Object","reduce","queryString","key","api","login","fetch","body","stringify","logout","register","validate","retrieve","a","async","decoder","encoding","TextDecoder","csvParser","CSVParser","columns","on","record","read","response","ok","reader","getReader","readerIsDone","chunk","done","write","decode","Dataset_Long_Name","trim","keyRetrieval","json","keyCreation","description","visualization","storedProcedureRequest","spName","vizData","status","e","getTableStats","tableName","cruiseTrajectoryRequest","csvDownload","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","datasetRetrieval","queryRequest","cruiseListRequest","tableStatsRequest","csvDownloadRequest","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchDatasetRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","watchCruiseTrajectoryRequest","watchCruiseListRequest","watchTableStatsRequest","watchCsvDownloadRequest","watchDownloadTextAsCsv","watchRefreshLogin","rootSaga","put","userActions","call","userInfo","interfaceActions","pathname","href","result","catalogActions","visualizationActions","delay","finalize","csv","blob","Blob","url","URL","createObjectURL","document","createElement","setAttribute","appendChild","click","removeChild","takeLatest","all","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","colors","orange","backgroundGray","aqua","errorYellow","withStyles","theme","centered","position","top","props","classes","CircularProgress","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","componentDidMount","handleClick","handleChange","event","setState","target","wrapper","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","warningCaption","Grid","container","alignItems","justify","spacing","item","TextField","margin","name","onChange","placeholder","descriptionField","Button","disabled","color","onClick","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","fontSize","useEffect","Link","component","RouterLink","to","toggleShowHelp","TopNavBar","handleLogOut","clearState","username","password","handleNavigate","route","history","handleOutsideNavigate","open","navWrapper","navLink","rightNavLink","withRouter","appBar","backgroundColor","boxShadow","toolBar","zIndex","paddingLeft","textAlign","boxSizing","textDecoration","marginRight","fontWeight","display","cursor","float","rightLinkWrapper","Home","Fragment","tableMapping1","tableMapping2","title","padding","height","userSelect","infoCard","gridClass","maxHeight","gridItem","justifyContent","verticalAlign","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","maxWidth","variableDetailTable","marginLeft","tableLayout","variableDetailTableRow","variableDetailTableCell","borderBottomColor","textOverflow","paddingRight","gridDetailTypography","boldText","rightGridItem","datasetDescriptionButton","buttonTextWrapper","xs","src","context","Dataset_Name","Icon_URL","alt","Time_Min","Time_Max","Depth_Max","direction","alignContent","Acknowledgement","handleDescribeDataset","handleDescribeVariable","ID","DatasetDescriptionDialog","clearDescription","Dialog","onClose","DialogTitle","DialogContent","source","markdown","palette","primary","main","describedVariable","variable","find","Long_Name","Comment","Data_Source","Distributor","tooltip","secondary","opacity","Tooltip","placement","popper","children","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","hide","enableRowGroup","defaultColDef","resizable","cellStyle","autoGroupColumnDef","AGGridWrapper","filterText","describedDataset","dataset","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","onGridSizeChanged","handleColumnRowGroupChanged","forEach","column","setColumnVisible","colId","handleDownloadCatalog","header","render","gridPaper","gridSearch","autoFocus","label","InputLabelProps","shrink","downloadButton","gridWrapper","rowData","suppressDragLeaveHidesColumns","enableCellTextSelection","suppressContextMenu","getRowStyle","node","detail","background","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","textTransform","Catalog","determineContent","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","firstName","optional","lastName","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","button","buttonProgress","left","Register","validation","depthOneIsLower","depthOneOutOfBounds","depthTwoOutOfBounds","negative","date","dateOneIsLater","dateOneOutOfBounds","dateTwoOutOfBounds","latOneIsHigher","latOneOutOfBounds","latTwoOutOfBounds","lonOneIsHigher","lonOneOutOfBounds","lonTwoOutOfBounds","dataIsIrregular","dateRangeRequired","depthRangeRequired","surfaceOnlyDataset","irregularOnly","dataSizeTooLarge","webGLContextLimit","generic","invalid","dataSizeWarning","dataSizePrevent","variableMissing","vizTypeMissing","DialogContentText","Sensor","Lat_Min","Lat_Max","Lon_Min","Lon_Max","Variable_Min","Unit","Variable_Max","Variable_Mean","Variable_Std","mapTemporalResolutionToNumber","utcDateStringToLocal","utcString","utcYear","getUTCFullYear","utcMonth","getUTCMonth","utcDate","getUTCDate","newDate","setFullYear","darwinDepths","piscesDepths","piscesTable","darwinTable","exports","depth1","depth2","has","chart","visualizationSubTypes","overrideDisabledStyle","clearCharts","getDatePlaceholder","valueOf","month","getMonth","day","getDate","getFullYear","groupHeaderHeight","reactWindowListRef","React","createRef","selectRef","MenuList","componentDidUpdate","prevProps","prevState","current","resetAfterIndex","scrollOffset","foundFocus","child","groupHasFocus","isFocused","scrollTo","options","getValue","initialOffset","indexOf","groupHeights","some","grandChild","totalHeight","acc","cur","estimatedItemSize","itemCount","itemSize","initialScrollOffset","ref","style","Group","hasFocus","element","sensor","CustomHeading","headingProps","headingLabel","firstChild","selectProps","hidden","customHeading","icon","typography","iconClass","ListItem","select","focusedOption","Icon","IconButton","handleSetDownloadTarget","onAutoSuggestChange","stopPropagation","CloudDownload","Doc_URL","Info","DropdownIndicator","ArrowRight","Option","innerProps","onMouseMove","preventDefault","onMouseOver","GroupHeading","formatOptionLabel","option","meta","VizControlPanel","search","addDocuments","handleOpenControlPanel","showControlPanel","handleCloseControlPanel","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","getSelectOptionsFromCatalogItems","items","Variable","values","sort","opt1","opt2","estimateCsvSize","member","parseInt","Variable_Count","handleDownloadCsvClick","handleResetSPParams","resetSPParams","searchField","searchString","estimateDataSize","dt1","dt2","lat1","lat2","lon2","selectedVizType","date1","dayDiff","res","dateCount","depthUtils","checkStartDepth","surfaceOnly","replace","toFixed","checkEndDepth","checkStartDateValid","checkEndDateValid","checkStartDate","checkEndDate","checkStartLat","checkEndLat","checkStartLon","checkEndLon","checkHeatmap","irregularSpatialResolution","checkContour","checkSection","checkHistogram","checkTimeSeries","checkDepthProfile","checkSparseMap","checkGeneralWarn","dataSize","checkGeneralPrevent","webGLCount","countWebGLContexts","handleShowChartsAndResize","setTimeout","dispatchEvent","Event","handleShowCharts","JsSearch","indexStrategy","searchIndex","addIndex","maxDateMessage","maxDate","showCharts","handleShowGlobe","handleLatLonChange","catalogMinDate","setHours","catalogMaxDate","zeroedDT1","zeroedDT2","minDate","minDateMessage","fill","startDepthMessage","endDepthMessage","startLatMessage","endLatMessage","startLonMessage","endLonMessage","heatmapMessage","contourMessage","sectionMapMessage","histogramMessage","timeSeriesMessage","depthProfileMessage","sparseMapMessage","generalWarnMessage","checkDisableVisualizeList","errorCount","errorSizeAdjust","disableVisualizeMessage","checkDisableVisualize","visualizeButtonTooltip","closePanelChevron","aria-label","ChevronLeft","openPanelChevron","ChevronRight","Drawer","drawer","paper","drawerPaper","anchor","ButtonGroup","groupedButtons","depressed","Language","InsertChartOutlined","clearChartsButton","Delete","resetSPParamsButton","Cached","isLoading","components","IndicatorSeparator","escapeClearsValue","onInputChange","filterOption","variableSelect","isClearable","inputValue","updateFields","styles","menu","provided","borderRadius","backdropFilter","valueContainer","input","fontFamily","control","border","borderBottom","borderColor","noOptionsMessage","singleValue","tableStatsButton","LibraryBooks","datePicker","format","autoOk","handleStartDateChange","inputVariant","KeyboardButtonProps","datePickerInputAdornment","handleEndDateChange","formGridItem","FormHelperTextProps","InputProps","padLeft","FormControl","vizTypeSelectFormControl","InputLabel","htmlFor","inputProps","MenuItem","vizButtonTooltip","visualizeButton","onVisualize","fullWidth","bottom","drawerPaperError1","drawerPaperError2","drawerPaperError3","drawerPaperError4","drawerPaperError5","navDrawerWidth","controlPanelForm","borderLeft","fontVariant","borderRight","singleValueReplacement","singleValueReplacement2","pointerEvents","tableStatsRequestSend","DownloadConfirmationDialog","downloadTarget","handleFullDatasetDownload","handleSubsetDownload","sampleMember","timeMin","timeMax","subsetLat1","subsetLat2","subsetLon1","subsetLon2","subsetTime1","subsetTime2","depthMin","depthMax","subsetDepth1","subsetDepth2","dateRatio","totalRows","totalColumns","Variables","split","totalDataPoints","fullDataAvailable","totalDays","subsetDays","totalLatSize","subsetLatSize","latRatio","totalLonSize","subsetLonSize","lonRatio","depthRatio","totalDepthSize","subsetDepthSize","subsetDataPoints","subsetAvailable","timeString1","timeString2","timeStringMin","timeStringMax","tableFooter","DialogActions","dateString","layout","font","paper_bgcolor","autosize","config","displaylogo","annotations","distributor","yshift","documentElement","clientWidth","xref","yref","showarrow","colorscaleOptions","chartWrapper","popover","paddingBottom","iconButton","colorForm","lastIcon","borderTopRightRadius","borderBottomRightRadius","buttonGroup","colorscaleMenu","onToggleSplitByDate","onToggleSplitBySpace","onToggleSplitByDepth","switchOrientation","downloadCsv","handleZValueConfirm","zValues","markerOptions","handleMarkerOptionsConfirm","useState","paletteAnchorElement","setPaletteAnchorElement","zScalePopoverAnchorElement","setZScalePopoverAnchorElement","localZMin","setLocalZMin","localZMax","setLocalZMax","zScalePopoverOpen","zScalePopoverID","handleZScalePopoverClose","zScaleValidations","zMinMessage","zMaxMessage","markerOptionsAnchorElement","setMarkerOptionsAnchorElement","localMarkerOpacity","setLocalMarkerOpacity","localMarkerColor","setLocalMarkerColor","localMarkerSize","setLocalMarkerSize","previousOpacity","useRef","usePreviousOpacity","previousColor","usePreviousColor","previousSize","usePreviousSize","markerPopoverOpen","markerPopoverID","handleMarkerOptionsClose","markerOptionsValidations","checkLocalMarkerOpacity","checkLocalMarkerSize","localMarkerOpacityMessage","localMarkerSizeMessage","DateRange","LineWeight","currentTarget","SwapVert","handlePaletteChoice","Palette","Gamepad","Menu","anchorEl","keepMounted","Popover","anchorOrigin","vertical","horizontal","transformOrigin","OutlinedInput","aria-describedby","labelWidth","FormHelperText","buttonBlock","iconButtonWrapper","handleChartDateString","requestAnimationFrame","useResizeHandler","x","marker","chartBase","plot_bgcolor","xaxis","exponentformat","yaxis","infoObject","sectionSize","lonRange","tickvals","ceil","ticktext","tickmode","sizeRatio","plots","setSplitByDate","setSplitByDepth","subTypeState","setPalette","setZValues","subSets","generatePlotData","subsets","xTicks","handleXTicks","getChartDimensions","latTitle","lonTitle","hovertext","formatter","zauto","zmin","zmax","y","z","connectgaps","autocolorscale","colorscale","hoverinfo","contours","coloring","showlabels","labelfont","family","labelformat","colorbar","handleContourMap","zsmooth","handleHeatmap","setMarkerOptions","mode","error_y","array","visible","line","date2","error_x","autorange","setSplitBySpace","setOrientation","spaces","distinctMeridiansOrParallelsForSplitting","xAxis","handleSectionMap","SparseScatter","xValues","yValues","xTitle","yTitle","tabProps","SparseTabPanel","selectedTab","controlPanelProps","tabs","tab","setTab","plot","mapbox","sourcetype","below","mapboxAccessToken","handleSparseMap","scatter","Tabs","indicatorColor","Tab","deleteChart","CloseChartIcon","closeChartIcon","handleDeleteChart","disableFocusRipple","disableRipple","Close","Charts","chartPaper","cruiseTrajectoryClear","esriFonts","SingleValue","cruiseSort","b","Name","CruiseSelector","getSelectOptionsFromCruiseList","list","handleCruiseSelect","selection","selectedCruise","updateParametersFromCruiseBoundary","outerDiv","blurEffectDiv","getCruiseListState","cruiseSelect","menuList","primary25","cruiseInfo","cruiseInfoCell","Nickname","Start_Time","End_Time","Chief_Name","Ship_Name","borderStyle","DrawButton","drawButton","helpText","cancelButton","polygonSymbol","symbolLayers","material","outline","polylineSymbol","r","g","UiComponents","shouldComponentUpdate","nextProps","nextState","sketchModel","esriModules","SketchViewModel","layer","regionLayer","view","defaultUpdateOptions","toggleToolOnClick","tool","setShowHelp","getElementById","throttledUpdate","throttle","updateDomainFromGraphicExtent","Utils","webMercatorToGeographic","graphic","geometry","toolEventInfo","complete","graphics","addEventListener","removeAll","create","cancel","ui","remove","TrajectoryController","memo","trajectoryLayer","midIndex","polyLines","lineIndex","lonStart","latStart","maxDistance","_lonDistance","cruiseTrajectorySymbol","cap","cruiseTrajectoryGeometry","paths","Graphic","symbol","goTo","maxDuration","speedFactor","MapContainer","spParams","globeUIRef","_lon2","polygon","rings","regionGraphic","mapProperties","basemap","viewProperties","highlightOptions","haloOpacity","haloColor","fillOpacity","measurementPositions","GraphicsLayer","cleanSPParams","localDateToString","year","toString","mapVizType","vizType","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","completedShowCharts","baseSPParams","Visualization","filteredData","showUI","mapping","cruise","toggleShowUI","_lon1","xmin","xmax","newCoordinates","ymin","ymax","esriModuleNames","loadModules","version","loadedModules","accumulator","currentValue","currentIndex","toggleChartView","displayNone","userLoginRequestSend","LoginDialog","handleLogin","handleClose","aria-labelledby","onSubmit","snackbarClose","centerText","Snackbar","autoHideDuration","loader","right","loaderContent","flexDirection","alignItem","spinnerText","spinner","fadeIn","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","inlineBlock","LandingPage","landingWrapper","welcomeMessage","createMuiTheme","useNextVariants","contrastText","default","overrides","MuiIconButton","MuiListItemIcon","MuiFormHelperText","filled","MuiListItem","gutters","MuiToolbar","MuiOutlinedInput","MuiButtonGroup","groupedOutlined","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","MuiFilledInput","inputSelect","adornedEnd","App","vizRef","utils","DateFnsUtils","MuiThemeProvider","exact","path","Login","LicenseManager","setLicenseKey","rootElement","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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AAS,GAH3B,cAIFH,GAAoBI,OAAU,GAJ5B,cAKFJ,GAAoBK,QAAW,IAL7B,cAMFL,GAAoBM,OAAU,KAN5B,cAOFN,GAAoB3C,UAAa,MAP/B,cAQF2C,GAAoBO,mBAAqB,IARvC,cASFP,GAAoBQ,SAAW,GAT7B,cAUFR,GAAoBS,gBAAkB,GAVpC,cAWFT,GAAoBU,UAAY,GAX9B,GAcI5C,ICNA8kB,GAXc,SAACC,GAC1B,IAAIpC,EAAO,IAAIrd,KAAKyf,GAChBC,EAAUrC,EAAKsC,iBACfC,EAAWvC,EAAKwC,cAChBC,EAAUzC,EAAK0C,aAEfC,EAAU,IAAIhgB,KAElB,OADAggB,EAAQC,YAAYP,EAASE,EAAUE,GAChCE,GCPLE,GAAe,CACjB,EACA,GACA,GACA,GACA,GACA,GACA,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,OACA,OACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAGEC,GAAe,CACjB,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,eAkBEC,GAAc,IAAI3hB,IAfF,CAClB,gBACA,2BAcE4hB,GAAc,IAAI5hB,IAXH,CACjB,4BACA,sBACA,qBACA,iCACA,wBACA,0BACA,mCA+BW6hB,GAzBC,CACZvkB,MAAO,SAACma,EAAOqK,EAAQC,GAAY,IACX3T,EAAUqJ,EAAM5d,KAA5BqH,WACJ5D,EAAQ,EAEZ,GAAGqkB,GAAYK,IAAI5T,GACf,IAAI,IAAI/R,EAAI,EAAGA,EAAIqlB,GAAaplB,UACzBolB,GAA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","file":"static/js/main.cb73dcf8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';\r\n\r\nexport const DATASET_RETRIEVAL_REQUEST_SEND = 'DATASET_CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const DATASET_RETRIEVAL_REQUEST_SUCCESS = 'DATASET_CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const DATASET_RETRIEVAL_REQUEST_FAILURE = 'DATASET_CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const DATASET_RETRIEVAL_REQUEST_PROCESSING = 'DATASET_CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';\r\n\r\nexport const REFRESH_LOGIN = 'REFRESH_LOGIN';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    case interfaceActionTypes.SET_LOADING_MESSAGE: return {...state, loadingMessage: action.payload.message}\r\n    \r\n    case interfaceActionTypes.TOGGLE_SHOW_HELP: return {...state, showHelp: !state.showHelp}\r\n    \r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\nexport const DELETE_CHART = 'DELETE_CHART';\r\n\r\nexport const TABLE_STATS_REQUEST_SEND = 'ABLE_STATS_REQUEST_SEND';\r\nexport const TABLE_STATS_REQUEST_PROCESSING = 'TABLE_STATS_REQUEST_PROCESSING';\r\nexport const TABLE_STATS_REQUEST_SUCCESS = 'TABLE_STATS_REQUEST_SUCCESS';\r\nexport const TABLE_STATS_REQUEST_FAILURE = 'TABLE_STATS_REQUEST_FAILURE';\r\n\r\nexport const CRUISE_TRAJECTORY_REQUEST_SEND = 'CRUISE_TRAJECTORY_REQUEST_SEND';\r\nexport const CRUISE_TRAJECTORY_REQUEST_SUCCESS = 'CRUISE_TRAJECTORY_REQUEST_SUCCESS';\r\nexport const CRUISE_TRAJECTORY_REQUEST_FAILURE = 'CRUISE_TRAJECTORY_REQUEST_FAILURE';\r\nexport const CRUISE_TRAJECTORY_REQUEST_PROCESSING = 'CRUISE_TRAJECTORY_REQUEST_PROCESSING';\r\nexport const CRUISE_TRAJECTORY_CLEAR = 'CRUISE_TRAJECTORY_CLEAR';\r\n\r\nexport const CRUISE_LIST_REQUEST_SEND = 'CRUISE_LIST_REQUEST_SEND';\r\nexport const CRUISE_LIST_REQUEST_SUCCESS = 'CRUISE_LIST_REQUEST_SUCCESS';\r\nexport const CRUISE_LIST_REQUEST_FAILURE = 'CRUISE_LIST_REQUEST_FAILURE';\r\nexport const CRUISE_LIST_REQUEST_PROCESSING = 'CRUISE_LIST_REQUEST_PROCESSING';\r\n\r\nexport const TRIGGER_SHOW_CHARTS = 'TRIGGER_SHOW_CHARTS';\r\nexport const COMPLETED_SHOW_CHARTS = 'COMPLETED_SHOW_CHARTS';\r\n\r\nexport const CSV_DOWNLOAD_REQUEST_SEND = 'CSV_DOWNLOAD_REQUEST_SEND';\r\nexport const CSV_DOWNLOAD_REQUEST_SUCCESS = 'CSV_DOWNLOAD_REQUEST_SUCCESS';\r\nexport const CSV_DOWNLOAD_REQUEST_FAILURE = 'CSV_DOWNLOAD_REQUEST_FAILURE';\r\nexport const CSV_DOWNLOAD_REQUEST_PROCESSING = 'CSV_DOWNLOAD_REQUEST_PROCESSING';\r\n\r\nexport const DOWNLOAD_TEXT_AS_CSV = 'DOWNLOAD_TEXT_AS_CSV';","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n    datasetRequestState: null,\r\n    datasets: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n    loadingMessage: '',\r\n    showHelp: false,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    getCruiseTrajectoryRequestState: null,\r\n    cruiseTrajectory: null,\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    cruiseList: [],\r\n    getCruiseListRequestState: null,\r\n    showChartsOnce: null,\r\n    chartID: 0\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SUCCESS: return {...state,\r\n      datasetsRequestState: states.succeeded, \r\n      datasets: action.payload.datasets\r\n    }\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_FAILURE: return {...state, datasetsRequestState: states.failed}\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_PROCESSING: return {...state, datasetsRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';\r\n\r\nexport const SET_LOADING_MESSAGE = 'SET_LOADING_MESSAGE';\r\n\r\nexport const TOGGLE_SHOW_HELP = 'TOGGLE_SHOW_HELP';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [{...action.payload.chartInfo, id: state.chartID}, ...state.charts],\r\n            chartID: state.chartID + 1\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.DELETE_CHART: return {...state, \r\n            charts: [\r\n                ...state.charts.slice(0, action.payload.chartIndex),\r\n                ...state.charts.slice(action.payload.chartIndex + 1)\r\n            ]\r\n        }\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING: return {...state, getCruiseTrajectoryRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS: return {...state,\r\n            cruiseTrajectory: action.payload.trajectory,\r\n            getCruiseTrajectoryRequestState: states.succeeded\r\n        }\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR: return {...state, cruiseTrajectory: null}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE: return {...state, getCruiseTrajectoryRequestState: states.failed}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING: return {...state, getCruiseListRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS: return {\r\n            ...state,\r\n            getCruiseListRequestState: states.succeeded,\r\n            cruiseList: action.payload.cruiseList\r\n        }\r\n\r\n        case visualizationActionTypes.TRIGGER_SHOW_CHARTS: return {...state, showChartsOnce: true}\r\n        case visualizationActionTypes.COMPLETED_SHOW_CHARTS: return {...state, showChartsOnce: false}\r\n\r\n        case visualizationActionTypes.TABLE_STATS_REQUEST_SUCCESS: return {\r\n            ... state, \r\n            datasets: {\r\n                ...state.datasets,\r\n                [action.payload.datasetLongName]: {\r\n                    ...state.datasets[action.payload.datasetLongName],\r\n                    tableStats: action.payload.tableStats\r\n                }\r\n            }}\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n\r\nexport const refreshLogin = () => ({\r\n    type: userActionTypes.REFRESH_LOGIN\r\n})","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const datasetRetrievalRequestSend = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const datasetRetrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const datasetRetrievalRequestSuccess = (datasets) => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        datasets\r\n    }\r\n})\r\n\r\nexport const datasetRetrievalRequestFailure = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})\r\n\r\nexport const setLoadingMessage = (message) => ({\r\n    type:interfaceActionTypes.SET_LOADING_MESSAGE,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const toggleShowHelp = () => ({\r\n    type: interfaceActionTypes.TOGGLE_SHOW_HELP\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const deleteChart = (chartIndex) => ({\r\n    type: visualizationActionTypes.DELETE_CHART,\r\n    payload: {\r\n        chartIndex\r\n    }\r\n})\r\n\r\nexport const tableStatsRequestSend = (tableName, datasetLongName) => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_SEND,\r\n    payload: {\r\n        tableName,\r\n        datasetLongName\r\n    }\r\n})\r\n\r\nexport const tableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const tableStatsRequestSuccess = (tableStats, datasetLongName) => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_SUCCESS,\r\n    payload: {\r\n        tableStats,\r\n        datasetLongName\r\n    }\r\n})\r\n\r\nexport const tableStatsRequestFailure = () => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_FAILURE\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSuccess = (trajectory) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS,\r\n    payload: {\r\n        trajectory\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseTrajectoryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const cruiseTrajectoryClear = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR\r\n})\r\n\r\nexport const cruiseListRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SEND,\r\n})\r\n\r\nexport const cruiseListRequestSuccess = (cruiseList) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS,\r\n    payload: {\r\n        cruiseList\r\n    }\r\n})\r\n\r\nexport const cruiseListRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseListRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const triggerShowCharts = () => ({\r\n    type: visualizationActionTypes.TRIGGER_SHOW_CHARTS\r\n})\r\n\r\nexport const completedShowCharts = () => ({\r\n    type: visualizationActionTypes.COMPLETED_SHOW_CHARTS\r\n})\r\n\r\nexport const csvDownloadRequestSend = (query, fileName) => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SEND,\r\n    payload: {\r\n        query,\r\n        fileName\r\n    }\r\n})\r\n\r\nexport const csvDownloadRequestFailure = () => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_FAILURE\r\n})\r\n\r\nexport const csvDownloadRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_PROCESSING\r\n})\r\n\r\nexport const csvDownloadRequestSuccess = (text) => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SUCCESS,\r\n    payload: {\r\n        text\r\n    }\r\n})\r\n\r\n//dataset download\r\nexport const downloadTextAsCsv = (text, datasetName) => ({\r\n    type: visualizationActionTypes.DOWNLOAD_TEXT_AS_CSV,\r\n    payload: {\r\n        text,\r\n        datasetName\r\n    }\r\n})","// export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\nexport const apiUrl = 'https://simonscmap.dev';","const spatialResolutions = {\r\n    irregular: 'Irregular',\r\n    halfDegree: '1/2° X 1/2°' ,\r\n    quarterDegree: '1/4° X 1/4°' ,\r\n    twentyFifthDegree: '1/25° X 1/25°' ,\r\n    fourKm: '4km X 4km',\r\n    twelfthDegree: '1/12° X 1/12°',\r\n    seventyKm: '70km X 70km',\r\n    oneDegree: '1° X 1°'\r\n}\r\n\r\nexport default spatialResolutions;","import spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nconst mapSpatialResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [spatialResolutions.halfDegree] : .5,\r\n        [spatialResolutions.quarterDegree] : .25,\r\n        [spatialResolutions.twentyFifthDegree] : .04,\r\n        [spatialResolutions.fourKm] : .041672,\r\n        [spatialResolutions.twelfthDegree] : .083333,\r\n        [spatialResolutions.oneDegree] : 1,\r\n        [spatialResolutions.seventyKm] : .25\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapSpatialResolutionToNumber;","// Flattens an array by 1 level\r\n// [[[],[]], [[],[]], [[],[]]] => [[], [], [], [], [], []]\r\n\r\nconst flattenArray = (arr) => {\r\n    let flattenedArray = [];\r\n\r\n    for(let i = 0; i < arr.length; i++){\r\n        for(let j = 0; j < arr[i].length; j++){\r\n            flattenedArray.push(arr[i][j]);\r\n        }\r\n    }\r\n\r\n    return flattenedArray;\r\n}\r\n\r\nexport default flattenArray;","// Interval is number of indices between changes in this parameter, or in order words\r\n// how many times will we see the same value for this parameter in a row before it changes\r\n// as we iterate through the values array.\r\n// We use modulo for cases where data.length / interval is larger than the number of \r\n// distinct values for that parameter.\r\n\r\nconst splitData = (data, changeInterval, numDistinct) => {\r\n    var splitData = [];\r\n\r\n    for(let i = 0; i < numDistinct; i++){\r\n        splitData.push([]);\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        let index = Math.floor(i / changeInterval) % numDistinct;\r\n        splitData[index].push(data[i]);\r\n    }\r\n\r\n    return splitData;\r\n}\r\n\r\nexport default splitData;","// mergeTargetDistance - number of hops between arrays being merged\r\n// mergeTargetNumber - number of arrays being merged - implicit\r\n// nextStartDistance - once a merge is complete how many hops to next start\r\nconst mergeArraysAndComputeMeans = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n    \r\n    // Find each merging start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        // Iterate through each value in the first array of this merge. Count\r\n        // the number of values summed so we can ignore nulls and compute a mean.\r\n        for(let j = 0; j < data[i].length; j ++){\r\n            let sum = 0;\r\n            let count = 0;\r\n\r\n            // Aggregate values of all merge targets\r\n            for(let k = i; k < i + (mergeTargetDistance * numArraysPerMerge); k += mergeTargetDistance){\r\n                if(isNaN(data[k][j])) {\r\n                    continue;\r\n                } else {                    \r\n                    sum += data[k][j];\r\n                    count ++;\r\n                }\r\n            }\r\n            subArray.push(count < 1 ? null : sum / (count));\r\n        }\r\n\r\n        mergedArrays.push(subArray)\r\n    }\r\n\r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArraysAndComputeMeans;","const mergeArrays = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n\r\n    // Find each merge start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        for(let j = i; j <= i + travelDistance; j += mergeTargetDistance){\r\n            subArray = [...subArray, ...data[j]];\r\n        }\r\n\r\n        mergedArrays.push(subArray);\r\n    }\r\n   \r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArrays;\r\n\r\n","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    contourSectionMap: 'Contour Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    heatmap: 'Heatmap',\r\n    contourMap: 'Contour Map',\r\n    sparse: 'Sparse'\r\n}\r\n\r\nexport default subTypes;","const temporalResolutions = {\r\n    threeMinutes: 'Three Minutes',\r\n    sixHourly: 'Six Hourly',\r\n    daily: 'Daily',\r\n    weekly: 'Weekly',\r\n    monthly: 'Monthly',\r\n    annual: 'Annual',\r\n    irregular: 'Irregular',\r\n    monthlyClimatology: 'Monthly Climatology',\r\n    threeDay: 'Three Days',\r\n    eightDayRunning: 'Eight Day Running',\r\n    eightDays: 'Eight Days '\r\n}\r\n\r\nexport default temporalResolutions;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/mergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nclass SpaceTimeData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n\r\n        this.hasDepth = null;\r\n        this.hasHours = null;\r\n        this.isMonthly = null;\r\n\r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n        this.indexAdjust = null;\r\n        this.payload = payload;\r\n        this.lats = [];\r\n        this.lons = [];\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n\r\n        this.distinctLatCount = null;\r\n        this.distinctLonCount = null;\r\n    }\r\n\r\n    add(row) {\r\n        \r\n        let lat = parseFloat(row[1]);\r\n        let _lon = parseFloat(row[2]);\r\n        let lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n\r\n        if(this.hasDepth === null) {\r\n            this.hasHour = this.metadata.Table_Name === 'tblWind_NRT';\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n            this.hasDepth = row.length === 5 && !this.hasHour;\r\n            this.indexAdjust = this.hasDepth || this.hasHour? 1 : 0;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n        }\r\n\r\n        let value = parseFloat(row[3 + this.indexAdjust]);\r\n\r\n        if(this.hasDepth){\r\n            this.depths.add(row[3]);\r\n        }\r\n\r\n        var time;\r\n        if(this.hasHour){\r\n            time = new Date(row[0]);\r\n            time.setUTCHours(row[3])\r\n            time = time.toISOString();\r\n        } else time = row[0];\r\n        this.dates.add(time);\r\n        this.lats.push(lat);\r\n\r\n        this.lons.push(lon);\r\n\r\n        if(lon < this.lonMin) this.lonMin = lon;\r\n        if(lon > this.lonMax) this.lonMax = lon;\r\n        if(lat < this.latMin) this.latMin = lat;\r\n        if(lat > this.latMax) this.latMax = lat;\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n\r\n        if(this.depths.size === 0) this.depths.add('Surface');\r\n\r\n        this.lonCount = this.lons.length / this.dates.size / this.depths.size;\r\n        this.latCount = this.lats.length / this.dates.size / this.depths.size;\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : parseFloat(quantile1.toPrecision(4));\r\n        this.zMax = quantile2 === undefined ? null : parseFloat(quantile2.toPrecision(4));\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n        \r\n        this.distinctLatCount = Math.round((this.latMax - this.latMin) / spatialResolution) + 1;\r\n        this.distinctLonCount = Math.round((this.lonMax - this.lonMin) / spatialResolution) + 1;\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {        \r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const latInterval = this.distinctLonCount;\r\n        const depthInterval = latInterval * this.distinctLatCount;\r\n        const dateInterval = depthInterval * this.depths.size;\r\n\r\n        // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n        variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, depthInterval, this.depths.size));\r\n        variableValueSubsets = flattenArray(variableValueSubsets);\r\n\r\n        // Contour and heatmap compute mean variable values per lat and lon\r\n        // when not split by date and/or time\r\n        if(subType === vizSubTypes.contourMap || subType === vizSubTypes.heatmap) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    this.depths.size, \r\n                    this.depths.size\r\n                    );\r\n    \r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    this.depths.size, \r\n                    1, \r\n                    this.dates.size\r\n                    );\r\n    \r\n            } else {\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    variableValueSubsets.length, \r\n                    variableValueSubsets.length\r\n                    );            \r\n            }\r\n        } \r\n        \r\n        // Histograms split and aggregate without computing means\r\n        else if (subType === vizSubTypes.histogram) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets, \r\n                    1,\r\n                    this.depths.size,\r\n                    this.depths.size\r\n                    );\r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets,\r\n                    this.depths.size,\r\n                    1,\r\n                    this.dates.size\r\n                );\r\n            } else {\r\n                variableValueSubsets = [this.variableValues];\r\n            }\r\n        }\r\n\r\n        // Nothing here yet\r\n        else {}\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${depths[Math.floor(i / (this.variableValues.length / (dates.length * depths.length))) % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SpaceTimeData;","const storedProcedures = {\r\n    sectionMap: 'uspSectionMap',\r\n    timeSeries: 'uspTimeSeries',\r\n    spaceTime: 'uspSpaceTime',\r\n    depthProfile: 'uspDepthProfile'\r\n}\r\n\r\nexport default storedProcedures;","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nclass TimeSeriesData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.dates = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depth = null;\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.depthIndexAdjust = row.length === 6 ? 1 : 0;\r\n            this.lat = row[1];\r\n            this.lon = row[2];\r\n            this.depth = row.length === 6 ? row[3] : false;\r\n            this.hasHour = this.metadata.Table_Name === 'tblWind_NRT';\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n        }\r\n\r\n        this.variableValues.push(row[3 + this.depthIndexAdjust]);\r\n        this.stds.push(row[4 + this.depthIndexAdjust]);\r\n        this.dates.push(row[0]);\r\n    }\r\n\r\n    finalize() {\r\n        if(this.depth === false) this.depth = 'Surface';\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }    \r\n\r\n    generateCsv() {\r\n        let csvString = `time,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.dates[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default TimeSeriesData;","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nclass DepthProfileData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depths = [];\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.lat = parseFloat(row[0]);\r\n            this.lon = parseFloat(row[1]);\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n        }\r\n\r\n        this.variableValues.push(parseFloat(row[2]));\r\n        this.stds.push(parseFloat(row[3]));\r\n        this.depths.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        // pass\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }\r\n    \r\n    generateCsv() {\r\n        let csvString = `depth,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default DepthProfileData;","export default [\r\n    null,\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n]","import { quantile, extent } from 'd3-array';\r\n\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nimport months from '../Enums/months';\r\n\r\nclass SectionMapData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.subType = payload.subType\r\n        \r\n        this.dates = new Set();\r\n        this.depths = new Set();\r\n        this.lats = new Set();\r\n        this.lons = new Set();\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n\r\n        this.variableValues = [];\r\n        \r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.orientation = null;\r\n    }\r\n\r\n    // time, lat, lon, depth, value\r\n    add(row) {        \r\n        const time = row[0];\r\n        const lat = parseFloat(row[1]);\r\n        var _lon = parseFloat(row[2]);\r\n        const lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n        const depth = parseFloat(row[3]);\r\n        const value = parseFloat(row[4]);\r\n\r\n        if(this.variableValues.length === 0) {\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n        }        \r\n\r\n        this.depths.add(depth);\r\n        this.dates.add(this.isMonthly ? months[time] : time);\r\n        this.lats.add(lat);\r\n        this.lons.add(lon);\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : parseFloat(quantile1.toPrecision(4));\r\n        this.zMax = quantile2 === undefined ? null : parseFloat(quantile2.toPrecision(4));\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        this.orientation = this.lons.size > this.lats.size ? 'zonal' : 'meridional';\r\n\r\n        let lonArray = Array.from(this.lons);\r\n        this.lonMax = Math.max(...lonArray);\r\n        this.lonMin = Math.min(...lonArray);\r\n        // console.log(this.variableValues);\r\n    }\r\n\r\n    // Direction is meridional or zonal\r\n    generatePlotData(orientation, splitByDate, splitBySpace) {\r\n        let latCount = this.lats.size;\r\n        let lonCount = this.lons.size;\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const lonInterval = this.depths.size;\r\n        const latInterval = lonInterval * lonCount;\r\n        const dateInterval = latInterval * latCount;\r\n\r\n        var variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n\r\n        var spaceCount;\r\n\r\n        if(orientation === 'zonal') {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, latInterval, latCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = latCount;\r\n        }\r\n\r\n        else {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, lonInterval, lonCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = lonCount;\r\n        }\r\n\r\n        // console.log('Split by space');\r\n        // console.log(variableValueSubsets);\r\n\r\n        if(splitByDate && splitBySpace){\r\n            // pass\r\n        } else if (splitByDate){\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                spaceCount,\r\n                spaceCount\r\n            )\r\n        } else if (splitBySpace) {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                spaceCount,\r\n                1,\r\n                this.dates.size\r\n            )\r\n        } else {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                variableValueSubsets.length,\r\n                variableValueSubsets.length\r\n            )\r\n        }\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n        let lons = Array.from(this.lons);\r\n        let lats = Array.from(this.lats);\r\n\r\n        const lonInterval = depths.length;\r\n        const latInterval = lonInterval * lons.length;\r\n\r\n        var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${lats[Math.floor(i / latInterval) % lats.length]},${lons[Math.floor(i / lonInterval) % lons.length]},${depths[i % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SectionMapData;","import { quantile, extent } from 'd3-array';\r\n\r\nclass SparseData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = null;\r\n        this.variableIndex = payload.metadata.Depth_Min ? 4 : 3;\r\n        this.depths = [];\r\n        this.times = [];\r\n        this.variableValues = [];\r\n        this.lats = [];\r\n        this.lons = [];\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n    }\r\n\r\n    add(row) {\r\n        let lat = parseFloat(row[1]);\r\n        let lon = parseFloat(row[2]);\r\n\r\n        if(this.hasDepth === null){\r\n            this.hasDepth = Boolean(this.metadata.Depth_Min);\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n        }\r\n\r\n        if(row[this.variableIndex]){\r\n\r\n            this.times.push(row[0]);\r\n            this.lats.push(lat);\r\n            this.lons.push(lon);\r\n            if(this.hasDepth) this.depths.push(parseFloat(row[3]));\r\n            this.variableValues.push(parseFloat(row[this.variableIndex]));\r\n\r\n            if(lat < this.latMin) this.latMin = lat;\r\n            if(lat > this.latMax) this.latMax = lat;\r\n            \r\n            if(lon < this.lonMin) this.lonMin = lon;\r\n            if(lon > this.lonMax) this.lonMax = lon;\r\n        }\r\n    }\r\n\r\n    finalize() {\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let latDistance = Math.abs(this.latMax - this.latMin);\r\n        let lonDistance = Math.abs(this.lonMax - this.lonMin);\r\n        let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n\r\n        let _zoom = 4 - Math.floor(distance / 12);\r\n        this.zoom = _zoom < 0 ? 0 : _zoom;\r\n\r\n        let lonCenter = (this.lonMax + this.lonMin) / 2;\r\n        let latCenter = (this.latMax + this.latMin) / 2;\r\n        this.center = { \r\n            lon: lonCenter, \r\n            lat: latCenter\r\n        }\r\n\r\n        console.log(this);\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        return this.variableValues;\r\n    }\r\n\r\n    generateCsv(){\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SparseData;","import CSVParser from 'csv-parse';\r\n\r\nimport { apiUrl } from './config';\r\nimport SpaceTimeData from './Classes/SpaceTimeData';\r\n\r\nimport storedProcedures from './Enums/storedProcedures';\r\nimport TimeSeriesData from './Classes/TimeSeriesData';\r\nimport DepthProfileData from './Classes/DepthProfileData';\r\nimport SectionMapData from './Classes/SectionMapData';\r\nimport SparseData from './Classes/SparseData';\r\n\r\nimport encoding from 'text-encoding';\r\n// const decoder = new encoding.TextDecoder();\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new encoding.TextDecoder();\r\n    let catalog = [];\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            catalog.push(record)\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.catalog.datasets = async() => {\r\n    const decoder = new encoding.TextDecoder();\r\n    let datasets = {};\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            datasets[record.Dataset_Long_Name.trim()] = record;\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog/datasets', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return datasets;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(payload) => {\r\n    const decoder = new encoding.TextDecoder();\r\n    var vizData;\r\n\r\n    switch(payload.parameters.spName) {\r\n        case storedProcedures.spaceTime:\r\n            if(payload.subType === 'Sparse') vizData = new SparseData(payload);\r\n            else vizData = new SpaceTimeData(payload);\r\n            break;\r\n\r\n        case storedProcedures.timeSeries:\r\n            vizData = new TimeSeriesData(payload);\r\n            break;\r\n\r\n        case storedProcedures.depthProfile:\r\n            vizData = new DepthProfileData(payload);\r\n            break;\r\n\r\n        case storedProcedures.sectionMap:\r\n            vizData = new SectionMapData(payload);\r\n            break;\r\n\r\n        default:\r\n            console.log('Unknown sproc name');\r\n    }\r\n\r\n    let response = await fetch(apiUrl + '/api/data/sp?' + storedProcedureParametersToUri(payload.parameters), fetchOptions);\r\n\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            vizData.add(record);\r\n        }\r\n    })\r\n\r\n    csvParser.on('error', (e) => {\r\n        console.log(e);\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n    return await response.json();\r\n}\r\n\r\napi.visualization.cruiseTrajectoryRequest = async(payload) => {\r\n    const cruiseId = payload.id;\r\n    const decoder = new encoding.TextDecoder();\r\n    let trajectory = {lats: [], lons: []};\r\n\r\n    let response = await fetch(apiUrl + '/api/data/cruisetrajectory?' + `id=${payload.id}`, fetchOptions);\r\n\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            trajectory.lats.push(parseFloat(record[1]));\r\n            trajectory.lons.push(parseFloat(record[2]));\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return trajectory;\r\n}\r\n\r\napi.visualization.cruiseList = async() => {\r\n    let response = await fetch(apiUrl + '/api/data/cruiselist', fetchOptions);\r\n\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;   \r\n}\r\n\r\napi.visualization.csvDownload = async(payload) => {\r\n    let response = await fetch(apiUrl + `/api/data/query?query=${payload.query}`, fetchOptions);\r\n    if(response.ok) return await response.text();\r\n    else return {failed: true, status: response.status}\r\n}\r\n\r\nexport default api;","import { put, takeLatest, all, call, delay } from 'redux-saga/effects';\r\n// import { eventChannel } from 'redux-saga';\r\nimport Cookies from 'js-cookie';\r\n// import worker from '../worker';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    \r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n        if(window.location.pathname === '/login') window.location.href = \"/catalog\";\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){    \r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    \r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    \r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    \r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* datasetRetrieval(){\r\n    yield put(catalogActions.datasetRetrievalRequestProcessing());\r\n    let datasets = yield call(api.catalog.datasets);\r\n\r\n    if(!datasets){\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else {\r\n        yield put(catalogActions.datasetRetrievalRequestSuccess(datasets));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    \r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    \r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload);\r\n    yield delay(50);\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'));\r\n    yield delay(70);\r\n    \r\n    // Result will be an object containing variable values and describing date shape\r\n    if(result.failed){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        if(result.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(\"An error occurred. Please try again.\"));\r\n        }\r\n    } else {\r\n        if(result.variableValues.length > 0){\r\n            result.finalize();\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            // yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            yield put(visualizationActions.triggerShowCharts());\r\n            yield put(visualizationActions.addChart({subType: action.payload.subType, data:result}));\r\n           \r\n        } else {\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges. Try selecting a different date or depth range.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* cruiseTrajectoryRequest(action) {\r\n    yield put(visualizationActions.cruiseTrajectoryRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Cruise Data'));\r\n    let result = yield call(api.visualization.cruiseTrajectoryRequest, action.payload);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n\r\n    if(result.failed){\r\n        if(result.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(`Unable to Fetch Cruise Data`));\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.cruiseTrajectoryRequestSuccess(result));\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n    }\r\n}\r\n\r\nfunction* cruiseListRequest() {\r\n    yield put(visualizationActions.cruiseListRequestProcessing());\r\n    let cruiseList = yield call(api.visualization.cruiseList);\r\n\r\n    if(!cruiseList) {\r\n        yield put(visualizationActions.cruiseListRequestFailure());\r\n    } else{\r\n        yield put(visualizationActions.cruiseListRequestSuccess(cruiseList));\r\n    }\r\n}\r\n\r\nfunction* tableStatsRequest(action){\r\n    yield put(visualizationActions.tableStatsRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Dataset Information'));\r\n    let result = yield call(api.visualization.getTableStats, action.payload.tableName);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n\r\n    if(result.failed){\r\n        if(result.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(`Unable to Fetch Dataset Information`));\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.tableStatsRequestSuccess(result, action.payload.datasetLongName));\r\n    }\r\n}\r\n\r\nfunction* csvDownloadRequest(action){\r\n    yield put(visualizationActions.csvDownloadRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let response = yield call(api.visualization.csvDownload, action.payload);\r\n    yield put(interfaceActions.setLoadingMessage(''))\r\n    if(response.failed) {\r\n        if(response.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen('An error occurred. Please try again.'))\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.downloadTextAsCsv(response, action.payload.fileName));\r\n    }\r\n}\r\n\r\nfunction* downloadTextAsCsv(action){\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'))\r\n    let csv = action.payload.text;\r\n    const blob = new Blob([csv], {type: 'text/csv'});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.setAttribute('hidden', '');\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `${action.payload.datasetName}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n}\r\n\r\nfunction* refreshLogin(){\r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.showLoginDialog());\r\n    yield put(interfaceActions.snackbarOpen(\"Your session has expired. Please log in again.\"));\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchDatasetRetrieval(){\r\n    yield takeLatest(catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SEND, datasetRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\nfunction* watchCruiseTrajectoryRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND, cruiseTrajectoryRequest);\r\n}\r\n\r\nfunction* watchCruiseListRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_LIST_REQUEST_SEND, cruiseListRequest);\r\n}\r\n\r\nfunction* watchTableStatsRequest(){\r\n    yield takeLatest(visualizationActionTypes.TABLE_STATS_REQUEST_SEND, tableStatsRequest)\r\n}\r\n\r\nfunction* watchCsvDownloadRequest(){\r\n    yield takeLatest(visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SEND, csvDownloadRequest);\r\n}\r\n\r\nfunction* watchDownloadTextAsCsv(){\r\n    yield takeLatest(visualizationActionTypes.DOWNLOAD_TEXT_AS_CSV, downloadTextAsCsv);\r\n}\r\n\r\nfunction* watchRefreshLogin(){\r\n    yield takeLatest(userActionTypes.REFRESH_LOGIN, refreshLogin);\r\n}\r\n\r\n// function createWorkerChannel(worker) {\r\n//     return eventChannel(emit => {\r\n//         worker.onmessage = message => {\r\n//             emit(message);\r\n//         }\r\n\r\n//         const unsubscribe = () => {\r\n//             worker.teminate();\r\n//         }\r\n      \r\n//         return unsubscribe;\r\n//     })\r\n// }\r\n\r\n// function* watchWorkerChannel(){\r\n//     const workerChannel = yield call(createWorkerChannel, worker);\r\n\r\n//     while (true) {\r\n//         const message = yield take(workerChannel);\r\n//         yield put(message.data.type, message.data.payload);\r\n//         //   yield put({ type: INCOMING_PONG_PAYLOAD, payload })\r\n//         //   yield fork(pong, socket)\r\n//       }\r\n// }\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchDatasetRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        watchCruiseTrajectoryRequest(),\r\n        watchCruiseListRequest(),\r\n        watchTableStatsRequest(),\r\n        // watchWorkerChannel(),\r\n        watchCsvDownloadRequest(),\r\n        watchDownloadTextAsCsv(),\r\n        watchRefreshLogin()\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","const colors = {\r\n    orange: '#FF8000',\r\n    // orange: '#ffa245',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9',\r\n    errorYellow: '#ffe336'\r\n}\r\n\r\nexport default colors;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    },\r\n    warningCaption: {\r\n        color: colors.orange,\r\n        fontSize: '11px',\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    wrapper: {\r\n        marginTop: theme.spacing(16)\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            \r\n            <div className={classes.wrapper}>\r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Key\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                        <Typography variant='caption' className={classes.warningCaption}>\r\n                            This API key is a unique identifier, and should not be shared.\r\n                        </Typography>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"body2\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n                </Paper>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires a user account. Please <Link component={RouterLink} to={{pathname: '/apikeymanagement'}} onClick={() => props.showLoginDialog()}> log in\r\n            </Link> or <Link component={RouterLink} to={{pathname: '/register'}}> register\r\n            </Link>.\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen, toggleShowHelp } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    appBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    toolBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    navWrapper: {\r\n        position: 'fixed',\r\n        width: '100vw',\r\n        top: '0px',\r\n        backgroundColor: 'transparent',\r\n        zIndex: 50,\r\n        paddingTop: '10px',\r\n        paddingLeft: '20px',\r\n        textAlign: 'left',\r\n        boxSizing: 'border-box'\r\n    },\r\n\r\n    navLink: {\r\n        textDecoration: 'none',\r\n        marginRight: 20,\r\n        color: 'white',\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        },\r\n        fontSize: '13px',\r\n        fontWeight: 100,\r\n        display: 'inline-block',\r\n        cursor: 'pointer' \r\n    },\r\n\r\n    rightNavLink: {\r\n        float: 'right'\r\n    },\r\n\r\n    rightLinkWrapper: {\r\n        display:'inline-block',\r\n        textAlign: 'right'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen,\r\n    toggleShowHelp\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    handleNavigate = (route) => {\r\n        this.props.restoreInterfaceDefaults()\r\n        this.props.history.push(route);\r\n    }\r\n\r\n    handleOutsideNavigate = (url) => {\r\n        window.open(url, '_blank')\r\n    }\r\n\r\n    render(){\r\n        const { classes, history } = this.props;\r\n        const { pathname } = history.location;\r\n\r\n        return (\r\n            <div className={classes.navWrapper}>\r\n                <Typography variant='caption' href='/' component='a' className={classes.navLink}>Home</Typography>\r\n                <Typography variant='caption' to='/catalog' component={Link} className={classes.navLink}>Catalog</Typography>\r\n                {pathname !== '/visualization' && <Typography variant='caption' to='/apikeymanagement' component={Link} className={classes.navLink}>API Keys</Typography>}\r\n                {pathname !== '/visualization' && <Typography variant='caption' to='/visualization' component={Link} className={classes.navLink}>Visualization</Typography>}\r\n                {this.props.user && <Typography variant='caption' onClick={() => this.handleLogOut()} className={`${classes.navLink} ${pathname === '/visualization' ? '' : classes.rightNavLink}`}>Log Out</Typography>}\r\n                {/* <Typography variant='caption' onClick={this.props.toggleShowHelp} className={classes.navLink}>{showHelp ? 'Hide Help' : 'Help(beta) '}</Typography> */}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' onClick={() => this.props.showLoginDialog()} className={`${classes.navLink} ${classes.rightNavLink}`}>Log In</Typography>}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' to='/register' component={Link} className={classes.navLink}>Register</Typography>}\r\n            </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user ? <ApiKeyManagement/> : <LoginRequiredPrompt/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport { Typography, Grid, Table, TableBody, TableCell, TableRow, Button } from '@material-ui/core';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst tableMapping1 = [\r\n    ['Long Name', 'Long_Name'],\r\n    ['Short Name', 'Variable'],\r\n    ['Dataset Name', 'Dataset_Name'],\r\n    ['Study Domain', 'Study_Domain'],\r\n    ['Process Level', 'Process_Level'],\r\n    ['SQL Table Name', 'Table_Name'],\r\n    ['Temporal Resolution', 'Temporal_Resolution']\r\n];\r\n\r\nconst tableMapping2 = [\r\n    ['Unit', 'Unit'],\r\n    ['Mean Value', 'Variable_Mean'],\r\n    ['Value Std', 'Variable_Std'],\r\n    ['Spatial Resolution', 'Spatial_Resolution'],\r\n    ['Start Latitude[\\xb0]', 'Lat_Min'],\r\n    ['End Latitude[\\xb0]', 'Lat_Max'],\r\n    ['Start Longitude[\\xb0]', 'Lon_Min'],\r\n    ['End Longitude[\\xb0]', 'Lon_Max']\r\n];\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        // width: '90%',\r\n        // margin: '0px auto 5px 10px',\r\n        padding: '10px',\r\n        height: '100%',\r\n        userSelect: 'auto'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(1),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        height: '100%',\r\n        maxHeight: '280px'\r\n    },\r\n    gridItem: {\r\n        // height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        verticalAlign: 'middle',\r\n        maxHeight: '280px'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        maxWidth: '80%',\r\n        maxHeight: '260px'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        tableLayout: 'fixed',\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '24px',\r\n        width: '100%'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black',\r\n        fontSize: '11px',\r\n        maxWidth: '100%',\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        paddingRight: '14px'\r\n    },\r\n\r\n    gridDetailTypography: {\r\n        fontSize: '11px',\r\n        whiteSpace: 'normal',\r\n        width: '100%',\r\n        display: 'block',\r\n    },\r\n\r\n    boldText: {\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n    rightGridItem: {\r\n        maxWidth: '100%',\r\n        paddingTop: '10px',\r\n        boxSizing: 'border-box',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n\r\n    datasetDescriptionButton: {\r\n        backgroundColor: '#FF8000',\r\n        color: 'white',\r\n        '&:hover': {\r\n            backgroundColor: '#ab5600',\r\n        },\r\n        fontSize: '12px',\r\n        maxWidth: '100%',\r\n    },\r\n    \r\n    buttonTextWrapper: {\r\n        textOverflow: 'ellipsis',\r\n        maxWidth: '100%',\r\n        overflow: 'hidden'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <div className={`ag-selectable ${classes.wrapper}`}>\r\n                <Grid container className={classes.gridClass}>\r\n                    <Grid container item xs={10} spacing={2}>\r\n                        <Grid item xs={4} className={classes.gridItem}>\r\n                            <img src={props.context.datasets[props.data.Dataset_Name].Icon_URL} alt=\"Mission Icon\" className={classes.vizSampleImage}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4} className={classes.gridItem}>\r\n                            <Table className={classes.variableDetailTable} size='small'>\r\n                                <TableBody>\r\n                                    {tableMapping1.map((row, index) => (\r\n                                        <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell} title={props.data[row[1]]}>{props.data[row[1]]}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                        <TableRow key={tableMapping1.length + 1} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>Start Date</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data.Time_Min.slice(0,10)}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow key={tableMapping1.length + 2} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>End Date</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data.Time_Max.slice(0,10)}</TableCell>\r\n                                        </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4} className={classes.gridItem}>\r\n                            <Table className={classes.variableDetailTable} size='small'>\r\n                                <TableBody>\r\n                                    {tableMapping2.map((row, index) => (\r\n                                        <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                        <TableRow key={tableMapping2.length + 1} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>Maximum Depth[m]</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data.Depth_Max || 'Surface Only'}</TableCell>\r\n                                        </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                <Grid container direction='column' item xs={2} alignContent='center' alignItems='center'>\r\n\r\n                    <Grid item xs={props.data.Acknowledgement ? 3 : 6} className={classes.rightGridItem}>\r\n                        <Button \r\n                            variant='contained' \r\n                            className={classes.datasetDescriptionButton} \r\n                            onClick={() => props.context.handleDescribeDataset(props.data.Dataset_Name)}\r\n                        >\r\n                            <span className={classes.buttonTextWrapper}>Dataset Details</span>\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={props.data.Acknowledgement ? 3 : 6} className={classes.rightGridItem}>\r\n                        <Button \r\n                            variant='contained' \r\n                            className={classes.datasetDescriptionButton} \r\n                            onClick={() => props.context.handleDescribeVariable(props.data.ID)}\r\n                        >\r\n                            <span className={classes.buttonTextWrapper}>Variable Details</span>\r\n                        </Button>\r\n                    </Grid>\r\n                    {   props.data.Acknowledgement &&\r\n                        <Grid item xs={6} className={classes.rightGridItem}>\r\n                            <Typography variant='caption' className={`${classes.gridDetailTypography} ${classes.boldText}`}>\r\n                                Acknowlegement:\r\n                            </Typography>\r\n                            <Typography variant='caption' className={classes.gridDetailTypography} title={props.data.Acknowledgement}>\r\n                                {props.data.Acknowledgement}\r\n                            </Typography>\r\n                        </Grid>\r\n                    }\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst styles = (theme) => ({\r\n    markdown: {\r\n        '& img': {\r\n            maxWidth: '100%',\r\n            margin: '20px auto 20px auto',\r\n            display: 'block'\r\n        },\r\n        '& a': {\r\n            color: theme.palette.primary.main,\r\n            textDecoration: 'none'\r\n        }\r\n    }\r\n})\r\n\r\nclass DatasetDescriptionDialog extends Component {\r\n\r\n    // state = {\r\n    //     references: []\r\n    // }\r\n\r\n    render() {\r\n        const { description, classes, datasetName, clearDescription } = this.props;\r\n        // const { references } = this.state;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                { description ?\r\n                <Dialog open={Boolean(description)} onClose={clearDescription} maxWidth={false}>\r\n                    <DialogTitle>{datasetName}</DialogTitle>\r\n                    <DialogContent>\r\n                        <ReactMarkdown source={description} className={classes.markdown}/>\r\n                    </DialogContent>\r\n\r\n                    {/* {references &&\r\n                        <DialogContent>\r\n                            <strong>References: {references.length}</strong>\r\n                        </DialogContent>\r\n                    } */}\r\n                </Dialog> :\r\n                ''\r\n                }\r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default (withStyles(styles)(DatasetDescriptionDialog));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core';\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalog: state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst VariableDescriptionDialog = (props) => {\r\n    const { catalog, describedVariable } = props;\r\n    let variable = catalog.find((item) => item.ID === describedVariable);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { describedVariable ?\r\n            <Dialog open={Boolean(describedVariable)} onClose={props.clearDescription} maxWidth={false}>\r\n                <DialogTitle>{variable.Long_Name}</DialogTitle>\r\n                { variable.Comment &&\r\n                <DialogContent>\r\n                    {variable.Comment}\r\n                </DialogContent>\r\n                }\r\n                \r\n                <DialogContent>\r\n                    <strong>Source:</strong> {variable.Data_Source}\r\n                </DialogContent>\r\n\r\n                <DialogContent>\r\n                <strong>Distributor:</strong> {variable.Distributor}\r\n                </DialogContent>\r\n            </Dialog> :\r\n            ''\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VariableDescriptionDialog));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = theme => ({\r\n  tooltip: {\r\n      color: theme.palette.secondary.main,\r\n      opacity: 1\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst ConnectedTooltip = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    if(!showHelp) {\r\n        return (\r\n            <React.Fragment>\r\n                {props.children}\r\n            </React.Fragment>\r\n        )}\r\n    else {\r\n        return (\r\n            <Tooltip \r\n                placement={props.placement} \r\n                open={showHelp} \r\n                title={props.title} \r\n                className={classes.tooltip}\r\n                classes={{\r\n                    popper: classes.tooltip\r\n                }}\r\n            >\r\n                {props.children}\r\n            </Tooltip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(ConnectedTooltip));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\nimport DatasetDescriptionDialog from './DatasetDescriptionDialog';\r\nimport VariableDescriptionDialog from './VariableDescriptionDialog';\r\n\r\nimport stringify from 'csv-stringify/lib/sync';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper, Button, Grid, Tooltip } from '@material-ui/core';\r\n\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"Long_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"Variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"Table_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"Dataset_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"Make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    maxWidth: 160\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"Sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    maxWidth: 160\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"Study_Domain\",\r\n    sortable: true,\r\n    filter: true,\r\n    // hide: true,\r\n    maxWidth: 160,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"Process_Level\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"Spatial_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"Temporal_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"Unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'Keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '70vh', \r\n    width: '92%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '70px 2vw 30px 2vw',\r\n    padding: '20px'\r\n  },\r\n\r\n  downloadButton: {\r\n    margin: '6px 0 0 0',\r\n    textTransform: 'none',\r\n    color: 'black',\r\n    backgroundColor: '#FF8000',\r\n    '&:hover': {\r\n      backgroundColor: '#ab5600',\r\n  }\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  },\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: '',\r\n    //dataset long name\r\n    describedDataset: '',\r\n    //variable index\r\n    describedVariable: null\r\n  }\r\n\r\n  handleDescribeDataset = (dataset) => {\r\n    this.setState({...this.state, describedDataset: dataset})\r\n  }\r\n\r\n  handleDescribeVariable = (variable) => {\r\n    this.setState({...this.state, describedVariable: variable})\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  onGridSizeChanged = (params) => {\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    this.gridApi.sizeColumnsToFit()\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  handleDownloadCatalog = () => {\r\n    let csv = stringify(this.props.catalog, {\r\n      header: true\r\n    });\r\n\r\n    const blob = new Blob([csv], {type: 'text/csv'});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.setAttribute('hidden', '');\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `CMAP_Catalog.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  }\r\n\r\n  render = () => {\r\n    const { classes, datasets } = this.props;\r\n    const { describedDataset, describedVariable } = this.state;\r\n    const description = !datasets ? '' : !datasets[describedDataset] ? '' : datasets[describedDataset].Description;\r\n\r\n    return (\r\n      <Paper elevation={12} className={classes.gridPaper}>\r\n        <DatasetDescriptionDialog \r\n          description={description}\r\n          clearDescription={() => this.handleDescribeDataset('')}\r\n          datasetName={describedDataset}\r\n        />\r\n        <VariableDescriptionDialog\r\n          clearDescription={() => this.handleDescribeVariable(null)}\r\n          describedVariable={describedVariable}\r\n        />\r\n        <Grid container>\r\n          <Grid item xs={3}>\r\n\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <ConnectedTooltip placement title='Enter one or more search terms.' placement='top'>\r\n              <TextField              \r\n                className={classes.gridSearch}\r\n                autoFocus={true}\r\n                margin=\"normal\"\r\n                id=\"name\"\r\n                type=\"text\"\r\n                variant='outlined'\r\n                name='filterText'\r\n                value={this.state.filterText}\r\n                onChange={this.handleChange}\r\n                label=\"Search Variables\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </ConnectedTooltip>\r\n\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Tooltip placement='top' title='Download the full catalog in CSV format'>\r\n              <Button \r\n                className={classes.downloadButton}\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={this.handleDownloadCatalog}            \r\n              >\r\n                  Download\r\n              </Button>\r\n            </Tooltip>\r\n          </Grid>\r\n\r\n          <Grid item xs={1}>\r\n\r\n          </Grid>\r\n        </Grid>\r\n\r\n          \r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              onGridSizeChanged={this.onGridSizeChanged}\r\n              suppressDragLeaveHidesColumns= {true}\r\n              enableCellTextSelection={true}\r\n              suppressContextMenu={true}\r\n\r\n              // Additional props\r\n              context={{\r\n                datasets,\r\n                handleDescribeDataset: this.handleDescribeDataset,\r\n                handleDescribeVariable: this.handleDescribeVariable\r\n              }}\r\n\r\n              // Setting related to styling\r\n              getRowStyle= {function(params) {\r\n                if (params.node.detail) {\r\n                    return { background: 'transparent' }\r\n                }\r\n              }}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nimport { retrievalRequestSend, datasetRetrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog,\r\n    datasets: state.datasets\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend,\r\n    datasetRetrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.datasets) this.props.datasetRetrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog && this.props.datasets) return <AGGridWrapper catalog={this.props.catalog} datasets={this.props.datasets}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const validation = {\r\n    depth: {\r\n        depthOneIsLower: 'Cannot be larger than end',\r\n        depthOneOutOfBounds: 'Must be smaller than $',\r\n        depthTwoOutOfBounds: 'Must be larger than $',\r\n        negative: 'Cannot be negative'\r\n    },\r\n\r\n    date: {\r\n        dateOneIsLater: 'Cannot be after end',\r\n        dateOneOutOfBounds: 'Must be before $',\r\n        dateTwoOutOfBounds: 'Must be after $'\r\n    },\r\n\r\n    lat: {\r\n        latOneIsHigher: 'Cannot be larger than end.',\r\n        latOneOutOfBounds: 'Must be less than $',\r\n        latTwoOutOfBounds: 'Must be greater than $'\r\n    },\r\n\r\n    lon: {\r\n        lonOneIsHigher: 'Cannot be larger than end.',\r\n        lonOneOutOfBounds: 'Must be less than $',\r\n        lonTwoOutOfBounds: 'Must be greater than $'\r\n    },\r\n\r\n    type: {\r\n        dataIsIrregular: '$ is not available for sparse data',\r\n        dateRangeRequired: '$ requires a range of dates',\r\n        depthRangeRequired: '$ requires a range of depths',\r\n        surfaceOnlyDataset: '$ contains only surface data',\r\n        irregularOnly: 'Sparse map is only available for sparse data',\r\n        dataSizeTooLarge: 'Data set is too large for this visualization type.',\r\n        webGLContextLimit: 'Limit exceeded for sparse and heatmaps. Please delete one or more to proceed.'\r\n    },\r\n\r\n    generic: {\r\n        invalid: 'Invalid input',\r\n        dataSizeWarning: 'Wait time and application performance may be poor due to size of data.',\r\n        dataSizePrevent: 'Data set is too large. Please reduce date range or area size.',\r\n        variableMissing: 'Please select a variable',\r\n        vizTypeMissing: 'Please select a visualization type'\r\n    }\r\n}\r\n\r\nexport default validation;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    const { data } = props;\r\n\r\n    if(!data) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{data.Long_Name}</DialogTitle>\r\n            <DialogContent>\r\n                { data.Comment &&\r\n                    <DialogContentText>\r\n                        {data.Comment}\r\n                    </DialogContentText>\r\n                }\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Dataset</TableCell>\r\n                                <TableCell title={data.Dataset_Name}>{data.Dataset_Name.length > 25 ? data.Dataset_Name.slice(0,23) + '...' : data.Dataset_Name}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Table Name</TableCell>\r\n                                <TableCell title={data.Table_Name}>{data.Table_Name > 25 ? data.Table_Name.slice(0,23) + '...' : data.Table_Name}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Source</TableCell>\r\n                                <TableCell title={data.Data_Source}>{data.Data_Source > 25 ? data.Data_Source.slice(0,23) + '...' : data.Data_Source}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Distributor</TableCell>\r\n                                <TableCell title={data.Distributor}>{data.Distributor.length > 25 ? data.Distributor.slice(0,23) + '...' : data.Distributor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{data.Sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{data.Spatial_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{data.Temporal_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{data.Time_Min ? data.Time_Min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{data.Time_Max ? data.Time_Max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lat_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lat_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lon_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{data.Depth_Min ? `${data.Depth_Min}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{data.Depth_Max ? `${data.Depth_Max}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            {data.Variable_Min &&\r\n                                <TableRow>\r\n                                    <TableCell>Minimum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Min}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Max &&\r\n                                <TableRow>\r\n                                    <TableCell>Maximum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Max}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Mean && \r\n                                <TableRow>\r\n                                    <TableCell>Mean Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Mean}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Std &&\r\n                                <TableRow>\r\n                                    <TableCell>Standard Deviation({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Std}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);\r\n\r\n// Variable_Max: \"4.999\"\r\n// Variable_Mean: \"-0.0000008547\"\r\n// Variable_Min: \"-4.9956\"\r\n// Variable_Std: \"0.1428013424\"","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nconst mapTemporalResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [temporalResolutions.threeMinutes] : 1,\r\n        [temporalResolutions.sixHourly] : 1,\r\n        [temporalResolutions.daily] : 1,\r\n        [temporalResolutions.weekly] : 7,\r\n        [temporalResolutions.monthly] : 30,\r\n        [temporalResolutions.annual] : 365,\r\n        [temporalResolutions.irregular] : null,\r\n        [temporalResolutions.monthlyClimatology]: 30,\r\n        [temporalResolutions.threeDay]: 3,\r\n        [temporalResolutions.eightDayRunning]: 8,\r\n        [temporalResolutions.eightDays]: 8\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapTemporalResolutionToNumber;","const utcDateStringToLocal = (utcString) => {\r\n    let date = new Date(utcString);\r\n    let utcYear = date.getUTCFullYear();\r\n    let utcMonth = date.getUTCMonth();\r\n    let utcDate = date.getUTCDate();\r\n\r\n    let newDate = new Date();\r\n    newDate.setFullYear(utcYear, utcMonth, utcDate);\r\n    return newDate;\r\n}\r\n\r\nexport default utcDateStringToLocal;","\r\nconst darwinDepths = [\r\n    5,\r\n    15,\r\n    25,\r\n    35,\r\n    45,\r\n    55,\r\n    65,\r\n    75.005,\r\n    85.025,\r\n    95.095,\r\n    105.31,\r\n    115.87,\r\n    127.15,\r\n    139.74,\r\n    154.47,\r\n    172.4,\r\n    194.735,\r\n    222.71,\r\n    257.47,\r\n    299.93,\r\n    350.68,\r\n    409.93,\r\n    477.47,\r\n    552.71,\r\n    634.735,\r\n    722.4,\r\n    814.47,\r\n    909.74,\r\n    1007.155,\r\n    1105.905,\r\n    1205.535,\r\n    1306.205,\r\n    1409.15,\r\n    1517.095,\r\n    1634.175,\r\n    1765.135,\r\n    1914.15,\r\n    2084.035,\r\n    2276.225,\r\n    2491.25,\r\n    2729.25,\r\n    2990.25,\r\n    3274.25,\r\n    3581.25,\r\n    3911.25,\r\n    4264.25,\r\n    4640.25,\r\n    5039.25,\r\n    5461.25,\r\n    5906.25\r\n]\r\n\r\nconst piscesDepths = [\r\n    0.494024991989,\r\n    1.54137504101,\r\n    2.64566898346,\r\n    3.81949496269,\r\n    5.07822418213,\r\n    6.44061422348,\r\n    7.92956018448,\r\n    9.5729970932,\r\n    11.404999733,\r\n    13.4671401978,\r\n    15.8100700378,\r\n    18.4955596924,\r\n    21.5988197327,\r\n    25.2114105225,\r\n    29.4447307587,\r\n    34.4341506958,\r\n    40.3440513611,\r\n    47.3736915588,\r\n    55.764289856,\r\n    65.8072662354,\r\n    77.8538513184,\r\n    92.3260726929,\r\n    109.729301453,\r\n    130.666000366,\r\n    155.850692749,\r\n    186.125595093,\r\n    222.475204468,\r\n    266.040313721,\r\n    318.127410889,\r\n    380.213012695,\r\n    453.937713623,\r\n    541.088928223,\r\n    643.566772461,\r\n    763.333129883,\r\n    902.339294434,\r\n    1062.43994141,\r\n    1245.29101562,\r\n    1452.25097656,\r\n    1684.28405762,\r\n    1941.89294434,\r\n    2225.07788086,\r\n    2533.3359375,\r\n    2865.70288086,\r\n    3220.82006836,\r\n    3597.03198242,\r\n    3992.48388672,\r\n    4405.22412109,\r\n    4833.29101562,\r\n    5274.78417969,\r\n    5727.91699219\r\n]\r\n\r\nconst _piscesTables = [\r\n    'tblPisces_NRT',\r\n    'tblPisces_NRT_Calendar'\r\n]\r\n\r\nconst _darwinTable = [\r\n    'tblDarwin_Chl_Climatology',\r\n    'tblDarwin_Ecosystem',\r\n    'tblDarwin_Nutrient',\r\n    'tblDarwin_Nutrient_Climatology',\r\n    'tblDarwin_Ocean_Color',\r\n    'tblDarwin_Phytoplankton',\r\n    'tblDarwin_Plankton_Climatology'\r\n]\r\n\r\nconst piscesTable = new Set(_piscesTables);\r\nconst darwinTable = new Set(_darwinTable);\r\n\r\nconst exports = {\r\n    count: (field, depth1, depth2) => {\r\n        const { Table_Name: table } = field.data;\r\n        var count = 0;\r\n    \r\n        if(piscesTable.has(table)) {\r\n            for(let i = 0; i < piscesDepths.length; i++){\r\n                if(piscesDepths[i] > depth2) break;\r\n                if(piscesDepths[i] > depth1) count ++; \r\n            }\r\n        } else if (darwinTable.has(table)) {\r\n            for(let i = 0; i < darwinDepths.length; i++){\r\n                if(darwinDepths[i] > depth2) break;\r\n                if(darwinDepths[i] > depth1) count ++; \r\n            }\r\n        } else {}\r\n        return count;\r\n    },\r\n\r\n    piscesTable,\r\n    darwinTable,\r\n    piscesDepths,\r\n    darwinDepths\r\n}\r\n\r\nexport default exports;","import visualizationSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nexport default (charts) => {\r\n    let count = 0;\r\n    charts.forEach(chart => {\r\n        if(chart.subType === visualizationSubTypes.heatmap) count ++;\r\n        if(chart.subType === visualizationSubTypes.sparse){\r\n            count ++;\r\n            if(chart.data.variableValues.length > 10000) count +=3;\r\n        }\r\n    })\r\n    return count;\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { VariableSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport { ButtonGroup, Grid, IconButton, Icon, ListItem, MenuItem, Typography, Drawer, TextField, FormControl, InputLabel, Button, Tooltip} from '@material-ui/core';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { Cached, LibraryBooks, ArrowRight, ChevronLeft, ChevronRight, InsertChartOutlined, Language, Delete, CloudDownload, Info } from '@material-ui/icons';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend, clearCharts, csvDownloadRequestSend } from '../Redux/actions/visualization';\r\nimport { snackbarOpen } from '../Redux/actions/ui';\r\n\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport depthUtils from '../Utility/depthCounter';\r\nimport countWebGLContexts from '../Utility/countWebGLContexts';\r\n\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst navDrawerWidth = 320;\r\n\r\nconst errorHeightAdjust = 23;\r\n\r\nconst styles = theme => ({\r\n    drawer: {\r\n        width: navDrawerWidth,\r\n        top: 32,\r\n        bottom: 'auto',\r\n        overflow: 'visible'\r\n    },\r\n\r\n    drawerPaper: {\r\n        width: navDrawerWidth,\r\n        height: '540px',\r\n        top: 'calc(50% - 270px)',\r\n        borderRadius: '0 4px 4px 0',\r\n        boxShadow: '2px 2px  2px 2px #242424',\r\n        border: 'none',\r\n        overflow: 'visible',\r\n        backgroundColor: '#424242'\r\n    },\r\n\r\n    drawerPaperError1: {\r\n        height: `${540 + errorHeightAdjust}px`\r\n    },\r\n\r\n    drawerPaperError2: {\r\n        height: `${540 + errorHeightAdjust * 2}px`\r\n    },\r\n\r\n    drawerPaperError3: {\r\n        height: `${540 + errorHeightAdjust * 3}px`\r\n    },\r\n\r\n    drawerPaperError4: {\r\n        height: `${540 + errorHeightAdjust * 4}px`\r\n    },\r\n\r\n    drawerPaperError5: {\r\n        height: `${540 + errorHeightAdjust * 5}px`\r\n    },\r\n\r\n  openPanelChevron: {\r\n    position: 'fixed',\r\n    left: '5px',\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  closePanelChevron: {\r\n    position: 'fixed',\r\n    left: navDrawerWidth + 5,\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  groupedButtons: {\r\n      width: '50%',\r\n      border: '1px solid #313131',\r\n      borderRadius: 0,\r\n      backgroundColor: '#3c3c3c'\r\n  },\r\n\r\n  controlPanelForm: {\r\n      marginTop: theme.spacing(1)\r\n  },\r\n\r\n  tableStatsButton: {\r\n      borderRadius: 0,\r\n      paddingTop: '11px',\r\n      backgroundColor: '#424242'\r\n  },\r\n\r\n    formGridItem: {\r\n        borderLeft: '1px solid #313131',\r\n        backgroundColor: '#424242'\r\n    },\r\n\r\n  vizTypeSelectFormControl: {\r\n      width: '100%',\r\n      '&:disabled': {\r\n        backgroundColor: 'transparent'\r\n    }\r\n  },\r\n\r\n  depressed: {\r\n      boxShadow: 'inset 1px 1px 5px #1c1c1c'\r\n  },\r\n\r\n  padLeft: {\r\n      padding: '6px 0 2px 7px'\r\n  },\r\n\r\n  visualizeButton: {\r\n      height: '56px',\r\n      borderRadius: 0,\r\n      backgroundColor: '#424242',\r\n      color: theme.palette.primary.main,\r\n      fontVariant: 'normal',\r\n      '&:disabled': {\r\n        backgroundColor: 'transparent'\r\n    },\r\n      '&:hover': {backgroundColor: '#874400'}\r\n  },\r\n\r\n  helperText: {\r\n    color: 'yellow'\r\n  },\r\n\r\n  vizButtonTooltip: {\r\n    color: 'yellow'\r\n  },\r\n\r\n  datePickerInputAdornment: {\r\n      padding: 0\r\n  },\r\n\r\n  clearChartsButton: {\r\n      borderRadius: 0,\r\n      backgroundColor: '#3c3c3c',\r\n      width: '100%',\r\n      borderRight: '1px solid #313131'\r\n\r\n  },\r\n\r\n  resetSPParamsButton: {\r\n    borderRadius: 0,\r\n    backgroundColor: '#3c3c3c',\r\n    width: '100%',\r\n  },\r\n\r\n  datePicker: {\r\n      width: '100%'\r\n  },\r\n\r\n  singleValueReplacement: {\r\n      display: 'inline',\r\n      position: 'relative',\r\n      width: 0,\r\n      height: 0\r\n  },\r\n\r\n  singleValueReplacement2: {\r\n      position: 'absolute',\r\n      zIndex: 9999999999,\r\n      width: '220px',\r\n      top: '14px',\r\n      textAlign: 'left',\r\n      paddingLeft: '8px',\r\n      pointerEvents: 'none'\r\n  }\r\n});\r\n\r\nconst overrideDisabledStyle = {\r\n    backgroundColor: 'transparent'\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    showHelp: state.showHelp,\r\n    datasets: state.datasets,\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend,\r\n    clearCharts,\r\n    csvDownloadRequestSend,\r\n    snackbarOpen\r\n}\r\n\r\nconst getDatePlaceholder = (date) => {\r\n    if(isNaN(new Date(date)).valueOf()) return 'yyyy-MM-dd';\r\n    \r\n    let month  = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let year = date.getFullYear();\r\n    return [year, month < 10 ? '0' + month : month, day < 10 ? '0' + day : day].join('-');\r\n}\r\n\r\nconst groupHeaderHeight = 37;\r\nconst height = 35;\r\n\r\nconst reactWindowListRef = React.createRef();\r\nconst selectRef = React.createRef();\r\n\r\nclass MenuList extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n      if(reactWindowListRef.current) reactWindowListRef.current.resetAfterIndex(0);\r\n      if(!(this.props.children && this.props.children.length)) return;\r\n      let scrollOffset = 0;\r\n      let foundFocus = false;\r\n      this.props.children.forEach(child => {\r\n        if(foundFocus) return;\r\n\r\n        let count = groupHeaderHeight;\r\n        let groupHasFocus= false;\r\n        for(let i = 0; i < child.props.children.length; i++){\r\n          if(child.props.children[i].props.isFocused) {\r\n            foundFocus = true;\r\n            groupHasFocus = true;\r\n            break;\r\n          }\r\n          count += 37.6;\r\n        }\r\n\r\n        if(groupHasFocus) scrollOffset += count;\r\n        else scrollOffset += 37.6;\r\n      })\r\n      if(foundFocus) reactWindowListRef.current.scrollTo(scrollOffset > 150 ? scrollOffset - 150 : 0);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n\r\n        if(!children || !children.length) return '';\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        const groupHeights = children.map(child => {\r\n          return child.props.children.some(grandChild => grandChild.props.isFocused) ? child.props.children.length * 37.6 + groupHeaderHeight : groupHeaderHeight;\r\n        });\r\n        const totalHeight = groupHeights.reduce((acc, cur) => acc + cur, 0);\r\n        const estimatedItemSize = totalHeight / children.length;\r\n        const getItemSize = index => groupHeights[index];\r\n\r\n        return (\r\n            <ReactWindowList\r\n                // height={(options.length == 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                height={totalHeight < 400 ? totalHeight :  400}\r\n                estimatedItemSize={estimatedItemSize}\r\n                itemCount={children.length}\r\n                itemSize={getItemSize}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={{...style}}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\nclass Group extends Component {\r\n    render() {\r\n        const hasFocus = this.props.children.some(element => element.props.isFocused);\r\n        const sensor = this.props.children[0].props.data.data.Sensor;\r\n\r\n      return (\r\n          <React.Fragment>\r\n            <CustomHeading \r\n              {...this.props.headingProps} \r\n              headingLabel={this.props.data.label} \r\n              firstChild={this.props.children[0].props.data}\r\n              hasFocus={hasFocus}\r\n              sensor={sensor}\r\n              tableName={this.props.children[0].props.data.data.Table_Name}\r\n              selectProps={this.props.selectProps}\r\n            />\r\n            <div hidden={!hasFocus}>\r\n              {this.props.children.map(child => child)}\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n    }    \r\n}\r\n\r\nconst customHeadingStyles = (theme) => ({\r\n    customHeading: {\r\n        backgroundColor: 'rgba(0,0,0,.5)',\r\n        height: groupHeaderHeight,\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(122,67,0,.5)',\r\n        },\r\n        boxShadow: '0px 1px 1px 1px #242424'\r\n    },\r\n\r\n    icon: {\r\n        marginRight: '10px',\r\n        width: '30px'\r\n    },\r\n\r\n    typography: {\r\n        width: '650px'\r\n    }\r\n})\r\n\r\nconst _CustomHeading = props => {\r\n    const { classes, sensor, selectProps } = props;\r\n    let iconClass;\r\n\r\n    if(sensor === 'Satellite') iconClass = 'fa-satellite';\r\n    else if(sensor === 'Blend') iconClass = 'fa-laptop';\r\n    else iconClass = 'fa-ship';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <ListItem \r\n          button \r\n          alignItems='center' \r\n          onClick={() => selectRef.current.select.setState({focusedOption: props.hasFocus ? null : props.firstChild})}\r\n          className={classes.customHeading}\r\n        >\r\n            <Icon fontSize='small' color='inherit' className={`fas ${iconClass} ${classes.icon}`}></Icon>\r\n        <Typography className={classes.typography}>\r\n            {props.headingLabel.length > 70 ? props.headingLabel.slice(0,67) + '...' : props.headingLabel}\r\n        </Typography>\r\n\r\n        <Tooltip title='Download Data' placement='right'>\r\n            <IconButton \r\n                color='inherit' \r\n                onClick={(e) => {\r\n                    // selectProps.handleDownloadCsvClick(tableName, props.headingLabel);\r\n                    selectProps.handleSetDownloadTarget({dataset: props.headingLabel})\r\n                    selectProps.onAutoSuggestChange(props.headingLabel, {action: 'input-change'})\r\n                    e.stopPropagation();\r\n                }}>\r\n                <CloudDownload/>\r\n            </IconButton>\r\n        </Tooltip>\r\n\r\n        { selectProps.datasets[props.headingLabel] &&\r\n            <Tooltip title='Dataset Info' placement='right'>\r\n                <IconButton \r\n                    color='inherit' \r\n                    onClick={(e) => {\r\n                        window.open(selectProps.datasets[props.headingLabel].Doc_URL);\r\n                        e.stopPropagation();\r\n                    }}\r\n                >\r\n                    <Info/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        }\r\n        </ListItem>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\nconst CustomHeading = withStyles(customHeadingStyles)(_CustomHeading);\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n    <components.DropdownIndicator {...props}>\r\n        <ArrowRight/>\r\n    </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n      <components.Option \r\n        {...props} \r\n        innerProps={{\r\n            ...props.innerProps, \r\n            // Prevent focus / scroll events when mousing over options\r\n            onMouseMove: (e) => e.preventDefault(), \r\n            onMouseOver: (e) => e.preventDefault()\r\n        }}>\r\n    </components.Option>\r\n    )\r\n}\r\n\r\nconst GroupHeading = (props) => '';\r\n\r\nconst formatOptionLabel = (option, meta) => {\r\n    return option.label;\r\n}\r\n\r\nclass VizControlPanel extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.indexStrategy = new JsSearch.AllSubstringsIndexStrategy()\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        search.addIndex('Table_Name');\r\n        search.addIndex('Dataset_Name');\r\n        search.addIndex('Study_Domain');\r\n        search.addIndex('Spatial_Resolution');\r\n        search.addIndex('Temporal_Resolution');\r\n\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: '',\r\n            showControlPanel: true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search});\r\n        }\r\n    }\r\n\r\n    handleOpenControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: true})\r\n    }\r\n\r\n    handleCloseControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: false})\r\n    }      \r\n    \r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        var options = {};\r\n\r\n        items.forEach(item => {\r\n            if(!options[item.Dataset_Name]){\r\n                options[item.Dataset_Name] = {\r\n                    label: item.Dataset_Name,\r\n                    options: []\r\n                }\r\n            }\r\n\r\n            options[item.Dataset_Name].options.push({\r\n                value: item.Variable,\r\n                label: item.Long_Name.length < 80 ? item.Long_Name : item.Long_Name.slice(0,78) + '...',\r\n                data: item\r\n            })\r\n        });\r\n\r\n        let sortedOptions = Object.values(options).sort((opt1, opt2) => {\r\n            return opt1.label < opt2.label ? -1 : 1;\r\n        })\r\n\r\n        return sortedOptions;\r\n    }\r\n\r\n    estimateCsvSize = (datasetName) => {\r\n        // let members = [];\r\n        let count = 0;\r\n        this.props.catalog.forEach((member, i) => {\r\n            if(member.Dataset_Name === datasetName){\r\n                count += parseInt(member.Variable_Count) || 0;\r\n                // members.push(member);\r\n            }\r\n        })\r\n        return count;\r\n    }\r\n\r\n    handleDownloadCsvClick = (tableName, datasetName) => {\r\n        let query = `select%20*%20from%20${tableName}`;\r\n        let count = this.estimateCsvSize(datasetName);\r\n        if(count < 3000000){\r\n            this.props.csvDownloadRequestSend(query, datasetName);\r\n        } else {\r\n            this.props.snackbarOpen('Data set too large');\r\n        }\r\n    }\r\n\r\n    handleResetSPParams = () => {\r\n        this.props.resetSPParams();\r\n        this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') {\r\n            this.setState({...this.state, searchField: searchString});\r\n            selectRef.current.select.setState({focusedOption: -1})\r\n        }\r\n        if(action.action ==='set-value') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, depth1, depth2, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        \r\n        const dayDiff = (date2 - date1) / 86400000;\r\n        \r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n        \r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const depthCount = depthUtils.count(fields, depth1, depth2) || 1;\r\n        \r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * depthCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDateValid = () => {\r\n        if(isNaN(new Date(this.props.dt1)).valueOf() || !this.props.dt1) return 'Start date is invalid';\r\n    }\r\n\r\n    checkEndDateValid = () => {\r\n        if(isNaN(new Date(this.props.dt2)).valueOf() || !this.props.dt1) return 'End date is invalid';\r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 > this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        return '';\r\n    }\r\n    \r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = (dataSize) => {\r\n        if(!this.props.selectedVizType) return '';\r\n        if(dataSize > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = (dataSize) => {\r\n        const webGLCount = countWebGLContexts(this.props.charts);\r\n        if(this.props.selectedVizType === vizSubTypes.heatmap && webGLCount > 14) return validation.type.webGLContextLimit;\r\n        if(this.props.selectedVizType === vizSubTypes.sparse && webGLCount > 11) return validation.type.webGLContextLimit;\r\n\r\n\r\n        if(this.props.selectedVizType !== vizSubTypes.histogram && this.props.selectedVizType !== vizSubTypes.heatmap && dataSize > 1200000){\r\n            return validation.generic.dataSizePrevent;\r\n        }\r\n        if(dataSize > 6000000) return validation.generic.dataSizePrevent;\r\n        if(!this.props.fields) return validation.generic.variableMissing;\r\n        if(!this.props.selectedVizType) return validation.generic.vizTypeMissing;\r\n        return ''}\r\n\r\n    handleShowChartsAndResize = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 30);\r\n        this.props.handleShowCharts();     \r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField, showControlPanel } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly,\r\n            showCharts,\r\n            handleShowGlobe,\r\n            handleChange,\r\n            handleLatLonChange,\r\n            datasets,\r\n            charts\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        const dataSize = this.estimateDataSize();\r\n\r\n        var catalogMinDate = fields && utcDateStringToLocal(fields.data.Time_Min).setHours(0,0,0,0);\r\n        var catalogMaxDate = fields && utcDateStringToLocal(fields.data.Time_Max).setHours(0,0,0,0);\r\n        var zeroedDT1 = dt1.setHours(0,0,0,0);\r\n        var zeroedDT2 = dt2.setHours(0,0,0,0);\r\n        \r\n        var minDate = fields ? catalogMinDate : '';\r\n\r\n        let minDateMessage = fields && zeroedDT2 < catalogMinDate ? 'End cannot be before dataset start date' : '';\r\n        var maxDateMessage;\r\n        var maxDate;\r\n\r\n        if(!fields){\r\n            maxDate = zeroedDT2;\r\n            maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after end' : '';\r\n        } else {\r\n            \r\n\r\n            if(catalogMaxDate < zeroedDT2){\r\n                maxDate = catalogMaxDate;\r\n                maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after dataset end date' : '';\r\n            } else {\r\n                maxDate = zeroedDT2;\r\n                maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after end' : '';\r\n            }\r\n        }\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(dataSize),\r\n                this.checkGeneralPrevent(dataSize),\r\n                this.checkStartDateValid(),\r\n                this.checkEndDateValid()\r\n            ];\r\n        } else validations = Array(16).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage,\r\n            startDateValidMessage,\r\n            endDateValidMessage\r\n        ] = validations;\r\n\r\n        const checkDisableVisualizeList = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage,\r\n            minDateMessage,\r\n            maxDateMessage,\r\n            startDateValidMessage,\r\n            endDateValidMessage\r\n        ];\r\n\r\n        let cdvl = checkDisableVisualizeList;\r\n        let errorCount = 0;\r\n        \r\n        if(cdvl[0] || cdvl[1]) errorCount ++;\r\n        if(cdvl[2] || cdvl[3]) errorCount ++;\r\n        if(cdvl[4] || cdvl[5]) errorCount ++;\r\n        if(cdvl[7] || cdvl[9]) errorCount ++;\r\n        if(cdvl[8] || cdvl[10]) errorCount ++;\r\n\r\n        const errorSizeAdjust = errorCount > 0 ? 'drawerPaperError' + errorCount : '';\r\n\r\n        const checkDisableVisualize = () => {\r\n            for(let i = 0; i < checkDisableVisualizeList.length; i++){\r\n                if(checkDisableVisualizeList[i]) return checkDisableVisualizeList[i];\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        const disableVisualizeMessage = checkDisableVisualize();\r\n\r\n        const visualizeButtonTooltip = disableVisualizeMessage ? disableVisualizeMessage : generalWarnMessage ? generalWarnMessage : '';\r\n\r\n        return (\r\n            <div>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n\r\n                { showControlPanel ? \r\n\r\n                        <IconButton \r\n                            className={classes.closePanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleCloseControlPanel}>\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                :\r\n                    \r\n                        <IconButton \r\n                            className={classes.openPanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleOpenControlPanel}>\r\n                            <ChevronRight />\r\n                        </IconButton>\r\n                }\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={showControlPanel}\r\n                    classes={{\r\n                        paper: `${classes.drawerPaper} ${classes[errorSizeAdjust]}`,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >\r\n                    <ButtonGroup>\r\n                        <Tooltip title='Show Globe' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${!showCharts && classes.depressed}`} \r\n                                onClick={handleShowGlobe}\r\n                                color='inherit'\r\n                            >\r\n                                <Language/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        \r\n                        <Tooltip title='Show Charts' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${showCharts && classes.depressed}`}\r\n                                onClick={this.handleShowChartsAndResize}\r\n                                color='inherit'\r\n                            >\r\n                                <InsertChartOutlined/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ButtonGroup>\r\n                    \r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            <Tooltip title='Clear Charts' placement='bottom'>\r\n                                <IconButton color='inherit' onClick={this.props.clearCharts} className={classes.clearChartsButton}>\r\n                                    <Delete/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <Tooltip title='Reset Parameters' placement='right'>\r\n                                <IconButton color='inherit' onClick={this.handleResetSPParams} className={classes.resetSPParamsButton}>\r\n                                    <Cached/>\r\n                                </IconButton>\r\n                            </Tooltip>                            \r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <form>\r\n                        <Grid container>\r\n                            <Grid item xs={10}>\r\n                                <ConnectedTooltip placement='top' title='Enter one or more search terms.'>\r\n                                {/* <div className={classes.singleValueReplacement}>\r\n                                    <div className={classes.singleValueReplacement2}>\r\n                                        Hi there, I'm 100px.\r\n                                    </div>\r\n                                </div> */}\r\n                                    <Select\r\n                                        // onMenuOpen={() => {\r\n                                        //     setTimeout(() => selectRef.current.select.setState({...selectRef.current.select.state, focusedOption: null}), 1)\r\n                                            \r\n                                        // }}\r\n                                        formatOptionLabel={formatOptionLabel}\r\n                                        handleSetDownloadTarget={this.props.handleSetDownloadTarget}\r\n                                        handleTableStatsDialogOpen={this.handleTableStatsDialogOpen}\r\n                                        isLoading = {catalogRequestState === states.inProgress}\r\n                                        onAutoSuggestChange = {this.onAutoSuggestChange}\r\n                                        datasets = {datasets}\r\n                                        components={{\r\n                                            IndicatorSeparator:'',\r\n                                            DropdownIndicator,\r\n                                            GroupHeading,\r\n                                            Group,\r\n                                            Option,\r\n                                            MenuList,\r\n                                            // SingleValue: () => {\r\n                                            //     console.log('hi')\r\n                                            //        return ''\r\n                                            // }\r\n                                        }}\r\n                                        handleDownloadCsvClick = {this.handleDownloadCsvClick}\r\n                                        escapeClearsValue\r\n                                        ref={selectRef}\r\n                                        onInputChange={this.onAutoSuggestChange}\r\n                                        filterOption={null}\r\n                                        className={classes.variableSelect}\r\n                                        isClearable\r\n                                        inputValue={this.state.searchField}\r\n                                        name=\"fields\"\r\n                                        label=\"Variables\"\r\n                                        options={options}\r\n                                        onChange={this.props.updateFields}\r\n                                        value={fields}\r\n                                        placeholder=\"Variable Search\"\r\n                                        styles={{\r\n                                            menu: provided => ({\r\n                                                ...provided, \r\n                                                zIndex: 1300, \r\n                                                top: '-8px',\r\n                                                left: navDrawerWidth,\r\n                                                width: '980px',\r\n                                                borderRadius: '4px',\r\n                                                boxShadow: '2px 2px 2px 2px #242424',\r\n                                                overflow: 'hidden',\r\n                                                backgroundColor: 'rgba(0,0,0,.5)',\r\n                                                backdropFilter: 'blur(5px)',\r\n                                            }),\r\n\r\n                                            valueContainer: provided => ({\r\n                                                ...provided,\r\n                                                padding: '0 0 0 6px',\r\n                                                fontWeight: 100\r\n                                            }),\r\n\r\n                                            input: provided => ({...provided,\r\n                                                color: 'white',\r\n                                                fontFamily: '\"Lato\", sans-serif'\r\n                                            }),\r\n\r\n                                            control: provided => ({...provided,\r\n                                                backgroundColor: '#424242',\r\n                                                border: 'none',\r\n                                                borderBottom: '1px solid #333333',\r\n                                                borderRadius: 0,\r\n                                                '&:hover': { borderColor: 'white' },\r\n                                                '&:focus-within': { borderColor: colors.orange },\r\n                                                height: '56px'\r\n                                            }),\r\n\r\n                                            placeholder: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                fontSize: '14px',\r\n                                                fontWeight: 300\r\n                                            }),\r\n\r\n                                            noOptionsMessage: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                backgroundColor: colors.backgroundGray\r\n                                            }),\r\n\r\n                                            option: (provided, { data, isFocused }) => {\r\n                                                return ({...provided,\r\n                                                    fontWeight: 400,\r\n                                                    fontSize: '16px',\r\n                                                    backgroundColor: 'transparent',\r\n                                                    color: isFocused ? colors.orange : 'white',\r\n                                                    '&:hover': { backgroundColor: 'rgba(122,67,0,.5)'},\r\n                                                    // '&:active': { backgroundColor: 'rgba(0,0,0,.5)', color: colors.orange},\r\n                                            })},\r\n\r\n                                            singleValue: (provided, state) => ({...provided,\r\n                                                color: 'white',\r\n                                                fontWeight: 400\r\n                                            })\r\n                                        }}\r\n                                        theme={theme => ({\r\n                                            ...theme,\r\n                                            colors: {\r\n                                            ...theme.colors,\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                </ConnectedTooltip>\r\n                            </Grid>\r\n                            <Grid item xs={2} className={classes.tableStatsButton}>\r\n                                <IconButton \r\n                                    size='small' \r\n                                    onClick={this.handleTableStatsDialogOpen}                                     \r\n                                    disabled={!fields}\r\n                                >\r\n                                    <LibraryBooks/>\r\n                                </IconButton>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder={getDatePlaceholder(dt1)}\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    maxDate={maxDate}\r\n                                    minDate={null}\r\n                                    maxDateMessage={maxDateMessage}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder={getDatePlaceholder(dt2)}\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={minDate}\r\n                                    maxDate={null}\r\n                                    minDateMessage={minDateMessage}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat1-input\"\r\n                                    error={Boolean(startLatMessage)}\r\n                                    label={\"Start Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat1}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startLatMessage}\r\n                                    name='lat1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat2-input\"\r\n                                    error={Boolean(endLatMessage)}\r\n                                    label={\"End Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat2}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endLatMessage}\r\n                                    name='lat2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon1-input\"\r\n                                    error={Boolean(startLonMessage)}\r\n                                    label={\"Start Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon1}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startLonMessage}\r\n                                    name='lon1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon2-input\"\r\n                                    error={Boolean(endLonMessage)}\r\n                                    label={\"End Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon2}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endLonMessage}\r\n                                    name='lon2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"depth1-input\"\r\n                                    error={Boolean(startDepthMessage)}\r\n                                    label=\"Start Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth1}\r\n                                    onChange={handleChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startDepthMessage}\r\n                                    name='depth1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"depth2-input\"\r\n                                    error={Boolean(endDepthMessage)}\r\n                                    label=\"End Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth2}\r\n                                    onChange={handleChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endDepthMessage}\r\n                                    name='depth2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <FormControl variant='filled' className={classes.vizTypeSelectFormControl} disabled={!fields}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        className={classes.vizTypeSelectFormControl}\r\n                                        style={overrideDisabledStyle}\r\n                                        value={selectedVizType}\r\n                                        variant='filled'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'filled'\r\n                                        }}\r\n                                        >\r\n                                        {!heatmapMessage && <MenuItem value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>}\r\n                                        {!contourMessage && <MenuItem value={vizSubTypes.contourMap}>Contour Heatmap</MenuItem>}\r\n                                        {!sectionMapMessage && <MenuItem value={vizSubTypes.sectionMap}>Section Map</MenuItem>}\r\n                                        {!sectionMapMessage && <MenuItem value={vizSubTypes.contourSectionMap}>Contour Section Map</MenuItem>}\r\n                                        {!histogramMessage && <MenuItem value={vizSubTypes.histogram}>Histogram</MenuItem>}                      \r\n                                        {!timeSeriesMessage && <MenuItem value={vizSubTypes.timeSeries}>Time Series</MenuItem>}\r\n                                        {!depthProfileMessage && <MenuItem value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>}\r\n                                        {!sparseMapMessage && <MenuItem value={vizSubTypes.sparse}>Sparse Map</MenuItem>}\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Tooltip placement='right' title={visualizeButtonTooltip} className={classes.vizButtonTooltip}>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        className={classes.visualizeButton}\r\n                                        variant='contained'\r\n                                        onClick={() => this.props.onVisualize()}\r\n                                        disabled={Boolean(disableVisualizeMessage) || !fields || !selectedVizType}\r\n                                        fullWidth\r\n                                    >\r\n                                        Visualize\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </form>                    \r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography, Table, TableBody, TableCell, TableRow, TableHead, TableFooter } from '@material-ui/core';\r\n\r\nimport { tableStatsRequestSend, csvDownloadRequestSend } from '../Redux/actions/visualization';\r\n\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\nimport depthUtils from '../Utility/depthCounter';\r\n\r\nconst styles = (theme) => ({\r\n    tableFooter: {\r\n        fontSize: '11px',\r\n        margin: '5px 0px 0px 10px'\r\n    },\r\n\r\n    table: {\r\n        marginTop: '9px'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    datasets: state.datasets,\r\n    catalog: state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    tableStatsRequestSend,\r\n    csvDownloadRequestSend\r\n}\r\n\r\nclass DownloadConfirmationDialog extends Component {\r\n\r\n    componentDidUpdate = () => {\r\n        const { downloadTarget, datasets, catalog, tableStatsRequestSend } = this.props;\r\n        if(downloadTarget && datasets && !datasets[downloadTarget.dataset].tableStats){\r\n            const firstMember = catalog.find(item => item.Dataset_Name === downloadTarget.dataset);\r\n            tableStatsRequestSend(firstMember.Table_Name, downloadTarget.dataset);\r\n        }\r\n    }\r\n\r\n    handleFullDatasetDownload = (tableName) => {\r\n        let query = `select%20*%20from%20${tableName}`;\r\n        const fileName = this.props.downloadTarget.variable || this.props.downloadTarget.dataset;\r\n        this.props.csvDownloadRequestSend(query, fileName);\r\n    }\r\n\r\n    handleSubsetDownload = (tableName, dt1, dt2, lat1, lat2, lon1, lon2, depth1, depth2) => {\r\n        let query = `select * from ${tableName} where time between '${dt1}' and '${dt2}' and ` +\r\n            `lat between ${lat1} and ${lat2} and ` +\r\n            `lon between ${lon1} and ${lon2}`\r\n        console.log(query);\r\n        const fileName = this.props.downloadTarget.variable || this.props.downloadTarget.dataset;\r\n        this.props.csvDownloadRequestSend(query, fileName);\r\n    }\r\n\r\n    render() {\r\n        const { classes, datasets, downloadTarget, lat1, lat2, lon1, lon2, dt1, dt2, depth1, depth2, catalog } = this.props;\r\n\r\n        if(!downloadTarget || ! datasets ||  !catalog) return '';\r\n        \r\n        const tableStats = datasets[downloadTarget.dataset].tableStats;\r\n\r\n        if(!tableStats) return '';\r\n\r\n        const sampleMember = catalog.find(item => item.Dataset_Name === downloadTarget.dataset);\r\n        const { Lat_Min, Lat_Max, Lon_Min, Lon_Max, Time_Min, Time_Max, Depth_Min, Depth_Max } = sampleMember;\r\n        const latMin = parseFloat(Lat_Min);\r\n        const latMax = parseFloat(Lat_Max);\r\n        const lonMin = parseFloat(Lon_Min);\r\n        const lonMax = parseFloat(Lon_Max);\r\n        const timeMin = Date.parse(Time_Min);\r\n        const timeMax = Date.parse(Time_Max);\r\n\r\n        const subsetLat1 = lat1 < latMin ? latMin :\r\n            lat1 > latMax ? latMax :\r\n            lat1;\r\n\r\n        const subsetLat2 = lat2 < latMin ? latMin :\r\n        lat2 > latMax ? latMax :\r\n        lat2;\r\n\r\n        const subsetLon1 = lon1 < lonMin ? lonMin :\r\n            lon1 > lonMax ? lonMax :\r\n            lon1;\r\n\r\n        const subsetLon2 = lon2 < lonMin ? lonMin :\r\n            lon2 > lonMax ? lonMax :\r\n            lon2;\r\n\r\n        const subsetTime1 = dt1 < timeMin ? timeMin :\r\n            dt1 > timeMax ? timeMax :\r\n            dt1;\r\n\r\n        const subsetTime2 = dt2 < timeMin ? timeMin :\r\n            dt2 > timeMax ? timeMax:\r\n            dt2;\r\n\r\n        if(Depth_Max){\r\n            var depthMin = parseFloat(Depth_Min);\r\n            var depthMax = parseFloat(Depth_Max);\r\n\r\n            var subsetDepth1 = depth1 < depthMin ? depthMin : \r\n                depth1 > depthMax ? depthMax : \r\n                depth1;\r\n\r\n            var subsetDepth2 = depth2 < depthMin ? depthMin : \r\n                depth2 > depthMax ? depthMax : \r\n                depth2;\r\n        }        \r\n\r\n        const tableName = sampleMember.Table_Name;\r\n        \r\n        const totalRows = tableStats.lat.count;\r\n        const variableColumns = datasets[downloadTarget.dataset].Variables && datasets[downloadTarget.dataset].Variables.split(',').length;\r\n        const depthColumns = tableStats.depth ? 1 : 0;\r\n        const fixedColumns = 3;\r\n\r\n        const totalColumns = variableColumns + depthColumns + fixedColumns;\r\n\r\n        const totalDataPoints = totalRows * totalColumns;\r\n        const fullDataAvailable = totalDataPoints < 40000000;\r\n\r\n        var dateRatio;\r\n\r\n        if(sampleMember.Temporal_Resolution === temporalResolutions.monthlyClimatology){\r\n            const subsetMonths = new Date(subsetTime2).getMonth() - new Date(subsetTime1).getMonth();\r\n            dateRatio = (subsetMonths + 1) / 12;\r\n        } else {\r\n            var totalDays = (timeMax - timeMin) / 86400000 || 1;\r\n            var subsetDays = (subsetTime2 - subsetTime1) / 86400000 || 1;\r\n            dateRatio = totalDays > subsetDays ? subsetDays / totalDays : 1;\r\n        }\r\n\r\n        const totalLatSize = (latMax - latMin) || 1;\r\n        const subsetLatSize = (subsetLat2 - subsetLat1) || 1;\r\n        const latRatio = totalLatSize > subsetLatSize ? subsetLatSize / totalLatSize : 1;\r\n\r\n        const totalLonSize = (lonMax - lonMin) || 1;\r\n        const subsetLonSize = subsetLon2 > subsetLon1 ? (subsetLon2 - subsetLon1) || 1 : (subsetLon2 + 360 - subsetLon1) || 1;\r\n        const lonRatio = totalLonSize > subsetLonSize ? subsetLonSize / totalLonSize : 1;\r\n\r\n        var depthRatio = 1;\r\n\r\n        if(sampleMember.Depth_Max) {\r\n            console.log('Found Depth_Max');\r\n            if(depthUtils.piscesTable.has(sampleMember.Table_Name)){\r\n                console.log('Found Pisces')\r\n                let depthCount = depthUtils.count({data: sampleMember}, subsetDepth1, subsetDepth2);\r\n                depthRatio = depthCount / depthUtils.piscesDepths.length || 1;\r\n            } else if (depthUtils.darwinTable.has(sampleMember.Table_Name)){\r\n                console.log('Found darwin');\r\n                let depthCount = depthUtils.count({data: sampleMember}, subsetDepth1, subsetDepth2);\r\n                depthRatio = depthCount / depthUtils.darwinDepths.length || 1;\r\n            } else {\r\n                var totalDepthSize = depthMax - depthMin || 1;\r\n                var subsetDepthSize = subsetDepth2 - subsetDepth1 || 1;\r\n                depthRatio = subsetDepthSize > totalDepthSize ? 1 : subsetDepthSize / totalDepthSize;\r\n            }\r\n        }\r\n\r\n        // console.log(depthRatio);\r\n\r\n        const subsetDataPoints = Math.floor(totalDataPoints * dateRatio * latRatio * lonRatio * depthRatio);\r\n\r\n        const subsetAvailable = subsetDataPoints <= 20000000;\r\n\r\n        const timeString1 = new Date(subsetTime1).toISOString().slice(0,10);\r\n        const timeString2 = new Date(subsetTime2).toISOString().slice(0,10);\r\n        const timeStringMin = sampleMember.Temporal_Resolution === temporalResolutions.monthlyClimatology ? \r\n            'Monthly' : new Date(timeMin).toISOString().slice(0,10);\r\n        const timeStringMax = sampleMember.Temporal_Resolution === temporalResolutions.monthlyClimatology ? \r\n            'Monthly' : new Date(timeMax).toISOString().slice(0,10);\r\n\r\n        console.log('Total data points: ', totalDataPoints);\r\n        console.log('Total rows: ', totalRows);\r\n        console.log('Total columns: ', totalColumns)\r\n        console.log('Subset data points: ', subsetDataPoints);\r\n        console.log('Date Ratio: ', dateRatio);\r\n        console.log('Lat Ratio: ', latRatio);\r\n        console.log('Lon ratio: ', lonRatio);\r\n        console.log('Depth Ratio: ', depthRatio)\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <Dialog open={Boolean(downloadTarget)} onClose={() => this.props.handleSetDownloadTarget(null)} maxWidth={false}>\r\n                    <DialogTitle>Downloading {downloadTarget.variable && `${downloadTarget.variable} from `} {downloadTarget.dataset}</DialogTitle>\r\n                    \r\n                    <DialogContent>\r\n                        {fullDataAvailable ? \r\n                            `The full dataset is available for download.` :\r\n                            `The full dataset is too large for download.`\r\n                        }\r\n                    </DialogContent>\r\n                    \r\n                    <DialogContent>\r\n                        <Typography>\r\n                            The described subset contains approximately {subsetDataPoints} data points:\r\n                            {!subsetAvailable && 'This is over the limit of 20,000,000 data points. Please reduce lat, lon, time, or depth range to enable download.'}\r\n                        </Typography>\r\n\r\n                        <Table size='small'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Parameter</TableCell>\r\n                                    <TableCell>Subset Start</TableCell>\r\n                                    <TableCell>Subset End</TableCell>\r\n                                    <TableCell>Dataset Min</TableCell>\r\n                                    <TableCell>Dataset Max</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell>Time</TableCell>\r\n                                    <TableCell>{timeString1}</TableCell>\r\n                                    <TableCell>{timeString2}</TableCell>\r\n                                    <TableCell>{timeStringMin}</TableCell>\r\n                                    <TableCell>{timeStringMax}</TableCell>\r\n                                </TableRow>\r\n\r\n                                <TableRow>\r\n                                    <TableCell>Latitude[{'\\xb0'}]</TableCell>\r\n                                    <TableCell>{subsetLat1}</TableCell>\r\n                                    <TableCell>{subsetLat2}</TableCell>\r\n                                    <TableCell>{latMin}</TableCell>\r\n                                    <TableCell>{latMax}</TableCell>\r\n                                </TableRow>\r\n\r\n                                <TableRow>\r\n                                    <TableCell>Longitude[{'\\xb0'}]</TableCell>\r\n                                    <TableCell>{subsetLon1}</TableCell>\r\n                                    <TableCell>{subsetLon2}</TableCell>\r\n                                    <TableCell>{lonMin}</TableCell>\r\n                                    <TableCell>{lonMax}</TableCell>\r\n                                </TableRow>\r\n\r\n                                <TableRow>\r\n                                    <TableCell>Depth[m]</TableCell>\r\n                                    <TableCell>{isNaN(subsetDepth1) ? 'NA' : subsetDepth1}</TableCell>\r\n                                    <TableCell>{isNaN(subsetDepth2) ? 'NA' : subsetDepth2}</TableCell>\r\n                                    <TableCell>{isNaN(depthMin) ? 'NA' : depthMin}</TableCell>\r\n                                    <TableCell>{isNaN(depthMax) ? 'NA' : depthMax}</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                                \r\n                        </Table>\r\n\r\n                        <Typography className={classes.tableFooter}>\r\n                            *Subset start and end values may automatically adjust to fit dataset boundaries.\r\n                        </Typography>\r\n\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={() => this.props.handleSetDownloadTarget(null)}>\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        {subsetAvailable &&\r\n                            <Button onClick={() => this.handleSubsetDownload(tableName, timeString1, timeString2, subsetLat1, subsetLat2, subsetLon1, subsetLon2, subsetDepth1, subsetDepth2)}>\r\n                                Download Subset\r\n                            </Button>                            \r\n                        }\r\n\r\n                        {fullDataAvailable && \r\n                            <Button onClick={() => this.handleFullDatasetDownload(tableName)}>\r\n                                Download Full Dataset\r\n                            </Button>\r\n                        }\r\n                    </DialogActions>\r\n                </Dialog> \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DownloadConfirmationDialog));","import months from '../Enums/months';\r\n\r\nexport default (dateString, hasHour, isMonthly) => isMonthly ? months[parseInt(dateString)] : hasHour ? dateString.slice(0,10) + ' ' + dateString.slice(11,16): dateString.slice(0,10);","import colors from '../Enums/colors';\r\n\r\nexport default {\r\n    layout: {\r\n        font: {color: '#ffffff'},\r\n        paper_bgcolor: colors.backgroundGray,\r\n        autosize: true\r\n    },\r\n\r\n    config: {\r\n        displaylogo: false\r\n    },\r\n\r\n    annotations: (distributor, height = 40) => {\r\n        let yshift = ((document.documentElement.clientWidth * (height / 100)) / -2) + 20;\r\n        return (\r\n            [\r\n                {\r\n                    text: `Source: ${distributor.length < 35 ? \r\n                        distributor : \r\n                        distributor.slice(0,32) + '...'} -- Provided by Simons CMAP`,\r\n                    font: {\r\n                        color: 'white',\r\n                        size: 10\r\n                    },\r\n                    xref: 'paper',\r\n                    yref: 'paper',\r\n                    // yshift: height ? 0 - height + 160 : -290,\r\n                    yshift,\r\n                    showarrow: false,\r\n                }\r\n            ]\r\n        )   \r\n    }\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DateRange, Waves, CloudDownload, Palette, SwapVert, Gamepad, LineWeight, Rotate90DegreesCcw, Info } from '@material-ui/icons';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { ButtonGroup } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    popover: {\r\n        width: '470px',\r\n        height: '120px',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5)\r\n    },\r\n\r\n    iconButton: {\r\n        boxShadow: '0px 1px 1px 1px #242424',\r\n    },\r\n\r\n    colorForm: {\r\n        width: '100%'\r\n    },\r\n\r\n    lastIcon: {\r\n        borderTopRightRadius: '10%',\r\n        borderBottomRightRadius: '10%'\r\n    },\r\n\r\n    buttonGroup: {\r\n        display: 'block',\r\n        margin: '0px auto 8px auto',\r\n        maxWidth: '700px'\r\n    },\r\n\r\n    depressed: {\r\n        boxShadow: 'inset 1px 1px 5px #262626'\r\n    },\r\n\r\n    colorscaleMenu: {\r\n        maxHeight: '400px'\r\n    },\r\n})\r\n\r\nconst colorscaleOptions = [\r\n    'Default',\r\n    'Greys', \r\n    'YlGnBu', \r\n    'Greens', \r\n    'YlOrRd',\r\n    'Bluered',\r\n    'RdBu',\r\n    'Reds',\r\n    'Blues',\r\n    'Picnic',\r\n    'Rainbow',\r\n    'Portland',\r\n    'Jet',\r\n    'Hot',\r\n    'Blackbody',\r\n    'Earth',\r\n    'Electric',\r\n    'Viridis',\r\n    'Cividis'];\r\n\r\nfunction usePreviousSize(value) {\r\n    let size = value ? value.size : null;\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = size;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction usePreviousColor(value) {\r\n    let color = value ? value.color : null;\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = color;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction usePreviousOpacity(value) {\r\n    let opacity = value ? value.opacity : null;\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = opacity;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nconst ChartControlPanel = (props) => {\r\n\r\n    const { \r\n        classes, \r\n        onToggleSplitByDate,\r\n        splitByDate,\r\n        onToggleSplitByDepth,\r\n        splitByDepth,\r\n        onToggleSplitBySpace,\r\n        splitBySpace,\r\n        switchOrientation,\r\n        orientation, \r\n        downloadCsv, \r\n        handleZValueConfirm,\r\n        zValues,\r\n        markerOptions,\r\n        handleMarkerOptionsConfirm,\r\n    } = props;\r\n\r\n    const [paletteAnchorElement, setPaletteAnchorElement] = useState(null);\r\n\r\n    let handleOpenPalette = (event) => {\r\n        setPaletteAnchorElement(event.currentTarget);\r\n    }\r\n\r\n    // Local version, not from props\r\n    let handlePaletteChoice = (option) => {\r\n        setPaletteAnchorElement(null);\r\n        props.handlePaletteChoice(option);\r\n    }\r\n\r\n    const [zScalePopoverAnchorElement, setZScalePopoverAnchorElement] = React.useState(null);\r\n    const [localZMin, setLocalZMin] = React.useState(zValues && zValues[0]);\r\n    const [localZMax, setLocalZMax] = React.useState(zValues && zValues[1]);\r\n\r\n    const zScalePopoverOpen = Boolean(zScalePopoverAnchorElement);\r\n    const zScalePopoverID = zScalePopoverOpen ? 'zscale-popover' : undefined;\r\n\r\n    const handleZScalePopoverClose = () => {\r\n        setZScalePopoverAnchorElement(null);\r\n    };\r\n    \r\n    const checkLocalZMin = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMin)) return 'Invalid value';\r\n    }\r\n\r\n    const checkLocalZMax = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMax)) return 'Invalid value';\r\n    }\r\n\r\n    const zScaleValidations = [\r\n        checkLocalZMin(),\r\n        checkLocalZMax()\r\n    ];\r\n\r\n    const [\r\n        zMinMessage,\r\n        zMaxMessage\r\n    ] = zScaleValidations;\r\n\r\n    const handleLocalZConfirm = () => {\r\n        handleZValueConfirm([localZMin, localZMax]);\r\n        handleZScalePopoverClose();\r\n    }\r\n\r\n    const [markerOptionsAnchorElement, setMarkerOptionsAnchorElement] = React.useState(null);\r\n    const [localMarkerOpacity, setLocalMarkerOpacity] = React.useState(markerOptions && markerOptions.opacity);\r\n    const [localMarkerColor, setLocalMarkerColor] = React.useState(markerOptions && markerOptions.color);\r\n    const [localMarkerSize, setLocalMarkerSize] = React.useState(markerOptions && markerOptions.size);\r\n\r\n    var previousOpacity = usePreviousOpacity(markerOptions);\r\n    var previousColor = usePreviousColor(markerOptions);\r\n    var previousSize = usePreviousSize(markerOptions);\r\n    useEffect(() => {\r\n        if(markerOptions){\r\n            if(markerOptions.opacity !== previousOpacity){\r\n                setLocalMarkerOpacity(markerOptions.opacity);\r\n            }\r\n    \r\n            if(markerOptions.color !== previousColor){\r\n                setLocalMarkerColor(markerOptions.color);\r\n            }\r\n    \r\n            if(markerOptions.size !== previousSize){\r\n                setLocalMarkerSize(markerOptions.size);\r\n            }\r\n        }\r\n    })\r\n\r\n    const markerPopoverOpen = Boolean(markerOptionsAnchorElement);\r\n    const markerPopoverID = markerPopoverOpen ? 'marker-popover' : undefined;\r\n\r\n    const handleMarkerOptionsClose = () => {\r\n        setMarkerOptionsAnchorElement(null);\r\n    }\r\n\r\n    const checkLocalMarkerOpacity = () => {\r\n        if(localMarkerOpacity < 0.1 || localMarkerOpacity > 1 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerOpacity)){\r\n            return 'Opacity should be 0.1 to 1'\r\n        }\r\n    }\r\n\r\n    const checkLocalMarkerSize = () => {\r\n        if(localMarkerSize < 1 || localMarkerSize > 18 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerSize)){\r\n            return 'Size should be 1 to 18'\r\n        }\r\n    }\r\n\r\n    const markerOptionsValidations = [\r\n        checkLocalMarkerOpacity(),\r\n        checkLocalMarkerSize()\r\n    ]\r\n\r\n    const [\r\n        localMarkerOpacityMessage,\r\n        localMarkerSizeMessage\r\n    ] = markerOptionsValidations;\r\n\r\n    const handleLocalMarkerOptionsConfirm = () => {\r\n        handleMarkerOptionsConfirm({opacity: localMarkerOpacity, color: localMarkerColor, size: localMarkerSize});\r\n        handleMarkerOptionsClose();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup className={classes.buttonGroup}>\r\n\r\n                {Boolean(onToggleSplitByDate) && \r\n                    <Tooltip placement='top' title='Split By Date'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDate && classes.depressed}`} \r\n                            onClick={onToggleSplitByDate}\r\n                        >\r\n                            <DateRange/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n{/* \r\n                {Boolean(onToggleSplitByDepth) && \r\n                    <Tooltip placement='top' title='Split By Depth'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDepth && classes.depressed}`} \r\n                            onClick={onToggleSplitByDepth}\r\n                        >\r\n                            <Waves/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                } */}\r\n\r\n                {Boolean(onToggleSplitBySpace) && \r\n                    <Tooltip placement='top' title={orientation === 'zonal' ? 'Split by Latitude' : 'Split by Longitude'}>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitBySpace && classes.depressed}`} \r\n                            onClick={onToggleSplitBySpace}\r\n                        >\r\n                            <LineWeight/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {/* {Boolean(switchOrientation) && \r\n                    <Tooltip placement='top' title={orientation === 'zonal' ? 'Switch to Meridional' : 'Switch to Zonal'}>\r\n                        <IconButton color='inherit' className={classes.iconButton} \r\n                            onClick={switchOrientation}\r\n                        >\r\n                            <Rotate90DegreesCcw/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                } */}\r\n\r\n                <Tooltip placement='top' title='Download CSV'>\r\n                    <IconButton color='inherit' onClick={downloadCsv} className={classes.iconButton} >\r\n                        <CloudDownload/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n                {Boolean(handleZValueConfirm) &&\r\n                    <Tooltip title='Change Colorscale Range' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setZScalePopoverAnchorElement(event.currentTarget)} className={classes.iconButton}>\r\n                            <SwapVert/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {Boolean(props.handlePaletteChoice) &&\r\n                    <Tooltip title='Change Palette' placement='top'>\r\n                        <IconButton disabled={!Boolean(props.handlePaletteChoice)} color='inherit' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                            <Palette/>\r\n                        </IconButton>                \r\n                    </Tooltip>      \r\n                }\r\n\r\n                {Boolean(props.handleMarkerOptionsConfirm) &&\r\n                    <Tooltip title='Marker Options' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setMarkerOptionsAnchorElement(event.currentTarget)} className={`${classes.iconButton} ${classes.lastIcon}`} >\r\n                            <Gamepad/>\r\n                        </IconButton>                \r\n                    </Tooltip>\r\n                }\r\n\r\n                {/* <Tooltip title='Plot Info' placement='top'>\r\n                    <IconButton color='inherit' onClick={() => console.log('Info!')} className={`${classes.iconButton}`} >\r\n                        <Info/>\r\n                    </IconButton>                \r\n                </Tooltip> */}\r\n                \r\n            </ButtonGroup>\r\n            \r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={paletteAnchorElement}\r\n                keepMounted\r\n                open={Boolean(paletteAnchorElement)}\r\n                onClose={() => setPaletteAnchorElement(null)}\r\n                className={classes.colorscaleMenu}\r\n            >\r\n                {colorscaleOptions.map((option, index) => (\r\n                    <MenuItem onClick={() => handlePaletteChoice(option === 'Default' ? 'heatmap' : option)} key={index}>{option}</MenuItem>\r\n                ))}\r\n                \r\n            </Menu>\r\n            \r\n            {/* zscale popover */}\r\n            <Popover\r\n                id={zScalePopoverID}\r\n                open={zScalePopoverOpen}\r\n                anchorEl={zScalePopoverAnchorElement}\r\n                onClose={handleZScalePopoverClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMinMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-min-input' >Min</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-min-input'\r\n                                    value={localZMin}\r\n                                    onChange={(event) => setLocalZMin(event.target.value)}\r\n                                    aria-describedby='local-zmin-error'\r\n                                    labelWidth={36}\r\n                                    name='local-zmin'\r\n                                />\r\n                                <FormHelperText id='local-zmin-error'>{zMinMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-max-input' >Max</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-max-input'\r\n                                    value={localZMax}\r\n                                    onChange={(event) => setLocalZMax(event.target.value)}\r\n                                    aria-describedby=\"local-zmax-error\"\r\n                                    labelWidth={36}\r\n                                    name='local-zmax'\r\n                                />\r\n                                <FormHelperText id=\"local-zmax-error\">{zMaxMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={7}>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleZScalePopoverClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalZConfirm}\r\n                                disabled={Boolean(zMinMessage || zMaxMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n                \r\n            {/* Marker popover */}\r\n            <Popover\r\n                id={markerPopoverID}\r\n                open={markerPopoverOpen}\r\n                anchorEl={markerOptionsAnchorElement}\r\n                onClose={handleMarkerOptionsClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(localMarkerOpacityMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-opacity' >Opacity</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='local-marker-opacity'\r\n                                    value={localMarkerOpacity}\r\n                                    onChange={(event) => setLocalMarkerOpacity(event.target.value)}\r\n                                    aria-describedby='local-marker-opacity'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-opacity'\r\n                                />\r\n                            <FormHelperText id=\"local-marker-opacity-error\">{localMarkerOpacityMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                // error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-size' >Size</InputLabel>\r\n                                <OutlinedInput\r\n                                    error={Boolean(localMarkerSizeMessage)}\r\n                                    id='local-marker-size'\r\n                                    value={localMarkerSize}\r\n                                    onChange={(event) => setLocalMarkerSize(event.target.value)}\r\n                                    aria-describedby=\"local-marker-size\"\r\n                                    labelWidth={36}\r\n                                    name='local-marker-size'\r\n                                />\r\n                                <FormHelperText id=\"local-marker-size-error\">{localMarkerSizeMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                className={classes.colorForm}\r\n                            >\r\n                                <InputLabel htmlFor='z-min-input'>Color</InputLabel>\r\n                                <OutlinedInput\r\n                                    type='color'\r\n                                    id='marker-color'\r\n                                    value={localMarkerColor}\r\n                                    onChange={(event) => setLocalMarkerColor(event.target.value)}\r\n                                    aria-describedby='local-marker-color'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-color'\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={1}></Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleMarkerOptionsClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalMarkerOptionsConfirm}\r\n                                disabled={Boolean(localMarkerOpacityMessage || localMarkerSizeMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ChartControlPanel);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport handleChartDateString from '../../Utility/handleChartDatestring';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SparseHistogram = (props) => {\r\n\r\n    console.log(props.chart);\r\n    const { data } = props.chart;\r\n    const { metadata, parameters } = data;\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const date = parameters.dt1 === parameters.dt2 ? handleChartDateString(parameters.dt1) :\r\n        handleChartDateString(parameters.dt1) + ' to ' + handleChartDateString(parameters.dt2);\r\n\r\n    const lat = parameters.lat1 === parameters.lat2 ? parameters.lat1 + '\\xb0' :\r\n        parameters.lat1 + '\\xb0 to ' + parameters.lat2 + '\\xb0';\r\n\r\n    const lon = parameters.lon1 === parameters.lon2 ? parameters.lon1 + '\\xb0' :\r\n        parameters.lon1 + '\\xb0 to ' + parameters.lon2 + '\\xb0';\r\n\r\n    const depth = !data.hasDepth ? 'Surface' :\r\n        parameters.depth1 === parameters.depth2 ? `${parameters.depth1}[m]` :\r\n        `${parameters.depth1}[m] to ${parameters.depth2}[m]`;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                // display:'inline-block',\r\n                width: '60vw',\r\n                height: '40vw'\r\n            }}\r\n\r\n            useResizeHandler={true}\r\n\r\n            data={[\r\n                {\r\n                    x: data.variableValues,\r\n                    name: data.parameters.fields,\r\n                    type: 'histogram',\r\n                    marker: {\r\n                        color: '#00FFFF'\r\n                    }\r\n                }\r\n            ]}\r\n            \r\n            layout= {{\r\n                ...chartBase.layout,\r\n                plot_bgcolor: 'transparent',\r\n                title: {\r\n                    text: `${parameters.fields} [${metadata.Unit}]` + \r\n                        `<br>${date}, ` + \r\n                        depth + \r\n                        `<br>Lat: ${lat}, ` +\r\n                        `Lon: ${lon}`,\r\n                    font: {\r\n                        size: 13\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: `${parameters.fields} [${metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseHistogram));","export default (infoObject) => {\r\n\r\n    let lonRange = infoObject.lonMax - infoObject.lonMin;\r\n\r\n    let sectionSize;\r\n    if(lonRange < 2){\r\n        sectionSize = (lonRange / 6).toFixed(2);\r\n    } else {\r\n        sectionSize = Math.floor(lonRange / 6);\r\n    }\r\n\r\n    let tickvals = Array.from(Array(5), (e, i) => Math.ceil(infoObject.lonMin + ((i + 1) * sectionSize)));\r\n    let ticktext = tickvals.map(e => e > 180 ? e - 360 : e);\r\n\r\n    return {\r\n        tickmode: 'array',\r\n        tickvals,\r\n        ticktext\r\n    }\r\n}","export default (infoObject) => {    \r\n    const xRange = infoObject.lonMax - infoObject.lonMin;\r\n    const yRange = infoObject.latMax - infoObject.latMin;\r\n    const sizeRatio = xRange / yRange;\r\n\r\n    let height = 40;\r\n    let width = 40;\r\n\r\n    if(isNaN(sizeRatio)){\r\n        height = height / 2;\r\n    } else if (sizeRatio > 1) {\r\n        if(sizeRatio <= 1.5){\r\n            width = width * sizeRatio;\r\n            // height = sizeRatio > 2 ? height / 2 : height / sizeRatio;\r\n        } else {\r\n            width = width * 1.5;\r\n            height = sizeRatio > 3 ? height / 2 : height * (1.5 / sizeRatio);\r\n        }\r\n    } else {\r\n        width = sizeRatio < .5 ? width * .5 : width * sizeRatio;\r\n    }\r\n\r\n    return [height, width];\r\n}","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SparseHistogram from './SparseHistogram';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport chartBase from '../../Utility/chartBase';\r\nimport getChartDimensions from '../../Utility/getChartDimensions';\r\nimport handleChartDateString from '../../Utility/handleChartDatestring';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\nimport subTypes from '../../Enums/visualizationSubTypes';\r\n\r\nconst handleContourMap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n    const { parameters, metadata } = infoObject;\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n    \r\n    // Handle axis labels when crossing 180th meridian\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    const [ height, width ] = getChartDimensions(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleChartDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? `Averaged Values ${parameters.dt1} to ${parameters.dt2}` :  \r\n            splitByDepth ? handleChartDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleChartDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + '[m]':\r\n            !splitByDepth ? `Averaged Values ${parameters.depth1} to ${parameters.depth2}` : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + '[m]' : depths[index].toFixed(2) + '[m]';\r\n\r\n        const latTitle = parameters.lat1 === parameters.lat2 ? `${parameters.lat1}\\xb0` :\r\n            `${parameters.lat1}\\xb0 to ${parameters.lat2}\\xb0`;\r\n\r\n        const lonTitle = parameters.lon1 === parameters.lon2 ? `${parameters.lon1}\\xb0` :\r\n            `${parameters.lon1}\\xb0 to ${parameters.lon2}\\xb0`; \r\n\r\n        var hovertext = subset.map((value, i) => {\r\n            let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n            if(isNaN(value)) return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n                `<br>` +\r\n                `Lon: ${infoObject.lons[i] > 180 ? format('.2f')(infoObject.lons[i] - 360) : format('.2f')(infoObject.lons[i])}\\xb0`\r\n\r\n            return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n            `<br>` +\r\n            `Lon: ${infoObject.lons[i] > 180 ? format('.2f')(infoObject.lons[i] - 360) : format('.2f')(infoObject.lons[i])}\\xb0` + \r\n            '<br>' +\r\n            `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n        });\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                // display:'inline-block',\r\n                width: `${width}vw`,\r\n                height: `${height}vw`,\r\n            }}\r\n\r\n            useResizeHandler={true}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n\r\n                    hoverinfo: 'text',\r\n                    hovertext,\r\n                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'contour',\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: infoObject.zMin > 1 && infoObject.zMin < 1000 ? '.2f' : '.2e'\r\n                    },\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    }\r\n                }\r\n            ]}\r\n\r\n            config={{...chartBase.config}}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                // autosize: true,\r\n                title: {\r\n                    text: `${parameters.fields} [${metadata.Unit}]` + \r\n                        `<br>${date}, ` + \r\n                        `${depth} <br>` + \r\n                        `Lat: ${latTitle}, ` +\r\n                        `Lon: ${lonTitle}`,\r\n                    font: {\r\n                        size: 13\r\n                    }\r\n                },\r\n                xaxis: {title: 'Longitude', color: '#ffffff', ...xTicks},\r\n                yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                // annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n    const { parameters, metadata } = infoObject;\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = parameters.dt1 === parameters.dt2 ? handleChartDateString(parameters.dt1) :\r\n            handleChartDateString(parameters.dt1) + ' to ' + handleChartDateString(parameters.dt2);\r\n\r\n        const latTitle = parameters.lat1 === parameters.lat2 ? parameters.lat1 + '\\xb0' :\r\n            parameters.lat1 + '\\xb0 to ' + parameters.lat2 + '\\xb0';\r\n\r\n        const lonTitle = parameters.lon1 === parameters.lon2 ? parameters.lon1 + '\\xb0' :\r\n            parameters.lon1 + '\\xb0 to ' + parameters.lon2 + '\\xb0';\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            parameters.depth1 === parameters.depth2 ? `${parameters.depth1}[m]` :\r\n            `${parameters.depth1}[m] to ${parameters.depth2}[m]`;\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                // display:'inline-block',\r\n                width: '60vw',\r\n                height: '40vw'\r\n            }}\r\n\r\n            useResizeHandler={true}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram',\r\n                    marker: {\r\n                        color: '#00FFFF'\r\n                    }\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                plot_bgcolor: 'transparent',\r\n                // autosize: true,\r\n                title: {\r\n                    text: `${parameters.fields} [${metadata.Unit}]` + \r\n                        `<br>${date}, ` + \r\n                        `${depth} <br>` + \r\n                        `Lat: ${latTitle}, ` +\r\n                        `Lon: ${lonTitle}`,\r\n                    font: {\r\n                        size: 13\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHeatmap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n    const { parameters, metadata } = infoObject;\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    const [ height, width ] = getChartDimensions(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleChartDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? `Averaged Values ${parameters.dt1} to ${parameters.dt2}` :  \r\n            splitByDepth ? handleChartDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleChartDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + '[m]':\r\n            !splitByDepth ? `Averaged Values ${parameters.depth1} to ${parameters.depth2}` : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + '[m]' : depths[index].toFixed(2) + '[m]';\r\n\r\n        const latTitle = parameters.lat1 === parameters.lat2 ? `${parameters.lat1}\\xb0` :\r\n            `${parameters.lat1}\\xb0 to ${parameters.lat2}\\xb0`;\r\n\r\n        const lonTitle = parameters.lon1 === parameters.lon2 ? `${parameters.lon1}\\xb0` :\r\n            `${parameters.lon1}\\xb0 to ${parameters.lon2}\\xb0`; \r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                // display:'inline-block',\r\n                width: `${width}vw`,\r\n                height: `${height}vw`,\r\n            }}\r\n\r\n            useResizeHandler={true}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    zsmooth: subset.length < 20000 ? 'fast' : 'false',\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    colorscale: palette,\r\n                    autocolorscale: false,\r\n\r\n                    // hoverinfo: 'text',\r\n                    // hovertext,\r\n\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n                    \r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            config={{...chartBase.config}}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                // width: `${width}vw`,\r\n                // height: `${height}vw`,\r\n                // autosize: true,\r\n                title: {\r\n                    text: `${parameters.fields} [${metadata.Unit}]` + \r\n                        `<br>${date}, ` + \r\n                        `${depth} <br>` + \r\n                        `Lat: ${latTitle}, ` +\r\n                        `Lon: ${lonTitle}`,\r\n                    font: {\r\n                        size: 13\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: 'Longitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Latitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n                // annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SpaceTimeChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitByDepth, setSplitByDepth] = useState(true);\r\n    const [subTypeState, setSubTypeState] = useState(subType);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const subSets = data.generatePlotData(subTypeState, splitByDate, splitByDepth);\r\n    var plots;\r\n    switch(subTypeState){\r\n        case vizSubTypes.contourMap:\r\n            plots = handleContourMap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.heatmap:\r\n            plots = handleHeatmap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.histogram:\r\n            // plots = handleHistogram(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            return <SparseHistogram chart={{data}}/>;\r\n            break;\r\n\r\n        default:\r\n            plots = '';\r\n            break;        \r\n\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDepth = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDepth(!splitByDepth);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={subTypeState !== subTypes.histogram && handlePaletteChoice}\r\n                onToggleSplitByDepth={depths.size===1 ? null : onToggleSplitByDepth}\r\n                onToggleSplitByDate={dates.size===1 ? null : onToggleSplitByDate}\r\n                splitByDepth={splitByDepth}\r\n                splitByDate={splitByDate}\r\n                handleZValueConfirm={subTypeState !== subTypes.histogram && handleZValueConfirm}\r\n                zValues={subTypeState !== subTypes.histogram && zValues}\r\n                extent={subTypeState !== subTypes.histogram && extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plots}     \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SpaceTimeChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\nimport handleChartDateString from '../../Utility/handleChartDatestring';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst TimeSeriesChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, dates, parameters, metadata } = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#ff1493', size: 12})\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    let hovertext = variableValues.map((value, i) => {\r\n        return `Time: ${dates[i].slice(0,10)}<br>${parameters.fields}: ${format('.2e')(value)} \\xb1 ${format('.2e')(stds[i])} [${metadata.Unit}]`;\r\n    })\r\n\r\n    const date = parameters.dt1 === parameters.dt2 ? handleChartDateString(parameters.dt1) :\r\n        handleChartDateString(parameters.dt1) + ' to ' + handleChartDateString(parameters.dt2);\r\n\r\n    const lat = parameters.lat1 === parameters.lat2 ? parameters.lat1 + '\\xb0' :\r\n        parameters.lat1 + '\\xb0 to ' + parameters.lat2 + '\\xb0';\r\n\r\n    const lon = parameters.lon1 === parameters.lon2 ? parameters.lon1 + '\\xb0' :\r\n        parameters.lon1 + '\\xb0 to ' + parameters.lon2 + '\\xb0';\r\n\r\n    const depth = !data.hasDepth ? 'Surface' :\r\n        parameters.depth1 === parameters.depth2 ? `${parameters.depth1}[m]` :\r\n        `${parameters.depth1}[m] to ${parameters.depth2}[m]`;\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    // display:'inline-block',\r\n                    width: '60vw',\r\n                    height: '40vw'\r\n                }}\r\n\r\n                useResizeHandler={true}\r\n\r\n                data={[\r\n                  {\r\n                    mode: 'lines+markers',\r\n                    x: dates,\r\n                    y: variableValues,\r\n                    error_y: {\r\n                        type: 'data',\r\n                        array: stds,\r\n                        opacity: 0.3,\r\n                        color: '#f2f2f2',\r\n                        visible: true\r\n                    },\r\n                    name: parameters.fields,\r\n                    type: 'scatter',\r\n                    line: {color: markerOptions.color},\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    },\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                  },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    plot_bgcolor: 'transparent',\r\n                    title: {\r\n                        text: `${parameters.fields} [${metadata.Unit}]` + \r\n                            `<br>${date}, ` + \r\n                            depth + \r\n                            `<br>Lat: ${lat}, ` +\r\n                            `Lon: ${lon}`,\r\n                        font: {\r\n                            size: 13\r\n                        }\r\n                    },\r\n                  xaxis: {\r\n                      title: 'Time',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(TimeSeriesChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nimport handleChartDateString from '../../Utility/handleChartDatestring';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst DepthProfileChart = (props) => {\r\n\r\n    const { classes, setLoadingMessage } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, depths, parameters, metadata } = data;\r\n    var infoObject = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#ff1493', size: 12})\r\n\r\n    let hovertext = variableValues.map((value, i) => {\r\n        return `Depth: ${format('.2f')(depths[i])} [m] <br>${parameters.fields}: ${format('.2e')(value)} \\xb1 ${format('.2e')(stds[i])} [${metadata.Unit}]`;\r\n    })\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }    \r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    const date1 = infoObject.isMonthly ? new Date(parameters.dt1).getMonth() + 1 : parameters.dt1;\r\n    const date2 = infoObject.isMonthly ? new Date(parameters.dt2).getMonth() + 1 : parameters.dt2;\r\n\r\n    const date = date1 === date2 ? handleChartDateString(date1, infoObject.hasHour, infoObject.isMonthly) :\r\n            handleChartDateString(date1, infoObject.hasHour, infoObject.isMonthly) + ' to ' + handleChartDateString(date2, infoObject.hasHour, infoObject.isMonthly);\r\n    \r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    // display:'inline-block',\r\n                    width: '60vw',\r\n                    height: '40vw'\r\n                }}\r\n\r\n                useResizeHandler={true}\r\n\r\n                data={[\r\n                    {   \r\n                        mode: 'lines+markers',\r\n                        y: depths,\r\n                        x: variableValues,\r\n                        error_x: {\r\n                            type: 'data',\r\n                            array: stds,\r\n                            opacity: 0.3,\r\n                            color: '#f2f2f2',\r\n                            visible: true\r\n                        },\r\n                        name: parameters.fields,\r\n                        type: 'scatter',\r\n\r\n                        marker: {\r\n                            line: {color: markerOptions.color},\r\n                            opacity: markerOptions.opacity,\r\n                            size: markerOptions.size,\r\n                            color: markerOptions.color\r\n                        },\r\n\r\n                        hoverinfo: 'text',\r\n                        hovertext\r\n                    },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    plot_bgcolor: 'transparent',\r\n                    title: {\r\n                        text: `${parameters.fields} [${metadata.Unit}]` + \r\n                            `<br>${date}, ` + \r\n                            `${parameters.depth1}[m] to ${parameters.depth2}[m] <br>` + \r\n                            `Lat: ${parameters.lat1}\\xb0 to ${parameters.lat2}\\xb0, ` +\r\n                            `Lon: ${parameters.lon1}\\xb0 to ${parameters.lon2}\\xb0`,\r\n                        font: {\r\n                            size: 13\r\n                        }\r\n                    },\r\n                        \r\n                  yaxis: {\r\n                      title: 'Depth[m]',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power',\r\n                      autorange:'reversed'\r\n                    },\r\n                  xaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(DepthProfileChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport visualizationSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport handleChartDateString from '../../Utility/handleChartDatestring';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nconst handleSectionMap = (subsets, infoObject, splitByDate, splitBySpace, orientation, palette, zMin, zMax) => {\r\n    const { parameters, metadata } = infoObject;\r\n\r\n    const dates = Array.from(infoObject.dates);\r\n    const depths = Array.from(infoObject.depths);\r\n    const lats = Array.from(infoObject.lats);\r\n    const lons = Array.from(infoObject.lons);\r\n\r\n    const distinctMeridiansOrParallelsForSplitting = \r\n        orientation === 'zonal' ?\r\n        lats : \r\n        lons;\r\n\r\n    // const mergedOrSplitAxis = \r\n    //     orientation === 'zonal' ?\r\n    //     'Latitude' :\r\n    //     'Longitude';\r\n\r\n    const xAxis = orientation === 'zonal' ?\r\n        'Longitude' :\r\n        'Latitude';\r\n\r\n    let xTicks = parameters.lon1 > parameters.lon2 && orientation === 'zonal' ? handleXTicks(infoObject) : {};\r\n\r\n\r\n    return subsets.map((subset, index) => {\r\n        let z = subset;\r\n        let x = [];\r\n        let y = [];\r\n\r\n        if(orientation === 'zonal'){\r\n            for(let i = 0; i < subset.length; i++){\r\n                x.push(lons[Math.floor(i / depths.length)])\r\n            }\r\n        } else {\r\n            for(let i = 0; i < subset.length; i++){\r\n                x.push(lats[Math.floor(i / depths.length)])\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < subset.length; i++){\r\n            y.push(depths[i % depths.length]);\r\n        }\r\n\r\n        // const variableName = infoObject.parameters.fields;\r\n        // const date = dates.length < 2 ?\r\n        //     dates[0].slice(0,10) :\r\n        //     !splitByDate ? \r\n        //         'Merged Dates' : \r\n        //         splitBySpace ? \r\n        //             dates[Math.floor(index/distinctMeridiansOrParallelsForSplitting.length)].slice(0, 10) : \r\n        //             dates[index].slice(0,10);\r\n                \r\n        // const spaceTitle = distinctMeridiansOrParallelsForSplitting.length <= 1 ? `${orientation === 'zonal' ? 'Lat' : 'Lon'} ${distinctMeridiansOrParallelsForSplitting[0]}\\xb0` : \r\n        //     !splitBySpace ? `Merged ${mergedOrSplitAxis}s` : \r\n        //     `${orientation === 'zonal' ? 'Lat' : 'Lon'} ${distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length]}\\xb0`;\r\n\r\n        const latTitle = orientation === 'meridional' ? `${parameters.lat1}\\xb0 to ${parameters.lat2}\\xb0` :\r\n            splitBySpace ? distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length] + '\\xb0' : \r\n            `Averaged Values ${parameters.lat1}\\xb0 to ${parameters.lat2}\\xb0`;\r\n\r\n        const lonTitle = orientation === 'zonal' ? `${parameters.lon1}\\xb0 to ${parameters.lon2}\\xb0` :\r\n            splitBySpace ? distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length] + '\\xb0' : \r\n            `Averaged Values ${parameters.lon1}\\xb0 to ${parameters.lon2}\\xb0`;\r\n\r\n        // console.log(subsets);\r\n        // console.log(dates);\r\n        // console.log(distinctMeridiansOrParallelsForSplitting);\r\n        // console.log(index);\r\n        // console.log(dates[Math.floor(index / distinctMeridiansOrParallelsForSplitting)]);\r\n        const date = dates.length < 2 ? handleChartDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            splitByDate && splitBySpace ? handleChartDateString(dates[Math.floor(index / distinctMeridiansOrParallelsForSplitting.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            splitByDate ? handleChartDateString(dates[index], infoObject.hasHour, infoObject.isMonthly) :\r\n            'Averaged Values ' + handleChartDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) + ' to ' + handleChartDateString(dates[dates.length - 1], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        let hovertext = z.map((value, i) => {\r\n            \r\n            if(orientation === 'zonal'){\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                if(isNaN(value)) return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                    `<br>` +\r\n                    `Lon: ${format('.2f')(x[i] > 180 ? x[i] - 360 : x[i])}\\xb0`\r\n    \r\n                return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                `<br>` +\r\n                `Lon: ${format('.2f')(x[i] > 180 ? x[i] - 360 : x[i])}\\xb0` + \r\n                '<br>' +\r\n                `${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`;\r\n            } else {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                if(isNaN(value)) return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                    `<br>` +\r\n                    `Lat: ${format('.2f')(x[i])}\\xb0`\r\n    \r\n                return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                `<br>` +\r\n                `Lat: ${format('.2f')(x[i])}\\xb0` + \r\n                '<br>' +\r\n                `${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`;\r\n            }\r\n        });\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                // display:'inline-block',\r\n                width: '60vw',\r\n                height: '40vw'\r\n            }}\r\n\r\n            useResizeHandler={true}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    zsmooth: subset.length < 20000 ? 'best' : 'fast',\r\n                    x,\r\n                    y,\r\n                    z,\r\n                    name: parameters.fields,\r\n                    type: infoObject.subType === visualizationSubTypes.contourSectionMap ? 'contour' : 'heatmap',\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: '.2e'\r\n                    },\r\n\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: {\r\n                    text: `${parameters.fields} [${metadata.Unit}]` + \r\n                        `<br>${date}, ` + \r\n                        `${parameters.depth1}[m] to ${parameters.depth2}[m] <br>` + \r\n                        `Lat: ${latTitle}, ` +\r\n                        `Lon: ${lonTitle}`,\r\n                    font: {\r\n                        size: 13\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: `${xAxis}[\\xB0]`,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Depth[m]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    autorange: 'reversed'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: chartBase.annotations(metadata.Distributor)\r\n\r\n            }}   \r\n        />\r\n        )\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SectionMapChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { dates, extent, lats, lons } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitBySpace, setSplitBySpace] = useState(false);\r\n    const [orientation, setOrientation] = useState(data.orientation);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    var spaces = orientation === 'zonal' ? lats : lons;\r\n\r\n    const subsets = data.generatePlotData(orientation, splitByDate, splitBySpace);\r\n    var plots = handleSectionMap(subsets, data, splitByDate, splitBySpace, orientation, palette, zMin, zMax);\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitBySpace = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitBySpace(!splitBySpace);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const switchOrientation = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setOrientation(orientation === 'zonal' ? 'meridional' : 'zonal');\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n            <ChartControlPanel\r\n                orientation={orientation}\r\n                switchOrientation={switchOrientation}\r\n                onToggleSplitBySpace={spaces.size === 1 ? null : onToggleSplitBySpace}\r\n                splitBySpace={splitBySpace}\r\n                onToggleSplitByDate={dates.size === 1 ? null : onToggleSplitByDate}\r\n                splitByDate={splitByDate}\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                downloadCsv={downloadCsv}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SectionMapChart));","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport chartBase from '../../Utility/chartBase';\r\nimport handleChartDateString from '../../Utility/handleChartDatestring';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst SparseScatter = (props) => {\r\n    const {\r\n        xValues,\r\n        yValues,\r\n        markerOptions,\r\n        infoObject,\r\n        xTitle,\r\n        yTitle,\r\n        type\r\n    } = props;\r\n\r\n    const { parameters, metadata, hasDepth, variableValues, times, lats, lons, depths } = infoObject;\r\n\r\n    // const title = `${parameters.fields} [${metadata.Unit}]`;\r\n    \r\n    var hovertext;\r\n\r\n    switch(type){\r\n        case 'time':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                let time= times[i].slice(0,20);\r\n                time = time.replace('T', ' ');\r\n                return `Time: ${time}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'latitude':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Lat: ${lats[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'longitude':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Lon: ${lons[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'depth':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Depth: ${depths[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        default:\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                let time= times[i].slice(0,20);\r\n                time = time.replace('T', ' ');\r\n                return `Time: ${time}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n        }\r\n\r\n    const date = parameters.dt1 === parameters.dt2 ? handleChartDateString(parameters.dt1) :\r\n        handleChartDateString(parameters.dt1) + ' to ' + handleChartDateString(parameters.dt2);\r\n\r\n    const lat = parameters.lat1 === parameters.lat2 ? parameters.lat1 + '\\xb0' :\r\n        parameters.lat1 + '\\xb0 to ' + parameters.lat2 + '\\xb0';\r\n\r\n    const lon = parameters.lon1 === parameters.lon2 ? parameters.lon1 + '\\xb0' :\r\n        parameters.lon1 + '\\xb0 to ' + parameters.lon2 + '\\xb0';\r\n\r\n    const depth = !hasDepth ? 'Surface' :\r\n        parameters.depth1 === parameters.depth2 ? `${parameters.depth1}[m]` :\r\n        `${parameters.depth1}[m] to ${parameters.depth2}[m]`;\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                // display:'inline-block',\r\n                width: '60vw',\r\n                height: '40vw'\r\n            }}\r\n\r\n            useResizeHandler={true}\r\n    \r\n            data={[\r\n                {\r\n                    x: xValues,\r\n                    y: yValues,\r\n                    mode: 'markers',\r\n                    name: parameters.fields,\r\n                    type: variableValues.length > 10000 ? 'scattergl' : 'scatter',\r\n                    // type: 'scatter',\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    },\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                },\r\n            ]}\r\n            config={{...chartBase.config}}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                plot_bgcolor: 'transparent',\r\n                // width: 800,\r\n                // height: 570,\r\n                title: {\r\n                    text: `${parameters.fields} [${metadata.Unit}]` + \r\n                        `<br>${date}, ` + \r\n                        depth + \r\n                        `<br>Lat: ${lat}, ` +\r\n                        `Lon: ${lon}`,\r\n                    font: {\r\n                        size: 13\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: xTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: yTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    autorange: type === 'depth' ? 'reversed' : true\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)\r\n            }}            \r\n        />\r\n    )\r\n}\r\n\r\nexport default SparseScatter;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\nimport handleChartDateString from '../../Utility/handleChartDatestring';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport SparseScatter from './SparseScatter';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst handleSparseMap = (infoObject, palette, zValues) => {\r\n\r\n    const { parameters, metadata } = infoObject;\r\n\r\n    var hovertext = infoObject.variableValues.map((value, i) => {\r\n        let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n\r\n        return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n        `<br>` +\r\n        `Lon: ${format('.2f')(infoObject.lons[i])}\\xb0` + \r\n        '<br>' +\r\n        `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n    });\r\n\r\n    const date = parameters.dt1 === parameters.dt2 ? handleChartDateString(parameters.dt1) :\r\n        handleChartDateString(parameters.dt1) + ' to ' + handleChartDateString(parameters.dt2);\r\n\r\n    const lat = parameters.lat1 === parameters.lat2 ? parameters.lat1 + '\\xb0' :\r\n        parameters.lat1 + '\\xb0 to ' + parameters.lat2 + '\\xb0';\r\n\r\n    const lon = parameters.lon1 === parameters.lon2 ? parameters.lon1 + '\\xb0' :\r\n        parameters.lon1 + '\\xb0 to ' + parameters.lon2 + '\\xb0';\r\n\r\n    const depth = !infoObject.hasDepth ? 'Surface' :\r\n        parameters.depth1 === parameters.depth2 ? `${parameters.depth1}[m]` :\r\n        `${parameters.depth1}[m] to ${parameters.depth2}[m]`;\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                // display:'inline-block',\r\n                width: '60vw',\r\n                height: '40vw'\r\n            }}\r\n            \r\n            useResizeHandler={true}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zValues[0],\r\n                    zmax: zValues[1],\r\n                    lon: infoObject.lons,\r\n                    lat: infoObject.lats,\r\n                    z: infoObject.variableValues,\r\n                    zmin:'',\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    radius: 6,                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'densitymapbox',\r\n                    \r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    },\r\n                }\r\n            ]}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                title: {\r\n                    text: `${parameters.fields} [${metadata.Unit}]` + \r\n                        `<br>${date}, ` + \r\n                        depth + \r\n                        `<br>Lat: ${lat}, ` +\r\n                        `Lon: ${lon}`,\r\n                    font: {\r\n                        size: 13\r\n                    }\r\n                },\r\n                mapbox: {\r\n                    style: \"white-bg\",\r\n                    layers: [\r\n                        {\r\n                            sourcetype: \"raster\",\r\n                            source: [\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"],\r\n                            below: \"traces\"\r\n                        }\r\n                    ],\r\n                    center: infoObject.center,\r\n                    zoom: infoObject.zoom\r\n                },\r\n\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n            }}\r\n            \r\n            config={{\r\n                ...chartBase.config,\r\n                mapboxAccessToken:\r\n                  \"pk.eyJ1IjoiZGVuaG9sdHoiLCJhIjoiY2p1ZW9obTNhMDVxZjQzcDRvMmdlcDN2aiJ9.HvLaX2bcradeE5T-lpTc8w\",\r\n                \r\n              }}\r\n        />)\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n\r\n    tabs: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n\r\n    tab: {\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        fontSize: '15px',\r\n        textTransform: 'none'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nfunction tabProps(index) {\r\n    return {\r\n      id: `sparse-tab-${index}`,\r\n      'aria-controls': `sparse-tab-${index}`,\r\n    };\r\n  }\r\n\r\nconst SparseTabPanel = (props) => {\r\n    const { children, selectedTab, index, controlPanelProps, } = props;\r\n\r\n    return (\r\n        <div hidden={selectedTab !== index}>\r\n            <ChartControlPanel\r\n                // handlePaletteChoice={handlePaletteChoice}\r\n                // handleZValueConfirm={handleZValueConfirm}\r\n                // zValues={zValues}\r\n                // extent={data.extent}\r\n                // downloadCsv={downloadCsv}\r\n                {...controlPanelProps}\r\n            />\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst SparseMap = (props) => {\r\n\r\n    const { classes } = props;\r\n\r\n    const { data } = props.chart;\r\n\r\n    const [palette, setPalette] = useState('Heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [markerOptions, setMarkerOptions] = useState({opacity: .7, color:'#ff1493', size: 12});\r\n    const [tab, setTab] = useState(0);\r\n\r\n    const plot = handleSparseMap(data, palette, zValues)\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setTab(newValue)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    const forceResize = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 30);        \r\n    }\r\n\r\n    const controlPanelProps = {\r\n        map: {\r\n            palette,\r\n            handlePaletteChoice,\r\n            zValues,\r\n            handleZValueConfirm,\r\n            downloadCsv\r\n        },\r\n\r\n        scatter: {\r\n            downloadCsv,\r\n            markerOptions,\r\n            setMarkerOptions,\r\n            handleMarkerOptionsConfirm\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Tabs \r\n                value={tab} \r\n                onChange={handleTabChange} \r\n                aria-label=\"Sparse tabs\" \r\n                centered\r\n                indicatorColor='primary'\r\n                className={classes.tabs}\r\n            >\r\n                <Tab label=\"Map\" {...tabProps(0)} className={classes.tab} onClick={forceResize}/>\r\n                <Tab label=\"By Time\" {...tabProps(1)} className={classes.tab}/>\r\n                <Tab label=\"By Lat\" {...tabProps(2)} className={classes.tab}/>\r\n                <Tab label=\"By Lon\" {...tabProps(3)} className={classes.tab}/>\r\n                {data.hasDepth && <Tab label=\"By Depth\" {...tabProps(4)} className={classes.tab}/>}\r\n            </Tabs>\r\n            <SparseTabPanel selectedTab={tab} index={0} controlPanelProps={controlPanelProps.map}>\r\n                {tab === 0 && plot}\r\n            </SparseTabPanel>\r\n            \r\n            <SparseTabPanel selectedTab={tab} index={1} controlPanelProps={controlPanelProps.scatter}>\r\n                {tab === 1 &&\r\n                    <SparseScatter\r\n                        xValues={data.times}\r\n                        yValues={data.variableValues}\r\n                        markerOptions={markerOptions}\r\n                        infoObject={data}\r\n                        xTitle='Time'\r\n                        yTitle={data.parameters.fields}\r\n                        type='time'\r\n                    />\r\n                }\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={2} controlPanelProps={controlPanelProps.scatter}>\r\n                {tab === 2 &&\r\n                    <SparseScatter\r\n                        xValues={data.lats}\r\n                        yValues={data.variableValues}\r\n                        markerOptions={markerOptions}\r\n                        infoObject={data}\r\n                        xTitle='Latitude'\r\n                        yTitle={data.parameters.fields}\r\n                        type='latitude'\r\n                    />                \r\n                }\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={3} controlPanelProps={controlPanelProps.scatter}>\r\n                {tab === 3 && \r\n                    <SparseScatter\r\n                        xValues={data.lons}\r\n                        yValues={data.variableValues}\r\n                        markerOptions={markerOptions}\r\n                        infoObject={data}\r\n                        xTitle='Longitude'\r\n                        yTitle={data.parameters.fields}\r\n                        type='longitude'\r\n                    />                \r\n                }\r\n            </SparseTabPanel>\r\n\r\n            {data.hasDepth &&\r\n                <SparseTabPanel selectedTab={tab} index={4} controlPanelProps={controlPanelProps.scatter}>\r\n                    {tab === 4 &&\r\n                        <SparseScatter\r\n                            xValues={data.variableValues}\r\n                            yValues={data.depths}\r\n                            markerOptions={markerOptions}\r\n                            infoObject={data}\r\n                            xTitle={data.parameters.fields}\r\n                            yTitle='Depth'\r\n                            type='depth'\r\n                        />                    \r\n                    }\r\n                </SparseTabPanel>            \r\n            }\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseMap));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { IconButton, Paper } from '@material-ui/core';\r\nimport { Close, StarHalf } from '@material-ui/icons';\r\n\r\nimport colors from '../Enums/colors';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nimport SpaceTimeChart from './ChartComponents/SpaceTimeChart';\r\nimport TimeSeriesChart from './ChartComponents/TimeSeriesChart';\r\nimport DepthProfileChart from './ChartComponents/DepthProfileChart';\r\nimport SectionMapChart from './ChartComponents/SectionMapChart';\r\nimport SparseMap from './ChartComponents/SparseMap';\r\nimport SparseHistogram from './ChartComponents/SparseHistogram';\r\n\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { deleteChart } from '../Redux/actions/visualization';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  deleteChart\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartPaper: {\r\n      margin: '60px auto 20px auto',\r\n      // width: '90%'\r\n      paddingTop: '16px',\r\n      display: 'inline-block'\r\n  },\r\n})\r\n\r\nconst SamplePlot = () => {\r\n  let x = [0,0,0,0,0,1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4];\r\n  let y = [0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,];\r\n  let z = [0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,1,2,3,4,5,6,7,8,9];\r\n  // z = z.map(() => Math.floor(Math.random() * 100));\r\n  const xRange = x[x.length - 1] - x[0];\r\n  const yRange = y[y.length - 1] - y[0];\r\n  const ratio = xRange / yRange;\r\n\r\n  let height = 44;\r\n  let width = 66;\r\n\r\n  if(ratio > 1) height = height / ratio;\r\n  else width = width * ratio;\r\n  \r\n  return (\r\n\r\n      <Plot\r\n      useResizeHandler={true}\r\n      style= {{\r\n          position: 'relative',\r\n          display:'inline-block',\r\n          marginTop: '30px',\r\n          width: '66vw',\r\n          height: '44vw'\r\n\r\n          // width: '1200px',\r\n          // height: '100%'\r\n      }}\r\n      \r\n      data={[\r\n          {   \r\n              x,\r\n              y,\r\n              z,\r\n              connectgaps: false,\r\n              zsmooth: 'best',\r\n              \r\n              name: 'Test',\r\n              type: 'heatmap',\r\n              contours: {\r\n                  showlabels: true,\r\n                  labelfont: {\r\n                      family: 'Raleway',\r\n                      size: 12,\r\n                      color: 'white',\r\n                  },\r\n                  labelformat: '.2e'\r\n              },\r\n              colorbar: {\r\n                  title: {\r\n                      text: `test`\r\n                  },\r\n                  exponentformat: 'power'\r\n              }\r\n          }\r\n      ]}\r\n      \r\n      layout= {{\r\n        autosize: true,\r\n        // width: '100%',\r\n          font: {color: '#ffffff'},\r\n          margin: {\r\n            t: 50\r\n          },\r\n          title: {\r\n              text: `A sample chart title`,\r\n              // yanchor: 'bottom',\r\n              // y: 'auto',\r\n              // y: .5,\r\n              // yref: 'container',\r\n              font: {\r\n                size: 16\r\n              }\r\n          },\r\n          paper_bgcolor: colors.backgroundGray,\r\n          xaxis: {title: 'Longitude', color: '#ffffff'},\r\n          yaxis: {title: 'Latitude', color: '#ffffff'},\r\n          annotations: [\r\n              {\r\n                  text: `Brought to you by chef boyardee`,\r\n                    font: {\r\n                        color: 'white',\r\n                        size: 10\r\n                    },\r\n                  // xref: 'paper',\r\n                  yref: 'paper',\r\n                  y: -.24,\r\n                  // yshift: 0,\r\n                  showarrow: false,\r\n                  xref: 'paper',\r\n                  x: .5\r\n                  }\r\n              ]\r\n              \r\n          }}   \r\n          />\r\n          )\r\n      }\r\n\r\nconst closeChartStyles = {\r\n    closeChartIcon: {\r\n      float: 'right',\r\n      marginTop: '-16px'\r\n    }\r\n}\r\n\r\nconst _CloseChartIcon = (props) => {\r\n  const { classes } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton className={classes.closeChartIcon} color=\"inherit\" onClick={() => props.handleDeleteChart(props.chartIndex)} disableFocusRipple disableRipple>\r\n        <Close/>\r\n      </IconButton>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst CloseChartIcon = withStyles(closeChartStyles)(_CloseChartIcon);\r\n\r\nclass Charts extends Component {\r\n\r\n  handleDeleteChart = (chartIndex) => {\r\n    this.props.deleteChart(chartIndex);\r\n  }\r\n\r\n    render(){\r\n        const { classes, charts } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n              {/* <Paper elevation={12} className={classes.chartPaper}>\r\n              <SamplePlot/> \r\n              </Paper> */}\r\n                {charts.map((chart, index) => {\r\n                    switch(chart.data.parameters.spName){\r\n\r\n                        case storedProcedures.spaceTime:\r\n                          if(chart.subType === vizSubTypes.sparse) {\r\n                            return (\r\n                              <div key={chart.id}>\r\n                                <Paper elevation={12} className={classes.chartPaper} key={chart.id}>\r\n                                  <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                                  <SparseMap chart={chart}/>\r\n                                </Paper>\r\n                              </div>\r\n                            )\r\n                          } else if(chart.data.metadata.Spatial_Resolution === spatialResolutions.irregular) {\r\n                            return (\r\n                              <div key={chart.id}>\r\n                                <Paper elevation={12} className={classes.chartPaper} key={chart.id}>\r\n                                  <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                                  <SparseHistogram chart={chart}/>\r\n                                </Paper>\r\n                              </div>\r\n                            )\r\n                          }\r\n                          else return (\r\n                            <div key={chart.id}>\r\n                              <Paper elevation={12} className={classes.chartPaper} key={chart.id}>\r\n                                <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                                <SpaceTimeChart chart={chart}/>\r\n                              </Paper>\r\n                            </div>\r\n                          )\r\n\r\n                        case storedProcedures.timeSeries:\r\n                          return (\r\n                            <div key={chart.id}>\r\n                              <Paper elevation={12} className={classes.chartPaper} key={chart.id}>\r\n                                <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                                <TimeSeriesChart chart={chart}/>\r\n                              </Paper>\r\n                            </div>\r\n                          )\r\n\r\n                        case storedProcedures.depthProfile:\r\n                          return (\r\n                            <div key={chart.id}>\r\n                              <Paper elevation={12} className={classes.chartPaper} key={chart.id}>\r\n                                <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                                <DepthProfileChart chart={chart}/>\r\n                              </Paper>\r\n                            </div>\r\n                          )\r\n\r\n                        case storedProcedures.sectionMap:\r\n                          return (\r\n                            <div key={chart.id}>\r\n                              <Paper elevation={12} className={classes.chartPaper} key={chart.id}>\r\n                                <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                                <SectionMapChart chart={chart}/>\r\n                              </Paper>\r\n                            </div>\r\n                          )\r\n                        \r\n                        default:\r\n                          return '';\r\n                  }\r\n                })}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { cruiseListRequestSend, cruiseTrajectoryRequestSend, cruiseTrajectoryClear } from '../Redux/actions/visualization';\r\n\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    cruiseList: state.cruiseList,\r\n    getCruiseListState: state.getCruiseListState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseListRequestSend,\r\n    cruiseTrajectoryRequestSend,\r\n    cruiseTrajectoryClear\r\n}\r\n\r\nconst esriFonts = '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif';\r\nconst esriFontColor = 'white';\r\nconst esriBackgroundColor = '#424242';\r\nconst esriHoverFontColor = '#242424';\r\nconst esriHoverBackgroundColor = '#949393';\r\n\r\nconst styles = theme => ({\r\n    outerDiv: {\r\n        padding:'12px',\r\n        maxWidth: '260px',\r\n        backgroundColor: 'transparent',\r\n        color: esriFontColor,\r\n        borderRadius: '4px',\r\n        boxShadow: '2px',\r\n        position: 'relative',\r\n        backdropFilter: 'blur(2px)'\r\n    },\r\n\r\n    cruiseSelect: {\r\n        width: '260px',\r\n        borderRadius: '4px',\r\n    },\r\n\r\n    cruiseInfo: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        margin: '12px auto 0 auto',\r\n    },\r\n\r\n    cruiseInfoCell: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        borderStyle: 'none',\r\n    },\r\n\r\n    // blurEffectDiv: {\r\n    //     filter: 'blur(5px)',\r\n    //     position: 'absolute',\r\n    //     top: '0px',\r\n    //     left: '0px',\r\n    //     right: '0px',\r\n    //     bottom: '0px',\r\n    //     zIndex: 99999999\r\n    // }\r\n})\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n      <components.Option \r\n        {...props} \r\n        innerProps={{\r\n            ...props.innerProps, \r\n            // Prevent focus / scroll events when mousing over options\r\n            onMouseMove: (e) => e.preventDefault(), \r\n            onMouseOver: (e) => e.preventDefault()\r\n        }}>\r\n    </components.Option>\r\n    )\r\n}\r\n\r\nconst cruiseSort =  (a,b) => a.Name < b.Name ? -1 : 1;\r\n\r\nclass CruiseSelector extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Nickname');\r\n        search.addIndex('Name');\r\n        search.addIndex('Chief_Name');\r\n        search.addIndex('Keywords');\r\n        try{\r\n            if(props.cruiseList && props.cruiseList.length) search.addDocuments(props.cruiseList);\r\n        } catch(e) {\r\n            console.log(e);\r\n            console.log(props.cruiseList);\r\n        }\r\n\r\n        this.state = {\r\n            search,\r\n            searchField: '',\r\n            selectedCruise: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.cruiseList || !this.props.cruiseList.length) this.props.cruiseListRequestSend();\r\n    }\r\n\r\n    getSelectOptionsFromCruiseList = (list) => {\r\n        return list.map(item => ({\r\n            value: item.Name,\r\n            label: item.Name,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    handleCruiseSelect = (selection) => {\r\n        if(selection && selection.data){\r\n            const id = selection.data.ID;\r\n            this.props.cruiseTrajectoryRequestSend(id);\r\n        } else {this.props.cruiseTrajectoryClear()}\r\n\r\n        this.setState({...this.state, selectedCruise: selection});\r\n        this.props.updateParametersFromCruiseBoundary(selection);\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.cruiseList && prevProps.cruiseList.length) && (this.props.cruiseList && this.props.cruiseList.length)){\r\n            this.state.search.addDocuments(this.props.cruiseList);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    render(){\r\n\r\n        const { search, searchField, selectedCruise } = this.state;        \r\n        const { classes, cruiseList} = this.props;\r\n        \r\n        const options = searchField && cruiseList ? this.getSelectOptionsFromCruiseList(search.search(searchField).sort(cruiseSort)) \r\n            : cruiseList ? this.getSelectOptionsFromCruiseList(cruiseList) \r\n            : []\r\n\r\n        return (\r\n            <div id='cruise-selector' className={classes.outerDiv}>\r\n                <div className={classes.blurEffectDiv}></div>\r\n                <Select\r\n                    isLoading={this.props.getCruiseListState === states.inProgress}\r\n                    components={{\r\n                        IndicatorSeparator:'',\r\n                        Option,\r\n                        SingleValue,\r\n                    }}\r\n                    isClearable\r\n                    onInputChange={this.onAutoSuggestChange}\r\n                    // inputValue={this.state.searchField}\r\n                    filterOption={null}\r\n                    className={classes.cruiseSelect}\r\n                    escapeClearsValue\r\n                    label=\"Cruise\"\r\n                    options={options}\r\n                    onChange={this.handleCruiseSelect}\r\n                    value={this.state.selectedCruise}\r\n                    placeholder=\"Search Cruises\"\r\n                    styles={{\r\n                        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                        menuList: provided => ({...provided, backgroundColor: esriBackgroundColor}),\r\n\r\n                        input: provided => ({...provided,\r\n                            color: 'inherit',\r\n                            fontFamily: esriFonts\r\n                        }),\r\n\r\n                        control: provided => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            border: 'none',\r\n                            boxShadow: '1px 1px 1px 1px #242424',\r\n                            color: esriFontColor,\r\n                            borderRadius: 4,\r\n                            '&:hover': { \r\n                                border: `1px solid white`,\r\n                            },\r\n                            '&:focus-within': {\r\n                                borderColor: colors.orange\r\n                            }\r\n                        }),\r\n\r\n                        placeholder: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: colors.orange,\r\n                            fontSize: '14px'\r\n                        }),\r\n\r\n                        noOptionsMessage: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: esriFontColor,\r\n                            backgroundColor: esriBackgroundColor\r\n                        }),\r\n\r\n                        option: (provided, state) => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            color: state.isFocused ? colors.orange : 'white',\r\n                            '&:hover': { backgroundColor: 'rgba(122,67,0,.5)'}\r\n                        }),\r\n\r\n                        singleValue: (provided, state) => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: 'inherit',\r\n                            paddingRight: '20px',\r\n                        })\r\n                    }}\r\n                    theme={theme => ({\r\n                        ...theme,\r\n                        colors: {\r\n                            ...theme.colors,\r\n                            // Background color of hovered options\r\n                            primary25: '#e0e0e0',\r\n                            primary: '#212121',\r\n                        },\r\n                    })}\r\n                />\r\n                {selectedCruise &&\r\n                    <Table size='small' className={classes.cruiseInfo}>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Cruise:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Name}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Nickname:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Nickname}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            {\r\n                                selectedCruise.data.Start_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Start Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Start_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.End_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        End Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.End_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Chief_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Chief Scientist:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Chief_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Ship_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Ship:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Ship_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CruiseSelector));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\n\r\nimport CruiseSelector from './CruiseSelector';\r\nimport colors from '../Enums/colors';\r\n\r\nimport { throttle } from 'throttle-debounce';\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nconst drawButtonStyles = (theme) => ({\r\n    outerDiv: {\r\n        // padding:'12px 0 12px 0',\r\n        backgroundColor: 'transparent',\r\n        // width: '180px',\r\n        borderRadius: '4px',\r\n        marginRight: '20px'\r\n    },\r\n\r\n    drawButton: {\r\n        // border: '1px solid #333333',\r\n        border: `1px solid #333333`,\r\n        borderRadius: '4px',\r\n        color: colors.orange,\r\n        cursor: 'pointer',\r\n        padding: '6px',\r\n        width: '160px',\r\n        fontSize:'14px',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        // backgroundColor: 'rgba(255, 128, 0, .8)',\r\n        // backgroundColor: 'transparent',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif',\r\n        '&:hover': { \r\n            borderColor: 'white'\r\n        },\r\n    },\r\n\r\n    helpText: {\r\n        marginTop: 0,\r\n        color: 'white',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif'\r\n    },\r\n\r\n    cancelButton: {\r\n        display: 'none',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nconst DrawButtonRaw = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    return (\r\n        <div className={classes.outerDiv} id='draw-region-div'>\r\n            {showHelp && <p className={classes.helpText}>Click once to draw <br/>and again to finish</p>}\r\n            <button id='draw-button' className={classes.drawButton}>\r\n                Select Region\r\n            </button>\r\n            <button id='cancel-button' className={`${classes.drawButton} ${classes.cancelButton}`}>\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DrawButton = withStyles(drawButtonStyles)(DrawButtonRaw);\r\n\r\nconst polygonSymbol = {\r\n    type: \"polygon-3d\",\r\n    symbolLayers: [\r\n        {\r\n            type: \"fill\",\r\n            material: {\r\n            color: [255, 128, 0, .3]\r\n            },\r\n            outline: {\r\n                color: [255, 128, 0, 1],\r\n                size: '2px'\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nconst polylineSymbol = {\r\n    type: \"line-3d\",\r\n        symbolLayers: [\r\n            {\r\n                type: \"line\",\r\n                size: \"3px\",\r\n                material: {\r\n                    color: {\r\n                        r: 51,\r\n                        g: 51,\r\n                        b: 204,\r\n                        a: 0\r\n                    }\r\n                },\r\n            }\r\n        ]\r\n}\r\n\r\nconst emptyExtent = {\r\n    xmin: 0,\r\n    xmax: 0,\r\n    ymin: 0,\r\n    ymax: 0\r\n}\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.sketchModel = new props.esriModules.SketchViewModel({\r\n            layer: props.regionLayer,\r\n            view: props.view,\r\n            polygonSymbol,\r\n            polylineSymbol,\r\n            defaultUpdateOptions: {\r\n                toggleToolOnClick: false,\r\n                tool: \"transform\"\r\n            }\r\n        })\r\n    }\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { view, esriModules, regionLayer, setShowHelp } = this.props;\r\n        var { sketchModel } = this;\r\n\r\n        // const updateOptions = {\r\n\r\n        // }\r\n\r\n        // var sketchModel = new esriModules.SketchViewModel({\r\n        //     layer: regionLayer,\r\n        //     view,\r\n        //     polygonSymbol,\r\n        //     defaultUpdateOptions: updateOptions\r\n        // })\r\n\r\n        var drawButton = document.getElementById('draw-button');\r\n        var cancelButton = document.getElementById('cancel-button');\r\n\r\n        let cr = this;\r\n\r\n        const throttledUpdate = throttle(75, (event) => {\r\n            if(event.state === 'active'){\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n            }\r\n        })\r\n\r\n        sketchModel.on(\"create\", (event) => {\r\n            if(event.state === 'active' && event.toolEventInfo && event.toolEventInfo.type === 'vertex-add'){\r\n                sketchModel.complete();\r\n            }\r\n\r\n            if(event.graphic && event.graphic.visible) {\r\n                event.graphic.visible = false;\r\n            }\r\n            if(event.state === 'cancel'){\r\n                setShowHelp(false);\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n\r\n            if(event.state === \"complete\") {\r\n                setShowHelp(false);\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });    \r\n\r\n        sketchModel.on('create', throttledUpdate)\r\n\r\n        sketchModel.on('update', (event) => {\r\n            if(event.toolEventInfo && event.toolEventInfo.type === 'move-stop'){\r\n                if(event.state === 'cancel') return;\r\n                // this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphics[0].geometry.extent));\r\n                this.props.updateDomainFromGraphicExtent(event.graphics[0].geometry.extent);\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });   \r\n        \r\n        drawButton.addEventListener(\"click\", (event) => {\r\n                regionLayer.removeAll();\r\n                setShowHelp(true);\r\n                sketchModel.create('polyline', {\r\n                    mode:'click'            \r\n                });\r\n                drawButton.style.display = 'none';\r\n                cancelButton.style.display = 'inline-block';\r\n        });\r\n\r\n        cancelButton.addEventListener('click', (event) => {\r\n            sketchModel.cancel();\r\n            setShowHelp(false);\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })\r\n\r\n        view.ui.add('draw-region-div', 'bottom-right');\r\n        view.ui.add('cruise-selector', 'top-right');\r\n\r\n        view.ui.remove('zoom');\r\n        view.ui.remove('navigation-toggle');\r\n        view.ui.remove('compass');\r\n        view.ui.remove('attribution');\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst TrajectoryController = React.memo((props) => {\r\n    const { cruiseTrajectory, trajectoryLayer, esriModules } = props;\r\n    \r\n    if(cruiseTrajectory){\r\n        const { lons, lats } = cruiseTrajectory;\r\n\r\n        let midIndex = Math.floor(lons.length / 2);\r\n\r\n        trajectoryLayer.removeAll();\r\n\r\n        var polyLines = [[]];\r\n        var lineIndex = 0;\r\n\r\n        let lonStart = lons[0];\r\n        let latStart = lats[0];\r\n        let maxDistance = 0;\r\n        // var lonMin = lons[0];\r\n        // var lonMax = lons[0];\r\n        // var latMin = lats[0];\r\n        // var latMax = lats[0];\r\n\r\n        // Create a new path array each time 180 lon is crossed\r\n        lons.forEach((lon, i) => {\r\n            let lat = lats[i];\r\n\r\n            let latDistance = Math.abs(lat - latStart);\r\n            let _lonDistance = Math.abs(lon - lonStart);\r\n            let lonDistance = _lonDistance > 180? 360 - _lonDistance : _lonDistance;\r\n\r\n            let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n            maxDistance = distance > maxDistance ? distance : maxDistance;\r\n\r\n            polyLines[lineIndex].push([lon, lat]);\r\n\r\n            if(i < lons.length - 1){\r\n                if((lon > 160 && lon < 180) && (lons[i + 1] > -180 && lons[i + 1] < -160)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n\r\n                if((lon > -180 && lon < -160) && (lon[i + 1] > 160 && lon[i + 1] < 180)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n            }\r\n        })\r\n\r\n        var cruiseTrajectorySymbol = {\r\n            type: 'line-3d',\r\n            symbolLayers: [{\r\n                type: 'line',\r\n                material: { color: [255, 128, 0, 1] },\r\n                cap:  'round',\r\n                join: 'round',\r\n                size: 2\r\n            }]\r\n        }\r\n\r\n        polyLines.forEach(line => {\r\n\r\n            let cruiseTrajectoryGeometry = {\r\n                type: 'polyline',\r\n                paths: line\r\n            }\r\n\r\n            let graphic = new esriModules.Graphic({\r\n                geometry: cruiseTrajectoryGeometry,\r\n                symbol: cruiseTrajectorySymbol\r\n            });\r\n\r\n            trajectoryLayer.add(graphic);\r\n        })\r\n\r\n        try {\r\n            const center = [lons[midIndex], lats[midIndex]];\r\n\r\n            var zoom = 7 - Math.floor(maxDistance / 6);            \r\n    \r\n            props.view.goTo({\r\n                target: center,\r\n                zoom\r\n            }, {\r\n                maxDuration: 2500,\r\n                speedFactor: .5\r\n            });    \r\n\r\n        } catch(e) {console.log(e)}\r\n\r\n    } else {\r\n        trajectoryLayer.removeAll();\r\n\r\n        props.view.goTo({\r\n            target: [-140, 30],\r\n            zoom: 3\r\n        }, {\r\n            maxDuration: 2500,\r\n            speedFactor: .5\r\n        }); \r\n    }\r\n    return '';\r\n})\r\n\r\nclass MapContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showHelp: false\r\n        }\r\n        this.regionLayer = new props.esriModules.GraphicsLayer();\r\n        this.trajectoryLayer = new props.esriModules.GraphicsLayer();\r\n    }\r\n\r\n    render = () => {\r\n        const { classes, esriModules, spParams, cruiseTrajectory, globeUIRef } = this.props;\r\n\r\n\r\n        const lat1 = parseFloat(spParams.lat1);\r\n        const lat2 = parseFloat(spParams.lat2);\r\n        const lon1 = parseFloat(spParams.lon1);\r\n        let _lon2 = parseFloat(spParams.lon2);\r\n        const lon2 = _lon2 < lon1 ? _lon2 + 360 : _lon2;\r\n\r\n        this.regionLayer.removeAll();\r\n\r\n        var polygon = {\r\n            type: 'polygon', \r\n            rings: [\r\n                [lon1, lat1],\r\n                [lon2, lat1],\r\n                [lon2, lat2],\r\n                [lon1, lat2],\r\n                [lon1, lat1]\r\n            ]\r\n        };\r\n\r\n        let regionGraphic = new esriModules.Graphic({\r\n            geometry: polygon,\r\n            symbol: polygonSymbol\r\n        })\r\n\r\n        this.regionLayer.add(regionGraphic);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ \r\n                        basemap: 'satellite',\r\n                        layers: [\r\n                            this.regionLayer,\r\n                            this.trajectoryLayer\r\n                        ],\r\n\r\n                    }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3,\r\n                        highlightOptions: {\r\n                            haloOpacity: 0,\r\n                            haloColor: 'rgba(0, 0, 0, 0)',\r\n                            fillOpacity: 0,\r\n                            color: \"rgba(0, 0, 0, 0)\"\r\n                        }\r\n                    }}\r\n                >\r\n                    <TrajectoryController \r\n                        cruiseTrajectory={cruiseTrajectory}\r\n                        trajectoryLayer={this.trajectoryLayer}\r\n                        esriModules={esriModules}\r\n                    />\r\n                    <UiComponents\r\n                        updateDomainFromGraphicExtent = {this.props.updateDomainFromGraphicExtent}\r\n                        esriModules={esriModules}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                        regionLayer={this.regionLayer}\r\n                        setShowHelp={(showHelp) => this.setState({...this.state, showHelp})}\r\n                        ref={this.props.globeUIRef}\r\n                    />\r\n                </Scene>\r\n                <DrawButton showHelp={this.state.showHelp}/>\r\n                <CruiseSelector updateParametersFromCruiseBoundary={this.props.updateParametersFromCruiseBoundary}/>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MapContainer);","const cleanSPParams = ({depth1, depth2, dt1, dt2, fields, lat1, lat2, lon1, lon2, spName, tableName}) => ({\r\n    depth1: parseFloat(depth1),\r\n    depth2: parseFloat(depth2),\r\n    dt1,\r\n    dt2,\r\n    fields,\r\n    lat1: parseFloat(lat1),\r\n    lat2: parseFloat(lat2),\r\n    lon1: parseFloat(lon1),\r\n    lon2: parseFloat(lon2),\r\n    spName,\r\n    tableName,\r\n})\r\n\r\nexport default cleanSPParams;","const localDateToString = (date) => {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate()\r\n\r\n    let nYear = year.toString();\r\n    let nMonth = month < 10 ? '0' + month.toString() : month.toString();\r\n    let nDay = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return nYear + '-' + nMonth + '-' + nDay;\r\n}\r\n\r\nexport default localDateToString;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\nimport VizControlPanel from './VizControlPanel';\r\nimport DownloadConfirmationDialog from './DownloadConfirmationDialog';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend, cruiseListRequestSend, completedShowCharts } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend, datasetRetrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport { loadModules } from 'esri-loader';\r\n\r\nimport depthUtils from '../Utility/depthCounter';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport Charts from './Charts';\r\nimport MapContainer from './MapContainer';\r\nimport colors from '../Enums/colors'\r\nimport cleanSPParams from '../Utility/cleanSPParams';\r\nimport localDateToString from '../Utility/localDateToString';\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport TopNavBar from './TopNavBar';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.sectionMap\r\n        },\r\n        [vizSubTypes.contourSectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.contourSectionMap\r\n        },\r\n        [vizSubTypes.timeSeries]: {\r\n            sp: storedProcedures.timeSeries,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: storedProcedures.depthProfile,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.heatmap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.heatmap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.contourMap\r\n        },\r\n        [vizSubTypes.sparse]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.sparse\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    loadingMessage: state.loadingMessage,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    cruiseList: state.cruiseList,\r\n    showChartsOnce: state.showChartsOnce,\r\n    datasets: state.datasets\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n    cruiseListRequestSend,\r\n    completedShowCharts,\r\n    datasetRetrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    background: {\r\n        backgroundColor: colors.backgroundGray\r\n    },\r\n\r\n    showCharts: {\r\n        display: 'inline-block',\r\n        // width: '90%'\r\n    }\r\n})\r\n\r\nconst baseSPParams = {\r\n    tableName: '',\r\n    fields: null,\r\n    depth1: 0,\r\n    depth2: 0,\r\n    dt1: new Date(),\r\n    dt2: new Date(),\r\n    lat1: 0,\r\n    lat2: 0,\r\n    lon1: 0,\r\n    lon2: 0,\r\n    selectedVizType: ''\r\n}\r\n\r\nclass Visualization extends Component {\r\n    globeUIRef = React.createRef();\r\n\r\n    state = {\r\n        filteredData: [],\r\n        opacity: 1,\r\n        showCharts: false,\r\n        showUI: false,\r\n        surfaceOnly: false,\r\n        irregularSpatialResolution: false,\r\n        downloadTarget: null,\r\n\r\n        spParams: baseSPParams\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.cruiseList) this.props.cruiseListRequestSend();\r\n        if(!this.props.datasets) this.props.datasetRetrievalRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'GraphicsLayer',\r\n            'SketchViewModel',\r\n            'Utils',\r\n            'Graphic',\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/layers/GraphicsLayer',\r\n            'esri/widgets/Sketch/SketchViewModel',\r\n            'esri/geometry/support/webMercatorUtils',\r\n            'esri/Graphic',\r\n        ], {version: 'next'});\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    handleSetDownloadTarget = (downloadTarget) => {\r\n        this.setState({...this.state, downloadTarget})\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.showChartsOnce) {\r\n            this.props.completedShowCharts();\r\n            this.setState({...this.state, showCharts: true})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleLatLonChange = (event) => {\r\n        this.setState({\r\n            ...this.state, \r\n            spParams: {...this.state.spParams, [event.target.name]: event.target.value},\r\n        })\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt1:newDate}});\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt2:newDate}});\r\n        }\r\n    }\r\n\r\n    onVisualize = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, selectedVizType } = this.state.spParams;\r\n\r\n        let mapping = mapVizType(selectedVizType);\r\n        let parameters = cleanSPParams({\r\n            depth1,\r\n            depth2,\r\n            dt1: localDateToString(dt1),\r\n            dt2: localDateToString(dt2),\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        });\r\n\r\n        let payload = {\r\n            parameters,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        if(fields) {\r\n            let surfaceOnly = !fields.data.Depth_Min;\r\n            let irregularSpatialResolution = fields.data.Spatial_Resolution === 'Irregular';\r\n\r\n            let dt1 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt1 : utcDateStringToLocal(fields.data.Time_Min);\r\n            let dt2 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt2 : \r\n                irregularSpatialResolution ? utcDateStringToLocal(fields.data.Time_Max) :\r\n                utcDateStringToLocal(fields.data.Time_Min);\r\n\r\n            let lat1 = irregularSpatialResolution ? fields.data.Lat_Min : this.state.spParams.lat1;\r\n            let lat2 = irregularSpatialResolution ? fields.data.Lat_Max : this.state.spParams.lat2;\r\n            let lon1 = irregularSpatialResolution ? fields.data.Lon_Min : this.state.spParams.lon1;\r\n            let lon2 = irregularSpatialResolution ? fields.data.Lon_Max : this.state.spParams.lon2;\r\n            let depth1 = irregularSpatialResolution ? fields.data.Depth_Min || 0 : \r\n                depthUtils.piscesTable.has(fields.data.Table_Name) ? 0 :\r\n                depthUtils.darwinTable.has(fields.data.Table_Name) ? 0 : \r\n                this.state.spParams.depth1;\r\n\r\n            let depth2 = irregularSpatialResolution ? fields.data.Depth_Max || 0 : \r\n                depthUtils.piscesTable.has(fields.data.Table_Name) ? ((depthUtils.piscesDepths[0] + depthUtils.piscesDepths[1]) / 2).toFixed(2) :\r\n                depthUtils.darwinTable.has(fields.data.Table_Name) ? ((depthUtils.darwinDepths[0] + depthUtils.darwinDepths[1]) / 2) : \r\n                this.state.spParams.depth2;\r\n\r\n            if(irregularSpatialResolution){\r\n                this.globeUIRef.current.props.view.goTo({\r\n                    target: [(parseFloat(lon1) + parseFloat(lon2)) / 2, (parseFloat(lat1) + parseFloat(lat2)) / 2],\r\n                    zoom: 3\r\n                }, {\r\n                    maxDuration: 2500,\r\n                    speedFactor: .5\r\n                }); \r\n            }\r\n\r\n            let tableName = fields.data.Table_Name;\r\n            \r\n            this.setState({...this.state,\r\n                surfaceOnly,\r\n                irregularSpatialResolution,\r\n                spParams: {...this.state.spParams, \r\n                    fields,\r\n                    dt1,\r\n                    dt2,\r\n                    lat1,\r\n                    lat2,\r\n                    lon1,\r\n                    lon2,\r\n                    depth1,\r\n                    depth2,\r\n                    tableName,\r\n                    selectedVizType: ''\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    updateParametersFromCruiseBoundary = (cruise) => {\r\n        if(cruise && this.state.spParams.fields){\r\n            this.props.snackbarOpen('Setting chart parameters to cruise boundaries.')\r\n            this.setState({...this.state,\r\n                spParams: {...this.state.spParams,\r\n                    lat1: cruise.data.Lat_Min,\r\n                    lat2: cruise.data.Lat_Max,\r\n                    lon1: cruise.data.Lon_Min,\r\n                    lon2: cruise.data.Lon_Max,\r\n                    dt1: utcDateStringToLocal(cruise.data.Start_Time),\r\n                    dt2: utcDateStringToLocal(cruise.data.End_Time)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleShowCharts = () => {\r\n        this.setState({...this.state, showCharts: true})\r\n    }\r\n\r\n    handleShowGlobe = () => {\r\n        this.setState({...this.state, showCharts: false})\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromGraphicExtent = (extent) => {\r\n        var _lon1 = extent.xmin > -180 ? extent.xmin : extent.xmin + 360;\r\n        var _lon2 = extent.xmax < 180 ? extent.xmax : extent.xmax - 360;\r\n\r\n        var newCoordinates = {\r\n            lat1: extent.ymin.toFixed(3),\r\n            lat2: extent.ymax.toFixed(3),\r\n            lon1: _lon1.toFixed(3),\r\n            lon2: _lon2.toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    resetSPParams = () => {\r\n        this.setState({...this.state, spParams: baseSPParams})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        return (\r\n            <div>\r\n                <TopNavBar/>\r\n                <DownloadConfirmationDialog\r\n                    {...this.state.spParams}\r\n                    downloadTarget={this.state.downloadTarget}\r\n                    handleSetDownloadTarget={this.handleSetDownloadTarget}\r\n                />\r\n\r\n                <VizControlPanel\r\n                    handleSetDownloadTarget={this.handleSetDownloadTarget}\r\n                    toggleChartView={this.toggleChartView}\r\n                    toggleShowUI={this.toggleShowUI}\r\n                    showCharts={this.state.showCharts}\r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                    {...this.state.spParams}\r\n                    surfaceOnly={this.state.surfaceOnly}\r\n                    irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                    showCharts={this.state.showCharts}\r\n                    handleShowCharts={this.handleShowCharts}\r\n                    handleShowGlobe={this.handleShowGlobe}\r\n                    resetSPParams={this.resetSPParams}\r\n                />\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer\r\n                            globeUIRef={this.globeUIRef}\r\n                            updateDomainFromGraphicExtent={this.updateDomainFromGraphicExtent}\r\n                            updateParametersFromCruiseBoundary={this.updateParametersFromCruiseBoundary}\r\n                            esriModules={this.state.esriModules}\r\n                            spParams={this.state.spParams}\r\n                            cruiseTrajectory={this.props.cruiseTrajectory}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                <div className={this.state.showCharts ? classes.showCharts : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password, or <Link onClick={this.handleClose} component={RouterLink} to={{pathname: '/register'}}>Register.</Link>\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Spinner from 'react-spinkit';\r\n\r\nconst styles = theme => ({\r\n    loader: {\r\n        backgroundColor: '#000000',\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        opacity: 0.5,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        zIndex: 9998\r\n    },\r\n\r\n    loaderContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItem: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 9999,\r\n        opacity: 1\r\n    },\r\n\r\n    spinnerText: {\r\n        zIndex: 10000,\r\n        color: '#FF8000',\r\n        marginTop: '25px',\r\n        opacity: 1\r\n    },\r\n\r\n    spinner: {\r\n        opacity: 1\r\n    }\r\n})\r\n\r\nconst LoadingOverlay = (props) => {\r\n    const { classes, loadingMessage } = props;\r\n\r\n    if(loadingMessage && loadingMessage.length){\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div className={classes.loaderContent}>\r\n                    <Spinner className={classes.spinner} color='#FF8000' name=\"ball-pulse-rise\" fadeIn='quarter'/>\r\n                    <Typography variant='h6' className={classes.spinnerText}>{loadingMessage}</Typography>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return '';\r\n\r\n}\r\n\r\nexport default withStyles(styles)(LoadingOverlay);","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper';\r\nimport LoadingOverlay from './LoadingOverlay';\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog,\r\n    loadingMessage: state.loadingMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n                <LoadingOverlay loadingMessage={this.props.loadingMessage}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nconst styles = theme => ({\r\n    landingWrapper: {\r\n        margin: '15vh auto'\r\n    },\r\n\r\n    welcomeMessage: {\r\n        color: '#ffffff',\r\n        maxWidth: '500px',\r\n        margin: `${theme.spacing(2)}px auto`\r\n    }\r\n})\r\n\r\nclass LandingPage extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.landingWrapper}>\r\n                <img \r\n                    src='/images/large_cmap_logo.png'\r\n                    height='290'\r\n                    width='600'\r\n                />\r\n                <Typography variant=\"body2\" component=\"p\" className={classes.welcomeMessage}>\r\n                    Welcome to Simons CMAP. This application is currently under heavy development, and some features may be incomplete.\r\n                </Typography>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingPage));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user\r\n})\r\n\r\nconst Login = (props) => {\r\n\r\n    useEffect(() => {\r\n        if(!props.user) props.showLoginDialog();\r\n        else window.location.href = \"/catalog\";\r\n    })\r\n    \r\n    return (\r\n        ''\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport './App.scss';\n\nimport colors from './Enums/colors';\n\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\n\nimport Home from './Components/Home';\nimport Catalog from './Components/Catalog';\nimport Register from './Components/Register';\nimport Visualization from './Components/Visualization';\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\nimport LandingPage from './Components/LandingPage';\nimport TopNavBar from './Components/TopNavBar';\nimport Login from './Components/Login';\n\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    error: {\n      main: colors.errorYellow\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: colors.backgroundGray,\n      paper: colors.backgroundGray\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange,\n        borderRadius: '10%'\n      }\n    },\n\n    MuiListItemIcon: {\n      root: {\n        minWidth: '40px'\n      }\n    },\n\n    MuiFormHelperText: {\n      filled: {\n        paddingLeft: '1px',\n        paddingRight: '1px',\n        fontSize: '13px'\n      }\n    },\n\n    MuiListItem: {\n      gutters: {\n        paddingLeft: '6px',\n        paddingRight: '10px'\n      },\n\n      root: {\n        paddingTop: '4px',\n        paddingBottom: '4px'\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: 'transparent',\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },\n\n    MuiButtonGroup: {\n      groupedOutlined: {\n        '&:not(:first-child)': {\n          marginLeft: 0\n        }\n      }\n    },\n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiFilledInput: {\n      input: {\n        paddingLeft: '6px',\n      },\n\n      inputSelect: {\n        paddingBottom: '6px'\n      },\n\n      adornedEnd: {\n        paddingRight: '6px'\n      },\n\n      root: {\n        backgroundColor: 'transparent',\n        '&:hover': {\n          backgroundColor: 'transparent',\n        },\n        '&:disabled': {\n          backgroundColor: 'transparent',\n        }\n      }\n    }\n  }\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  loadingMessage: state.loadingMessage\n})\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.vizRef = React.createRef();\n  }\n\nrender() {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n        <BrowserRouter>\n          <GlobalUIComponentWrapper/>\n          <TopNavBar/>\n          <Switch>          \n            <Route exact path='/apikeymanagement' component={ Home } />\n            <Route exact path='/' component={ LandingPage } />\n            <Route exact path='/catalog' component={ Catalog } />\n            <Route exact path='/login' component={ Login } />\n            <Route exact path='/register' component={ Register } />\n            <Route exact path='/visualization' component={Visualization} />\n          </Switch>\n        </BrowserRouter>\n        </MuiThemeProvider>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n}\n\nexport default connect(mapStateToProps, null)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\n\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}