{"version":3,"sources":["../node_modules/@material-ui/icons/esm/Edit.js","Components/User/ChangePassword.js","Components/User/ChangeEmail.js","Components/User/Profile.js"],"names":["createSvgIcon","React","createElement","d","mapDispatchToProps","changePasswordRequestSend","hideChangePasswordDialog","connect","state","ownProps","user","withStyles","theme","dialogPaper","backgroundColor","colors","solidPaper","margin","formWrapper","padding","props","classes","useState","currentPassword","setCurrentPassword","newPassword","setNewPassword","newPasswordConfirm","setNewPasswordConfirm","newPasswordValid","Boolean","test","newPasswordConfirmValid","resetFields","handleClose","changePasswordButtonRef","useRef","handleKeyPress","event","key","current","click","buttonIsDisabled","Dialog","open","onClose","aria-labelledby","PaperProps","className","onEnter","DialogTitle","id","DialogContent","DialogContentText","Grid","container","item","xs","TextField","autoFocus","label","type","variant","name","value","onChange","e","target","InputLabelProps","shrink","fullWidth","onKeyPress","error","helperText","DialogActions","Button","onClick","color","username","disabled","ref","changeEmailRequestSend","hideChangeEmailDialog","password","setpassword","email","setEmail","emailConfirm","setEmailConfirm","changeEmailButtonRef","emailValid","testEmail","emailConfirmValid","updateUserInfoRequestSend","showChangePasswordDialog","showChangeEmailDialog","userProperties","firstName","requirement","lastName","institute","department","country","userToState","editable","valid","Profile","handleChange","newValue","fieldName","handleValidation","setState","infoHasChanged","componentDidUpdate","prevProps","trim","pattern","handleEdit","handleCancel","handleConfirm","this","window","location","href","changeEmailDialogIsOpen","changePasswordDialogIsOpen","formIsValid","Object","keys","forEach","property","Fragment","close","changePasswordDialogOpen","ChangeEmail","changeEmailDialogOpen","Paper","profilePaper","elevation","Typography","align","header","Tooltip","title","IconButton","editButton","disableFocusRipple","disableRipple","Edit","spacing","map","index","md","inputProps","readOnly","textField","buttonGrid","accountPaper","Component","width","paddingTop","paddingBottom","maxWidth","marginTop","float","display","paddingLeft","accountEditButton"],"mappings":"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","file":"static/js/19.269f50bf.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Grid, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button, TextField } from '@material-ui/core';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { changePasswordRequestSend } from '../../Redux/actions/user';\r\nimport { hideChangePasswordDialog } from '../../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    changePasswordRequestSend,\r\n    hideChangePasswordDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n    dialogPaper: {\r\n        backgroundColor: colors.solidPaper,\r\n        '@media (max-width: 768px)': {\r\n            margin: 0\r\n        },\r\n    },\r\n\r\n    formWrapper: {\r\n        padding: '3vh 5vw'\r\n    }\r\n})\r\n\r\nconst testNewPassword = (password) => {\r\n    return /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/.test(password);\r\n};\r\n\r\n\r\nconst ChangePassword = (props) => {\r\n    const { classes } = props;\r\n    \r\n    const [currentPassword, setCurrentPassword] = React.useState('');\r\n    const [newPassword, setNewPassword] = React.useState('');\r\n    const [newPasswordConfirm, setNewPasswordConfirm] = React.useState('')\r\n    \r\n    const newPasswordValid = Boolean(testNewPassword(newPassword) || !newPassword);\r\n    const newPasswordConfirmValid = Boolean(!newPasswordConfirm || newPasswordConfirm === newPassword);\r\n    \r\n    const resetFields = () => {\r\n        setCurrentPassword('');\r\n        setNewPassword('');\r\n        setNewPasswordConfirm('');\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.hideChangePasswordDialog();\r\n        resetFields();\r\n    }\r\n    \r\n    const handleConfirm = () => {\r\n        props.changePasswordRequestSend(currentPassword, newPassword, props.user.username);\r\n    }\r\n    \r\n    const changePasswordButtonRef = React.useRef();\r\n\r\n    const handleKeyPress = event => {\r\n        if (event.key === 'Enter') {\r\n            changePasswordButtonRef.current.click();\r\n        }\r\n    }\r\n\r\n    const buttonIsDisabled = Boolean(!newPassword || !newPasswordConfirm || !newPasswordValid || !newPasswordConfirmValid);\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            PaperProps={{\r\n                className: classes.dialogPaper\r\n            }}\r\n            onEnter={resetFields}\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">Change Password</DialogTitle>\r\n            <DialogContent>                \r\n                <DialogContentText>\r\n                    Please enter your current and new password.\r\n                </DialogContentText>\r\n\r\n                <Grid container className={classes.formWrapper}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"currentPassword\"\r\n                            label=\"Current Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='currentPassword'\r\n                            value={currentPassword}\r\n                            onChange={(e) => setCurrentPassword(e.target.value)}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            fullWidth\r\n                            onKeyPress={handleKeyPress}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"newPassword\"\r\n                            label=\"New Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='newPassword'\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            fullWidth\r\n                            error={!newPasswordValid}\r\n                            helperText={!newPasswordValid ? 'Must be 8 to 32 characters with 1 number and 1 special character.' : ''}\r\n                            onKeyPress={handleKeyPress}\r\n                        />                        \r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"newPasswordConfirm\"\r\n                            label=\"Confirm New Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='newPasswordConfirm'\r\n                            value={newPasswordConfirm}\r\n                            onChange={(e) => setNewPasswordConfirm(e.target.value)}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            fullWidth\r\n                            error={!newPasswordConfirmValid}\r\n                            helperText={newPasswordConfirmValid ? '' : 'Passwords must match.'}\r\n                            onKeyPress={handleKeyPress}\r\n                        />                        \r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={() => handleClose()} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n\r\n                    <Button \r\n                        color=\"primary\" \r\n                        variant='contained'\r\n                        onClick={handleConfirm}\r\n                        disabled={buttonIsDisabled}\r\n                        ref={changePasswordButtonRef}\r\n                    >\r\n                        Confirm\r\n                    </Button>\r\n                </DialogActions>\r\n            </DialogContent>            \r\n        </Dialog>\r\n        )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ChangePassword));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Grid, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button, TextField } from '@material-ui/core';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { changeEmailRequestSend } from '../../Redux/actions/user';\r\nimport { hideChangeEmailDialog } from '../../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    changeEmailRequestSend,\r\n    hideChangeEmailDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n    dialogPaper: {\r\n        backgroundColor: colors.solidPaper,\r\n        '@media (max-width: 768px)': {\r\n            margin: 0\r\n        },\r\n    },\r\n\r\n    formWrapper: {\r\n        padding: '3vh 5vw'\r\n    }\r\n})\r\n\r\nconst testEmail = (email) => {\r\n    return /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/.test(email);\r\n};\r\n\r\nconst ChangePassword = (props) => {\r\n    const { classes } = props;\r\n\r\n    const [password, setpassword] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [emailConfirm, setEmailConfirm] = React.useState('')\r\n\r\n    const resetFields = () => {\r\n        setpassword('');\r\n        setEmail('');\r\n        setEmailConfirm('');\r\n    }\r\n\r\n    const handleClose = () => {\r\n        resetFields();\r\n        props.hideChangeEmailDialog();\r\n    }\r\n\r\n    const handleConfirm = () => {\r\n        props.changeEmailRequestSend(email, password, props.user.username);\r\n    }\r\n    \r\n    const changeEmailButtonRef = React.useRef();\r\n\r\n    const handleKeyPress = event => {\r\n        if (event.key === 'Enter') {\r\n            changeEmailButtonRef.current.click();\r\n        }\r\n    }\r\n\r\n    const emailValid = Boolean(testEmail(email) || !email);\r\n    const emailConfirmValid = Boolean(!emailConfirm || email === emailConfirm); \r\n\r\n    const buttonIsDisabled = Boolean(!email || !emailConfirm || !emailValid || !emailConfirmValid);\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            PaperProps={{\r\n                className: classes.dialogPaper\r\n            }}\r\n            onEnter={resetFields}\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">Change Email</DialogTitle>\r\n            <DialogContent>                \r\n                <DialogContentText>\r\n                    Please enter your account password, and new email address.\r\n                </DialogContentText>\r\n\r\n                <Grid container className={classes.formWrapper}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"currentPassword\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='currentPassword'\r\n                            value={password}\r\n                            onChange={(e) => setpassword(e.target.value)}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            onKeyPress={handleKeyPress}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"email\"\r\n                            label=\"New Email\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            fullWidth\r\n                            error={!emailValid}\r\n                            helperText={!emailValid ? 'Please enter a valid email address' : ''}\r\n                        />                        \r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"emailConfirm\"\r\n                            label=\"Confirm Email\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='emailConfirm'\r\n                            value={emailConfirm}\r\n                            onChange={(e) => setEmailConfirm(e.target.value)}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            fullWidth\r\n                            onKeyPress={handleKeyPress}\r\n                            error={!emailConfirmValid}\r\n                            helperText={emailConfirmValid ? '' : 'Email addresses must match.'}                            \r\n                        />                        \r\n                    </Grid>\r\n                </Grid>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        <Button \r\n                            color=\"primary\" \r\n                            variant='contained'\r\n                            onClick={handleConfirm}\r\n                            ref={changeEmailButtonRef}\r\n                            disabled={buttonIsDisabled}\r\n                        >\r\n                            Confirm\r\n                        </Button>\r\n                    </DialogActions>\r\n            </DialogContent>            \r\n        </Dialog>\r\n        )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ChangePassword));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { IconButton, Tooltip, Paper, Button, TextField, Typography, Grid } from '@material-ui/core';\r\nimport { Edit } from '@material-ui/icons';\r\n\r\nimport { updateUserInfoRequestSend } from '../../Redux/actions/user';\r\nimport { showChangePasswordDialog, showChangeEmailDialog } from '../../Redux/actions/ui';\r\n\r\nimport ChangePassword from './ChangePassword';\r\nimport ChangeEmail from './ChangeEmail';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    changePasswordDialogIsOpen: state.changePasswordDialogIsOpen,\r\n    changeEmailDialogIsOpen: state.changeEmailDialogIsOpen\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    updateUserInfoRequestSend,\r\n    showChangePasswordDialog,\r\n    showChangeEmailDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n    profilePaper: {\r\n        '@media (min-width: 768px)': {\r\n            width: '60vw'\r\n        },\r\n        width: '100vw',\r\n        margin: `${theme.spacing(16)}px auto 0 auto`,\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2)\r\n    },\r\n\r\n    accountPaper: {\r\n        '@media (min-width: 768px)': {\r\n            width: '60vw'\r\n        },\r\n        width: '100vw',\r\n        margin: `${theme.spacing(6)}px auto 0 auto`,\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2)\r\n    },\r\n\r\n    textField: {\r\n        margin: theme.spacing(1),\r\n        width: '80%',\r\n        maxWidth: 'calc(100% - 52px)'\r\n    },\r\n\r\n    buttonGrid: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n\r\n    editButton: {\r\n        float: 'right',\r\n        display: 'inline-block',\r\n        marginTop: '-16px'\r\n    },\r\n\r\n    header: {\r\n        paddingLeft: theme.spacing(3),\r\n        display: 'inline-block',\r\n        marginTop: '-4px',\r\n        float: 'left'\r\n    },\r\n\r\n    accountEditButton: {\r\n        float: 'left',\r\n        marginTop: '6px'\r\n    }\r\n})\r\n\r\nconst userProperties = {\r\n    firstName: {\r\n        label:'First Name',\r\n        name: 'firstName',\r\n        type: 'text',\r\n        requirement: 'Must be 2 or more alphabetical characters.',\r\n    },\r\n\r\n    lastName: {\r\n        label:'Last Name',\r\n        name: 'lastName',\r\n        type: 'text',\r\n        requirement: 'Must be 2 or more alphabetical characters.',\r\n    },\r\n\r\n    institute: {\r\n        label:'Institute',\r\n        name: 'institute',\r\n        type: 'text',\r\n        requirement: 'Maximum length is 150 characters.',\r\n    },\r\n\r\n    department: {\r\n        label:'Department',\r\n        name: 'department',\r\n        type: 'text',\r\n        requirement: 'Maximum length is 150 characters.',\r\n    },\r\n\r\n    country: {\r\n        label:'Country',\r\n        name: 'country',\r\n        type: 'text',\r\n        requirement: 'Maximum length is 150 characters.',\r\n    }\r\n}\r\n\r\nconst userToState = (user) => ({\r\n    editable: false,\r\n    firstName: {\r\n        value: user.firstName,\r\n        valid: true\r\n    },\r\n\r\n    lastName: {\r\n        value: user.lastName,\r\n        valid: true\r\n    },\r\n    institute: {\r\n        value: user.institute || '',\r\n        valid: true\r\n    },\r\n    department: {\r\n        value: user.department || '',\r\n        valid: true\r\n    },\r\n    country: {\r\n        value: user.country || '',\r\n        valid: true\r\n    },\r\n    email: {\r\n        value: user.email || '',\r\n        valid: true\r\n    }\r\n})\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        if(!props.user) return;\r\n\r\n        this.state = {\r\n            ...userToState(props.user),\r\n            editable: false,\r\n            infoHasChanged: false\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.handleValidation(fieldName, newValue);\r\n        this.setState({\r\n            ...this.state,\r\n            infoHasChanged: true,\r\n            [fieldName]: {\r\n                value: newValue,\r\n                valid\r\n            }\r\n        })\r\n    };\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(prevProps.user !== this.props.user){\r\n            this.setState({...this.state, ...userToState(this.props.user)});\r\n        }\r\n    }\r\n\r\n    handleValidation = (fieldName, newValue) => {\r\n        let value = newValue.trim();\r\n        let pattern = /$^/;\r\n\r\n        switch(fieldName){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    handleEdit = () => {\r\n        this.setState({...this.state, editable: true})\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({...userToState(this.props.user), editable: false, infoHasChanged: false})\r\n    }\r\n\r\n    handleConfirm = () => {\r\n        this.props.updateUserInfoRequestSend({\r\n            firstName: this.state.firstName.value.trim(),\r\n            lastName: this.state.lastName.value.trim(),\r\n            institute: this.state.institute.value.trim(),\r\n            department: this.state.department.value.trim(),\r\n            country: this.state.country.value.trim()\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.user) {\r\n            window.location.href = \"/login\";\r\n            return '';\r\n        }\r\n\r\n        const { classes, changeEmailDialogIsOpen, changePasswordDialogIsOpen, showChangePasswordDialog, showChangeEmailDialog } = this.props;\r\n        const { editable, infoHasChanged } = this.state;\r\n        let formIsValid = true;\r\n        \r\n        Object.keys(userProperties).forEach((property) => {\r\n            if(!this.state[property].valid) formIsValid = false;\r\n        })\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ChangePassword\r\n                    open={changePasswordDialogIsOpen}\r\n                    close={() => this.setState({...this.state, changePasswordDialogOpen: false})}\r\n                />\r\n                <ChangeEmail\r\n                    open={changeEmailDialogIsOpen}\r\n                    close={() => this.setState({...this.state, changeEmailDialogOpen: false})}\r\n                />\r\n\r\n                <Paper className={classes.profilePaper} elevation={6}>\r\n                    <Typography variant='h5' align='left' className={classes.header}>\r\n                        Profile\r\n                    </Typography>\r\n\r\n                    <Tooltip title='Edit Information'>\r\n                        <IconButton className={classes.editButton} color=\"primary\" onClick={this.handleEdit} disableFocusRipple disableRipple>\r\n                                <Edit/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Grid container spacing={1}>\r\n                        {\r\n                            Object.keys(userProperties).map((property, index) => (\r\n                                <Grid key={index} item xs={12} md={6}>\r\n                                    <TextField\r\n                                        name={property}\r\n                                        label={userProperties[property].label}\r\n                                        value={this.state[property].value}\r\n                                        error={!this.state[property].valid}\r\n                                        helperText={this.state[property].valid ? '' : userProperties[property].requirement}\r\n                                        key={index}\r\n                                        onChange={this.handleChange}\r\n                                        inputProps={{\r\n                                            readOnly: !editable\r\n                                        }}\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </Grid>\r\n                            ))\r\n                        }\r\n\r\n                        <Grid item xs={6}>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    { editable &&\r\n                        <Grid className={classes.buttonGrid} container>\r\n                                <Grid item md={9} xs={false}></Grid>\r\n                                <Grid item md={1} xs={6}>\r\n                                    <Button onClick={this.handleCancel}>Cancel</Button>\r\n\r\n                                </Grid>\r\n\r\n                                <Grid item md={2} xs={6}>\r\n                                    <Button\r\n                                        onClick={this.handleConfirm}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        disabled={!infoHasChanged || !formIsValid}\r\n                                    >\r\n                                        Confirm\r\n                                    </Button>\r\n                                </Grid>\r\n                        </Grid>\r\n                    }\r\n\r\n                </Paper>\r\n\r\n                <Paper className={classes.accountPaper} elevation={6}>\r\n                    <Typography variant='h5' align='left' className={classes.header}>\r\n                        Account\r\n                    </Typography>\r\n                    <Grid container >\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                name='email'\r\n                                label= 'Email'\r\n                                value={this.state.email.value}\r\n                                inputProps={{\r\n                                    readOnly: true\r\n                                }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                className={classes.textField}\r\n                            />\r\n                            <Tooltip title='Change Email'>\r\n                                <IconButton \r\n                                    color=\"primary\" \r\n                                    disableFocusRipple \r\n                                    disableRipple\r\n                                    onClick={() => showChangeEmailDialog()}\r\n                                >\r\n                                    <Edit/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>                            \r\n                            <TextField\r\n                                name='Password'\r\n                                label= 'Password'\r\n                                value= '********'\r\n                                inputProps={{\r\n                                    readOnly: true\r\n                                }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                className={classes.textField}\r\n                            />\r\n                            <Tooltip title='Change Password'>\r\n                                <IconButton \r\n                                    color=\"primary\" \r\n                                    disableFocusRipple \r\n                                    disableRipple\r\n                                    onClick={() => showChangePasswordDialog()}\r\n                                >\r\n                                    <Edit/>\r\n                                </IconButton>\r\n                            </Tooltip>                            \r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n                </Paper>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Profile));"],"sourceRoot":""}