{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","Enums/spatialResolutions.js","Utility/mapSpatialResolutionToNumber.js","Utility/flattenArray.js","Utility/splitData.js","Utility/mergeArraysAndComputeMeans.js","Utility/mergeArrays.js","Enums/visualizationSubTypes.js","Enums/temporalResolutions.js","Classes/SpaceTimeData.js","Enums/storedProcedures.js","Classes/TimeSeriesData.js","Classes/DepthProfileData.js","Enums/months.js","Classes/SectionMapData.js","Classes/SparseData.js","api.js","Redux/sagas.js","Redux/store.js","Enums/colors.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/TopNavBar.js","Components/Home.js","Components/GridDetail.js","Components/ConnectedTooltip.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/validation.js","Components/TableStatsDialog.js","Utility/mapTemporalResolutionToNumber.js","Components/DataRetrievalForm.js","Utility/utcDateStringToLocal.js","Utility/depthCounter.js","Components/VizControlPanel.js","Utility/handleXTicks.js","Utility/handleChartDatestring.js","Utility/chartBase.js","Components/ChartComponents/ChartControlPanel.js","Components/ChartComponents/SpaceTimeChart.js","Components/ChartComponents/TimeSeriesChart.js","Components/ChartComponents/DepthProfileChart.js","Components/ChartComponents/SectionMapChart.js","Components/ChartComponents/SparseScatter.js","Components/ChartComponents/SparseMap.js","Components/ChartComponents/SparseHistogram.js","Components/Charts.js","Components/CruiseSelector.js","Components/MapContainer.js","Utility/cleanSPParams.js","Utility/localDateToString.js","Components/Visualization.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/LoadingOverlay.js","Components/GlobalUIComponentWrapper.js","Components/LandingPage.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","DATASET_RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","REFRESH_LOGIN","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","CRUISE_TRAJECTORY_REQUEST_SEND","CRUISE_LIST_REQUEST_SEND","CSV_DOWNLOAD_REQUEST_SEND","DOWNLOAD_TEXT_AS_CSV","initialState","catalog","datasetRequestState","datasets","snackbarIsOpen","snackbarMessage","loadingMessage","showHelp","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","getCruiseTrajectoryRequestState","cruiseTrajectory","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","cruiseList","getCruiseListRequestState","showChartsOnce","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","datasetsRequestState","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","trajectory","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","refreshLogin","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","datasetRetrievalRequestProcessing","datasetRetrievalRequestSuccess","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","setLoadingMessage","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addChart","cruiseTrajectoryRequestSend","id","visualizationActionTypes","cruiseTrajectoryRequestSuccess","cruiseTrajectoryRequestProcessing","cruiseListRequestSend","cruiseListRequestSuccess","cruiseListRequestFailure","cruiseListRequestProcessing","triggerShowCharts","csvDownloadRequestProcessing","downloadTextAsCsv","text","datasetName","apiUrl","spatialResolutions","irregular","halfDegree","quarterDegree","twentyFifthDegree","fourKm","twelfthDegree","seventyKm","oneDegree","mapSpatialResolutionToNumber","resolution","_map","defineProperty","flattenArray","arr","flattenedArray","i","length","j","push","splitData","changeInterval","numDistinct","Math","floor","mergeArraysAndComputeMeans","mergeTargetDistance","nextMergeStartDistance","numArraysPerMerge","mergedArrays","travelDistance","subArray","sum","count","k","isNaN","mergeArrays","subTypes","sectionMap","contourSectionMap","timeSeries","histogram","depthProfile","heatmap","contourMap","sparse","temporalResolutions","threeMinutes","sixHourly","daily","weekly","monthly","annual","monthlyClimatology","threeDay","eightDayRunning","eightDays","SpaceTimeData","_this","this","classCallCheck","generateCsv","dates","Array","from","depths","hasDepth","csvArray","parameters","fields","variableValues","lats","lons","join","metadata","hasHours","isMonthly","Set","zMin","zMax","extent","indexAdjust","lonMin","lonMax","latMin","latMax","distinctLatCount","distinctLonCount","row","lat","parseFloat","_lon","lon","lon1","hasHour","Table_Name","Temporal_Resolution","time","value","add","Date","setUTCHours","toISOString","size","lonCount","latCount","quantile1","quantile","quantile2","undefined","toPrecision","spatialResolution","Spatial_Resolution","round","subType","splitByDate","splitByDepth","variableValueSubsets","_this2","depthInterval","dateInterval","map","subset","vizSubTypes","storedProcedures","spaceTime","TimeSeriesData","stds","depth","depthIndexAdjust","csvString","DepthProfileData","months","SectionMapData","lonInterval","latInterval","orientation","lonArray","max","apply","min","splitBySpace","spaceCount","SparseData","variableIndex","Depth_Min","times","latDistance","abs","lonDistance","distance","sqrt","console","log","_zoom","zoom","lonCenter","latCenter","center","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","reduce","queryString","key","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","csvParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","CSVParser","columns","on","record","read","sent","ok","abrupt","getReader","done","write","decode","stop","_callee2","_context2","Dataset_Long_Name","keyRetrieval","_callee3","_context3","json","keyCreation","_ref4","_callee4","description","_context4","trim","_x","arguments","visualization","storedProcedureRequest","_ref5","_callee5","vizData","_context5","t0","spName","status","e","_x2","getTableStats","_ref6","_callee6","tableName","_context6","_x3","cruiseTrajectoryRequest","_ref7","_callee7","_context7","_x4","_callee8","_context8","csvDownload","_ref9","_callee9","_context9","query","_x5","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","datasetRetrieval","queryRequest","cruiseListRequest","csvDownloadRequest","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchDatasetRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","watchCruiseTrajectoryRequest","watchCruiseListRequest","watchCsvDownloadRequest","watchDownloadTextAsCsv","watchRefreshLogin","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_marked6","_marked7","_marked8","visualizationActions","_marked9","_context10","delay","finalize","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","csv","blob","url","_context14","Blob","URL","createObjectURL","document","createElement","setAttribute","appendChild","click","removeChild","_marked14","_context15","_marked15","_context16","takeLatest","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","_context22","_marked22","_context23","_marked23","_context24","_marked24","_context25","_marked25","_context26","_marked26","_context27","_marked27","_context28","_marked28","_context29","_marked29","_context30","_marked30","_context31","all","_marked31","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","colors","orange","backgroundGray","aqua","errorYellow","withStyles","theme","centered","position","top","props","classes","react_default","CircularProgress","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleClick","handleChange","event","setState","target","wrapper","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","warningCaption","Grid","container","alignItems","justify","spacing","item","TextField","margin","name","onChange","placeholder","descriptionField","Button","disabled","color","onClick","Components_LoadingSpinner","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","fontSize","useEffect","Link","component","RouterLink","to","pathname","toggleShowHelp","TopNavBar","handleLogOut","clearState","username","password","handleNavigate","route","history","handleOutsideNavigate","open","_this$props","navWrapper","href","navLink","rightNavLink","withRouter","appBar","backgroundColor","boxShadow","toolBar","zIndex","paddingLeft","textAlign","boxSizing","textDecoration","marginRight","&:hover","fontWeight","display","cursor","float","rightLinkWrapper","Home","Fragment","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","padding","height","infoCard","gridClass","gridItem","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","maxWidth","maxHeight","variableDetailTable","marginLeft","variableDetailTableRow","variableDetailTableCell","borderBottomColor","context","Dataset_Name","Icon_URL","xs","src","alt","Dataset_Description","Data_Source","Distributor","tooltip","palette","secondary","main","opacity","Tooltip","placement","popper","children","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","onGridSizeChanged","handleColumnRowGroupChanged","forEach","column","setColumnVisible","colId","render","gridPaper","Components_ConnectedTooltip","gridSearch","autoFocus","label","InputLabelProps","shrink","gridWrapper","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","enableCellTextSelection","suppressContextMenu","getRowStyle","node","detail","background","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","detailCellRendererParams","detailGridOptions","datasetRetrievalRequestSend","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","firstName","optional","lastName","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","validation","depthOneIsLower","depthOneOutOfBounds","depthTwoOutOfBounds","negative","date","dateOneIsLater","dateOneOutOfBounds","dateTwoOutOfBounds","latOneIsHigher","latOneOutOfBounds","latTwoOutOfBounds","lonOneIsHigher","lonOneOutOfBounds","lonTwoOutOfBounds","dataIsIrregular","dateRangeRequired","depthRangeRequired","surfaceOnlyDataset","irregularOnly","dataSizeTooLarge","generic","invalid","dataSizeWarning","dataSizePrevent","variableMissing","vizTypeMissing","Dialog","onClose","DialogTitle","Long_Name","DialogContent","Comment","DialogContentText","slice","Sensor","Time_Min","Time_Max","Lat_Min","Lat_Max","Lon_Min","Lon_Max","Depth_Max","Variable_Min","Unit","Variable_Max","Variable_Mean","Variable_Std","mapTemporalResolutionToNumber","reactWindowListRef","React","createRef","MenuList","componentDidUpdate","prevProps","prevState","findIndex","child","isFocused","current","scrollToItem","options","_getValue","getValue","slicedToArray","initialOffset","indexOf","dist_index_esm","style","itemCount","itemSize","initialScrollOffset","ref","_ref","DropdownIndicator","chunk_5d200a41_browser_esm","ArrowDropDown","SingleValue","assign","Option","DataRetrievalForm","search","addDocuments","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","handleVisualizationSpeedDialClose","visualizationSpeedDialOpen","handleVisualizationSpeedDialOpen","handleVisualizationSpeedDialClick","getSelectOptionsFromCatalogItems","items","Variable","onAutoSuggestChange","searchString","searchField","estimateDataSize","_this2$props","dt1","dt2","lat1","lat2","lon2","selectedVizType","date1","date2","res","dayDiff","checkStartDepth","surfaceOnly","depth1","depth2","replace","toFixed","checkEndDepth","checkStartDate","checkEndDate","checkStartLat","checkEndLat","checkStartLon","checkEndLon","checkHeatmap","irregularSpatialResolution","checkContour","checkSection","checkHistogram","checkTimeSeries","checkDepthProfile","checkSparseMap","checkGeneralWarn","checkGeneralPrevent","JsSearch","searchIndex","addIndex","_this3","_this$state","_this$props2","_validations","fill","_validations2","startDepthMessage","endDepthMessage","startLatMessage","endLatMessage","startLonMessage","endLonMessage","heatmapMessage","contourMessage","sectionMapMessage","histogramMessage","timeSeriesMessage","depthProfileMessage","sparseMapMessage","generalWarnMessage","generalPreventMessage","parametersAreInvalid","some","showUI","displayNone","Components_TableStatsDialog","dataRetrievalFormPaper","shortenHeight","react_select_browser_esm","isLoading","components","IndicatorSeparator","isClearable","onInputChange","filterOption","variableSelect","escapeClearsValue","updateFields","styles","menu","provided","input","fontFamily","control","border","borderColor","&:focus-within","noOptionsMessage","option","_ref2",":active","&:after","singleValue","paddingRight","primary25","primary","IconButton","LibraryBooks","datePickerGridSection","material_ui_pickers_esm","format","minDate","maxDate","autoOk","handleStartDateChange","inputVariant","handleEndDateChange","FormControl","InputLabel","htmlFor","OutlinedInput","aria-describedby","labelWidth","FormHelperText","handleLatLonChange","vizTypeSelectFormControl","Select","inputProps","MenuItem","onVisualize","generalMessage","dataRetrievalFormField","retrieveDataButton","visualizationSpeedDial","visualizeButton","borderRadius","visualizeButtonText","dominantBaseline","textAnchor","vizSelect","utcDateStringToLocal","utcString","utcYear","getUTCFullYear","utcMonth","getUTCMonth","utcDate","getUTCDate","newDate","setFullYear","darwinDepths","piscesDepths","piscesTable","darwinTable","exports","has","overrideDisabledStyle","clearCharts","csvDownloadRequestSend","getDatePlaceholder","valueOf","month","getMonth","day","getDate","getFullYear","groupHeaderHeight","selectRef","resetAfterIndex","scrollOffset","foundFocus","groupHasFocus","scrollTo","groupHeights","grandChild","totalHeight","acc","cur","estimatedItemSize","Group","hasFocus","element","sensor","CustomHeading","headingProps","headingLabel","firstChild","selectProps","hidden","customHeading","icon","typography","iconClass","ListItem","select","focusedOption","Icon","handleDownloadCsvClick","stopPropagation","CloudDownload","ArrowRight","innerProps","onMouseMove","preventDefault","onMouseOver","GroupHeading","formatOptionLabel","meta","VizControlPanel","handleOpenControlPanel","showControlPanel","handleCloseControlPanel","values","sort","opt1","opt2","estimateCsvSize","member","parseInt","Variable_Count","dateCount","depthUtils","checkStartDateValid","checkEndDateValid","dataSize","handleShowChartsAndResize","setTimeout","dispatchEvent","Event","handleShowCharts","indexStrategy","maxDateMessage","showCharts","handleShowGlobe","catalogMinDate","setHours","catalogMaxDate","zeroedDT1","zeroedDT2","minDateMessage","checkDisableVisualizeList","errorCount","errorSizeAdjust","disableVisualizeMessage","checkDisableVisualize","visualizeButtonTooltip","closePanelChevron","aria-label","ChevronLeft","openPanelChevron","ChevronRight","Drawer","drawer","paper","drawerPaper","anchor","ButtonGroup","groupedButtons","depressed","Language","InsertChartOutlined","clearChartsButton","Delete","inputValue","backdropFilter","valueContainer","borderBottom","tableStatsButton","datePicker","KeyboardButtonProps","datePickerInputAdornment","formGridItem","FormHelperTextProps","InputProps","padLeft","vizButtonTooltip","fullWidth","bottom","drawerPaperError1","drawerPaperError2","drawerPaperError3","drawerPaperError4","drawerPaperError5","navDrawerWidth","controlPanelForm","borderLeft","&:disabled","fontVariant","handleXTicks","infoObject","sectionSize","lonRange","tickvals","ceil","ticktext","tickmode","handleChartDatestring","dateString","chartBase","layout","font","paper_bgcolor","config","displaylogo","annotations","distributor","xref","yref","yshift","showarrow","colorscaleOptions","chartWrapper","popover","paddingBottom","iconButton","colorForm","lastIcon","borderTopRightRadius","borderBottomRightRadius","buttonGroup","colorscaleMenu","onToggleSplitByDate","onToggleSplitBySpace","onToggleSplitByDepth","switchOrientation","downloadCsv","handleZValueConfirm","zValues","markerOptions","handleMarkerOptionsConfirm","_useState","useState","_useState2","paletteAnchorElement","setPaletteAnchorElement","_React$useState","_React$useState2","zScalePopoverAnchorElement","setZScalePopoverAnchorElement","_React$useState3","_React$useState4","localZMin","setLocalZMin","_React$useState5","_React$useState6","localZMax","setLocalZMax","zScalePopoverOpen","zScalePopoverID","handleZScalePopoverClose","zScaleValidations","zMinMessage","zMaxMessage","_React$useState7","_React$useState8","markerOptionsAnchorElement","setMarkerOptionsAnchorElement","_React$useState9","_React$useState10","localMarkerOpacity","setLocalMarkerOpacity","_React$useState11","_React$useState12","localMarkerColor","setLocalMarkerColor","_React$useState13","_React$useState14","localMarkerSize","setLocalMarkerSize","previousOpacity","useRef","usePreviousOpacity","previousColor","usePreviousColor","previousSize","usePreviousSize","markerPopoverOpen","markerPopoverID","handleMarkerOptionsClose","markerOptionsValidations","checkLocalMarkerOpacity","checkLocalMarkerSize","localMarkerOpacityMessage","localMarkerSizeMessage","DateRange","LineWeight","currentTarget","SwapVert","handlePaletteChoice","Palette","Gamepad","Menu","anchorEl","keepMounted","Popover","anchorOrigin","vertical","horizontal","transformOrigin","buttonBlock","iconButtonWrapper","plots","_props$chart","chart","setSplitByDate","_useState3","_useState4","setSplitByDepth","_useState5","_useState6","subTypeState","_useState7","_useState8","setPalette","_useState9","_useState10","setZValues","_zValues","subSets","generatePlotData","subsets","xTicks","variableName","handleDateString","hovertext","formatter","react_plotly_default","zauto","zmin","zmax","x","y","z","connectgaps","autocolorscale","colorscale","hoverinfo","contours","coloring","showlabels","labelfont","family","labelformat","colorbar","exponentformat","xaxis","yaxis","handleContourMap","zsmooth","handleHeatmap","handleHistogram","ChartComponents_ChartControlPanel","requestAnimationFrame","setMarkerOptions","mode","error_y","array","visible","line","marker","plot_bgcolor","error_x","autorange","setSplitBySpace","setOrientation","spaces","distinctMeridiansOrParallelsForSplitting","mergedOrSplitAxis","xAxis","spaceTitle","visualizationSubTypes","handleSectionMap","SparseScatter","xValues","yValues","xTitle","yTitle","tabProps","aria-controls","SparseTabPanel","selectedTab","controlPanelProps","tabs","tab","textTransform","setTab","plot","mapbox","sourcetype","source","below","mapboxAccessToken","handleSparseMap","scatter","Tabs","indicatorColor","Tab","SparseMap_SparseTabPanel","ChartComponents_SparseScatter","Charts","chartPaper","ChartComponents_SparseMap","ChartComponents_SparseHistogram","ChartComponents_SpaceTimeChart","ChartComponents_TimeSeriesChart","ChartComponents_DepthProfileChart","ChartComponents_SectionMapChart","chartsContainer","cruiseTrajectoryClear","esriFonts","cruiseSort","b","Name","CruiseSelector","getSelectOptionsFromCruiseList","list","handleCruiseSelect","selection","ID","selectedCruise","updateParametersFromCruiseBoundary","outerDiv","blurEffectDiv","getCruiseListState","cruiseSelect","menuList","cruiseInfo","cruiseInfoCell","Nickname","Start_Time","End_Time","Chief_Name","Ship_Name","borderStyle","DrawButton","drawButton","helpText","cancelButton","polygonSymbol","symbolLayers","material","outline","UiComponents","shouldComponentUpdate","nextProps","nextState","sketchModel","esriModules","SketchViewModel","layer","regionLayer","view","defaultUpdateOptions","toggleToolOnClick","tool","setShowHelp","getElementById","updateDomainFromGraphicExtent","Utils","webMercatorToGeographic","graphic","geometry","toolEventInfo","graphics","addEventListener","removeAll","create","cancel","ui","remove","TrajectoryController","memo","trajectoryLayer","polyLines","lineIndex","lonStart","latStart","maxDistance","_lonDistance","cruiseTrajectorySymbol","cap","cruiseTrajectoryGeometry","paths","Graphic","symbol","goTo","maxDuration","speedFactor","MapContainer","_this3$props","spParams","globeUIRef","_lon2","polygon","rings","regionGraphic","esm","mapProperties","basemap","viewProperties","MapContainer_UiComponents","measurementPositions","Components_CruiseSelector","GraphicsLayer","cleanSPParams","localDateToString","year","toString","mapVizType","vizType","_mapping","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","completedShowCharts","Visualization","filteredData","_this$state$spParams","mapping","cruise","toggleShowUI","_lon1","xmin","xmax","newCoordinates","ymin","ymax","esriModuleNames","loadModules","version","loadedModules","accumulator","currentValue","currentIndex","Components_DataRetrievalForm","Components_VizControlPanel","toggleChartView","Components_MapContainer","Components_Charts","userLoginRequestSend","LoginDialog","handleLogin","handleClose","aria-labelledby","onSubmit","DialogActions","snackbarClose","centerText","Snackbar","autoHideDuration","loader","right","loaderContent","flexDirection","alignItem","spinnerText","spinner","dist","fadeIn","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","Components_LoginDialog","Components_SnackbarWrapper","Components_LoadingOverlay","inlineBlock","LandingPage","landingWrapper","welcomeMessage","createMuiTheme","useNextVariants","contrastText","default","overrides","MuiIconButton","MuiListItemIcon","MuiFormHelperText","filled","MuiListItem","gutters","MuiToolbar","MuiOutlinedInput","&$focused","MuiButtonGroup","groupedOutlined","&:not(:first-child)","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","MuiFilledInput","inputSelect","adornedEnd","App","vizRef","utils","DateFnsUtils","MuiThemeProvider","react_router_dom","Components_GlobalUIComponentWrapper","react_router","exact","path","LicenseManager","setLicenseKey","rootElement","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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A,GACA,GACA,GACA,GACA,GACA,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,OACA,OACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAGEC,GAAe,CACjB,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,eAkBEC,GAAc,IAAIzxB,IAfF,CAClB,gBACA,2BAcE0xB,GAAc,IAAI1xB,IAXH,CACjB,4BACA,sBACA,qBACA,iCACA,wBACA,0BACA,mCA+BW2xB,GAzBC,CACZv0B,MAAO,SAACye,EAAO8N,EAAQC,GAAW,IACV5V,EAAU6H,EAAMhiB,KAA5BqH,WACJ9D,EAAQ,EAEZ,GAAGq0B,GAAYG,IAAI5d,GACf,IAAI,IAAI7X,EAAI,EAAGA,EAAIq1B,GAAap1B,UACzBo1B,GAAar1B,GAAKytB,GADeztB,IAEjCq1B,GAAar1B,GAAKwtB,GAAQvsB,SAE9B,GAAIs0B,GAAYE,IAAI5d,GACvB,IAAI,IAAI7X,EAAI,EAAGA,EAAIo1B,GAAan1B,UACzBm1B,GAAap1B,GAAKytB,GADeztB,IAEjCo1B,GAAap1B,GAAKwtB,GAAQvsB,IAGrC,OAAOA,GAGXq0B,eACAC,eACAF,gBACAD,iBC2BEM,GAAwB,CAC1B5Z,gBAAiB,eAYfrF,GAAqB,CACvBxY,+BACA03B,YvCrHuB,iBAAO,CAC9Bj7B,KTxDwB,iBgD6KxBk7B,uBvCvCkC,SAAClnB,EAAO5P,GAAR,MAAyB,CAC3DpE,KAAMyD,EACNtD,QAAS,CACL6T,QACA5P,iBuC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","file":"static/js/main.900f4963.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';\r\n\r\nexport const DATASET_RETRIEVAL_REQUEST_SEND = 'DATASET_CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const DATASET_RETRIEVAL_REQUEST_SUCCESS = 'DATASET_CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const DATASET_RETRIEVAL_REQUEST_FAILURE = 'DATASET_CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const DATASET_RETRIEVAL_REQUEST_PROCESSING = 'DATASET_CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';\r\n\r\nexport const REFRESH_LOGIN = 'REFRESH_LOGIN';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    case interfaceActionTypes.SET_LOADING_MESSAGE: return {...state, loadingMessage: action.payload.message}\r\n    \r\n    case interfaceActionTypes.TOGGLE_SHOW_HELP: return {...state, showHelp: !state.showHelp}\r\n    \r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\n\r\nexport const GET_TABLE_STATS = 'GET_TABLE_STATS';\r\nexport const GET_TABLE_STATS_REQUEST_PROCESSING = 'GET_TABLE_STATS_REQUEST_PROCESSING';\r\nexport const STORE_TABLE_STATS = 'STORE_TABLE_STATS';\r\n\r\nexport const CRUISE_TRAJECTORY_REQUEST_SEND = 'CRUISE_TRAJECTORY_REQUEST_SEND';\r\nexport const CRUISE_TRAJECTORY_REQUEST_SUCCESS = 'CRUISE_TRAJECTORY_REQUEST_SUCCESS';\r\nexport const CRUISE_TRAJECTORY_REQUEST_FAILURE = 'CRUISE_TRAJECTORY_REQUEST_FAILURE';\r\nexport const CRUISE_TRAJECTORY_REQUEST_PROCESSING = 'CRUISE_TRAJECTORY_REQUEST_PROCESSING';\r\nexport const CRUISE_TRAJECTORY_CLEAR = 'CRUISE_TRAJECTORY_CLEAR';\r\n\r\nexport const CRUISE_LIST_REQUEST_SEND = 'CRUISE_LIST_REQUEST_SEND';\r\nexport const CRUISE_LIST_REQUEST_SUCCESS = 'CRUISE_LIST_REQUEST_SUCCESS';\r\nexport const CRUISE_LIST_REQUEST_FAILURE = 'CRUISE_LIST_REQUEST_FAILURE';\r\nexport const CRUISE_LIST_REQUEST_PROCESSING = 'CRUISE_LIST_REQUEST_PROCESSING';\r\n\r\nexport const TRIGGER_SHOW_CHARTS = 'TRIGGER_SHOW_CHARTS';\r\nexport const COMPLETED_SHOW_CHARTS = 'COMPLETED_SHOW_CHARTS';\r\n\r\nexport const CSV_DOWNLOAD_REQUEST_SEND = 'CSV_DOWNLOAD_REQUEST_SEND';\r\nexport const CSV_DOWNLOAD_REQUEST_SUCCESS = 'CSV_DOWNLOAD_REQUEST_SUCCESS';\r\nexport const CSV_DOWNLOAD_REQUEST_FAILURE = 'CSV_DOWNLOAD_REQUEST_FAILURE';\r\nexport const CSV_DOWNLOAD_REQUEST_PROCESSING = 'CSV_DOWNLOAD_REQUEST_PROCESSING';\r\n\r\nexport const DOWNLOAD_TEXT_AS_CSV = 'DOWNLOAD_TEXT_AS_CSV';","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n    datasetRequestState: null,\r\n    datasets: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n    loadingMessage: '',\r\n    showHelp: false,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    getCruiseTrajectoryRequestState: null,\r\n    cruiseTrajectory: null,\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    cruiseList: [],\r\n    getCruiseListRequestState: null,\r\n    showChartsOnce: null\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SUCCESS: return {...state,\r\n      datasetsRequestState: states.succeeded, \r\n      datasets: action.payload.datasets\r\n    }\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_FAILURE: return {...state, datasetsRequestState: states.failed}\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_PROCESSING: return {...state, datasetsRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';\r\n\r\nexport const SET_LOADING_MESSAGE = 'SET_LOADING_MESSAGE';\r\n\r\nexport const TOGGLE_SHOW_HELP = 'TOGGLE_SHOW_HELP';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING: return {...state, getCruiseTrajectoryRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS: return {...state,\r\n            cruiseTrajectory: action.payload.trajectory,\r\n            getCruiseTrajectoryRequestState: states.succeeded\r\n        }\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR: return {...state, cruiseTrajectory: null}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE: return {...state, getCruiseTrajectoryRequestState: states.failed}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING: return {...state, getCruiseListRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS: return {\r\n            ...state,\r\n            getCruiseListRequestState: states.succeeded,\r\n            cruiseList: action.payload.cruiseList\r\n        }\r\n\r\n        case visualizationActionTypes.TRIGGER_SHOW_CHARTS: return {...state, showChartsOnce: true}\r\n        case visualizationActionTypes.COMPLETED_SHOW_CHARTS: return {...state, showChartsOnce: false}\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n\r\nexport const refreshLogin = () => ({\r\n    type: userActionTypes.REFRESH_LOGIN\r\n})","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const datasetRetrievalRequestSend = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const datasetRetrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const datasetRetrievalRequestSuccess = (datasets) => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        datasets\r\n    }\r\n})\r\n\r\nexport const datasetRetrievalRequestFailure = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})\r\n\r\nexport const setLoadingMessage = (message) => ({\r\n    type:interfaceActionTypes.SET_LOADING_MESSAGE,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const toggleShowHelp = () => ({\r\n    type: interfaceActionTypes.TOGGLE_SHOW_HELP\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const getTableStats = (tableName) => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS,\r\n    payload: {\r\n        tableName\r\n    }\r\n})\r\n\r\nexport const getTableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storeTableStats = (tableStats) => ({\r\n    type: visualizationActionTypes.STORE_TABLE_STATS,\r\n    payload: {\r\n        tableStats\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSuccess = (trajectory) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS,\r\n    payload: {\r\n        trajectory\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseTrajectoryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const cruiseTrajectoryClear = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR\r\n})\r\n\r\nexport const cruiseListRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SEND,\r\n})\r\n\r\nexport const cruiseListRequestSuccess = (cruiseList) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS,\r\n    payload: {\r\n        cruiseList\r\n    }\r\n})\r\n\r\nexport const cruiseListRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseListRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const triggerShowCharts = () => ({\r\n    type: visualizationActionTypes.TRIGGER_SHOW_CHARTS\r\n})\r\n\r\nexport const completedShowCharts = () => ({\r\n    type: visualizationActionTypes.COMPLETED_SHOW_CHARTS\r\n})\r\n\r\nexport const csvDownloadRequestSend = (query, datasetName) => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SEND,\r\n    payload: {\r\n        query,\r\n        datasetName\r\n    }\r\n})\r\n\r\nexport const csvDownloadRequestFailure = () => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_FAILURE\r\n})\r\n\r\nexport const csvDownloadRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_PROCESSING\r\n})\r\n\r\nexport const csvDownloadRequestSuccess = (text) => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SUCCESS,\r\n    payload: {\r\n        text\r\n    }\r\n})\r\n\r\n//dataset download\r\nexport const downloadTextAsCsv = (text, datasetName) => ({\r\n    type: visualizationActionTypes.DOWNLOAD_TEXT_AS_CSV,\r\n    payload: {\r\n        text,\r\n        datasetName\r\n    }\r\n})","// export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\nexport const apiUrl = 'https://simonscmap.dev';","const spatialResolutions = {\r\n    irregular: 'Irregular',\r\n    halfDegree: '1/2° X 1/2°' ,\r\n    quarterDegree: '1/4° X 1/4°' ,\r\n    twentyFifthDegree: '1/25° X 1/25°' ,\r\n    fourKm: '4km X 4km',\r\n    twelfthDegree: '1/12° X 1/12°',\r\n    seventyKm: '70km X 70km',\r\n    oneDegree: '1° X 1°'\r\n}\r\n\r\nexport default spatialResolutions;","import spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nconst mapSpatialResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [spatialResolutions.halfDegree] : .5,\r\n        [spatialResolutions.quarterDegree] : .25,\r\n        [spatialResolutions.twentyFifthDegree] : .04,\r\n        [spatialResolutions.fourKm] : .041672,\r\n        [spatialResolutions.twelfthDegree] : .083333,\r\n        [spatialResolutions.oneDegree] : 1,\r\n        [spatialResolutions.seventyKm] : .25\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapSpatialResolutionToNumber;","// Flattens an array by 1 level\r\n// [[[],[]], [[],[]], [[],[]]] => [[], [], [], [], [], []]\r\n\r\nconst flattenArray = (arr) => {\r\n    let flattenedArray = [];\r\n\r\n    for(let i = 0; i < arr.length; i++){\r\n        for(let j = 0; j < arr[i].length; j++){\r\n            flattenedArray.push(arr[i][j]);\r\n        }\r\n    }\r\n\r\n    return flattenedArray;\r\n}\r\n\r\nexport default flattenArray;","// Interval is number of indices between changes in this parameter, or in order words\r\n// how many times will we see the same value for this parameter in a row before it changes\r\n// as we iterate through the values array.\r\n// We use modulo for cases where data.length / interval is larger than the number of \r\n// distinct values for that parameter.\r\n\r\nconst splitData = (data, changeInterval, numDistinct) => {\r\n    var splitData = [];\r\n\r\n    for(let i = 0; i < numDistinct; i++){\r\n        splitData.push([]);\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        let index = Math.floor(i / changeInterval) % numDistinct;\r\n        splitData[index].push(data[i]);\r\n    }\r\n\r\n    return splitData;\r\n}\r\n\r\nexport default splitData;","// mergeTargetDistance - number of hops between arrays being merged\r\n// mergeTargetNumber - number of arrays being merged - implicit\r\n// nextStartDistance - once a merge is complete how many hops to next start\r\nconst mergeArraysAndComputeMeans = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n    \r\n    // Find each merging start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        // Iterate through each value in the first array of this merge. Count\r\n        // the number of values summed so we can ignore nulls and compute a mean.\r\n        for(let j = 0; j < data[i].length; j ++){\r\n            let sum = 0;\r\n            let count = 0;\r\n\r\n            // Aggregate values of all merge targets\r\n            for(let k = i; k < i + (mergeTargetDistance * numArraysPerMerge); k += mergeTargetDistance){\r\n                if(isNaN(data[k][j])) {\r\n                    continue;\r\n                } else {                    \r\n                    sum += data[k][j];\r\n                    count ++;\r\n                }\r\n            }\r\n            subArray.push(count < 1 ? null : sum / (count));\r\n        }\r\n\r\n        mergedArrays.push(subArray)\r\n    }\r\n\r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArraysAndComputeMeans;","const mergeArrays = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n\r\n    // Find each merge start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        for(let j = i; j <= i + travelDistance; j += mergeTargetDistance){\r\n            subArray = [...subArray, ...data[j]];\r\n        }\r\n\r\n        mergedArrays.push(subArray);\r\n    }\r\n   \r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArrays;\r\n\r\n","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    contourSectionMap: 'Contour Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    heatmap: 'Heatmap',\r\n    contourMap: 'Contour Map',\r\n    sparse: 'Sparse'\r\n}\r\n\r\nexport default subTypes;","const temporalResolutions = {\r\n    threeMinutes: 'Three Minutes',\r\n    sixHourly: 'Six Hourly',\r\n    daily: 'Daily',\r\n    weekly: 'Weekly',\r\n    monthly: 'Monthly',\r\n    annual: 'Annual',\r\n    irregular: 'Irregular',\r\n    monthlyClimatology: 'Monthly Climatology',\r\n    threeDay: 'Three Days',\r\n    eightDayRunning: 'Eight Day Running',\r\n    eightDays: 'Eight Days '\r\n}\r\n\r\nexport default temporalResolutions;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/mergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nclass SpaceTimeData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n\r\n        this.hasDepth = null;\r\n        this.hasHours = null;\r\n        this.isMonthly = null;\r\n\r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n        this.indexAdjust = null;\r\n        this.payload = payload;\r\n        this.lats = [];\r\n        this.lons = [];\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n\r\n        this.distinctLatCount = null;\r\n        this.distinctLonCount = null;\r\n    }\r\n\r\n    add(row) {\r\n        \r\n        let lat = parseFloat(row[1]);\r\n        let _lon = parseFloat(row[2]);\r\n        let lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n\r\n        if(this.hasDepth === null) {\r\n            this.hasHour = this.metadata.Table_Name === 'tblWind_NRT';\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n            this.hasDepth = row.length === 5 && !this.hasHour;\r\n            this.indexAdjust = this.hasDepth || this.hasHour? 1 : 0;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n        }\r\n\r\n        let value = parseFloat(row[3 + this.indexAdjust]);\r\n\r\n        if(this.hasDepth){\r\n            this.depths.add(row[3]);\r\n        }\r\n\r\n        var time;\r\n        if(this.hasHour){\r\n            time = new Date(row[0]);\r\n            time.setUTCHours(row[3])\r\n            time = time.toISOString();\r\n        } else time = row[0];\r\n        this.dates.add(time);\r\n        this.lats.push(lat);\r\n\r\n        this.lons.push(lon);\r\n\r\n        if(lon < this.lonMin) this.lonMin = lon;\r\n        if(lon > this.lonMax) this.lonMax = lon;\r\n        if(lat < this.latMin) this.latMin = lat;\r\n        if(lat > this.latMax) this.latMax = lat;\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n\r\n        if(this.depths.size === 0) this.depths.add('Surface');\r\n\r\n        this.lonCount = this.lons.length / this.dates.size / this.depths.size;\r\n        this.latCount = this.lats.length / this.dates.size / this.depths.size;\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : parseFloat(quantile1.toPrecision(4));\r\n        this.zMax = quantile2 === undefined ? null : parseFloat(quantile2.toPrecision(4));\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n        \r\n        this.distinctLatCount = Math.round((this.latMax - this.latMin) / spatialResolution) + 1;\r\n        this.distinctLonCount = Math.round((this.lonMax - this.lonMin) / spatialResolution) + 1;\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {        \r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const latInterval = this.distinctLonCount;\r\n        const depthInterval = latInterval * this.distinctLatCount;\r\n        const dateInterval = depthInterval * this.depths.size;\r\n\r\n        // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n        variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, depthInterval, this.depths.size));\r\n        variableValueSubsets = flattenArray(variableValueSubsets);\r\n\r\n        // Contour and heatmap compute mean variable values per lat and lon\r\n        // when not split by date and/or time\r\n        if(subType === vizSubTypes.contourMap || subType === vizSubTypes.heatmap) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    this.depths.size, \r\n                    this.depths.size\r\n                    );\r\n    \r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    this.depths.size, \r\n                    1, \r\n                    this.dates.size\r\n                    );\r\n    \r\n            } else {\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    variableValueSubsets.length, \r\n                    variableValueSubsets.length\r\n                    );            \r\n            }\r\n        } \r\n        \r\n        // Histograms split and aggregate without computing means\r\n        else if (subType === vizSubTypes.histogram) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets, \r\n                    1,\r\n                    this.depths.size,\r\n                    this.depths.size\r\n                    );\r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets,\r\n                    this.depths.size,\r\n                    1,\r\n                    this.dates.size\r\n                );\r\n            } else {\r\n                variableValueSubsets = [this.variableValues];\r\n            }\r\n        }\r\n\r\n        // Nothing here yet\r\n        else {}\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${depths[Math.floor(i / (this.variableValues.length / (dates.length * depths.length))) % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SpaceTimeData;","const storedProcedures = {\r\n    sectionMap: 'uspSectionMap',\r\n    timeSeries: 'uspTimeSeries',\r\n    spaceTime: 'uspSpaceTime',\r\n    depthProfile: 'uspDepthProfile'\r\n}\r\n\r\nexport default storedProcedures;","class TimeSeriesData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.dates = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depth = null;\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.depthIndexAdjust = row.length === 6 ? 1 : 0;\r\n            this.lat = row[1];\r\n            this.lon = row[2];\r\n            this.depth = row.length === 6 ? row[3] : false;\r\n        }\r\n\r\n        this.variableValues.push(row[3 + this.depthIndexAdjust]);\r\n        this.stds.push(row[4 + this.depthIndexAdjust]);\r\n        this.dates.push(row[0]);\r\n    }\r\n\r\n    finalize() {\r\n        if(this.depth === false) this.depth = 'Surface';\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }    \r\n\r\n    generateCsv() {\r\n        let csvString = `time,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.dates[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default TimeSeriesData;","class DepthProfileData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depths = [];\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.lat = parseFloat(row[0]);\r\n            this.lon = parseFloat(row[1]);\r\n        }\r\n\r\n        this.variableValues.push(parseFloat(row[2]));\r\n        this.stds.push(parseFloat(row[3]));\r\n        this.depths.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        // pass\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }\r\n    \r\n    generateCsv() {\r\n        let csvString = `depth,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default DepthProfileData;","export default [\r\n    null,\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n]","import { quantile, extent } from 'd3-array';\r\n\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nimport months from '../Enums/months';\r\n\r\nclass SectionMapData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.subType = payload.subType\r\n        \r\n        this.dates = new Set();\r\n        this.depths = new Set();\r\n        this.lats = new Set();\r\n        this.lons = new Set();\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n\r\n        this.variableValues = [];\r\n        \r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.orientation = null;\r\n    }\r\n\r\n    // time, lat, lon, depth, value\r\n    add(row) {        \r\n        const time = row[0];\r\n        const lat = parseFloat(row[1]);\r\n        var _lon = parseFloat(row[2]);\r\n        const lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n        const depth = parseFloat(row[3]);\r\n        const value = parseFloat(row[4]);\r\n\r\n        if(this.variableValues.length === 0) {\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n        }        \r\n\r\n        this.depths.add(depth);\r\n        this.dates.add(this.isMonthly ? months[time] : time);\r\n        this.lats.add(lat);\r\n        this.lons.add(lon);\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : parseFloat(quantile1.toPrecision(4));\r\n        this.zMax = quantile2 === undefined ? null : parseFloat(quantile2.toPrecision(4));\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        this.orientation = this.lons.size > this.lats.size ? 'zonal' : 'meridional';\r\n\r\n        let lonArray = Array.from(this.lons);\r\n        this.lonMax = Math.max(...lonArray);\r\n        this.lonMin = Math.min(...lonArray);\r\n        // console.log(this.variableValues);\r\n    }\r\n\r\n    // Direction is meridional or zonal\r\n    generatePlotData(orientation, splitByDate, splitBySpace) {\r\n        let latCount = this.lats.size;\r\n        let lonCount = this.lons.size;\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const lonInterval = this.depths.size;\r\n        const latInterval = lonInterval * lonCount;\r\n        const dateInterval = latInterval * latCount;\r\n\r\n        var variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n\r\n        var spaceCount;\r\n\r\n        if(orientation === 'zonal') {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, latInterval, latCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = latCount;\r\n        }\r\n\r\n        else {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, lonInterval, lonCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = lonCount;\r\n        }\r\n\r\n        // console.log('Split by space');\r\n        // console.log(variableValueSubsets);\r\n\r\n        if(splitByDate && splitBySpace){\r\n            // pass\r\n        } else if (splitByDate){\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                spaceCount,\r\n                spaceCount\r\n            )\r\n        } else if (splitBySpace) {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                spaceCount,\r\n                1,\r\n                this.dates.size\r\n            )\r\n        } else {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                variableValueSubsets.length,\r\n                variableValueSubsets.length\r\n            )\r\n        }\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n        let lons = Array.from(this.lons);\r\n        let lats = Array.from(this.lats);\r\n\r\n        const lonInterval = depths.length;\r\n        const latInterval = lonInterval * lons.length;\r\n\r\n        var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${lats[Math.floor(i / latInterval) % lats.length]},${lons[Math.floor(i / lonInterval) % lons.length]},${depths[i % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SectionMapData;","import { quantile, extent } from 'd3-array';\r\n\r\nclass SparseData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = null;\r\n        this.variableIndex = payload.metadata.Depth_Min ? 4 : 3;\r\n        this.depths = [];\r\n        this.times = [];\r\n        this.variableValues = [];\r\n        this.lats = [];\r\n        this.lons = [];\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n    }\r\n\r\n    add(row) {\r\n        let lat = parseFloat(row[1]);\r\n        let lon = parseFloat(row[2]);\r\n\r\n        if(this.hasDepth === null){\r\n            this.hasDepth = Boolean(this.metadata.Depth_Min);\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n        }\r\n\r\n        if(row[this.variableIndex]){\r\n\r\n            this.times.push(row[0]);\r\n            this.lats.push(lat);\r\n            this.lons.push(lon);\r\n            if(this.hasDepth) this.depths.push(parseFloat(row[3]));\r\n            this.variableValues.push(parseFloat(row[this.variableIndex]));\r\n\r\n            if(lat < this.latMin) this.latMin = lat;\r\n            if(lat > this.latMax) this.latMax = lat;\r\n            \r\n            if(lon < this.lonMin) this.lonMin = lon;\r\n            if(lon > this.lonMax) this.lonMax = lon;\r\n        }\r\n    }\r\n\r\n    finalize() {\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let latDistance = Math.abs(this.latMax - this.latMin);\r\n        let lonDistance = Math.abs(this.lonMax - this.lonMin);\r\n        let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n\r\n        console.log('Distance: ', distance);\r\n\r\n        let _zoom = 4 - Math.floor(distance / 12);\r\n        this.zoom = _zoom < 0 ? 0 : _zoom;\r\n\r\n        let lonCenter = (this.lonMax + this.lonMin) / 2;\r\n        let latCenter = (this.latMax + this.latMin) / 2;\r\n        this.center = { \r\n            lon: lonCenter, \r\n            lat: latCenter\r\n        }\r\n\r\n        console.log(this);\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        return this.variableValues;\r\n    }\r\n\r\n    generateCsv(){\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SparseData;","import CSVParser from 'csv-parse';\r\n\r\nimport { apiUrl } from './config';\r\nimport SpaceTimeData from './Classes/SpaceTimeData';\r\n\r\nimport storedProcedures from './Enums/storedProcedures';\r\nimport TimeSeriesData from './Classes/TimeSeriesData';\r\nimport DepthProfileData from './Classes/DepthProfileData';\r\nimport SectionMapData from './Classes/SectionMapData';\r\nimport SparseData from './Classes/SparseData';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            catalog.push(record)\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.catalog.datasets = async() => {\r\n    const decoder = new TextDecoder();\r\n    let datasets = {};\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            datasets[record.Dataset_Long_Name] = record;\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog/datasets', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return datasets;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(payload) => {\r\n    const decoder = new TextDecoder();\r\n    var vizData;\r\n\r\n    switch(payload.parameters.spName) {\r\n        case storedProcedures.spaceTime:\r\n            if(payload.subType === 'Sparse') vizData = new SparseData(payload);\r\n            else vizData = new SpaceTimeData(payload);\r\n            break;\r\n\r\n        case storedProcedures.timeSeries:\r\n            vizData = new TimeSeriesData(payload);\r\n            break;\r\n\r\n        case storedProcedures.depthProfile:\r\n            vizData = new DepthProfileData(payload);\r\n            break;\r\n\r\n        case storedProcedures.sectionMap:\r\n            vizData = new SectionMapData(payload);\r\n            break;\r\n\r\n        default:\r\n            console.log('Unknown sproc name');\r\n    }\r\n\r\n    let response = await fetch(apiUrl + '/api/data/sp?' + storedProcedureParametersToUri(payload.parameters), fetchOptions);\r\n\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            vizData.add(record);\r\n        }\r\n    })\r\n\r\n    csvParser.on('error', (e) => {\r\n        console.log(e);\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;\r\n}\r\n\r\napi.visualization.cruiseTrajectoryRequest = async(payload) => {\r\n    const cruiseId = payload.id;\r\n    const decoder = new TextDecoder();\r\n    let trajectory = {lats: [], lons: []};\r\n\r\n    let response = await fetch(apiUrl + '/api/data/cruisetrajectory?' + `id=${payload.id}`, fetchOptions);\r\n\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            trajectory.lats.push(parseFloat(record[1]));\r\n            trajectory.lons.push(parseFloat(record[2]));\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return trajectory;\r\n}\r\n\r\napi.visualization.cruiseList = async() => {\r\n    let response = await fetch(apiUrl + '/api/data/cruiselist', fetchOptions);\r\n\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;   \r\n}\r\n\r\napi.visualization.csvDownload = async(payload) => {\r\n    let response = await fetch(apiUrl + `/api/data/query?query=${payload.query}`, fetchOptions);\r\n    if(response.ok) return await response.text();\r\n    else return {failed: true, status: response.status}\r\n}\r\n\r\nexport default api;","import { put, takeLatest, all, call, delay } from 'redux-saga/effects';\r\n// import { eventChannel } from 'redux-saga';\r\nimport Cookies from 'js-cookie';\r\n// import worker from '../worker';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    \r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){    \r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    \r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    \r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    \r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* datasetRetrieval(){\r\n    yield put(catalogActions.datasetRetrievalRequestProcessing());\r\n    let datasets = yield call(api.catalog.datasets);\r\n\r\n    if(!datasets){\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else {\r\n        yield put(catalogActions.datasetRetrievalRequestSuccess(datasets));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    \r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    \r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload);\r\n    yield delay(50);\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'));\r\n    yield delay(70);\r\n    \r\n    // Result will be an object containing variable values and describing date shape\r\n    if(result.failed){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        if(result.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(\"An error occurred. Please try again.\"));\r\n        }\r\n    } else {\r\n        if(result.variableValues.length > 0){\r\n            result.finalize();\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            // yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            yield put(visualizationActions.triggerShowCharts());\r\n            yield put(visualizationActions.addChart({subType: action.payload.subType, data:result}));\r\n           \r\n        } else {\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges. Try selecting a different date or depth range.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* cruiseTrajectoryRequest(action) {\r\n    yield put(visualizationActions.cruiseTrajectoryRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Cruise Data'));\r\n    let result = yield call(api.visualization.cruiseTrajectoryRequest, action.payload);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n\r\n    if(result.failed){\r\n        if(result.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(`Unable to Fetch Cruise Data`));\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.cruiseTrajectoryRequestSuccess(result));\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n    }\r\n}\r\n\r\nfunction* cruiseListRequest() {\r\n    yield put(visualizationActions.cruiseListRequestProcessing());\r\n    let cruiseList = yield call(api.visualization.cruiseList);\r\n\r\n    if(!cruiseList) {\r\n        yield put(visualizationActions.cruiseListRequestFailure());\r\n    } else{\r\n        yield put(visualizationActions.cruiseListRequestSuccess(cruiseList));\r\n    }\r\n}\r\n\r\nfunction* csvDownloadRequest(action){\r\n    yield put(visualizationActions.csvDownloadRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let response = yield call(api.visualization.csvDownload, action.payload);\r\n    yield put(interfaceActions.setLoadingMessage(''))\r\n    if(response.failed) {\r\n        if(response.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen('An error occurred. Please try again.'))\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.downloadTextAsCsv(response, action.payload.datasetName));\r\n    }\r\n}\r\n\r\nfunction* downloadTextAsCsv(action){\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'))\r\n    let csv = action.payload.text;\r\n    const blob = new Blob([csv], {type: 'text/csv'});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.setAttribute('hidden', '');\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `${action.payload.datasetName}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n}\r\n\r\nfunction* refreshLogin(){\r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.showLoginDialog());\r\n    yield put(interfaceActions.snackbarOpen(\"Your session has expired. Please log in again.\"));\r\n}\r\n\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchDatasetRetrieval(){\r\n    yield takeLatest(catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SEND, datasetRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\nfunction* watchCruiseTrajectoryRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND, cruiseTrajectoryRequest);\r\n}\r\n\r\nfunction* watchCruiseListRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_LIST_REQUEST_SEND, cruiseListRequest);\r\n}\r\n\r\nfunction* watchCsvDownloadRequest(){\r\n    yield takeLatest(visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SEND, csvDownloadRequest);\r\n}\r\n\r\nfunction* watchDownloadTextAsCsv(){\r\n    yield takeLatest(visualizationActionTypes.DOWNLOAD_TEXT_AS_CSV, downloadTextAsCsv);\r\n}\r\n\r\nfunction* watchRefreshLogin(){\r\n    yield takeLatest(userActionTypes.REFRESH_LOGIN, refreshLogin);\r\n}\r\n\r\n// function createWorkerChannel(worker) {\r\n//     return eventChannel(emit => {\r\n//         worker.onmessage = message => {\r\n//             emit(message);\r\n//         }\r\n\r\n//         const unsubscribe = () => {\r\n//             worker.teminate();\r\n//         }\r\n      \r\n//         return unsubscribe;\r\n//     })\r\n// }\r\n\r\n// function* watchWorkerChannel(){\r\n//     const workerChannel = yield call(createWorkerChannel, worker);\r\n\r\n//     while (true) {\r\n//         const message = yield take(workerChannel);\r\n//         yield put(message.data.type, message.data.payload);\r\n//         //   yield put({ type: INCOMING_PONG_PAYLOAD, payload })\r\n//         //   yield fork(pong, socket)\r\n//       }\r\n// }\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchDatasetRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        watchCruiseTrajectoryRequest(),\r\n        watchCruiseListRequest(),\r\n        // watchWorkerChannel(),\r\n        watchCsvDownloadRequest(),\r\n        watchDownloadTextAsCsv(),\r\n        watchRefreshLogin()\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","const colors = {\r\n    orange: '#FF8000',\r\n    // orange: '#ffa245',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9',\r\n    errorYellow: '#ffe336'\r\n}\r\n\r\nexport default colors;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    },\r\n    warningCaption: {\r\n        color: colors.orange,\r\n        fontSize: '11px',\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    wrapper: {\r\n        marginTop: theme.spacing(16)\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            \r\n            <div className={classes.wrapper}>\r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Key\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                        <Typography variant='caption' className={classes.warningCaption}>\r\n                            This API key is a unique identifier, and should not be shared.\r\n                        </Typography>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"body2\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n                </Paper>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires a user account. Please <Link component={RouterLink} to={{pathname: '/apikeymanagement'}} onClick={() => props.showLoginDialog()}> log in\r\n            </Link> or <Link component={RouterLink} to={{pathname: '/register'}}> register\r\n            </Link>.\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen, toggleShowHelp } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    appBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    toolBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    navWrapper: {\r\n        position: 'fixed',\r\n        width: '100vw',\r\n        top: '0px',\r\n        backgroundColor: 'transparent',\r\n        zIndex: 50,\r\n        paddingTop: '10px',\r\n        paddingLeft: '20px',\r\n        textAlign: 'left',\r\n        boxSizing: 'border-box'\r\n    },\r\n\r\n    navLink: {\r\n        textDecoration: 'none',\r\n        marginRight: 20,\r\n        color: 'white',\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        },\r\n        fontSize: '13px',\r\n        fontWeight: 100,\r\n        display: 'inline-block',\r\n        cursor: 'pointer' \r\n    },\r\n\r\n    rightNavLink: {\r\n        float: 'right'\r\n    },\r\n\r\n    rightLinkWrapper: {\r\n        display:'inline-block',\r\n        textAlign: 'right'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen,\r\n    toggleShowHelp\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    handleNavigate = (route) => {\r\n        this.props.restoreInterfaceDefaults()\r\n        this.props.history.push(route);\r\n    }\r\n\r\n    handleOutsideNavigate = (url) => {\r\n        window.open(url, '_blank')\r\n    }\r\n\r\n    render(){\r\n        const { classes, history, showHelp } = this.props;\r\n        const { pathname } = history.location;\r\n\r\n        return (\r\n            <div className={classes.navWrapper}>\r\n                <Typography variant='caption' href='/' component='a' className={classes.navLink}>Home</Typography>\r\n                <Typography variant='caption' to='/catalog' component={Link} className={classes.navLink}>Catalog</Typography>\r\n                {pathname !== '/visualization' && <Typography variant='caption' to='/apikeymanagement' component={Link} className={classes.navLink}>API Keys</Typography>}\r\n                {pathname !== '/visualization' && <Typography variant='caption' to='/visualization' component={Link} className={classes.navLink}>Visualization</Typography>}\r\n                {this.props.user && <Typography variant='caption' onClick={() => this.handleLogOut()} className={`${classes.navLink} ${pathname === '/visualization' ? '' : classes.rightNavLink}`}>Log Out</Typography>}\r\n                {/* <Typography variant='caption' onClick={this.props.toggleShowHelp} className={classes.navLink}>{showHelp ? 'Hide Help' : 'Help(beta) '}</Typography> */}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' onClick={() => this.props.showLoginDialog()} className={`${classes.navLink} ${classes.rightNavLink}`}>Log In</Typography>}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' to='/register' component={Link} className={classes.navLink}>Register</Typography>}\r\n            </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user ? <ApiKeyManagement/> : <LoginRequiredPrompt/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'Variable'],\r\n    ['Spatial Resolution', 'Spatial_Resolution'],\r\n    ['Temporal Resolution', 'Temporal_Resolution'],\r\n    ['Unit', 'Unit'],\r\n    ['Process Level', 'Process_Level'],\r\n    ['Study Domain', 'Study_Domain'],\r\n    ['SQL Table Name', 'Table_Name']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        // margin: '0px auto 5px 10px',\r\n        padding: '10px',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(1),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing(2),\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        maxWidth: '90%',\r\n        maxHeight: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    console.log(props.context.datasets[props.data.Dataset_Name].Icon_URL)\r\n    const {classes} = props;\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={2} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={props.context.datasets[props.data.Dataset_Name].Icon_URL} alt=\"Mission Icon\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.Dataset_Description}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.Data_Source}\r\n                        </Typography> <br></br>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.Distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable} size='small'>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = theme => ({\r\n  tooltip: {\r\n      color: theme.palette.secondary.main,\r\n      opacity: 1\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst ConnectedTooltip = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    if(!showHelp) {\r\n        return (\r\n            <React.Fragment>\r\n                {props.children}\r\n            </React.Fragment>\r\n        )}\r\n    else {\r\n        return (\r\n            <Tooltip \r\n                placement={props.placement} \r\n                open={showHelp} \r\n                title={props.title} \r\n                className={classes.tooltip}\r\n                classes={{\r\n                    popper: classes.tooltip\r\n                }}\r\n            >\r\n                {props.children}\r\n            </Tooltip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(ConnectedTooltip));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"Long_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"Variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"Table_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"Dataset_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"Make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"Sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"Study_Domain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"Process_Level\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"Spatial_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"Temporal_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"Unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'Keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '60vh', \r\n    width: '90%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '60px 5vw',\r\n    padding: '30px'\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  onGridSizeChanged = (params) => {\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n        <Paper elevation={12} className={classes.gridPaper}>\r\n          <ConnectedTooltip placement title='Enter one or more search terms.' placement='top'>\r\n            <TextField              \r\n              className={classes.gridSearch}\r\n              autoFocus={true}\r\n              margin=\"normal\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              variant='outlined'\r\n              name='filterText'\r\n              value={this.state.filterText}\r\n              onChange={this.handleChange}\r\n              label=\"Variable Search\"\r\n              InputLabelProps={{\r\n                  shrink: true,\r\n              }}\r\n            />\r\n          </ConnectedTooltip>\r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              onGridSizeChanged={this.onGridSizeChanged}\r\n              suppressDragLeaveHidesColumns= {true}\r\n              enableCellTextSelection={true}\r\n              suppressContextMenu={true}\r\n\r\n              // Additional props\r\n              context={{\r\n                datasets: this.props.datasets\r\n              }}\r\n\r\n              // Setting related to styling\r\n              getRowStyle= {function(params) {\r\n                console.log(params);\r\n                if (params.node.detail) {\r\n                    return { background: 'transparent' }\r\n                }\r\n              }}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n              detailCellRendererParams={{\r\n                detailGridOptions: {\r\n                  enableCellTextSelection:true\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { retrievalRequestSend, datasetRetrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog,\r\n    datasets: state.datasets\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend,\r\n    datasetRetrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.datasets) this.props.datasetRetrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog && this.props.datasets) return <AGGridWrapper catalog={this.props.catalog} datasets={this.props.datasets}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const validation = {\r\n    depth: {\r\n        depthOneIsLower: 'Cannot be larger than end',\r\n        depthOneOutOfBounds: 'Must be smaller than $',\r\n        depthTwoOutOfBounds: 'Must be larger than $',\r\n        negative: 'Cannot be negative'\r\n    },\r\n\r\n    date: {\r\n        dateOneIsLater: 'Cannot be after end',\r\n        dateOneOutOfBounds: 'Must be before $',\r\n        dateTwoOutOfBounds: 'Must be after $'\r\n    },\r\n\r\n    lat: {\r\n        latOneIsHigher: 'Cannot be larger than end.',\r\n        latOneOutOfBounds: 'Must be less than $',\r\n        latTwoOutOfBounds: 'Must be greater than $'\r\n    },\r\n\r\n    lon: {\r\n        lonOneIsHigher: 'Cannot be larger than end.',\r\n        lonOneOutOfBounds: 'Must be less than $',\r\n        lonTwoOutOfBounds: 'Must be greater than $'\r\n    },\r\n\r\n    type: {\r\n        dataIsIrregular: '$ is not available for sparse data',\r\n        dateRangeRequired: '$ requires a range of dates',\r\n        depthRangeRequired: '$ requires a range of depths',\r\n        surfaceOnlyDataset: '$ contains only surface data',\r\n        irregularOnly: 'Sparse map is only available for sparse data',\r\n        dataSizeTooLarge: 'Data set is too large for this visualization type.'\r\n    },\r\n\r\n    generic: {\r\n        invalid: 'Invalid input',\r\n        dataSizeWarning: 'Wait time and application performance may be poor due to size of data.',\r\n        dataSizePrevent: 'Data set is too large. Please reduce date range or area size.',\r\n        variableMissing: 'Please select a variable',\r\n        vizTypeMissing: 'Please select a visualization type'\r\n    }\r\n}\r\n\r\nexport default validation;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    const { data } = props;\r\n\r\n    if(!data) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{data.Long_Name}</DialogTitle>\r\n            <DialogContent>\r\n                { data.Comment &&\r\n                    <DialogContentText>\r\n                        {data.Comment}\r\n                    </DialogContentText>\r\n                }\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Dataset</TableCell>\r\n                                <TableCell title={data.Dataset_Name}>{data.Dataset_Name.length > 25 ? data.Dataset_Name.slice(0,23) + '...' : data.Dataset_Name}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Source</TableCell>\r\n                                <TableCell title={data.Data_Source}>{data.Data_Source > 25 ? data.Data_Source.slice(0,23) + '...' : data.Data_Source}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Distributor</TableCell>\r\n                                <TableCell title={data.Distributor}>{data.Distributor.length > 25 ? data.Distributor.slice(0,23) + '...' : data.Distributor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{data.Sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{data.Spatial_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{data.Temporal_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{data.Time_Min ? data.Time_Min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{data.Time_Max ? data.Time_Max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lat_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lat_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lon_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{data.Depth_Min ? `${data.Depth_Min}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{data.Depth_Max ? `${data.Depth_Max}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            {data.Variable_Min &&\r\n                                <TableRow>\r\n                                    <TableCell>Minimum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Min}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Max &&\r\n                                <TableRow>\r\n                                    <TableCell>Maximum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Max}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Mean && \r\n                                <TableRow>\r\n                                    <TableCell>Mean Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Mean}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Std &&\r\n                                <TableRow>\r\n                                    <TableCell>Standard Deviation({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Std}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);\r\n\r\n// Variable_Max: \"4.999\"\r\n// Variable_Mean: \"-0.0000008547\"\r\n// Variable_Min: \"-4.9956\"\r\n// Variable_Std: \"0.1428013424\"","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nconst mapTemporalResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [temporalResolutions.threeMinutes] : 1,\r\n        [temporalResolutions.sixHourly] : 1,\r\n        [temporalResolutions.daily] : 1,\r\n        [temporalResolutions.weekly] : 7,\r\n        [temporalResolutions.monthly] : 30,\r\n        [temporalResolutions.annual] : 365,\r\n        [temporalResolutions.irregular] : null,\r\n        [temporalResolutions.monthlyClimatology]: 30,\r\n        [temporalResolutions.threeDay]: 3,\r\n        [temporalResolutions.eightDayRunning]: 8,\r\n        [temporalResolutions.eightDays]: 8\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapTemporalResolutionToNumber;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { ArrowDropDown, LibraryBooks } from '@material-ui/icons';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend } from '../Redux/actions/visualization';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    dataRetrievalFormPaper: {\r\n        width: '1000px',\r\n        height: '260px',\r\n        padding: theme.spacing(2.5),\r\n        position:'fixed',\r\n        top: '10px',\r\n        left: '50%',\r\n        marginLeft: '-600px',\r\n        zIndex: 2,\r\n        paddingTop: theme.spacing(1.5),\r\n    },\r\n\r\n    dataRetrievalFormField: {\r\n        padding:`0px ${theme.spacing(1)}`\r\n    },\r\n\r\n    retrieveDataButton: {\r\n        margin:'10px auto'\r\n    },\r\n\r\n    variableSelect: {\r\n        margin: '0 30px 20px 30px'\r\n    },\r\n\r\n    visualizationSpeedDial: {\r\n        position: 'relative',\r\n        top: '5px',\r\n        left: '30px'\r\n    },\r\n\r\n    visualizeButton: {\r\n        borderRadius:'10%',\r\n        width: '100px',\r\n        height:'40px',\r\n        margin: 'auto 0',\r\n        backgroundColor: theme.palette\r\n    },\r\n\r\n    visualizeButtonText: {\r\n        dominantBaseline: \"middle\",\r\n        textAnchor: \"middle\"\r\n    },\r\n\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    datePickerGridSection: {\r\n        paddingLeft: '40px !important',\r\n        paddingRight: '40px !important'\r\n    },\r\n\r\n    shortenHeight: {\r\n        height: '60px'\r\n    },\r\n\r\n    vizSelect: {\r\n        minWidth: 120\r\n    },\r\n\r\n    gridItem: {\r\n        height: '48px'\r\n    },\r\n\r\n    generalMessage: {\r\n        textAlign: 'left'\r\n    },\r\n\r\n    vizTypeSelectFormControl: {\r\n        width: 150\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend\r\n}\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nconst reactWindowListRef = React.createRef();\r\nclass MenuList extends Component {\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if(!(this.props.children && this.props.children.length)) return;\r\n        let index = this.props.children.findIndex(child => child.props && child.props.isFocused);\r\n        reactWindowListRef.current.scrollToItem(index);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <ReactWindowList\r\n                style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length === 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <ArrowDropDown />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nclass DataRetrievalForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('Variable');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            visualizationSpeedDialOpen: false,\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.Variable,\r\n            label: item.Variable === item.Long_Name ? (item.Variable.length > 48 ? item.Variable.slice(0,45) + '...' : item.Variable) : (item.Variable.length > 23 ? item.Variable.slice(0,23) : item.Variable) + ' : ' + (item.Long_Name.length > 38 ? item.Long_Name.slice(0,35) + '...' : item.Long_Name),\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Histogram');\r\n        return '';\r\n    }\r\n\r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Depth Profile');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = () => {\r\n        if(this.estimateDataSize() > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = () => {\r\n        if(this.estimateDataSize() > 50000000) return validation.generic.dataSizePrevent;\r\n        return ''\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartDate(),\r\n                this.checkEndDate(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(),\r\n                this.checkGeneralPrevent()\r\n            ];\r\n        } else validations = Array(17).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startDateMessage,\r\n            endDateMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage\r\n        ] = validations;\r\n\r\n        const parametersAreInvalid = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage\r\n        ].some(message => message.length);\r\n\r\n        return (\r\n            <div className={this.props.showUI ? '' : classes.displayNone} id='drf'>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n                <Paper className={classes.dataRetrievalFormPaper}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={11} className={classes.shortenHeight}>\r\n                            <Select\r\n                                isLoading = {catalogRequestState === states.inProgress}\r\n                                components={{\r\n                                    IndicatorSeparator:'',\r\n                                    DropdownIndicator,\r\n                                    Option,\r\n                                    MenuList,\r\n                                    SingleValue,\r\n                                }}\r\n                                isClearable\r\n                                onInputChange={this.onAutoSuggestChange}\r\n                                filterOption={null}\r\n                                className={classes.variableSelect}\r\n                                autoFocus\r\n                                escapeClearsValue\r\n                                name=\"fields\"\r\n                                label=\"Variables\"\r\n                                options={options}\r\n                                onChange={this.props.updateFields}\r\n                                value={fields}\r\n                                placeholder=\"Variable Search\"\r\n                                styles={{\r\n                                    menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                                    input: provided => ({...provided,\r\n                                        color: 'white',\r\n                                        fontFamily: '\"Lato\", sans-serif'\r\n                                    }),\r\n\r\n                                    control: provided => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        border: '1px solid #333333',\r\n                                        '&:hover': { borderColor: 'white' },\r\n                                        '&:focus-within': { borderColor: colors.orange },\r\n                                    }),\r\n\r\n                                    placeholder: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        fontSize: '14px'\r\n                                    }),\r\n\r\n                                    noOptionsMessage: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        backgroundColor: colors.backgroundGray\r\n                                    }),\r\n\r\n                                    option: (provided, { data, isFocused }) => {\r\n                                        return ({...provided,\r\n                                        backgroundColor: isFocused ? '#383838' : '#424242',\r\n                                        color: data.data.Sensor === 'Satellite' ? '#1acf02' : data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        '&:hover': { backgroundColor: '#383838' },\r\n                                        ':active': { backgroundColor: '#383838' },\r\n                                        '&:after': { \r\n                                            content: data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            float: 'left'\r\n                                        },\r\n                                    })},\r\n\r\n                                    singleValue: (provided, state) => ({...provided,\r\n                                        fontFamily: state.data.data.Sensor === 'Satellite' ? 'Font Awesome 5 Free': '\"Lato\", sans-serif',\r\n                                        color: state.data.data.Sensor === 'Satellite' ? '#1acf02' : state.data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        paddingRight: '20px',\r\n                                        '&:after': { \r\n                                            content: state.data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            fontSize: '18px',\r\n                                            position: 'relative',\r\n                                            left: '8px',\r\n                                            top: '3px'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n                                    colors: {\r\n                                    ...theme.colors,\r\n                                    // Background color of hovered options\r\n                                    primary25: '#e0e0e0',\r\n                                    primary: '#212121',\r\n                                    },\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={1}>\r\n                            <IconButton\r\n                                disabled={!fields}\r\n                                onClick={this.handleTableStatsDialogOpen}\r\n                            >\r\n                                <LibraryBooks/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel htmlFor=\"depth1-input\" >Start Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth1-input\"\r\n                                        value={depth1}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth1-error\"\r\n                                        labelWidth={105}\r\n                                        name='depth1'\r\n                                    />\r\n                                    <FormHelperText id=\"depth1-error\">{startDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"depth2-input\" >End Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth2-input\"\r\n                                        value={depth2}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth2-error\"\r\n                                        labelWidth={95}\r\n                                        name='depth2'\r\n                                    />\r\n                                    <FormHelperText id=\"depth2-error\">{endDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat1-input\" >{'Start Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat1-input\"\r\n                                        value={lat1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lat1'\r\n                                    />\r\n                                    <FormHelperText id=\"lat1-error\">{startLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat2-input\" >{'End Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat2-input\"\r\n                                        value={lat2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lat2'\r\n                                    />\r\n                                    <FormHelperText id=\"lat2-error\">{endLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon1-input\" >{'Start Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon1-input\"\r\n                                        value={lon1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lon1'\r\n                                    />\r\n                                    <FormHelperText id=\"lon1-error\">{startLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon2-input\" >{'End Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon2-input\"\r\n                                        value={lon2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lon2'\r\n                                    />\r\n                                    <FormHelperText id=\"lon2-error\">{endLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={2}>\r\n                                <FormControl variant='outlined' className={classes.vizTypeSelectFormControl}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        labelWidth={35}\r\n                                        value={selectedVizType}\r\n                                        variant='outlined'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'outlined'\r\n                                        }}\r\n                                        >\r\n                                        <MenuItem disabled={Boolean(heatmapMessage)} value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>\r\n                                        <MenuItem disabled={Boolean(contourMessage)} value={vizSubTypes.contourMap}>Contour</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sectionMapMessage)} value={vizSubTypes.sectionMap}>Section Map</MenuItem>\r\n                                        <MenuItem disabled={Boolean(histogramMessage)} value={vizSubTypes.histogram}>Histogram</MenuItem>                                    \r\n                                        <MenuItem disabled={Boolean(timeSeriesMessage)} value={vizSubTypes.timeSeries}>Time Series</MenuItem>\r\n                                        <MenuItem disabled={Boolean(depthProfileMessage)} value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sparseMapMessage)} value={vizSubTypes.sparse}>Sparse Map</MenuItem>\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2}>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={() => this.props.onVisualize()}\r\n                                    disabled={!selectedVizType || parametersAreInvalid || !fields}\r\n                                >\r\n                                    Visualize\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <Typography variant='caption' color='error' className={classes.generalMessage}>\r\n                                    {generalPreventMessage || generalWarnMessage}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataRetrievalForm));","const utcDateStringToLocal = (utcString) => {\r\n    let date = new Date(utcString);\r\n    let utcYear = date.getUTCFullYear();\r\n    let utcMonth = date.getUTCMonth();\r\n    let utcDate = date.getUTCDate();\r\n\r\n    let newDate = new Date();\r\n    newDate.setFullYear(utcYear, utcMonth, utcDate);\r\n    return newDate;\r\n}\r\n\r\nexport default utcDateStringToLocal;","\r\nconst darwinDepths = [\r\n    5,\r\n    15,\r\n    25,\r\n    35,\r\n    45,\r\n    55,\r\n    65,\r\n    75.005,\r\n    85.025,\r\n    95.095,\r\n    105.31,\r\n    115.87,\r\n    127.15,\r\n    139.74,\r\n    154.47,\r\n    172.4,\r\n    194.735,\r\n    222.71,\r\n    257.47,\r\n    299.93,\r\n    350.68,\r\n    409.93,\r\n    477.47,\r\n    552.71,\r\n    634.735,\r\n    722.4,\r\n    814.47,\r\n    909.74,\r\n    1007.155,\r\n    1105.905,\r\n    1205.535,\r\n    1306.205,\r\n    1409.15,\r\n    1517.095,\r\n    1634.175,\r\n    1765.135,\r\n    1914.15,\r\n    2084.035,\r\n    2276.225,\r\n    2491.25,\r\n    2729.25,\r\n    2990.25,\r\n    3274.25,\r\n    3581.25,\r\n    3911.25,\r\n    4264.25,\r\n    4640.25,\r\n    5039.25,\r\n    5461.25,\r\n    5906.25\r\n]\r\n\r\nconst piscesDepths = [\r\n    0.494024991989,\r\n    1.54137504101,\r\n    2.64566898346,\r\n    3.81949496269,\r\n    5.07822418213,\r\n    6.44061422348,\r\n    7.92956018448,\r\n    9.5729970932,\r\n    11.404999733,\r\n    13.4671401978,\r\n    15.8100700378,\r\n    18.4955596924,\r\n    21.5988197327,\r\n    25.2114105225,\r\n    29.4447307587,\r\n    34.4341506958,\r\n    40.3440513611,\r\n    47.3736915588,\r\n    55.764289856,\r\n    65.8072662354,\r\n    77.8538513184,\r\n    92.3260726929,\r\n    109.729301453,\r\n    130.666000366,\r\n    155.850692749,\r\n    186.125595093,\r\n    222.475204468,\r\n    266.040313721,\r\n    318.127410889,\r\n    380.213012695,\r\n    453.937713623,\r\n    541.088928223,\r\n    643.566772461,\r\n    763.333129883,\r\n    902.339294434,\r\n    1062.43994141,\r\n    1245.29101562,\r\n    1452.25097656,\r\n    1684.28405762,\r\n    1941.89294434,\r\n    2225.07788086,\r\n    2533.3359375,\r\n    2865.70288086,\r\n    3220.82006836,\r\n    3597.03198242,\r\n    3992.48388672,\r\n    4405.22412109,\r\n    4833.29101562,\r\n    5274.78417969,\r\n    5727.91699219\r\n]\r\n\r\nconst _piscesTables = [\r\n    'tblPisces_NRT',\r\n    'tblPisces_NRT_Calendar'\r\n]\r\n\r\nconst _darwinTable = [\r\n    'tblDarwin_Chl_Climatology',\r\n    'tblDarwin_Ecosystem',\r\n    'tblDarwin_Nutrient',\r\n    'tblDarwin_Nutrient_Climatology',\r\n    'tblDarwin_Ocean_Color',\r\n    'tblDarwin_Phytoplankton',\r\n    'tblDarwin_Plankton_Climatology'\r\n]\r\n\r\nconst piscesTable = new Set(_piscesTables);\r\nconst darwinTable = new Set(_darwinTable);\r\n\r\nconst exports = {\r\n    count: (field, depth1, depth2) => {\r\n        const { Table_Name: table } = field.data;\r\n        var count = 0;\r\n    \r\n        if(piscesTable.has(table)) {\r\n            for(let i = 0; i < piscesDepths.length; i++){\r\n                if(piscesDepths[i] > depth2) break;\r\n                if(piscesDepths[i] > depth1) count ++; \r\n            }\r\n        } else if (darwinTable.has(table)) {\r\n            for(let i = 0; i < darwinDepths.length; i++){\r\n                if(darwinDepths[i] > depth2) break;\r\n                if(darwinDepths[i] > depth1) count ++; \r\n            }\r\n        } else {}\r\n        return count;\r\n    },\r\n\r\n    piscesTable,\r\n    darwinTable,\r\n    piscesDepths,\r\n    darwinDepths\r\n}\r\n\r\nexport default exports;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { VariableSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { LibraryBooks, ArrowRight, ChevronLeft, ChevronRight, InsertChartOutlined, Language, Delete, CloudDownload, Info } from '@material-ui/icons';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend, clearCharts, csvDownloadRequestSend } from '../Redux/actions/visualization';\r\nimport { snackbarOpen } from '../Redux/actions/ui';\r\n\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport depthUtils from '../Utility/depthCounter';\r\n\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst navDrawerWidth = 320;\r\n\r\nconst errorHeightAdjust = 23;\r\n\r\nconst styles = theme => ({\r\n    drawer: {\r\n        width: navDrawerWidth,\r\n        top: 32,\r\n        bottom: 'auto',\r\n        overflow: 'visible'\r\n    },\r\n\r\n    drawerPaper: {\r\n        width: navDrawerWidth,\r\n        height: '540px',\r\n        top: 'calc(50% - 270px)',\r\n        borderRadius: '0 4px 4px 0',\r\n        boxShadow: '2px 2px  2px 2px #242424',\r\n        border: 'none',\r\n        overflow: 'visible',\r\n        backgroundColor: '#424242'\r\n    },\r\n\r\n    drawerPaperError1: {\r\n        height: `${540 + errorHeightAdjust}px`\r\n    },\r\n\r\n    drawerPaperError2: {\r\n        height: `${540 + errorHeightAdjust * 2}px`\r\n    },\r\n\r\n    drawerPaperError3: {\r\n        height: `${540 + errorHeightAdjust * 3}px`\r\n    },\r\n\r\n    drawerPaperError4: {\r\n        height: `${540 + errorHeightAdjust * 4}px`\r\n    },\r\n\r\n    drawerPaperError5: {\r\n        height: `${540 + errorHeightAdjust * 5}px`\r\n    },\r\n\r\n  openPanelChevron: {\r\n    position: 'fixed',\r\n    left: '5px',\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  closePanelChevron: {\r\n    position: 'fixed',\r\n    left: navDrawerWidth + 5,\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  groupedButtons: {\r\n      width: '50%',\r\n      border: '1px solid #313131',\r\n      borderRadius: 0,\r\n      backgroundColor: '#3c3c3c'\r\n  },\r\n\r\n  controlPanelForm: {\r\n      marginTop: theme.spacing(1)\r\n  },\r\n\r\n  tableStatsButton: {\r\n      borderRadius: 0,\r\n      paddingTop: '11px',\r\n      backgroundColor: '#424242'\r\n  },\r\n\r\n    formGridItem: {\r\n        borderLeft: '1px solid #313131',\r\n        backgroundColor: '#424242'\r\n    },\r\n\r\n  vizTypeSelectFormControl: {\r\n      width: '100%',\r\n      '&:disabled': {\r\n        backgroundColor: 'transparent'\r\n    }\r\n  },\r\n\r\n  depressed: {\r\n      boxShadow: 'inset 1px 1px 5px #1c1c1c'\r\n  },\r\n\r\n  padLeft: {\r\n      padding: '6px 0 2px 7px'\r\n  },\r\n\r\n  visualizeButton: {\r\n      height: '56px',\r\n      borderRadius: 0,\r\n      backgroundColor: '#424242',\r\n      color: theme.palette.primary.main,\r\n      fontVariant: 'normal',\r\n      '&:disabled': {\r\n        backgroundColor: 'transparent'\r\n    },\r\n      '&:hover': {backgroundColor: '#874400'}\r\n  },\r\n\r\n  helperText: {\r\n    color: 'yellow'\r\n  },\r\n\r\n  vizButtonTooltip: {\r\n    color: 'yellow'\r\n  },\r\n\r\n  datePickerInputAdornment: {\r\n      padding: 0\r\n  },\r\n\r\n  clearChartsButton: {\r\n      borderRadius: 0,\r\n      backgroundColor: '#3c3c3c'\r\n  },\r\n\r\n  datePicker: {\r\n      width: '100%'\r\n  }\r\n\r\n});\r\n\r\nconst overrideDisabledStyle = {\r\n    backgroundColor: 'transparent'\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend,\r\n    clearCharts,\r\n    csvDownloadRequestSend,\r\n    snackbarOpen\r\n}\r\n\r\nconst getDatePlaceholder = (date) => {\r\n    if(isNaN(new Date(date)).valueOf()) return 'yyyy-MM-dd';\r\n    \r\n    let month  = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let year = date.getFullYear();\r\n    return [year, month < 10 ? '0' + month : month, day < 10 ? '0' + day : day].join('-');\r\n}\r\n\r\nconst groupHeaderHeight = 37;\r\nconst height = 35;\r\n\r\nconst reactWindowListRef = React.createRef();\r\nconst selectRef = React.createRef();\r\n\r\nclass MenuList extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n      if(reactWindowListRef.current) reactWindowListRef.current.resetAfterIndex(0);\r\n      if(!(this.props.children && this.props.children.length)) return;\r\n      let scrollOffset = 0;\r\n      let foundFocus = false;\r\n      this.props.children.forEach(child => {\r\n        if(foundFocus) return;\r\n\r\n        let count = groupHeaderHeight;\r\n        let groupHasFocus= false;\r\n        for(let i = 0; i < child.props.children.length; i++){\r\n          if(child.props.children[i].props.isFocused) {\r\n            foundFocus = true;\r\n            groupHasFocus = true;\r\n            break;\r\n          }\r\n          count += 37.6;\r\n        }\r\n\r\n        if(groupHasFocus) scrollOffset += count;\r\n        else scrollOffset += 37.6;\r\n      })\r\n      if(foundFocus) reactWindowListRef.current.scrollTo(scrollOffset > 150 ? scrollOffset - 150 : 0);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n\r\n        if(!children || !children.length) return '';\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        const groupHeights = children.map(child => {\r\n          return child.props.children.some(grandChild => grandChild.props.isFocused) ? child.props.children.length * 37.6 + groupHeaderHeight : groupHeaderHeight;\r\n        });\r\n        const totalHeight = groupHeights.reduce((acc, cur) => acc + cur, 0);\r\n        const estimatedItemSize = totalHeight / children.length;\r\n        const getItemSize = index => groupHeights[index];\r\n\r\n        return (\r\n            <ReactWindowList\r\n                // height={(options.length == 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                height={totalHeight < 400 ? totalHeight :  400}\r\n                estimatedItemSize={estimatedItemSize}\r\n                itemCount={children.length}\r\n                itemSize={getItemSize}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={{...style}}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\nclass Group extends Component {\r\n    render() {\r\n        const hasFocus = this.props.children.some(element => element.props.isFocused);\r\n        const sensor = this.props.children[0].props.data.data.Sensor;\r\n\r\n      return (\r\n          <React.Fragment>\r\n            <CustomHeading \r\n              {...this.props.headingProps} \r\n              headingLabel={this.props.data.label} \r\n              firstChild={this.props.children[0].props.data}\r\n              hasFocus={hasFocus}\r\n              sensor={sensor}\r\n              tableName={this.props.children[0].props.data.data.Table_Name}\r\n              selectProps={this.props.selectProps}\r\n            />\r\n            <div hidden={!hasFocus}>\r\n              {this.props.children.map(child => child)}\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n    }    \r\n}\r\n\r\nconst customHeadingStyles = (theme) => ({\r\n    customHeading: {\r\n        backgroundColor: 'rgba(0,0,0,.5)',\r\n        height: groupHeaderHeight,\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(122,67,0,.5)',\r\n        },\r\n        boxShadow: '0px 1px 1px 1px #242424'\r\n    },\r\n\r\n    icon: {\r\n        marginRight: '10px',\r\n        width: '30px'\r\n    },\r\n\r\n    typography: {\r\n        width: '650px'\r\n    }\r\n})\r\n\r\nconst _CustomHeading = props => {\r\n    const { classes, sensor, tableName, selectProps } = props;\r\n    let iconClass;\r\n\r\n    if(sensor === 'Satellite') iconClass = 'fa-satellite';\r\n    else if(sensor === 'Blend') iconClass = 'fa-laptop';\r\n    else iconClass = 'fa-ship';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <ListItem \r\n          button \r\n          alignItems='center' \r\n          onClick={() => selectRef.current.select.setState({focusedOption: props.hasFocus ? null : props.firstChild})}\r\n          className={classes.customHeading}\r\n        >\r\n            <Icon fontSize='small' color='inherit' className={`fas ${iconClass} ${classes.icon}`}></Icon>\r\n        <Typography className={classes.typography}>\r\n            {props.headingLabel.length > 70 ? props.headingLabel.slice(0,67) + '...' : props.headingLabel}\r\n        </Typography>\r\n\r\n        <Tooltip title='Download Data' placement='right'>\r\n            <IconButton \r\n                color='inherit' \r\n                onClick={(e) => {\r\n                    selectProps.handleDownloadCsvClick(tableName, props.headingLabel);\r\n                    e.stopPropagation();\r\n                }}>\r\n                <CloudDownload/>\r\n            </IconButton>\r\n        </Tooltip>\r\n\r\n        {/* <Tooltip title='Dataset Info' placement='right'>\r\n            <IconButton \r\n                color='inherit' \r\n                onClick={(e) => {\r\n                    e.stopPropagation();\r\n                }}\r\n            >\r\n                <Info/>\r\n            </IconButton>\r\n        </Tooltip> */}\r\n        </ListItem>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\nconst CustomHeading = withStyles(customHeadingStyles)(_CustomHeading);\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n    <components.DropdownIndicator {...props}>\r\n        <ArrowRight/>\r\n    </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n      <components.Option \r\n        {...props} \r\n        innerProps={{\r\n            ...props.innerProps, \r\n            // Prevent focus / scroll events when mousing over options\r\n            onMouseMove: (e) => e.preventDefault(), \r\n            onMouseOver: (e) => e.preventDefault()\r\n        }}>\r\n    </components.Option>\r\n    )\r\n}\r\n\r\nconst GroupHeading = (props) => '';\r\n\r\nconst formatOptionLabel = (option, meta) => {\r\n    return option.label;\r\n}\r\n\r\nclass VizControlPanel extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.indexStrategy = new JsSearch.AllSubstringsIndexStrategy()\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        search.addIndex('Table_Name');\r\n        search.addIndex('Dataset_Name');\r\n        search.addIndex('Study_Domain');\r\n        search.addIndex('Spatial_Resolution');\r\n        search.addIndex('Temporal_Resolution');\r\n\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: '',\r\n            showControlPanel: true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search});\r\n        }\r\n    }\r\n\r\n    handleOpenControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: true})\r\n    }\r\n\r\n    handleCloseControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: false})\r\n    }      \r\n    \r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        var options = {};\r\n\r\n        items.forEach(item => {\r\n            if(!options[item.Dataset_Name]){\r\n                options[item.Dataset_Name] = {\r\n                    label: item.Dataset_Name,\r\n                    options: []\r\n                }\r\n            }\r\n\r\n            options[item.Dataset_Name].options.push({\r\n                value: item.Variable,\r\n                label: item.Long_Name.length < 80 ? item.Long_Name : item.Long_Name.slice(0,78) + '...',\r\n                data: item\r\n            })\r\n        });\r\n\r\n        let sortedOptions = Object.values(options).sort((opt1, opt2) => {\r\n            return opt1.label < opt2.label ? -1 : 1;\r\n        })\r\n\r\n        return sortedOptions;\r\n    }\r\n\r\n    estimateCsvSize = (datasetName) => {\r\n        // let members = [];\r\n        let count = 0;\r\n        this.props.catalog.forEach((member, i) => {\r\n            if(member.Dataset_Name === datasetName){\r\n                count += parseInt(member.Variable_Count) || 0;\r\n                // members.push(member);\r\n            }\r\n        })\r\n        return count;\r\n    }\r\n\r\n    handleDownloadCsvClick = (tableName, datasetName) => {\r\n        let query = `select%20*%20from%20${tableName}`;\r\n        let count = this.estimateCsvSize(datasetName);\r\n        if(count < 3000000){\r\n            this.props.csvDownloadRequestSend(query, datasetName);\r\n        } else {\r\n            this.props.snackbarOpen('Data set too large');\r\n        }\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') {\r\n            this.setState({...this.state, searchField: searchString});\r\n            selectRef.current.select.setState({focusedOption: null})\r\n        }\r\n        if(action.action ==='set-value') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, depth1, depth2, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const depthCount = depthUtils.count(fields, depth1, depth2) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * depthCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDateValid = () => {\r\n        if(isNaN(new Date(this.props.dt1)).valueOf() || !this.props.dt1) return 'Start date is invalid';\r\n    }\r\n\r\n    checkEndDateValid = () => {\r\n        if(isNaN(new Date(this.props.dt2)).valueOf() || !this.props.dt1) return 'End date is invalid';\r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 > this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        return '';\r\n    }\r\n    \r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = (dataSize) => {\r\n        if(!this.props.selectedVizType) return '';\r\n        if(dataSize > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = (dataSize) => {\r\n        if(this.props.selectedVizType !== vizSubTypes.histogram && this.props.selectedVizType !== vizSubTypes.heatmap && dataSize > 1200000){\r\n            return validation.generic.dataSizePrevent;\r\n        }\r\n        if(dataSize > 6000000) return validation.generic.dataSizePrevent;\r\n        if(!this.props.fields) return validation.generic.variableMissing;\r\n        if(!this.props.selectedVizType) return validation.generic.vizTypeMissing;\r\n        return ''}\r\n\r\n    handleShowChartsAndResize = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 30);\r\n        this.props.handleShowCharts();     \r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField, showControlPanel } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly,\r\n            showCharts,\r\n            handleShowGlobe,\r\n            handleChange,\r\n            handleLatLonChange\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        const dataSize = this.estimateDataSize();\r\n\r\n        var catalogMinDate = fields && utcDateStringToLocal(fields.data.Time_Min).setHours(0,0,0,0);\r\n        var catalogMaxDate = fields && utcDateStringToLocal(fields.data.Time_Max).setHours(0,0,0,0);\r\n        var zeroedDT1 = dt1.setHours(0,0,0,0);\r\n        var zeroedDT2 = dt2.setHours(0,0,0,0);\r\n        \r\n        var minDate = fields ? catalogMinDate : '';\r\n\r\n        let minDateMessage = fields && zeroedDT2 < catalogMinDate ? 'End cannot be before dataset start date' : '';\r\n        var maxDateMessage;\r\n        var maxDate;\r\n\r\n        if(!fields){\r\n            maxDate = zeroedDT2;\r\n            maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after end' : '';\r\n        } else {\r\n            \r\n\r\n            if(catalogMaxDate < zeroedDT2){\r\n                maxDate = catalogMaxDate;\r\n                maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after dataset end date' : '';\r\n            } else {\r\n                maxDate = zeroedDT2;\r\n                maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after end' : '';\r\n            }\r\n        }\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(dataSize),\r\n                this.checkGeneralPrevent(dataSize),\r\n                this.checkStartDateValid(),\r\n                this.checkEndDateValid()\r\n            ];\r\n        } else validations = Array(16).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage,\r\n            startDateValidMessage,\r\n            endDateValidMessage\r\n        ] = validations;\r\n\r\n        const checkDisableVisualizeList = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage,\r\n            minDateMessage,\r\n            maxDateMessage,\r\n            startDateValidMessage,\r\n            endDateValidMessage\r\n        ];\r\n\r\n        let cdvl = checkDisableVisualizeList;\r\n        let errorCount = 0;\r\n        \r\n        if(cdvl[0] || cdvl[1]) errorCount ++;\r\n        if(cdvl[2] || cdvl[3]) errorCount ++;\r\n        if(cdvl[4] || cdvl[5]) errorCount ++;\r\n        if(cdvl[7] || cdvl[9]) errorCount ++;\r\n        if(cdvl[8] || cdvl[10]) errorCount ++;\r\n\r\n        const errorSizeAdjust = errorCount > 0 ? 'drawerPaperError' + errorCount : '';\r\n\r\n        const checkDisableVisualize = () => {\r\n            for(let i = 0; i < checkDisableVisualizeList.length; i++){\r\n                if(checkDisableVisualizeList[i]) return checkDisableVisualizeList[i];\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        const disableVisualizeMessage = checkDisableVisualize();\r\n\r\n        const visualizeButtonTooltip = disableVisualizeMessage ? disableVisualizeMessage : generalWarnMessage ? generalWarnMessage : '';\r\n\r\n        return (\r\n            <div>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n\r\n                { showControlPanel ? \r\n\r\n                        <IconButton \r\n                            className={classes.closePanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleCloseControlPanel}>\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                :\r\n                    \r\n                        <IconButton \r\n                            className={classes.openPanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleOpenControlPanel}>\r\n                            <ChevronRight />\r\n                        </IconButton>\r\n                }\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={showControlPanel}\r\n                    classes={{\r\n                        paper: `${classes.drawerPaper} ${classes[errorSizeAdjust]}`,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >\r\n                    <ButtonGroup>\r\n                        <Tooltip title='Show Globe' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${!showCharts && classes.depressed}`} \r\n                                onClick={handleShowGlobe}\r\n                                color='inherit'\r\n                            >\r\n                                <Language/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        \r\n                        <Tooltip title='Show Charts' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${showCharts && classes.depressed}`}\r\n                                onClick={this.handleShowChartsAndResize}\r\n                                color='inherit'\r\n                            >\r\n                                <InsertChartOutlined/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ButtonGroup>\r\n\r\n                    <Tooltip title='Clear Charts' placement='right'>\r\n                        <IconButton color='inherit' onClick={this.props.clearCharts} className={classes.clearChartsButton}>\r\n                            <Delete/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <form>\r\n                        <Grid container>\r\n                            <Grid item xs={10}>\r\n                                <ConnectedTooltip placement='top' title='Enter one or more search terms.'>\r\n                                    <Select\r\n                                        // onMenuOpen={() => {\r\n                                        //     setTimeout(() => selectRef.current.select.setState({...selectRef.current.select.state, focusedOption: null}), 1)\r\n                                            \r\n                                        // }}\r\n                                        formatOptionLabel={formatOptionLabel}\r\n                                        handleTableStatsDialogOpen={this.handleTableStatsDialogOpen}\r\n                                        isLoading = {catalogRequestState === states.inProgress}\r\n                                        components={{\r\n                                            IndicatorSeparator:'',\r\n                                            DropdownIndicator,\r\n                                            GroupHeading,\r\n                                            Group,\r\n                                            Option,\r\n                                            MenuList,\r\n                                            // SingleValue\r\n                                        }}\r\n                                        handleDownloadCsvClick = {this.handleDownloadCsvClick}\r\n                                        escapeClearsValue\r\n                                        ref={selectRef}\r\n                                        onInputChange={this.onAutoSuggestChange}\r\n                                        filterOption={null}\r\n                                        className={classes.variableSelect}\r\n                                        isClearable\r\n                                        inputValue={this.state.searchField}\r\n                                        name=\"fields\"\r\n                                        label=\"Variables\"\r\n                                        options={options}\r\n                                        onChange={this.props.updateFields}\r\n                                        value={fields}\r\n                                        placeholder=\"Variable Search\"\r\n                                        styles={{\r\n                                            menu: provided => ({\r\n                                                ...provided, \r\n                                                zIndex: 1300, \r\n                                                top: '-8px',\r\n                                                left: navDrawerWidth,\r\n                                                width: '980px',\r\n                                                borderRadius: '4px',\r\n                                                boxShadow: '2px 2px 2px 2px #242424',\r\n                                                overflow: 'hidden',\r\n                                                backgroundColor: 'rgba(0,0,0,.5)',\r\n                                                backdropFilter: 'blur(5px)',\r\n                                            }),\r\n\r\n                                            valueContainer: provided => ({\r\n                                                ...provided,\r\n                                                padding: '0 0 0 6px',\r\n                                                fontWeight: 100\r\n                                            }),\r\n\r\n                                            input: provided => ({...provided,\r\n                                                color: 'white',\r\n                                                fontFamily: '\"Lato\", sans-serif'\r\n                                            }),\r\n\r\n                                            control: provided => ({...provided,\r\n                                                backgroundColor: '#424242',\r\n                                                border: 'none',\r\n                                                borderBottom: '1px solid #333333',\r\n                                                borderRadius: 0,\r\n                                                '&:hover': { borderColor: 'white' },\r\n                                                '&:focus-within': { borderColor: colors.orange },\r\n                                                height: '56px'\r\n                                            }),\r\n\r\n                                            placeholder: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                fontSize: '14px',\r\n                                                fontWeight: 300\r\n                                            }),\r\n\r\n                                            noOptionsMessage: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                backgroundColor: colors.backgroundGray\r\n                                            }),\r\n\r\n                                            option: (provided, { data, isFocused }) => {\r\n                                                return ({...provided,\r\n                                                    fontWeight: 400,\r\n                                                    fontSize: '16px',\r\n                                                    backgroundColor: 'transparent',\r\n                                                    color: isFocused ? colors.orange : 'white',\r\n                                                    '&:hover': { backgroundColor: 'rgba(122,67,0,.5)'},\r\n                                                    // '&:active': { backgroundColor: 'rgba(0,0,0,.5)', color: colors.orange},\r\n                                            })},\r\n\r\n                                            singleValue: (provided, state) => ({...provided,\r\n                                                color: 'white',\r\n                                                fontWeight: 400\r\n                                            })\r\n                                        }}\r\n                                        theme={theme => ({\r\n                                            ...theme,\r\n                                            colors: {\r\n                                            ...theme.colors,\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                </ConnectedTooltip>\r\n                            </Grid>\r\n                            <Grid item xs={2} className={classes.tableStatsButton}>\r\n                                <IconButton \r\n                                    size='small' \r\n                                    onClick={this.handleTableStatsDialogOpen}                                     \r\n                                    disabled={!fields}\r\n                                >\r\n                                    <LibraryBooks/>\r\n                                </IconButton>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder={getDatePlaceholder(dt1)}\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    maxDate={maxDate}\r\n                                    minDate={null}\r\n                                    maxDateMessage={maxDateMessage}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder={getDatePlaceholder(dt2)}\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={minDate}\r\n                                    maxDate={null}\r\n                                    minDateMessage={minDateMessage}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat1-input\"\r\n                                    error={Boolean(startLatMessage)}\r\n                                    label={\"Start Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat1}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startLatMessage}\r\n                                    name='lat1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat2-input\"\r\n                                    error={Boolean(endLatMessage)}\r\n                                    label={\"End Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat2}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endLatMessage}\r\n                                    name='lat2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon1-input\"\r\n                                    error={Boolean(startLonMessage)}\r\n                                    label={\"Start Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon1}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startLonMessage}\r\n                                    name='lon1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon2-input\"\r\n                                    error={Boolean(endLonMessage)}\r\n                                    label={\"End Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon2}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endLonMessage}\r\n                                    name='lon2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    disabled={!fields || surfaceOnly}\r\n                                    id=\"depth1-input\"\r\n                                    error={Boolean(startDepthMessage)}\r\n                                    label=\"Start Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth1}\r\n                                    onChange={handleChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startDepthMessage}\r\n                                    name='depth1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    disabled={!fields || surfaceOnly}\r\n                                    id=\"depth2-input\"\r\n                                    error={Boolean(endDepthMessage)}\r\n                                    label=\"End Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth2}\r\n                                    onChange={handleChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endDepthMessage}\r\n                                    name='depth2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <FormControl variant='filled' className={classes.vizTypeSelectFormControl} disabled={!fields}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        className={classes.vizTypeSelectFormControl}\r\n                                        style={overrideDisabledStyle}\r\n                                        value={selectedVizType}\r\n                                        variant='filled'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'filled'\r\n                                        }}\r\n                                        >\r\n                                        {!heatmapMessage && <MenuItem value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>}\r\n                                        {!contourMessage && <MenuItem value={vizSubTypes.contourMap}>Contour Heatmap</MenuItem>}\r\n                                        {!sectionMapMessage && <MenuItem value={vizSubTypes.sectionMap}>Section Map</MenuItem>}\r\n                                        {!sectionMapMessage && <MenuItem value={vizSubTypes.contourSectionMap}>Contour Section Map</MenuItem>}\r\n                                        {!histogramMessage && <MenuItem value={vizSubTypes.histogram}>Histogram</MenuItem>}                      \r\n                                        {!timeSeriesMessage && <MenuItem value={vizSubTypes.timeSeries}>Time Series</MenuItem>}\r\n                                        {!depthProfileMessage && <MenuItem value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>}\r\n                                        {!sparseMapMessage && <MenuItem value={vizSubTypes.sparse}>Sparse Map</MenuItem>}\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Tooltip placement='right' title={visualizeButtonTooltip} className={classes.vizButtonTooltip}>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        className={classes.visualizeButton}\r\n                                        variant='contained'\r\n                                        onClick={() => this.props.onVisualize()}\r\n                                        disabled={Boolean(disableVisualizeMessage) || !fields || !selectedVizType}\r\n                                        fullWidth\r\n                                    >\r\n                                        Visualize\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </form>                    \r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));","export default (infoObject) => {\r\n\r\n    let lonRange = infoObject.lonMax - infoObject.lonMin;\r\n\r\n    let sectionSize;\r\n    if(lonRange < 2){\r\n        sectionSize = (lonRange / 6).toFixed(2);\r\n    } else {\r\n        sectionSize = Math.floor(lonRange / 6);\r\n    }\r\n\r\n    let tickvals = Array.from(Array(5), (e, i) => Math.ceil(infoObject.lonMin + ((i + 1) * sectionSize)));\r\n    let ticktext = tickvals.map(e => e > 180 ? e - 360 : e);\r\n\r\n    return {\r\n        tickmode: 'array',\r\n        tickvals,\r\n        ticktext\r\n    }\r\n}","import months from '../Enums/months';\r\n\r\nexport default (dateString, hasHour, isMonthly) => isMonthly ? months[parseInt(dateString)] : hasHour ? dateString.slice(0,10) + ' ' + dateString.slice(11,16): dateString.slice(0,10);","import colors from '../Enums/colors';\r\n\r\nexport default {\r\n    layout: {\r\n        font: {color: '#ffffff'},\r\n        paper_bgcolor: colors.backgroundGray,\r\n        // plot_bgcolor: 'transparent'\r\n    },\r\n\r\n    config: {\r\n        displaylogo: false\r\n    },\r\n\r\n    annotations: (distributor, height) => (\r\n        [\r\n            {\r\n                text: `Source: ${distributor.length < 30 ? \r\n                    distributor : \r\n                    distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                font: {\r\n                    color: 'white',\r\n                    size: 10\r\n                },\r\n                xref: 'paper',\r\n                yref: 'paper',\r\n                yshift: height ? 0 - height + 160 : -290,\r\n                showarrow: false,\r\n            }\r\n        ]\r\n    )\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DateRange, Waves, CloudDownload, Palette, SwapVert, Gamepad, LineWeight, Rotate90DegreesCcw, Info } from '@material-ui/icons';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { ButtonGroup } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    popover: {\r\n        width: '470px',\r\n        height: '120px',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5)\r\n    },\r\n\r\n    iconButton: {\r\n        boxShadow: '0px 1px 1px 1px #242424',\r\n    },\r\n\r\n    colorForm: {\r\n        width: '100%'\r\n    },\r\n\r\n    lastIcon: {\r\n        borderTopRightRadius: '10%',\r\n        borderBottomRightRadius: '10%'\r\n    },\r\n\r\n    buttonGroup: {\r\n        display: 'block',\r\n        margin: '0px auto 8px auto',\r\n        maxWidth: '700px'\r\n    },\r\n\r\n    depressed: {\r\n        boxShadow: 'inset 1px 1px 5px #262626'\r\n    },\r\n\r\n    colorscaleMenu: {\r\n        maxHeight: '400px'\r\n    },\r\n})\r\n\r\nconst colorscaleOptions = [\r\n    'Default',\r\n    'Greys', \r\n    'YlGnBu', \r\n    'Greens', \r\n    'YlOrRd',\r\n    'Bluered',\r\n    'RdBu',\r\n    'Reds',\r\n    'Blues',\r\n    'Picnic',\r\n    'Rainbow',\r\n    'Portland',\r\n    'Jet',\r\n    'Hot',\r\n    'Blackbody',\r\n    'Earth',\r\n    'Electric',\r\n    'Viridis',\r\n    'Cividis'];\r\n\r\nfunction usePreviousSize(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction usePreviousColor(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction usePreviousOpacity(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nconst ChartControlPanel = (props) => {\r\n\r\n    const { \r\n        classes, \r\n        onToggleSplitByDate,\r\n        splitByDate,\r\n        onToggleSplitByDepth,\r\n        splitByDepth,\r\n        onToggleSplitBySpace,\r\n        splitBySpace,\r\n        switchOrientation,\r\n        orientation, \r\n        downloadCsv, \r\n        handleZValueConfirm,\r\n        zValues,\r\n        markerOptions,\r\n        handleMarkerOptionsConfirm,\r\n    } = props;\r\n\r\n    const [paletteAnchorElement, setPaletteAnchorElement] = useState(null);\r\n\r\n    let handleOpenPalette = (event) => {\r\n        setPaletteAnchorElement(event.currentTarget);\r\n    }\r\n\r\n    // Local version, not from props\r\n    let handlePaletteChoice = (option) => {\r\n        setPaletteAnchorElement(null);\r\n        props.handlePaletteChoice(option);\r\n    }\r\n\r\n    const [zScalePopoverAnchorElement, setZScalePopoverAnchorElement] = React.useState(null);\r\n    const [localZMin, setLocalZMin] = React.useState(zValues && zValues[0]);\r\n    const [localZMax, setLocalZMax] = React.useState(zValues && zValues[1]);\r\n\r\n    const zScalePopoverOpen = Boolean(zScalePopoverAnchorElement);\r\n    const zScalePopoverID = zScalePopoverOpen ? 'zscale-popover' : undefined;\r\n\r\n    const handleZScalePopoverClose = () => {\r\n        setZScalePopoverAnchorElement(null);\r\n    };\r\n    \r\n    const checkLocalZMin = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMin)) return 'Invalid value';\r\n    }\r\n\r\n    const checkLocalZMax = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMax)) return 'Invalid value';\r\n    }\r\n\r\n    const zScaleValidations = [\r\n        checkLocalZMin(),\r\n        checkLocalZMax()\r\n    ];\r\n\r\n    const [\r\n        zMinMessage,\r\n        zMaxMessage\r\n    ] = zScaleValidations;\r\n\r\n    const handleLocalZConfirm = () => {\r\n        handleZValueConfirm([localZMin, localZMax]);\r\n        handleZScalePopoverClose();\r\n    }\r\n\r\n    const [markerOptionsAnchorElement, setMarkerOptionsAnchorElement] = React.useState(null);\r\n    const [localMarkerOpacity, setLocalMarkerOpacity] = React.useState(markerOptions && markerOptions.opacity);\r\n    const [localMarkerColor, setLocalMarkerColor] = React.useState(markerOptions && markerOptions.color);\r\n    const [localMarkerSize, setLocalMarkerSize] = React.useState(markerOptions && markerOptions.size);\r\n\r\n    if(markerOptions){\r\n        var previousOpacity = usePreviousOpacity(markerOptions.opacity);\r\n        var previousColor = usePreviousColor(markerOptions.color);\r\n        var previousSize = usePreviousSize(markerOptions.size);\r\n        \r\n        useEffect(() => {\r\n            if(markerOptions.opacity !== previousOpacity){\r\n                setLocalMarkerOpacity(markerOptions.opacity);\r\n            }\r\n    \r\n            if(markerOptions.color !== previousColor){\r\n                setLocalMarkerColor(markerOptions.color);\r\n            }\r\n    \r\n            if(markerOptions.size !== previousSize){\r\n                setLocalMarkerSize(markerOptions.size);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const markerPopoverOpen = Boolean(markerOptionsAnchorElement);\r\n    const markerPopoverID = markerPopoverOpen ? 'marker-popover' : undefined;\r\n\r\n    const handleMarkerOptionsClose = () => {\r\n        setMarkerOptionsAnchorElement(null);\r\n    }\r\n\r\n    const checkLocalMarkerOpacity = () => {\r\n        if(localMarkerOpacity < 0.1 || localMarkerOpacity > 1 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerOpacity)){\r\n            return 'Opacity should be 0.1 to 1'\r\n        }\r\n    }\r\n\r\n    const checkLocalMarkerSize = () => {\r\n        if(localMarkerSize < 1 || localMarkerSize > 18 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerSize)){\r\n            return 'Size should be 1 to 18'\r\n        }\r\n    }\r\n\r\n    const markerOptionsValidations = [\r\n        checkLocalMarkerOpacity(),\r\n        checkLocalMarkerSize()\r\n    ]\r\n\r\n    const [\r\n        localMarkerOpacityMessage,\r\n        localMarkerSizeMessage\r\n    ] = markerOptionsValidations;\r\n\r\n    const handleLocalMarkerOptionsConfirm = () => {\r\n        handleMarkerOptionsConfirm({opacity: localMarkerOpacity, color: localMarkerColor, size: localMarkerSize});\r\n        handleMarkerOptionsClose();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup className={classes.buttonGroup}>\r\n\r\n                {Boolean(onToggleSplitByDate) && \r\n                    <Tooltip placement='top' title='Split By Date'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDate && classes.depressed}`} \r\n                            onClick={onToggleSplitByDate}\r\n                        >\r\n                            <DateRange/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n{/* \r\n                {Boolean(onToggleSplitByDepth) && \r\n                    <Tooltip placement='top' title='Split By Depth'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDepth && classes.depressed}`} \r\n                            onClick={onToggleSplitByDepth}\r\n                        >\r\n                            <Waves/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                } */}\r\n\r\n                {Boolean(onToggleSplitBySpace) && \r\n                    <Tooltip placement='top' title={orientation === 'zonal' ? 'Split by Latitude' : 'Split by Longitude'}>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitBySpace && classes.depressed}`} \r\n                            onClick={onToggleSplitBySpace}\r\n                        >\r\n                            <LineWeight/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {/* {Boolean(switchOrientation) && \r\n                    <Tooltip placement='top' title={orientation === 'zonal' ? 'Switch to Meridional' : 'Switch to Zonal'}>\r\n                        <IconButton color='inherit' className={classes.iconButton} \r\n                            onClick={switchOrientation}\r\n                        >\r\n                            <Rotate90DegreesCcw/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                } */}\r\n\r\n                <Tooltip placement='top' title='Download CSV'>\r\n                    <IconButton color='inherit' onClick={downloadCsv} className={classes.iconButton} >\r\n                        <CloudDownload/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n                {Boolean(handleZValueConfirm) &&\r\n                    <Tooltip title='Change Colorscale Range' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setZScalePopoverAnchorElement(event.currentTarget)} className={classes.iconButton}>\r\n                            <SwapVert/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {Boolean(props.handlePaletteChoice) &&\r\n                    <Tooltip title='Change Palette' placement='top'>\r\n                        <IconButton disabled={!Boolean(props.handlePaletteChoice)} color='inherit' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                            <Palette/>\r\n                        </IconButton>                \r\n                    </Tooltip>      \r\n                }\r\n\r\n                {Boolean(props.handleMarkerOptionsConfirm) &&\r\n                    <Tooltip title='Marker Options' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setMarkerOptionsAnchorElement(event.currentTarget)} className={`${classes.iconButton} ${classes.lastIcon}`} >\r\n                            <Gamepad/>\r\n                        </IconButton>                \r\n                    </Tooltip>\r\n                }\r\n\r\n                {/* <Tooltip title='Plot Info' placement='top'>\r\n                    <IconButton color='inherit' onClick={() => console.log('Info!')} className={`${classes.iconButton}`} >\r\n                        <Info/>\r\n                    </IconButton>                \r\n                </Tooltip> */}\r\n                \r\n            </ButtonGroup>\r\n            \r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={paletteAnchorElement}\r\n                keepMounted\r\n                open={Boolean(paletteAnchorElement)}\r\n                onClose={() => setPaletteAnchorElement(null)}\r\n                className={classes.colorscaleMenu}\r\n            >\r\n                {colorscaleOptions.map((option, index) => (\r\n                    <MenuItem onClick={() => handlePaletteChoice(option === 'Default' ? 'heatmap' : option)} key={index}>{option}</MenuItem>\r\n                ))}\r\n                \r\n            </Menu>\r\n            \r\n            {/* zscale popover */}\r\n            <Popover\r\n                id={zScalePopoverID}\r\n                open={zScalePopoverOpen}\r\n                anchorEl={zScalePopoverAnchorElement}\r\n                onClose={handleZScalePopoverClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMinMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-min-input' >Min</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-min-input'\r\n                                    value={localZMin}\r\n                                    onChange={(event) => setLocalZMin(event.target.value)}\r\n                                    aria-describedby='local-zmin-error'\r\n                                    labelWidth={36}\r\n                                    name='local-zmin'\r\n                                />\r\n                                <FormHelperText id='local-zmin-error'>{zMinMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-max-input' >Max</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-max-input'\r\n                                    value={localZMax}\r\n                                    onChange={(event) => setLocalZMax(event.target.value)}\r\n                                    aria-describedby=\"local-zmax-error\"\r\n                                    labelWidth={36}\r\n                                    name='local-zmax'\r\n                                />\r\n                                <FormHelperText id=\"local-zmax-error\">{zMaxMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={7}>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleZScalePopoverClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalZConfirm}\r\n                                disabled={Boolean(zMinMessage || zMaxMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n                \r\n            {/* Marker popover */}\r\n            <Popover\r\n                id={markerPopoverID}\r\n                open={markerPopoverOpen}\r\n                anchorEl={markerOptionsAnchorElement}\r\n                onClose={handleMarkerOptionsClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(localMarkerOpacityMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-opacity' >Opacity</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='local-marker-opacity'\r\n                                    value={localMarkerOpacity}\r\n                                    onChange={(event) => setLocalMarkerOpacity(event.target.value)}\r\n                                    aria-describedby='local-marker-opacity'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-opacity'\r\n                                />\r\n                            <FormHelperText id=\"local-marker-opacity-error\">{localMarkerOpacityMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                // error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-size' >Size</InputLabel>\r\n                                <OutlinedInput\r\n                                    error={Boolean(localMarkerSizeMessage)}\r\n                                    id='local-marker-size'\r\n                                    value={localMarkerSize}\r\n                                    onChange={(event) => setLocalMarkerSize(event.target.value)}\r\n                                    aria-describedby=\"local-marker-size\"\r\n                                    labelWidth={36}\r\n                                    name='local-marker-size'\r\n                                />\r\n                                <FormHelperText id=\"local-marker-size-error\">{localMarkerSizeMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                className={classes.colorForm}\r\n                            >\r\n                                <InputLabel htmlFor='z-min-input'>Color</InputLabel>\r\n                                <OutlinedInput\r\n                                    type='color'\r\n                                    id='marker-color'\r\n                                    value={localMarkerColor}\r\n                                    onChange={(event) => setLocalMarkerColor(event.target.value)}\r\n                                    aria-describedby='local-marker-color'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-color'\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={1}></Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleMarkerOptionsClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalMarkerOptionsConfirm}\r\n                                disabled={Boolean(localMarkerOpacityMessage || localMarkerSizeMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ChartControlPanel);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport handleDateString from '../../Utility/handleChartDatestring';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\nimport subTypes from '../../Enums/visualizationSubTypes';\r\n\r\nconst determineHeight = (infoObject) => {\r\n    const latRange = infoObject.latMax - infoObject.latMin;\r\n    const lonRange = infoObject.lonMax - infoObject.lonMin;\r\n    return (((latRange / lonRange) * 800) * .83) + 60;\r\n}\r\n// equal 608 wide, 670 high\r\n// height half 608 / 267\r\n\r\nconst handleContourMap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n    \r\n    // Handle axis labels when crossing 180th meridian\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    // let height = determineHeight(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        var hovertext = subset.map((value, i) => {\r\n            let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n            if(isNaN(value)) return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n                `<br>` +\r\n                `Lon: ${infoObject.lons[i] > 180 ? format('.2f')(infoObject.lons[i] - 360) : format('.2f')(infoObject.lons[i])}\\xb0`\r\n\r\n            return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n            `<br>` +\r\n            `Lon: ${infoObject.lons[i] > 180 ? format('.2f')(infoObject.lons[i] - 360) : format('.2f')(infoObject.lons[i])}\\xb0` + \r\n            '<br>' +\r\n            `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n        });\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n\r\n                    hoverinfo: 'text',\r\n                    hovertext,\r\n                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'contour',\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: infoObject.zMin > 1 && infoObject.zMin < 1000 ? '.2f' : '.2e'\r\n                    },\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    }\r\n                }\r\n            ]}\r\n\r\n            config={{...chartBase.config}}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: {\r\n                    text: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                },\r\n                xaxis: {title: 'Longitude', color: '#ffffff', ...xTicks},\r\n                yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                // annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHeatmap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    // let height = determineHeight(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    zsmooth: subset.length < 20000 ? 'fast' : 'false',\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    colorscale: palette,\r\n                    autocolorscale: false,\r\n\r\n                    // hoverinfo: 'text',\r\n                    // hovertext,\r\n\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n                    \r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            config={{...chartBase.config}}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: {\r\n                    text: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                    font: {\r\n                        size: 16\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: 'Longitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Latitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n                // annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SpaceTimeChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitByDepth, setSplitByDepth] = useState(true);\r\n    const [subTypeState, setSubTypeState] = useState(subType);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const subSets = data.generatePlotData(subTypeState, splitByDate, splitByDepth);\r\n    var plots;\r\n\r\n    switch(subTypeState){\r\n        case vizSubTypes.contourMap:\r\n            plots = handleContourMap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.heatmap:\r\n            plots = handleHeatmap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.histogram:\r\n            plots = handleHistogram(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        default:\r\n            plots = '';\r\n            break;        \r\n\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDepth = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDepth(!splitByDepth);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={subTypeState !== subTypes.histogram && handlePaletteChoice}\r\n                onToggleSplitByDepth={depths.size===1 ? null : onToggleSplitByDepth}\r\n                onToggleSplitByDate={dates.size===1 ? null : onToggleSplitByDate}\r\n                splitByDepth={splitByDepth}\r\n                splitByDate={splitByDate}\r\n                handleZValueConfirm={subTypeState !== subTypes.histogram && handleZValueConfirm}\r\n                zValues={subTypeState !== subTypes.histogram && zValues}\r\n                extent={subTypeState !== subTypes.histogram && extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plots}     \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SpaceTimeChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst TimeSeriesChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, dates, parameters, metadata } = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#ff1493', size: 12})\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    let hovertext = variableValues.map((value, i) => {\r\n        return `Time: ${dates[i].slice(0,10)}<br>${parameters.fields}: ${format('.2e')(value)} \\xb1 ${format('.2e')(stds[i])} [${metadata.Unit}]`;\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                        mode: 'lines+markers',\r\n                    x: dates,\r\n                    y: variableValues,\r\n                    error_y: {\r\n                        type: 'data',\r\n                        array: stds,\r\n                        opacity: 0.3,\r\n                        color: '#f2f2f2',\r\n                        visible: true\r\n                    },\r\n                    name: parameters.fields,\r\n                    type: 'scatter',\r\n                    line: {color: markerOptions.color},\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    },\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                  },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    plot_bgcolor: 'transparent',\r\n                    width: 800,\r\n                    height: 570,\r\n                    title: `${parameters.fields} [${metadata.Unit}]  ${parameters.dt1} to ${parameters.dt2}`,\r\n                  xaxis: {\r\n                      title: 'Time',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: parameters.fields,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(TimeSeriesChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst DepthProfileChart = (props) => {\r\n\r\n    const { classes, setLoadingMessage } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, depths, parameters, metadata } = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#ff1493', size: 12})\r\n\r\n    let hovertext = variableValues.map((value, i) => {\r\n        return `Depth: ${format('.2f')(depths[i])} [m] <br>${parameters.fields}: ${format('.2e')(value)} \\xb1 ${format('.2e')(stds[i])} [${metadata.Unit}]`;\r\n    })\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }    \r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                    {   \r\n                        mode: 'lines+markers',\r\n                        y: depths,\r\n                        x: variableValues,\r\n                        error_x: {\r\n                            type: 'data',\r\n                            array: stds,\r\n                            opacity: 0.3,\r\n                            color: '#f2f2f2',\r\n                            visible: true\r\n                        },\r\n                        name: parameters.fields,\r\n                        type: 'scatter',\r\n\r\n                        marker: {\r\n                            line: {color: markerOptions.color},\r\n                            opacity: markerOptions.opacity,\r\n                            size: markerOptions.size,\r\n                            color: markerOptions.color\r\n                        },\r\n\r\n                        hoverinfo: 'text',\r\n                        hovertext\r\n                    },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    plot_bgcolor: 'transparent',\r\n                    width: 800,\r\n                    height: 570,\r\n                    title: `${parameters.fields} [${metadata.Unit}]  ${parameters.depth1} to ${parameters.depth2} meters`,\r\n                  yaxis: {\r\n                      title: 'Depth[m]',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power',\r\n                      autorange:'reversed'\r\n                    },\r\n                  xaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(DepthProfileChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport visualizationSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\n\r\nconst handleSectionMap = (subsets, infoObject, splitByDate, splitBySpace, orientation, palette, zMin, zMax) => {\r\n\r\n    const dates = Array.from(infoObject.dates);\r\n    const depths = Array.from(infoObject.depths);\r\n    const lats = Array.from(infoObject.lats);\r\n    const lons = Array.from(infoObject.lons);\r\n\r\n    const distinctMeridiansOrParallelsForSplitting = \r\n        orientation === 'zonal' ?\r\n        lats : \r\n        lons;\r\n\r\n    const mergedOrSplitAxis = \r\n        orientation === 'zonal' ?\r\n        'Latitude' :\r\n        'Longitude';\r\n\r\n    const xAxis = orientation === 'zonal' ?\r\n        'Longitude' :\r\n        'Latitude';\r\n\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 && orientation === 'zonal' ? handleXTicks(infoObject) : {};\r\n\r\n\r\n    return subsets.map((subset, index) => {\r\n        let z = subset;\r\n        let x = [];\r\n        let y = [];\r\n\r\n        if(orientation === 'zonal'){\r\n            for(let i = 0; i < subset.length; i++){\r\n                x.push(lons[Math.floor(i / depths.length)])\r\n            }\r\n        } else {\r\n            for(let i = 0; i < subset.length; i++){\r\n                x.push(lats[Math.floor(i / depths.length)])\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < subset.length; i++){\r\n            y.push(depths[i % depths.length]);\r\n        }\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length < 2 ?\r\n            dates[0].slice(0,10) :\r\n            !splitByDate ? \r\n                'Merged Dates' : \r\n                splitBySpace ? \r\n                    dates[Math.floor(index/distinctMeridiansOrParallelsForSplitting.length)].slice(0, 10) : \r\n                    dates[index].slice(0,10);\r\n                \r\n        const spaceTitle = distinctMeridiansOrParallelsForSplitting.length <= 1 ? `${orientation === 'zonal' ? 'Lat' : 'Lon'} ${distinctMeridiansOrParallelsForSplitting[0]}\\xb0` : \r\n            !splitBySpace ? `Merged ${mergedOrSplitAxis}s` : \r\n            `${orientation === 'zonal' ? 'Lat' : 'Lon'} ${distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length]}\\xb0`;\r\n\r\n        let hovertext = z.map((value, i) => {\r\n            \r\n            if(orientation === 'zonal'){\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                if(isNaN(value)) return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                    `<br>` +\r\n                    `Lon: ${format('.2f')(x[i] > 180 ? x[i] - 360 : x[i])}\\xb0`\r\n    \r\n                return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                `<br>` +\r\n                `Lon: ${format('.2f')(x[i] > 180 ? x[i] - 360 : x[i])}\\xb0` + \r\n                '<br>' +\r\n                `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n            } else {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                if(isNaN(value)) return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                    `<br>` +\r\n                    `Lat: ${format('.2f')(x[i])}\\xb0`\r\n    \r\n                return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                `<br>` +\r\n                `Lat: ${format('.2f')(x[i])}\\xb0` + \r\n                '<br>' +\r\n                `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n            }\r\n        });\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    zsmooth: subset.length < 20000 ? 'best' : 'fast',\r\n                    x,\r\n                    y,\r\n                    z,\r\n                    name: infoObject.parameters.fields,\r\n                    type: infoObject.subType === visualizationSubTypes.contourSectionMap ? 'contour' : 'heatmap',\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: '.2e'\r\n                    },\r\n\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName} [${infoObject.metadata.Unit}] ${spaceTitle} ${date}`,\r\n                xaxis: {\r\n                    title: `${xAxis}[\\xB0]`, \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Depth[m]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    autorange: 'reversed'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />\r\n        )\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SectionMapChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { dates, extent, lats, lons } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitBySpace, setSplitBySpace] = useState(false);\r\n    const [orientation, setOrientation] = useState(data.orientation);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    var spaces = orientation === 'zonal' ? lats : lons;\r\n\r\n    const subsets = data.generatePlotData(orientation, splitByDate, splitBySpace);\r\n    var plots = handleSectionMap(subsets, data, splitByDate, splitBySpace, orientation, palette, zMin, zMax);\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitBySpace = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitBySpace(!splitBySpace);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const switchOrientation = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setOrientation(orientation === 'zonal' ? 'meridional' : 'zonal');\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n            <ChartControlPanel\r\n                orientation={orientation}\r\n                switchOrientation={switchOrientation}\r\n                onToggleSplitBySpace={spaces.size === 1 ? null : onToggleSplitBySpace}\r\n                splitBySpace={splitBySpace}\r\n                onToggleSplitByDate={dates.size === 1 ? null : onToggleSplitByDate}\r\n                splitByDate={splitByDate}\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                downloadCsv={downloadCsv}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SectionMapChart));","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst SparseScatter = (props) => {\r\n    const {\r\n        xValues,\r\n        yValues,\r\n        markerOptions,\r\n        infoObject,\r\n        xTitle,\r\n        yTitle,\r\n        type\r\n    } = props;\r\n\r\n    const { parameters, metadata, hasDepth, variableValues, times, lats, lons, depths } = infoObject;\r\n\r\n    const title = `${parameters.fields} [${metadata.Unit}]`;\r\n    \r\n    var hovertext;\r\n\r\n    switch(type){\r\n        case 'time':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                let time= times[i].slice(0,20);\r\n                time = time.replace('T', ' ');\r\n                return `Time: ${time}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'latitude':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Lat: ${lats[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'longitude':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Lon: ${lons[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'depth':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Depth: ${depths[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        default:\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                let time= times[i].slice(0,20);\r\n                time = time.replace('T', ' ');\r\n                return `Time: ${time}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n        }\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n    \r\n            data={[\r\n                {\r\n                    x: xValues,\r\n                    y: yValues,\r\n                    mode: 'markers',\r\n                    name: parameters.fields,\r\n                    type: variableValues.length > 1000 ? 'scattergl' : 'scatter',\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    },\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                },\r\n            ]}\r\n            config={{...chartBase.config}}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                plot_bgcolor: 'transparent',\r\n                width: 800,\r\n                height: 570,\r\n                title,\r\n                xaxis: {\r\n                    title: xTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: yTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    autorange: type === 'depth' ? 'reversed' : true\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)\r\n            }}            \r\n        />\r\n    )\r\n}\r\n\r\nexport default SparseScatter;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport SparseScatter from './SparseScatter';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst handleSparseMap = (infoObject, palette, zValues) => {\r\n\r\n    var hovertext = infoObject.variableValues.map((value, i) => {\r\n        let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n\r\n        return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n        `<br>` +\r\n        `Lon: ${format('.2f')(infoObject.lons[i])}\\xb0` + \r\n        '<br>' +\r\n        `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n    });\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zValues[0],\r\n                    zmax: zValues[1],\r\n                    lon: infoObject.lons,\r\n                    lat: infoObject.lats,\r\n                    z: infoObject.variableValues,\r\n                    zmin:'',\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    radius: 6,                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'densitymapbox',\r\n                    \r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    },\r\n                }\r\n            ]}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                mapbox: {\r\n                    style: \"white-bg\",\r\n                    layers: [\r\n                        {\r\n                            sourcetype: \"raster\",\r\n                            source: [\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"],\r\n                            below: \"traces\"\r\n                        }\r\n                    ],\r\n                    center: infoObject.center,\r\n                    zoom: infoObject.zoom\r\n                },\r\n\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n            }}\r\n            \r\n            config={{\r\n                ...chartBase.config,\r\n                mapboxAccessToken:\r\n                  \"pk.eyJ1IjoiZGVuaG9sdHoiLCJhIjoiY2p1ZW9obTNhMDVxZjQzcDRvMmdlcDN2aiJ9.HvLaX2bcradeE5T-lpTc8w\",\r\n                \r\n              }}\r\n        />)\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n\r\n    tabs: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n\r\n    tab: {\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        fontSize: '15px',\r\n        textTransform: 'none'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nfunction tabProps(index) {\r\n    return {\r\n      id: `sparse-tab-${index}`,\r\n      'aria-controls': `sparse-tab-${index}`,\r\n    };\r\n  }\r\n\r\nconst SparseTabPanel = (props) => {\r\n    const { children, selectedTab, index, controlPanelProps, } = props;\r\n    console.log('A tab panel re-rendered');\r\n    console.log(controlPanelProps)\r\n\r\n    return (\r\n        <div hidden={selectedTab !== index}>\r\n            <ChartControlPanel\r\n                // handlePaletteChoice={handlePaletteChoice}\r\n                // handleZValueConfirm={handleZValueConfirm}\r\n                // zValues={zValues}\r\n                // extent={data.extent}\r\n                // downloadCsv={downloadCsv}\r\n                {...controlPanelProps}\r\n            />\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst SparseMap = (props) => {\r\n\r\n    const { classes } = props;\r\n\r\n    const { data } = props.chart;\r\n\r\n    const [palette, setPalette] = useState('Heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [markerOptions, setMarkerOptions] = useState({opacity: .7, color:'#ff1493', size: 12});\r\n    const [tab, setTab] = useState(0);\r\n\r\n    const plot = handleSparseMap(data, palette, zValues)\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setTab(newValue)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    const forceResize = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 30);        \r\n    }\r\n\r\n    const controlPanelProps = {\r\n        map: {\r\n            palette,\r\n            handlePaletteChoice,\r\n            zValues,\r\n            handleZValueConfirm,\r\n            downloadCsv\r\n        },\r\n\r\n        scatter: {\r\n            downloadCsv,\r\n            markerOptions,\r\n            setMarkerOptions,\r\n            handleMarkerOptionsConfirm\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Tabs \r\n                value={tab} \r\n                onChange={handleTabChange} \r\n                aria-label=\"Sparse tabs\" \r\n                centered\r\n                indicatorColor='primary'\r\n                className={classes.tabs}\r\n            >\r\n                <Tab label=\"Map\" {...tabProps(0)} className={classes.tab} onClick={forceResize}/>\r\n                <Tab label=\"By Time\" {...tabProps(1)} className={classes.tab}/>\r\n                <Tab label=\"By Lat\" {...tabProps(2)} className={classes.tab}/>\r\n                <Tab label=\"By Lon\" {...tabProps(3)} className={classes.tab}/>\r\n                {data.hasDepth && <Tab label=\"By Depth\" {...tabProps(4)} className={classes.tab}/>}\r\n            </Tabs>\r\n            <SparseTabPanel selectedTab={tab} index={0} controlPanelProps={controlPanelProps.map}>\r\n                {plot}\r\n            </SparseTabPanel>\r\n            \r\n            <SparseTabPanel selectedTab={tab} index={1} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.times}\r\n                    yValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Time'\r\n                    yTitle={data.parameters.fields}\r\n                    type='time'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={2} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.lats}\r\n                    yValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Latitude'\r\n                    yTitle={data.parameters.fields}\r\n                    type='latitude'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={3} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.lons}\r\n                    yValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Longitude'\r\n                    yTitle={data.parameters.fields}\r\n                    type='longitude'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            {data.hasDepth &&\r\n                <SparseTabPanel selectedTab={tab} index={4} controlPanelProps={controlPanelProps.scatter}>\r\n                    <SparseScatter\r\n                        xValues={data.variableValues}\r\n                        yValues={data.depths}\r\n                        markerOptions={markerOptions}\r\n                        infoObject={data}\r\n                        xTitle={data.parameters.fields}\r\n                        yTitle='Depth'\r\n                        type='depth'\r\n                    />\r\n                </SparseTabPanel>            \r\n            }\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseMap));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport handleDateString from '../../Utility/handleChartDatestring';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SparseHistogram = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { metadata, parameters } = data;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: data.variableValues,\r\n                    name: data.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${parameters.fields} [${metadata.Unit}]`,\r\n                xaxis: {\r\n                    title: `${parameters.fields} [${metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseHistogram));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../Enums/colors';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nimport SpaceTimeChart from './ChartComponents/SpaceTimeChart';\r\nimport TimeSeriesChart from './ChartComponents/TimeSeriesChart';\r\nimport DepthProfileChart from './ChartComponents/DepthProfileChart';\r\nimport SectionMapChart from './ChartComponents/SectionMapChart';\r\nimport SparseMap from './ChartComponents/SparseMap';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\nimport SparseHistogram from './ChartComponents/SparseHistogram';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsContainer: {\r\n        margin: '300px 0 0 100px'\r\n    },\r\n\r\n    chartPaper: {\r\n      margin: '60px auto 0px auto',\r\n      width: '1000px',\r\n      paddingTop: '16px'\r\n  },\r\n\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n    }\r\n})\r\n\r\nconst SamplePlot = () => {\r\n  let x = [0,0,0,0,0,1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4];\r\n  let y = [0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,];\r\n  let z = [0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,1,2,3,4,5,6,7,8,9];\r\n  // z = z.map(() => Math.floor(Math.random() * 100));\r\n  return (\r\n\r\n      <Plot\r\n      style= {{\r\n          position: 'relative',\r\n          display:'inline-block',\r\n          marginTop: '50px'\r\n      }}\r\n      \r\n      data={[\r\n          {   \r\n              x,\r\n              y,\r\n              z,\r\n              connectgaps: false,\r\n              zsmooth: 'best',\r\n              \r\n              name: 'Test',\r\n              type: 'heatmap',\r\n              contours: {\r\n                  showlabels: true,\r\n                  labelfont: {\r\n                      family: 'Raleway',\r\n                      size: 12,\r\n                      color: 'white',\r\n                  },\r\n                  labelformat: '.2e'\r\n              },\r\n              colorbar: {\r\n                  title: {\r\n                      text: `test`\r\n                  },\r\n                  exponentformat: 'power'\r\n              }\r\n          }\r\n      ]}\r\n      \r\n      layout= {{\r\n          font: {color: '#ffffff'},\r\n          margin: {\r\n            t: 50\r\n          },\r\n          title: {\r\n              text: `A sample chart title`,\r\n              // yanchor: 'bottom',\r\n              // y: .9,\r\n              // yref: 'container',\r\n              font: {\r\n                size: 18\r\n              }\r\n          },\r\n          paper_bgcolor: colors.backgroundGray,\r\n          xaxis: {title: 'Longitude', color: '#ffffff'},\r\n          yaxis: {title: 'Latitude', color: '#ffffff'},\r\n          annotations: [\r\n              {\r\n                  text: `test`,\r\n                      font: {\r\n                          color: 'white',\r\n                          size: 10\r\n                      },\r\n                      xref: 'paper',\r\n                      yref: 'paper',\r\n                      yshift: -202,\r\n                      showarrow: false,\r\n                  }\r\n              ]\r\n              \r\n          }}   \r\n          />\r\n          )\r\n      }\r\n      \r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n        const { classes, charts } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n              {/* <SamplePlot/>  */}\r\n                {charts.map((chart, index) => {\r\n                    switch(chart.data.parameters.spName){\r\n\r\n                        case storedProcedures.spaceTime:\r\n                          if(chart.subType === vizSubTypes.sparse) {\r\n                            return (\r\n                              <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                                <SparseMap chart={chart}/>\r\n                              </Paper>\r\n                            )\r\n                          } else if(chart.data.metadata.Spatial_Resolution === spatialResolutions.irregular) {\r\n                            return (\r\n                              <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                                <SparseHistogram chart={chart}/>\r\n                              </Paper>\r\n                            )\r\n                          }\r\n                          else return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <SpaceTimeChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.timeSeries:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <TimeSeriesChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.depthProfile:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <DepthProfileChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.sectionMap:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <SectionMapChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n                        \r\n                        default:\r\n                          return '';\r\n                  }\r\n                })}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { cruiseListRequestSend, cruiseTrajectoryRequestSend, cruiseTrajectoryClear } from '../Redux/actions/visualization';\r\n\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    cruiseList: state.cruiseList,\r\n    getCruiseListState: state.getCruiseListState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseListRequestSend,\r\n    cruiseTrajectoryRequestSend,\r\n    cruiseTrajectoryClear\r\n}\r\n\r\nconst esriFonts = '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif';\r\nconst esriFontColor = 'white';\r\nconst esriBackgroundColor = '#424242';\r\nconst esriHoverFontColor = '#242424';\r\nconst esriHoverBackgroundColor = '#949393';\r\n\r\nconst styles = theme => ({\r\n    outerDiv: {\r\n        padding:'12px',\r\n        maxWidth: '260px',\r\n        backgroundColor: 'transparent',\r\n        color: esriFontColor,\r\n        borderRadius: '4px',\r\n        boxShadow: '2px',\r\n        position: 'relative',\r\n        backdropFilter: 'blur(2px)'\r\n    },\r\n\r\n    cruiseSelect: {\r\n        width: '260px',\r\n        borderRadius: '4px',\r\n    },\r\n\r\n    cruiseInfo: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        margin: '12px auto 0 auto',\r\n    },\r\n\r\n    cruiseInfoCell: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        borderStyle: 'none',\r\n    },\r\n\r\n    // blurEffectDiv: {\r\n    //     filter: 'blur(5px)',\r\n    //     position: 'absolute',\r\n    //     top: '0px',\r\n    //     left: '0px',\r\n    //     right: '0px',\r\n    //     bottom: '0px',\r\n    //     zIndex: 99999999\r\n    // }\r\n})\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n      <components.Option \r\n        {...props} \r\n        innerProps={{\r\n            ...props.innerProps, \r\n            // Prevent focus / scroll events when mousing over options\r\n            onMouseMove: (e) => e.preventDefault(), \r\n            onMouseOver: (e) => e.preventDefault()\r\n        }}>\r\n    </components.Option>\r\n    )\r\n}\r\n\r\nconst cruiseSort =  (a,b) => a.Name < b.Name ? -1 : 1;\r\n\r\nclass CruiseSelector extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Nickname');\r\n        search.addIndex('Name');\r\n        search.addIndex('Chief_Name');\r\n        search.addIndex('Keywords');\r\n        try{\r\n            if(props.cruiseList && props.cruiseList.length) search.addDocuments(props.cruiseList);\r\n        } catch(e) {\r\n            console.log(e);\r\n            console.log(props.cruiseList);\r\n        }\r\n\r\n        this.state = {\r\n            search,\r\n            searchField: '',\r\n            selectedCruise: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.cruiseList || !this.props.cruiseList.length) this.props.cruiseListRequestSend();\r\n    }\r\n\r\n    getSelectOptionsFromCruiseList = (list) => {\r\n        return list.map(item => ({\r\n            value: item.Name,\r\n            label: item.Name,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    handleCruiseSelect = (selection) => {\r\n        if(selection && selection.data){\r\n            const id = selection.data.ID;\r\n            this.props.cruiseTrajectoryRequestSend(id);\r\n        } else {this.props.cruiseTrajectoryClear()}\r\n\r\n        this.setState({...this.state, selectedCruise: selection});\r\n        this.props.updateParametersFromCruiseBoundary(selection);\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.cruiseList && prevProps.cruiseList.length) && (this.props.cruiseList && this.props.cruiseList.length)){\r\n            this.state.search.addDocuments(this.props.cruiseList);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    render(){\r\n\r\n        const { search, searchField, selectedCruise } = this.state;        \r\n        const { classes, cruiseList} = this.props;\r\n        \r\n        const options = searchField && cruiseList ? this.getSelectOptionsFromCruiseList(search.search(searchField).sort(cruiseSort)) \r\n            : cruiseList ? this.getSelectOptionsFromCruiseList(cruiseList) \r\n            : []\r\n\r\n        return (\r\n            <div id='cruise-selector' className={classes.outerDiv}>\r\n                <div className={classes.blurEffectDiv}></div>\r\n                <Select\r\n                    isLoading={this.props.getCruiseListState === states.inProgress}\r\n                    components={{\r\n                        IndicatorSeparator:'',\r\n                        Option,\r\n                        SingleValue,\r\n                    }}\r\n                    isClearable\r\n                    onInputChange={this.onAutoSuggestChange}\r\n                    // inputValue={this.state.searchField}\r\n                    filterOption={null}\r\n                    className={classes.cruiseSelect}\r\n                    escapeClearsValue\r\n                    label=\"Cruise\"\r\n                    options={options}\r\n                    onChange={this.handleCruiseSelect}\r\n                    value={this.state.selectedCruise}\r\n                    placeholder=\"Search Cruises\"\r\n                    styles={{\r\n                        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                        menuList: provided => ({...provided, backgroundColor: esriBackgroundColor}),\r\n\r\n                        input: provided => ({...provided,\r\n                            color: 'inherit',\r\n                            fontFamily: esriFonts\r\n                        }),\r\n\r\n                        control: provided => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            border: 'none',\r\n                            boxShadow: '1px 1px 1px 1px #242424',\r\n                            color: esriFontColor,\r\n                            borderRadius: 4,\r\n                            '&:hover': { \r\n                                border: `1px solid white`,\r\n                            },\r\n                            '&:focus-within': {\r\n                                borderColor: colors.orange\r\n                            }\r\n                        }),\r\n\r\n                        placeholder: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: colors.orange,\r\n                            fontSize: '14px'\r\n                        }),\r\n\r\n                        noOptionsMessage: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: esriFontColor,\r\n                            backgroundColor: esriBackgroundColor\r\n                        }),\r\n\r\n                        option: (provided, state) => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            color: state.isFocused ? colors.orange : 'white',\r\n                            '&:hover': { backgroundColor: 'rgba(122,67,0,.5)'}\r\n                        }),\r\n\r\n                        singleValue: (provided, state) => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: 'inherit',\r\n                            paddingRight: '20px',\r\n                        })\r\n                    }}\r\n                    theme={theme => ({\r\n                        ...theme,\r\n                        colors: {\r\n                            ...theme.colors,\r\n                            // Background color of hovered options\r\n                            primary25: '#e0e0e0',\r\n                            primary: '#212121',\r\n                        },\r\n                    })}\r\n                />\r\n                {selectedCruise &&\r\n                    <Table size='small' className={classes.cruiseInfo}>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Cruise:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Name}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Nickname:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Nickname}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            {\r\n                                selectedCruise.data.Start_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Start Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Start_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.End_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        End Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.End_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Chief_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Chief Scientist:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Chief_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Ship_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Ship:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Ship_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CruiseSelector));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\n\r\nimport CruiseSelector from './CruiseSelector';\r\nimport colors from '../Enums/colors';\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nconst drawButtonStyles = (theme) => ({\r\n    outerDiv: {\r\n        // padding:'12px 0 12px 0',\r\n        backgroundColor: 'transparent',\r\n        // width: '180px',\r\n        borderRadius: '4px',\r\n        marginRight: '20px'\r\n    },\r\n\r\n    drawButton: {\r\n        // border: '1px solid #333333',\r\n        border: `1px solid #333333`,\r\n        borderRadius: '4px',\r\n        color: colors.orange,\r\n        cursor: 'pointer',\r\n        padding: '6px',\r\n        width: '160px',\r\n        fontSize:'14px',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        // backgroundColor: 'rgba(255, 128, 0, .8)',\r\n        // backgroundColor: 'transparent',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif',\r\n        '&:hover': { \r\n            borderColor: 'white'\r\n        },\r\n    },\r\n\r\n    helpText: {\r\n        marginTop: 0,\r\n        color: 'white',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif'\r\n    },\r\n\r\n    cancelButton: {\r\n        display: 'none',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nconst DrawButtonRaw = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    return (\r\n        <div className={classes.outerDiv} id='draw-region-div'>\r\n            {showHelp && <p className={classes.helpText}>Click once to draw <br/>and again to finish</p>}\r\n            <button id='draw-button' className={classes.drawButton}>\r\n                Select Region\r\n            </button>\r\n            <button id='cancel-button' className={`${classes.drawButton} ${classes.cancelButton}`}>\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DrawButton = withStyles(drawButtonStyles)(DrawButtonRaw);\r\n\r\nconst polygonSymbol = {\r\n    type: \"polygon-3d\",\r\n    symbolLayers: [\r\n        {\r\n            type: \"fill\",\r\n            material: {\r\n            color: [255, 128, 0, .3]\r\n            },\r\n            outline: {\r\n                color: [255, 128, 0, 1],\r\n                size: '2px'\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.sketchModel = new props.esriModules.SketchViewModel({\r\n            layer: props.regionLayer,\r\n            view: props.view,\r\n            polygonSymbol,\r\n            defaultUpdateOptions: {\r\n                toggleToolOnClick: false,\r\n                tool: \"transform\"\r\n            }\r\n        })\r\n    }\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { view, esriModules, regionLayer, setShowHelp } = this.props;\r\n        var { sketchModel } = this;\r\n\r\n        // const updateOptions = {\r\n\r\n        // }\r\n\r\n        // var sketchModel = new esriModules.SketchViewModel({\r\n        //     layer: regionLayer,\r\n        //     view,\r\n        //     polygonSymbol,\r\n        //     defaultUpdateOptions: updateOptions\r\n        // })\r\n\r\n        var drawButton = document.getElementById('draw-button');\r\n        var cancelButton = document.getElementById('cancel-button');\r\n\r\n        sketchModel.on(\"create\", (event) => {\r\n            if(event.state === 'cancel'){\r\n                setShowHelp(false);\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n\r\n            if(event.state === \"complete\") {\r\n                setShowHelp(false);\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });        \r\n\r\n        sketchModel.on('update', (event) => {\r\n            if(event.toolEventInfo && event.toolEventInfo.type === 'move-stop'){\r\n                if(event.state === 'cancel') return;\r\n                // this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphics[0].geometry.extent));\r\n                this.props.updateDomainFromGraphicExtent(event.graphics[0].geometry.extent);\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });   \r\n        \r\n        drawButton.addEventListener(\"click\", (event) => {\r\n                regionLayer.removeAll();\r\n                setShowHelp(true);\r\n                sketchModel.create('rectangle', {\r\n                    mode:'click'            \r\n                });\r\n                drawButton.style.display = 'none';\r\n                cancelButton.style.display = 'inline-block';\r\n        });\r\n\r\n        cancelButton.addEventListener('click', (event) => {\r\n            sketchModel.cancel();\r\n            setShowHelp(false);\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })\r\n\r\n        view.ui.add('draw-region-div', 'bottom-right');\r\n        view.ui.add('cruise-selector', 'top-right');\r\n\r\n        view.ui.remove('zoom');\r\n        view.ui.remove('navigation-toggle');\r\n        view.ui.remove('compass');\r\n        view.ui.remove('attribution');\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst TrajectoryController = React.memo((props) => {\r\n    const { cruiseTrajectory, trajectoryLayer, esriModules } = props;\r\n    \r\n    if(cruiseTrajectory){\r\n        const { lons, lats } = cruiseTrajectory;\r\n\r\n        trajectoryLayer.removeAll();\r\n\r\n        var polyLines = [[]];\r\n        var lineIndex = 0;\r\n\r\n        let lonStart = lons[0];\r\n        let latStart = lats[0];\r\n        let maxDistance = 0;\r\n\r\n        // Create a new path array each time 180 lon is crossed\r\n        lons.forEach((lon, i) => {\r\n            let lat = lats[i];\r\n\r\n            let latDistance = Math.abs(lat - latStart);\r\n            let _lonDistance = Math.abs(lon - lonStart);\r\n            let lonDistance = _lonDistance > 180? 360 - _lonDistance : _lonDistance;\r\n\r\n            let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n            maxDistance = distance > maxDistance ? distance : maxDistance;\r\n\r\n            polyLines[lineIndex].push([lon, lat]);\r\n\r\n            if(i < lons.length - 1){\r\n                if((lon > 160 && lon < 180) && (lons[i + 1] > -180 && lons[i + 1] < -160)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n\r\n                if((lon > -180 && lon < -160) && (lon[i + 1] > 160 && lon[i + 1] < 180)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n            }\r\n        })\r\n\r\n        var cruiseTrajectorySymbol = {\r\n            type: 'line-3d',\r\n            symbolLayers: [{\r\n                type: 'line',\r\n                material: { color: [255, 128, 0, 1] },\r\n                cap:  'round',\r\n                join: 'round',\r\n                size: 2\r\n            }]\r\n        }\r\n\r\n        polyLines.forEach(line => {\r\n\r\n            let cruiseTrajectoryGeometry = {\r\n                type: 'polyline',\r\n                paths: line\r\n            }\r\n\r\n            let graphic = new esriModules.Graphic({\r\n                geometry: cruiseTrajectoryGeometry,\r\n                symbol: cruiseTrajectorySymbol\r\n            });\r\n\r\n            trajectoryLayer.add(graphic);\r\n        })\r\n\r\n        try {\r\n            const center = [lons[0], lats[0]];\r\n\r\n            var zoom = 7 - Math.floor(maxDistance / 10);            \r\n    \r\n            props.view.goTo({\r\n                target: center,\r\n                zoom\r\n            }, {\r\n                maxDuration: 2500,\r\n                speedFactor: .5\r\n            });    \r\n\r\n        } catch(e) {console.log(e)}\r\n\r\n    } else {\r\n        trajectoryLayer.removeAll();\r\n\r\n        props.view.goTo({\r\n            target: [-140, 30],\r\n            zoom: 3\r\n        }, {\r\n            maxDuration: 2500,\r\n            speedFactor: .5\r\n        }); \r\n    }\r\n    return '';\r\n})\r\n\r\nclass MapContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showHelp: false\r\n        }\r\n        this.regionLayer = new props.esriModules.GraphicsLayer();\r\n        this.trajectoryLayer = new props.esriModules.GraphicsLayer();\r\n    }\r\n\r\n    render = () => {\r\n        const { classes, esriModules, spParams, cruiseTrajectory, globeUIRef } = this.props;\r\n\r\n\r\n        const lat1 = parseFloat(spParams.lat1);\r\n        const lat2 = parseFloat(spParams.lat2);\r\n        const lon1 = parseFloat(spParams.lon1);\r\n        let _lon2 = parseFloat(spParams.lon2);\r\n        const lon2 = _lon2 < lon1 ? _lon2 + 360 : _lon2;\r\n\r\n        this.regionLayer.removeAll();\r\n\r\n        var polygon = {\r\n            type: 'polygon', \r\n            rings: [\r\n                [lon1, lat1],\r\n                [lon2, lat1],\r\n                [lon2, lat2],\r\n                [lon1, lat2],\r\n                [lon1, lat1]\r\n            ]\r\n        };\r\n\r\n        let regionGraphic = new esriModules.Graphic({\r\n            geometry: polygon,\r\n            symbol: polygonSymbol\r\n        })\r\n\r\n        this.regionLayer.add(regionGraphic);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ \r\n                        basemap: 'satellite',\r\n                        layers: [\r\n                            this.regionLayer,\r\n                            this.trajectoryLayer\r\n                        ]\r\n                    }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3\r\n                    }}\r\n                >\r\n                    <TrajectoryController \r\n                        cruiseTrajectory={cruiseTrajectory}\r\n                        trajectoryLayer={this.trajectoryLayer}\r\n                        esriModules={esriModules}\r\n                    />\r\n                    <UiComponents\r\n                        updateDomainFromGraphicExtent = {this.props.updateDomainFromGraphicExtent}\r\n                        esriModules={esriModules}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                        regionLayer={this.regionLayer}\r\n                        setShowHelp={(showHelp) => this.setState({...this.state, showHelp})}\r\n                        ref={this.props.globeUIRef}\r\n                    />\r\n                </Scene>\r\n                <DrawButton showHelp={this.state.showHelp}/>\r\n                <CruiseSelector updateParametersFromCruiseBoundary={this.props.updateParametersFromCruiseBoundary}/>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MapContainer);","const cleanSPParams = ({depth1, depth2, dt1, dt2, fields, lat1, lat2, lon1, lon2, spName, tableName}) => ({\r\n    depth1: parseFloat(depth1),\r\n    depth2: parseFloat(depth2),\r\n    dt1,\r\n    dt2,\r\n    fields,\r\n    lat1: parseFloat(lat1),\r\n    lat2: parseFloat(lat2),\r\n    lon1: parseFloat(lon1),\r\n    lon2: parseFloat(lon2),\r\n    spName,\r\n    tableName,\r\n})\r\n\r\nexport default cleanSPParams;","const localDateToString = (date) => {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate()\r\n\r\n    let nYear = year.toString();\r\n    let nMonth = month < 10 ? '0' + month.toString() : month.toString();\r\n    let nDay = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return nYear + '-' + nMonth + '-' + nDay;\r\n}\r\n\r\nexport default localDateToString;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport DataRetrievalForm from './DataRetrievalForm';\r\nimport VizControlPanel from './VizControlPanel';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend, cruiseListRequestSend, triggerShowCharts, completedShowCharts } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { loadModules } from 'esri-loader';\r\n\r\nimport depthUtils from '../Utility/depthCounter';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport Charts from './Charts';\r\nimport MapContainer from './MapContainer';\r\nimport colors from '../Enums/colors'\r\nimport cleanSPParams from '../Utility/cleanSPParams';\r\nimport localDateToString from '../Utility/localDateToString';\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport TopNavBar from './TopNavBar';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.sectionMap\r\n        },\r\n        [vizSubTypes.contourSectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.contourSectionMap\r\n        },\r\n        [vizSubTypes.timeSeries]: {\r\n            sp: storedProcedures.timeSeries,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: storedProcedures.depthProfile,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.heatmap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.heatmap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.contourMap\r\n        },\r\n        [vizSubTypes.sparse]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.sparse\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    loadingMessage: state.loadingMessage,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    cruiseList: state.cruiseList,\r\n    showChartsOnce: state.showChartsOnce\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n    cruiseListRequestSend,\r\n    completedShowCharts\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    background: {\r\n        backgroundColor: colors.backgroundGray\r\n    },\r\n\r\n    showCharts: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nclass Visualization extends Component {\r\n    globeUIRef = React.createRef();\r\n\r\n    state = {\r\n        filteredData: [],\r\n        opacity: 1,\r\n        showCharts: false,\r\n        showUI: false,\r\n        surfaceOnly: false,\r\n        irregularSpatialResolution: false,\r\n\r\n        spParams: {\r\n            tableName: '',\r\n            fields: null,\r\n            depth1: 0,\r\n            depth2: 0,\r\n            dt1: new Date(),\r\n            dt2: new Date(),\r\n            lat1: 0,\r\n            lat2: 0,\r\n            lon1: 0,\r\n            lon2: 0,\r\n            selectedVizType: ''\r\n        }\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.cruiseList) this.props.cruiseListRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'GraphicsLayer',\r\n            'SketchViewModel',\r\n            'Utils',\r\n            'Graphic',\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/layers/GraphicsLayer',\r\n            'esri/widgets/Sketch/SketchViewModel',\r\n            'esri/geometry/support/webMercatorUtils',\r\n            'esri/Graphic',\r\n        ], {version: 'next'});\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.showChartsOnce) {\r\n            this.props.completedShowCharts();\r\n            this.setState({...this.state, showCharts: true})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleLatLonChange = (event) => {\r\n        this.setState({\r\n            ...this.state, \r\n            spParams: {...this.state.spParams, [event.target.name]: event.target.value},\r\n        })\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt1:newDate}});\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt2:newDate}});\r\n        }\r\n    }\r\n\r\n    onVisualize = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, selectedVizType } = this.state.spParams;\r\n\r\n        let mapping = mapVizType(selectedVizType);\r\n        let parameters = cleanSPParams({\r\n            depth1,\r\n            depth2,\r\n            dt1: localDateToString(dt1),\r\n            dt2: localDateToString(dt2),\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        });\r\n\r\n        let payload = {\r\n            parameters,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        if(fields) {\r\n            let surfaceOnly = !fields.data.Depth_Min;\r\n            let irregularSpatialResolution = fields.data.Spatial_Resolution === 'Irregular';\r\n\r\n            let dt1 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt1 : utcDateStringToLocal(fields.data.Time_Min);\r\n            let dt2 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt2 : \r\n                irregularSpatialResolution ? utcDateStringToLocal(fields.data.Time_Max) :\r\n                utcDateStringToLocal(fields.data.Time_Min);\r\n\r\n            let lat1 = irregularSpatialResolution ? fields.data.Lat_Min : this.state.spParams.lat1;\r\n            let lat2 = irregularSpatialResolution ? fields.data.Lat_Max : this.state.spParams.lat2;\r\n            let lon1 = irregularSpatialResolution ? fields.data.Lon_Min : this.state.spParams.lon1;\r\n            let lon2 = irregularSpatialResolution ? fields.data.Lon_Max : this.state.spParams.lon2;\r\n            let depth1 = irregularSpatialResolution ? fields.data.Depth_Min : \r\n                depthUtils.piscesTable.has(fields.data.Table_Name) ? 0 :\r\n                depthUtils.darwinTable.has(fields.data.Table_Name) ? 0 : \r\n                this.state.spParams.depth1;\r\n\r\n            let depth2 = irregularSpatialResolution ? fields.data.Depth_Max : \r\n                depthUtils.piscesTable.has(fields.data.Table_Name) ? ((depthUtils.piscesDepths[0] + depthUtils.piscesDepths[1]) / 2).toFixed(2) :\r\n                depthUtils.darwinTable.has(fields.data.Table_Name) ? (depthUtils.darwinDepths[0] + depthUtils.darwinDepths[1]) : \r\n                this.state.spParams.depth2;\r\n\r\n            if(irregularSpatialResolution){\r\n                this.globeUIRef.current.props.view.goTo({\r\n                    target: [(parseFloat(lon1) + parseFloat(lon2)) / 2, (parseFloat(lat1) + parseFloat(lat2)) / 2],\r\n                    zoom: 3\r\n                }, {\r\n                    maxDuration: 2500,\r\n                    speedFactor: .5\r\n                }); \r\n            }\r\n\r\n            let tableName = fields.data.Table_Name;\r\n            \r\n            this.setState({...this.state,\r\n                surfaceOnly,\r\n                irregularSpatialResolution,\r\n                spParams: {...this.state.spParams, \r\n                    fields,\r\n                    dt1,\r\n                    dt2,\r\n                    lat1,\r\n                    lat2,\r\n                    lon1,\r\n                    lon2,\r\n                    depth1,\r\n                    depth2,\r\n                    tableName,\r\n                    selectedVizType: ''\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    updateParametersFromCruiseBoundary = (cruise) => {\r\n        if(cruise && this.state.spParams.fields){\r\n            this.props.snackbarOpen('Setting chart parameters to cruise boundaries.')\r\n            this.setState({...this.state,\r\n                spParams: {...this.state.spParams,\r\n                    lat1: cruise.data.Lat_Min,\r\n                    lat2: cruise.data.Lat_Max,\r\n                    lon1: cruise.data.Lon_Min,\r\n                    lon2: cruise.data.Lon_Max,\r\n                    dt1: utcDateStringToLocal(cruise.data.Start_Time),\r\n                    dt2: utcDateStringToLocal(cruise.data.End_Time)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleShowCharts = () => {\r\n        this.setState({...this.state, showCharts: true})\r\n    }\r\n\r\n    handleShowGlobe = () => {\r\n        this.setState({...this.state, showCharts: false})\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromGraphicExtent = (extent) => {\r\n        var _lon1 = extent.xmin > -180 ? extent.xmin : extent.xmin + 360;\r\n        var _lon2 = extent.xmax < 180 ? extent.xmax : extent.xmax - 360;\r\n\r\n        var newCoordinates = {\r\n            lat1: extent.ymin.toFixed(3),\r\n            lat2: extent.ymax.toFixed(3),\r\n            lon1: _lon1.toFixed(3),\r\n            lon2: _lon2.toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        return (\r\n            <div>\r\n                <TopNavBar/>\r\n                <DataRetrievalForm \r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                   {...this.state.spParams}\r\n                   surfaceOnly={this.state.surfaceOnly}\r\n                   irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                />\r\n                <VizControlPanel\r\n                    toggleChartView={this.toggleChartView}\r\n                    toggleShowUI={this.toggleShowUI}\r\n                    showCharts={this.state.showCharts}\r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                    {...this.state.spParams}\r\n                    surfaceOnly={this.state.surfaceOnly}\r\n                    irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                    showCharts={this.state.showCharts}\r\n                    handleShowCharts={this.handleShowCharts}\r\n                    handleShowGlobe={this.handleShowGlobe}\r\n                />\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer\r\n                            globeUIRef={this.globeUIRef}\r\n                            updateDomainFromGraphicExtent={this.updateDomainFromGraphicExtent}\r\n                            updateParametersFromCruiseBoundary={this.updateParametersFromCruiseBoundary}\r\n                            esriModules={this.state.esriModules}\r\n                            spParams={this.state.spParams}\r\n                            cruiseTrajectory={this.props.cruiseTrajectory}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                <div className={this.state.showCharts ? classes.showCharts : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password, or <Link onClick={this.handleClose} component={RouterLink} to={{pathname: '/register'}}>Register.</Link>\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Spinner from 'react-spinkit';\r\n\r\nconst styles = theme => ({\r\n    loader: {\r\n        backgroundColor: '#000000',\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        opacity: 0.5,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        zIndex: 9998\r\n    },\r\n\r\n    loaderContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItem: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 9999,\r\n        opacity: 1\r\n    },\r\n\r\n    spinnerText: {\r\n        zIndex: 10000,\r\n        color: '#FF8000',\r\n        marginTop: '25px',\r\n        opacity: 1\r\n    },\r\n\r\n    spinner: {\r\n        opacity: 1\r\n    }\r\n})\r\n\r\nconst LoadingOverlay = (props) => {\r\n    const { classes, loadingMessage } = props;\r\n\r\n    if(loadingMessage && loadingMessage.length){\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div className={classes.loaderContent}>\r\n                    <Spinner className={classes.spinner} color='#FF8000' name=\"ball-pulse-rise\" fadeIn='quarter'/>\r\n                    <Typography variant='h6' className={classes.spinnerText}>{loadingMessage}</Typography>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return '';\r\n\r\n}\r\n\r\nexport default withStyles(styles)(LoadingOverlay);","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper';\r\nimport LoadingOverlay from './LoadingOverlay';\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog,\r\n    loadingMessage: state.loadingMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n                <LoadingOverlay loadingMessage={this.props.loadingMessage}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nconst styles = theme => ({\r\n    landingWrapper: {\r\n        margin: '15vh auto'\r\n    },\r\n\r\n    welcomeMessage: {\r\n        color: '#ffffff',\r\n        maxWidth: '500px',\r\n        margin: `${theme.spacing(2)}px auto`\r\n    }\r\n})\r\n\r\nclass LandingPage extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.landingWrapper}>\r\n                <img \r\n                    src='/images/large_cmap_logo.png'\r\n                    height='290'\r\n                    width='600'\r\n                />\r\n                <Typography variant=\"body2\" component=\"p\" className={classes.welcomeMessage}>\r\n                    Welcome to Simons CMAP. This application is currently under heavy development, and some features may be incomplete.\r\n                </Typography>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingPage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport './App.scss';\n\nimport colors from './Enums/colors';\n\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\n\nimport Home from './Components/Home';\nimport Catalog from './Components/Catalog';\nimport Register from './Components/Register';\nimport Visualization from './Components/Visualization';\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\nimport LandingPage from './Components/LandingPage';\nimport TopNavBar from './Components/TopNavBar';\n\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    error: {\n      main: colors.errorYellow\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: colors.backgroundGray,\n      paper: colors.backgroundGray\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange,\n        borderRadius: '10%'\n      }\n    },\n\n    MuiListItemIcon: {\n      root: {\n        minWidth: '40px'\n      }\n    },\n\n    MuiFormHelperText: {\n      filled: {\n        paddingLeft: '1px',\n        paddingRight: '1px',\n        fontSize: '13px'\n      }\n    },\n\n    MuiListItem: {\n      gutters: {\n        paddingLeft: '6px',\n        paddingRight: '10px'\n      },\n\n      root: {\n        paddingTop: '4px',\n        paddingBottom: '4px'\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: 'transparent',\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },\n\n    MuiButtonGroup: {\n      groupedOutlined: {\n        '&:not(:first-child)': {\n          marginLeft: 0\n        }\n      }\n    },\n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiFilledInput: {\n      input: {\n        paddingLeft: '6px',\n      },\n\n      inputSelect: {\n        paddingBottom: '6px'\n      },\n\n      adornedEnd: {\n        paddingRight: '6px'\n      },\n\n      root: {\n        backgroundColor: 'transparent',\n        '&:hover': {\n          backgroundColor: 'transparent',\n        },\n        '&:disabled': {\n          backgroundColor: 'transparent',\n        }\n      }\n    }\n  }\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  loadingMessage: state.loadingMessage\n})\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.vizRef = React.createRef();\n  }\n\nrender() {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n        <BrowserRouter>\n          <GlobalUIComponentWrapper/>\n          <TopNavBar/>\n          <Switch>          \n            <Route exact path='/apikeymanagement' component={ Home } />\n            <Route exact path='/' component={ LandingPage } />\n            <Route exact path='/catalog' component={ Catalog } />\n            <Route exact path='/register' component={ Register } />\n            <Route exact path='/visualization' component={Visualization} />\n          </Switch>\n        </BrowserRouter>\n        </MuiThemeProvider>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n}\n\nexport default connect(mapStateToProps, null)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\n\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}