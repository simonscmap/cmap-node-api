{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","Enums/spatialResolutions.js","Utility/mapSpatialResolutionToNumber.js","Utility/GenerateSpatialArray.js","Utility/flattenArray.js","Utility/splitData.js","Utility/mergeArraysAndComputeMeans.js","Utility/mergeArrays.js","Enums/visualizationSubTypes.js","Enums/temporalResolutions.js","Classes/SpaceTimeData.js","Enums/storedProcedures.js","Classes/TimeSeriesData.js","Classes/DepthProfileData.js","Classes/SectionMapData.js","Classes/SparseData.js","api.js","Redux/sagas.js","Redux/store.js","Enums/colors.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/TopNavBar.js","Components/Home.js","Components/GridDetail.js","Components/ConnectedTooltip.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/regionRenderModes.js","Enums/validation.js","Components/TableStatsDialog.js","Utility/mapTemporalResolutionToNumber.js","Components/DataRetrievalForm.js","Utility/utcDateStringToLocal.js","Components/VizControlPanel.js","Enums/months.js","Utility/handleXTicks.js","Utility/handleChartDatestring.js","Utility/chartBase.js","Components/ChartComponents/ChartControlPanel.js","Components/ChartComponents/SpaceTimeChart.js","Components/ChartComponents/TimeSeriesChart.js","Components/ChartComponents/DepthProfileChart.js","Components/ChartComponents/SectionMapChart.js","Components/ChartComponents/SparseScatter.js","Components/ChartComponents/SparseMap.js","Components/Charts.js","Components/CruiseSelector.js","Components/MapContainer.js","Utility/cleanSPParams.js","Utility/localDateToString.js","Components/Visualization.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/LoadingOverlay.js","Components/GlobalUIComponentWrapper.js","Components/LandingPage.js","Components/NavDrawer.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","CRUISE_TRAJECTORY_REQUEST_SEND","CRUISE_LIST_REQUEST_SEND","initialState","catalog","snackbarIsOpen","snackbarMessage","loadingMessage","showHelp","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","getCruiseTrajectoryRequestState","cruiseTrajectory","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","cruiseList","getCruiseListRequestState","showChartsOnce","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","trajectory","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","setLoadingMessage","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addChart","cruiseTrajectoryRequestSend","id","visualizationActionTypes","cruiseTrajectoryRequestSuccess","cruiseTrajectoryRequestProcessing","cruiseListRequestSend","cruiseListRequestSuccess","cruiseListRequestFailure","cruiseListRequestProcessing","triggerShowCharts","apiUrl","spatialResolutions","irregular","halfDegree","quarterDegree","twentyFifthDegree","fourKm","twelfthDegree","seventyKm","oneDegree","mapSpatialResolutionToNumber","resolution","_map","defineProperty","generateSpatialArray","start","end","arr","i","push","flattenArray","flattenedArray","length","j","splitData","changeInterval","numDistinct","Math","floor","mergeArraysAndComputeMeans","mergeTargetDistance","nextMergeStartDistance","numArraysPerMerge","mergedArrays","travelDistance","subArray","sum","count","k","mergeArrays","subTypes","sectionMap","timeSeries","histogram","depthProfile","heatmap","contourMap","sparse","temporalResolutions","threeMinutes","sixHourly","daily","weekly","monthly","annual","monthlyClimatology","threeDay","eightDayRunning","eightDays","SpaceTimeData","_this","this","classCallCheck","generateCsv","dates","Array","from","depths","hasDepth","csvArray","parameters","fields","variableValues","lats","lons","isNaN","join","metadata","hasHours","isMonthly","Set","zMin","zMax","extent","indexAdjust","lonMin","lonMax","latMin","latMax","distinctLatCount","distinctLonCount","row","lat","parseFloat","_lon","lon","lon1","hasHour","Table_Name","Temporal_Resolution","time","value","add","Date","setUTCHours","toISOString","size","lonCount","latCount","quantile1","quantile","quantile2","undefined","toPrecision","spatialResolution","Spatial_Resolution","round","subType","splitByDate","splitByDepth","variableValueSubsets","_this2","depthInterval","dateInterval","map","subset","vizSubTypes","storedProcedures","spaceTime","TimeSeriesData","stds","depth","depthIndexAdjust","csvString","DepthProfileData","SectionMapData","lonStart","latStart","orientation","latsDistinct","lonsDistinct","zonalPlotDepths","meridionalPlotDepths","lonsList","lon2","latsList","lat2","depthsList","splitBySpace","spaceCount","lonInterval","latInterval","SparseData","Depth_Min","variableIndex","times","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","reduce","queryString","key","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","csvParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","CSVParser","columns","on","record","read","sent","ok","abrupt","getReader","done","write","decode","stop","keyRetrieval","_callee2","_context2","json","keyCreation","_ref3","_callee3","description","_context3","trim","_x","apply","arguments","visualization","storedProcedureRequest","_ref4","_callee4","vizData","_context4","t0","spName","console","log","e","_x2","getTableStats","_ref5","_callee5","tableName","_context5","_x3","cruiseTrajectoryRequest","_ref6","_callee6","_context6","_x4","_callee7","_context7","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","queryRequest","cruiseListRequest","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","watchCruiseTrajectoryRequest","watchCruiseListRequest","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_marked6","_marked7","_context8","visualizationActions","query","_marked8","_context9","delay","finalize","_marked9","_context10","_marked10","_context11","_marked11","_context12","takeLatest","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","_context22","_marked22","_context23","all","_marked23","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","colors","orange","backgroundGray","aqua","withStyles","theme","centered","position","top","props","classes","react_default","createElement","CircularProgress","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleClick","handleChange","event","setState","target","wrapper","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","warningCaption","Grid","container","alignItems","justify","spacing","item","TextField","margin","name","onChange","placeholder","descriptionField","Button","disabled","color","onClick","Components_LoadingSpinner","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","fontSize","useEffect","Link","component","RouterLink","to","pathname","toggleShowHelp","TopNavBar","handleLogOut","clearState","username","password","handleNavigate","route","history","handleOutsideNavigate","url","open","_this$props","navWrapper","navLink","rightNavLink","withRouter","appBar","backgroundColor","boxShadow","toolBar","zIndex","paddingLeft","textAlign","boxSizing","cursor","marginRight","&:hover","textDecoration","fontWeight","display","float","rightLinkWrapper","Home","Fragment","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","height","infoCard","padding","gridClass","gridItem","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","variableDetailTable","marginLeft","variableDetailTableRow","variableDetailTableCell","borderBottomColor","xs","src","imageSource","alt","Dataset_Description","Data_Source","Distributor","tooltip","palette","secondary","main","opacity","Tooltip","placement","popper","children","detailCellRendererParams","template","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","handleColumnRowGroupChanged","forEach","column","setColumnVisible","colId","render","gridPaper","Components_ConnectedTooltip","gridSearch","autoFocus","label","InputLabelProps","shrink","gridWrapper","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","firstName","optional","lastName","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","regionRenderModes","draw","form","validation","depthOneIsLower","depthOneOutOfBounds","depthTwoOutOfBounds","negative","date","dateOneIsLater","dateOneOutOfBounds","dateTwoOutOfBounds","latOneIsHigher","latOneOutOfBounds","latTwoOutOfBounds","lonOneIsHigher","lonOneOutOfBounds","lonTwoOutOfBounds","dataIsIrregular","dateRangeRequired","depthRangeRequired","surfaceOnlyDataset","irregularOnly","dataSizeTooLarge","generic","invalid","dataSizeWarning","dataSizePrevent","Dialog","onClose","DialogTitle","Variable","DialogContent","DialogContentText","Long_Name","Sensor","Time_Min","slice","Time_Max","Lat_Min","Lat_Max","Lon_Min","Lon_Max","Depth_Max","Variable_Min","Unit","Variable_Max","Variable_Mean","Variable_Std","mapTemporalResolutionToNumber","reactWindowListRef","React","createRef","MenuList","componentDidUpdate","prevProps","prevState","findIndex","child","isFocused","current","scrollToItem","options","maxHeight","_getValue","getValue","slicedToArray","initialOffset","indexOf","dist_index_esm","style","itemCount","itemSize","initialScrollOffset","ref","_ref","DropdownIndicator","chunk_5d200a41_browser_esm","ArrowDropDown","SingleValue","assign","Option","DataRetrievalForm","search","addDocuments","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","handleVisualizationSpeedDialClose","visualizationSpeedDialOpen","handleVisualizationSpeedDialOpen","handleVisualizationSpeedDialClick","getSelectOptionsFromCatalogItems","items","onAutoSuggestChange","searchString","searchField","estimateDataSize","_this2$props","dt1","dt2","lat1","selectedVizType","date1","date2","res","dayDiff","checkStartDepth","surfaceOnly","depth1","depth2","replace","toFixed","checkEndDepth","checkStartDate","checkEndDate","checkStartLat","checkEndLat","checkStartLon","checkEndLon","checkHeatmap","irregularSpatialResolution","checkContour","checkSection","checkHistogram","checkTimeSeries","checkDepthProfile","checkSparseMap","checkGeneralWarn","checkGeneralPrevent","JsSearch","searchIndex","addIndex","_this3","_this$state","_this$props2","_validations","fill","_validations2","startDepthMessage","endDepthMessage","startLatMessage","endLatMessage","startLonMessage","endLonMessage","heatmapMessage","contourMessage","sectionMapMessage","histogramMessage","timeSeriesMessage","depthProfileMessage","sparseMapMessage","generalWarnMessage","generalPreventMessage","parametersAreInvalid","some","showUI","displayNone","Components_TableStatsDialog","dataRetrievalFormPaper","shortenHeight","react_select_browser_esm","isLoading","components","IndicatorSeparator","isClearable","onInputChange","filterOption","variableSelect","escapeClearsValue","updateFields","styles","menu","provided","input","fontFamily","control","border","borderColor","&:focus-within","noOptionsMessage","option","_ref2",":active","&:after","singleValue","paddingRight","primary25","primary","IconButton","LibraryBooks","datePickerGridSection","material_ui_pickers_esm","format","minDate","maxDate","autoOk","handleStartDateChange","inputVariant","handleEndDateChange","FormControl","InputLabel","htmlFor","OutlinedInput","aria-describedby","labelWidth","FormHelperText","handleLatLonChange","vizTypeSelectFormControl","Select","inputProps","MenuItem","onVisualize","generalMessage","dataRetrievalFormField","retrieveDataButton","visualizationSpeedDial","visualizeButton","borderRadius","visualizeButtonText","dominantBaseline","textAnchor","vizSelect","utcDateStringToLocal","utcString","utcYear","getUTCFullYear","utcMonth","getUTCMonth","utcDate","getUTCDate","newDate","setFullYear","clearCharts","ArrowRight","formatOptionLabel","meta","context","VizControlPanel","handleOpenControlPanel","showControlPanel","handleCloseControlPanel","stopPropagation","showCharts","handleShowCharts","handleShowGlobe","closePanelChevron","aria-label","ChevronLeft","openPanelChevron","ChevronRight","Drawer","drawer","paper","drawerPaper","anchor","ButtonGroup","groupedButtons","depressed","Language","InsertChartOutlined","clearChartsButton","Delete","backdropFilter","valueContainer","borderBottom","tableStatsButton","datePicker","KeyboardButtonProps","datePickerInputAdornment","formGridItem","InputProps","padLeft","fullWidth","bottom","navDrawerWidth","controlPanelForm","borderLeft","fontVariant","months","handleXTicks","infoObject","sectionSize","lonRange","tickvals","ceil","ticktext","tickmode","handleChartDatestring","dateString","parseInt","chartBase","layout","font","paper_bgcolor","t","config","modeBarButtonsToRemove","displaylogo","annotations","distributor","text","xref","yref","yshift","showarrow","colorscaleOptions","chartWrapper","popover","paddingBottom","iconButton","colorForm","firstIcon","borderTopLeftRadius","borderBottomLeftRadius","lastIcon","borderTopRightRadius","borderBottomRightRadius","buttonGroup","maxWidth","colorscaleMenu","onToggleSplitByDate","onToggleSplitByDepth","downloadCsv","handleZValueConfirm","zValues","markerOptions","handleMarkerOptionsConfirm","_useState","useState","_useState2","paletteAnchorElement","setPaletteAnchorElement","_React$useState","_React$useState2","zScalePopoverAnchorElement","setZScalePopoverAnchorElement","_React$useState3","_React$useState4","localZMin","setLocalZMin","_React$useState5","_React$useState6","localZMax","setLocalZMax","zScalePopoverOpen","zScalePopoverID","handleZScalePopoverClose","zScaleValidations","zMinMessage","zMaxMessage","_React$useState7","_React$useState8","markerOptionsAnchorElement","setMarkerOptionsAnchorElement","_React$useState9","_React$useState10","localMarkerOpacity","setLocalMarkerOpacity","_React$useState11","_React$useState12","localMarkerColor","setLocalMarkerColor","_React$useState13","_React$useState14","localMarkerSize","setLocalMarkerSize","markerPopoverOpen","markerPopoverID","handleMarkerOptionsClose","markerOptionsValidations","checkLocalMarkerOpacity","checkLocalMarkerSize","localMarkerOpacityMessage","localMarkerSizeMessage","DateRange","Waves","CloudDownload","currentTarget","SwapVert","handlePaletteChoice","Palette","Gamepad","Menu","anchorEl","keepMounted","Popover","anchorOrigin","vertical","horizontal","transformOrigin","determineHeight","buttonBlock","iconButtonWrapper","plots","_props$chart","chart","setSplitByDate","_useState3","_useState4","setSplitByDepth","_useState5","_useState6","subTypeState","_useState7","_useState8","setPalette","_useState9","_useState10","setZValues","_zValues","subSets","generatePlotData","subsets","xTicks","variableName","handleDateString","react_plotly_default","zauto","zmin","zmax","x","y","z","connectgaps","autocolorscale","colorscale","contours","coloring","showlabels","labelfont","family","labelformat","colorbar","exponentformat","xaxis","yaxis","handleContourMap","zsmooth","handleHeatmap","handleHistogram","ChartComponents_ChartControlPanel","setTimeout","requestAnimationFrame","values","csv","blob","Blob","URL","createObjectURL","document","setAttribute","appendChild","click","removeChild","setMarkerOptions","error_y","array","visible","line","marker","distinctMeridiansOrParallelsForSplitting","xAxisLabel","spaceTitle","handleSectionMap","SparseScatter","xValues","xTitle","mode","tabProps","aria-controls","SparseTabPanel","selectedTab","controlPanelProps","hidden","tab","setTab","plot","mapbox","center","mapboxAccessToken","handleSparseMap","scatter","Tabs","Tab","SparseMap_SparseTabPanel","ChartComponents_SparseScatter","Charts","chartPaper","ChartComponents_SparseMap","ChartComponents_SpaceTimeChart","ChartComponents_TimeSeriesChart","ChartComponents_DepthProfileChart","chartsContainer","cruiseTrajectoryClear","esriFonts","CruiseSelector","getSelectOptionsFromCruiseList","list","Nickname","handleCruiseSelect","selection","ID","selectedCruise","outerDiv","blurEffectDiv","getCruiseListState","cruiseSelect","menuList","cruiseInfo","cruiseInfoCell","Name","Start_Time","End_Time","Chief_Name","Ship_Name","borderStyle","DrawButton","drawButton","helpText","cancelButton","polygonSymbol","symbolLayers","material","outline","UiComponents","shouldComponentUpdate","nextProps","nextState","view","esriModules","regionLayer","setShowHelp","drawMode","sketchModel","SketchViewModel","layer","defaultUpdateOptions","toggleToolOnClick","tool","getElementById","updateDomainFromGraphicExtent","Utils","webMercatorToGeographic","graphic","geometry","graphics","addEventListener","removeAll","create","cancel","ui","remove","TrajectoryController","memo","trajectoryLayer","polyLines","lineIndex","maxDistance","latDistance","abs","_lonDistance","lonDistance","distance","sqrt","cruiseTrajectorySymbol","cap","cruiseTrajectoryGeometry","paths","Graphic","symbol","zoom","goTo","maxDuration","speedFactor","MapContainer","_this3$props","regionRenderMode","spParams","_lon2","polygon","rings","esm","mapProperties","basemap","viewProperties","MapContainer_UiComponents","updateDomainFromMap","measurementPositions","globeUIRef","Components_CruiseSelector","GraphicsLayer","cleanSPParams","localDateToString","year","getFullYear","month","getMonth","day","getDate","toString","mapVizType","vizType","_mapping","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","completedShowCharts","Visualization","filteredData","_this$state$spParams","mapping","toggleShowUI","coordinates","newCoordinates","min","max","ymin","ymax","xmin","xmax","esriModuleNames","loadModules","loadedModules","accumulator","currentValue","currentIndex","Components_DataRetrievalForm","Components_VizControlPanel","toggleChartView","Components_MapContainer","Components_Charts","background","userLoginRequestSend","LoginDialog","handleLogin","handleClose","aria-labelledby","onSubmit","preventDefault","DialogActions","snackbarClose","centerText","Snackbar","autoHideDuration","loader","right","loaderContent","flexDirection","alignItem","spinnerText","spinner","dist","fadeIn","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","Components_LoginDialog","Components_SnackbarWrapper","Components_LoadingOverlay","inlineBlock","LandingPage","landingWrapper","welcomeMessage","primaryTypographyProps","nestedPrimaryTypographyProps","PermanentDrawerLeft","handleOpenDRForm","showDataRetrievalForm","handleCloseDRForm","List","ListItem","ListItemIcon","esm_Home","ListItemText","AccountCircle","CollectionsBookmark","Collapse","in","timeout","unmountOnExit","disablePadding","dense","nestedListItem","inset","drForm","drFormPaper","drFormHead","flexShrink","logo","moveRight","createMuiTheme","typography","useNextVariants","contrastText","default","overrides","MuiIconButton","MuiListItemIcon","MuiFormHelperText","filled","MuiListItem","gutters","MuiToolbar","MuiOutlinedInput","&$focused","MuiButtonGroup","groupedOutlined","&:not(:first-child)","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","MuiFilledInput","inputSelect","adornedEnd","App","vizRef","utils","DateFnsUtils","MuiThemeProvider","react_router_dom","Components_GlobalUIComponentWrapper","react_router","exact","path","LicenseManager","setLicenseKey","rootElement","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d1173ae4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    case interfaceActionTypes.SET_LOADING_MESSAGE: return {...state, loadingMessage: action.payload.message}\r\n    \r\n    case interfaceActionTypes.TOGGLE_SHOW_HELP: return {...state, showHelp: !state.showHelp}\r\n    \r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\n\r\nexport const GET_TABLE_STATS = 'GET_TABLE_STATS';\r\nexport const GET_TABLE_STATS_REQUEST_PROCESSING = 'GET_TABLE_STATS_REQUEST_PROCESSING';\r\nexport const STORE_TABLE_STATS = 'STORE_TABLE_STATS';\r\n\r\nexport const CRUISE_TRAJECTORY_REQUEST_SEND = 'CRUISE_TRAJECTORY_REQUEST_SEND';\r\nexport const CRUISE_TRAJECTORY_REQUEST_SUCCESS = 'CRUISE_TRAJECTORY_REQUEST_SUCCESS';\r\nexport const CRUISE_TRAJECTORY_REQUEST_FAILURE = 'CRUISE_TRAJECTORY_REQUEST_FAILURE';\r\nexport const CRUISE_TRAJECTORY_REQUEST_PROCESSING = 'CRUISE_TRAJECTORY_REQUEST_PROCESSING';\r\nexport const CRUISE_TRAJECTORY_CLEAR = 'CRUISE_TRAJECTORY_CLEAR';\r\n\r\nexport const CRUISE_LIST_REQUEST_SEND = 'CRUISE_LIST_REQUEST_SEND';\r\nexport const CRUISE_LIST_REQUEST_SUCCESS = 'CRUISE_LIST_REQUEST_SUCCESS';\r\nexport const CRUISE_LIST_REQUEST_FAILURE = 'CRUISE_LIST_REQUEST_FAILURE';\r\nexport const CRUISE_LIST_REQUEST_PROCESSING = 'CRUISE_LIST_REQUEST_PROCESSING';\r\n\r\nexport const TRIGGER_SHOW_CHARTS = 'TRIGGER_SHOW_CHARTS';\r\nexport const COMPLETED_SHOW_CHARTS = 'COMPLETED_SHOW_CHARTS';","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n    loadingMessage: '',\r\n    showHelp: false,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    getCruiseTrajectoryRequestState: null,\r\n    cruiseTrajectory: null,\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    cruiseList: [],\r\n    getCruiseListRequestState: null,\r\n    showChartsOnce: null\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';\r\n\r\nexport const SET_LOADING_MESSAGE = 'SET_LOADING_MESSAGE';\r\n\r\nexport const TOGGLE_SHOW_HELP = 'TOGGLE_SHOW_HELP';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING: return {...state, getCruiseTrajectoryRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS: return {...state,\r\n            cruiseTrajectory: action.payload.trajectory,\r\n            getCruiseTrajectoryRequestState: states.succeeded\r\n        }\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR: return {...state, cruiseTrajectory: null}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE: return {...state, getCruiseTrajectoryRequestState: states.failed}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING: return {...state, getCruiseListRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS: return {\r\n            ...state,\r\n            getCruiseListRequestState: states.succeeded,\r\n            cruiseList: action.payload.cruiseList\r\n        }\r\n\r\n        case visualizationActionTypes.TRIGGER_SHOW_CHARTS: return {...state, showChartsOnce: true}\r\n        case visualizationActionTypes.COMPLETED_SHOW_CHARTS: return {...state, showChartsOnce: false}\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})\r\n\r\nexport const setLoadingMessage = (message) => ({\r\n    type:interfaceActionTypes.SET_LOADING_MESSAGE,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const toggleShowHelp = () => ({\r\n    type: interfaceActionTypes.TOGGLE_SHOW_HELP\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const getTableStats = (tableName) => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS,\r\n    payload: {\r\n        tableName\r\n    }\r\n})\r\n\r\nexport const getTableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storeTableStats = (tableStats) => ({\r\n    type: visualizationActionTypes.STORE_TABLE_STATS,\r\n    payload: {\r\n        tableStats\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSuccess = (trajectory) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS,\r\n    payload: {\r\n        trajectory\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseTrajectoryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const cruiseTrajectoryClear = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR\r\n})\r\n\r\nexport const cruiseListRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SEND,\r\n})\r\n\r\nexport const cruiseListRequestSuccess = (cruiseList) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS,\r\n    payload: {\r\n        cruiseList\r\n    }\r\n})\r\n\r\nexport const cruiseListRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseListRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const triggerShowCharts = () => ({\r\n    type: visualizationActionTypes.TRIGGER_SHOW_CHARTS\r\n})\r\n\r\nexport const completedShowCharts = () => ({\r\n    type: visualizationActionTypes.COMPLETED_SHOW_CHARTS\r\n})","// export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\nexport const apiUrl = 'https://simonscmap.dev';","const spatialResolutions = {\r\n    irregular: 'Irregular',\r\n    halfDegree: '1/2° X 1/2°' ,\r\n    quarterDegree: '1/4° X 1/4°' ,\r\n    twentyFifthDegree: '1/25° X 1/25°' ,\r\n    fourKm: '4km X 4km',\r\n    twelfthDegree: '1/12° X 1/12°',\r\n    seventyKm: '70km X 70km',\r\n    oneDegree: '1° X 1°'\r\n}\r\n\r\nexport default spatialResolutions;","import spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nconst mapSpatialResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [spatialResolutions.halfDegree] : .5,\r\n        [spatialResolutions.quarterDegree] : .25,\r\n        [spatialResolutions.twentyFifthDegree] : .04,\r\n        [spatialResolutions.fourKm] : .041672,\r\n        [spatialResolutions.twelfthDegree] : .083333,\r\n        [spatialResolutions.oneDegree] : 1,\r\n        [spatialResolutions.seventyKm] : .25\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapSpatialResolutionToNumber;","const generateSpatialArray = (start, resolution, end) => {\r\n    let arr = [];\r\n\r\n    for(let i = start; i <= end; i += resolution){\r\n        arr.push(i);\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nexport default generateSpatialArray;","// Flattens an array by 1 level\r\n// [[[],[]], [[],[]], [[],[]]] => [[], [], [], [], [], []]\r\n\r\nconst flattenArray = (arr) => {\r\n    let flattenedArray = [];\r\n\r\n    for(let i = 0; i < arr.length; i++){\r\n        for(let j = 0; j < arr[i].length; j++){\r\n            flattenedArray.push(arr[i][j]);\r\n        }\r\n    }\r\n\r\n    return flattenedArray;\r\n}\r\n\r\nexport default flattenArray;","// Interval number of indices between changes in this parameter, or in order words\r\n// how many times will we see the same value for this parameter in a row before it changes\r\n// as we iterate through the values array.\r\n// We use modulo for cases where data.length / interval is larger than the number of \r\n// distinct values for that parameter.\r\n\r\nconst splitData = (data, changeInterval, numDistinct) => {\r\n    var splitData = [];\r\n\r\n    for(let i = 0; i < numDistinct; i++){\r\n        splitData.push([]);\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        let index = Math.floor(i / changeInterval) % numDistinct;\r\n        splitData[index].push(data[i]);\r\n    }\r\n\r\n    return splitData;\r\n}\r\n\r\nexport default splitData;","// mergeTargetDistance - number of hops between arrays being merged\r\n// mergeTargetNumber - number of arrays being merged - implicit\r\n// nextStartDistance - once a merge is complete how many hops to next start\r\nconst mergeArraysAndComputeMeans = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n    \r\n    // Find each merging start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        // Iterate through each value in the first array of this merge. Count\r\n        // the number of values summed so we can ignore nulls and compute a mean.\r\n        for(let j = 0; j < data[i].length; j ++){\r\n            let sum = 0;\r\n            let count = 0;\r\n\r\n            // Aggregate values of all merge targets\r\n            for(let k = i; k < i + (mergeTargetDistance * numArraysPerMerge); k += mergeTargetDistance){\r\n                if(data[k][j] !== null) {\r\n                    sum += data[k][j];\r\n                    count ++;\r\n                };\r\n            }\r\n            subArray.push(count < 1 ? null : sum / (count));\r\n        }\r\n\r\n        mergedArrays.push(subArray)\r\n    }\r\n\r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArraysAndComputeMeans;","const mergeArrays = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n\r\n    // Find each merge start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        for(let j = i; j <= i + travelDistance; j += mergeTargetDistance){\r\n            subArray = [...subArray, ...data[j]];\r\n        }\r\n\r\n        mergedArrays.push(subArray);\r\n    }\r\n   \r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArrays;\r\n\r\n","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    heatmap: 'Heatmap',\r\n    contourMap: 'Contour Map',\r\n    sparse: 'Sparse'\r\n}\r\n\r\nexport default subTypes;","const temporalResolutions = {\r\n    threeMinutes: 'Three Minutes',\r\n    sixHourly: 'Six Hourly',\r\n    daily: 'Daily',\r\n    weekly: 'Weekly',\r\n    monthly: 'Monthly',\r\n    annual: 'Annual',\r\n    irregular: 'Irregular',\r\n    monthlyClimatology: 'Monthly Climatology',\r\n    threeDay: 'Three Days',\r\n    eightDayRunning: 'Eight Day Running',\r\n    eightDays: 'Eight Days '\r\n}\r\n\r\nexport default temporalResolutions;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/mergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nclass SpaceTimeData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n\r\n        this.hasDepth = null;\r\n        this.hasHours = null;\r\n        this.isMonthly = null;\r\n\r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n        this.indexAdjust = null;\r\n        this.payload = payload;\r\n        this.lats = [];\r\n        this.lons = [];\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n\r\n        this.distinctLatCount = null;\r\n        this.distinctLonCount = null;\r\n    }\r\n\r\n    add(row) {\r\n        \r\n        let lat = parseFloat(row[1]);\r\n        let _lon = parseFloat(row[2]);\r\n        let lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n\r\n        if(this.hasDepth === null) {\r\n            this.hasHour = this.metadata.Table_Name === 'tblWind_NRT';\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n            this.hasDepth = row.length === 5 && !this.hasHour;\r\n            this.indexAdjust = this.hasDepth || this.hasHour? 1 : 0;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n        }\r\n\r\n        let value = parseFloat(row[3 + this.indexAdjust]);\r\n\r\n        if(this.hasDepth){\r\n            this.depths.add(row[3]);\r\n        }\r\n\r\n        var time;\r\n        if(this.hasHour){\r\n            time = new Date(row[0]);\r\n            time.setUTCHours(row[3])\r\n            time = time.toISOString();\r\n        } else time = row[0];\r\n        this.dates.add(time);\r\n        this.lats.push(lat);\r\n\r\n        this.lons.push(lon);\r\n\r\n        if(lon < this.lonMin) this.lonMin = lon;\r\n        if(lon > this.lonMax) this.lonMax = lon;\r\n        if(lat < this.latMin) this.latMin = lat;\r\n        if(lat > this.latMax) this.latMax = lat;\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n\r\n        if(this.depths.size === 0) this.depths.add('Surface');\r\n\r\n        this.lonCount = this.lons.length / this.dates.size / this.depths.size;\r\n        this.latCount = this.lats.length / this.dates.size / this.depths.size;\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n        \r\n        this.distinctLatCount = Math.round((this.latMax - this.latMin) / spatialResolution) + 1;\r\n        this.distinctLonCount = Math.round((this.lonMax - this.lonMin) / spatialResolution) + 1;\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {        \r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const latInterval = this.distinctLonCount;\r\n        const depthInterval = latInterval * this.distinctLatCount;\r\n        const dateInterval = depthInterval * this.depths.size;\r\n\r\n        // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n        variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, depthInterval, this.depths.size));\r\n        variableValueSubsets = flattenArray(variableValueSubsets);\r\n\r\n        // Contour and heatmap compute mean variable values per lat and lon\r\n        // when not split by date and/or time\r\n        if(subType === vizSubTypes.contourMap || subType === vizSubTypes.heatmap) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    this.depths.size, \r\n                    this.depths.size\r\n                    );\r\n    \r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    this.depths.size, \r\n                    1, \r\n                    this.dates.size\r\n                    );\r\n    \r\n            } else {\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    variableValueSubsets.length, \r\n                    variableValueSubsets.length\r\n                    );            \r\n            }\r\n        } \r\n        \r\n        // Histograms split and aggregate without computing means\r\n        else if (subType === vizSubTypes.histogram) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets, \r\n                    1,\r\n                    this.depths.size,\r\n                    this.depths.size\r\n                    );\r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets,\r\n                    this.depths.size,\r\n                    1,\r\n                    this.dates.size\r\n                );\r\n            } else {\r\n                variableValueSubsets = [this.variableValues];\r\n            }\r\n        }\r\n\r\n        // Nothing here yet\r\n        else {}\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${depths[Math.floor(i / (this.variableValues.length / (dates.length * depths.length))) % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SpaceTimeData;","const storedProcedures = {\r\n    sectionMap: 'uspSectionMap',\r\n    timeSeries: 'uspTimeSeries',\r\n    spaceTime: 'uspSpaceTime',\r\n    depthProfile: 'uspDepthProfile'\r\n}\r\n\r\nexport default storedProcedures;","class TimeSeriesData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.dates = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depth = null;\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.depthIndexAdjust = row.length === 6 ? 1 : 0;\r\n            this.lat = row[1];\r\n            this.lon = row[2];\r\n            this.depth = row.length === 6 ? row[3] : false;\r\n        }\r\n\r\n        this.variableValues.push(row[3 + this.depthIndexAdjust]);\r\n        this.stds.push(row[4 + this.depthIndexAdjust]);\r\n        this.dates.push(row[0]);\r\n    }\r\n\r\n    finalize() {\r\n        if(this.depth === false) this.depth = 'Surface';\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }    \r\n\r\n    generateCsv() {\r\n        let csvString = `time,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.dates[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default TimeSeriesData;","class DepthProfileData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depths = [];\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.lat = parseFloat(row[0]);\r\n            this.lon = parseFloat(row[1]);\r\n        }\r\n\r\n        this.variableValues.push(parseFloat(row[2]));\r\n        this.stds.push(parseFloat(row[3]));\r\n        this.depths.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        // pass\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }\r\n    \r\n    generateCsv() {\r\n        let csvString = `depth,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default DepthProfileData;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\n\r\nclass SectionMapData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        \r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n        \r\n        this.lonStart = null;\r\n        this.latStart = null;\r\n        this.lonCount = null;\r\n        this.latCount = null;\r\n        \r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.orientation = null;\r\n        \r\n        this.latsDistinct = null;\r\n        this.lonsDistinct = null;\r\n\r\n        this.lats = null;\r\n        this.lons = null;\r\n        this.zonalPlotDepths = null;\r\n        this.meridionalPlotDepths = null;\r\n    }\r\n\r\n    // time, lat, lon, depth, value\r\n    add(row) {\r\n        // Only on first row\r\n        if(this.latStart === null) {\r\n            this.latStart = parseFloat(row[1]);\r\n            this.lonStart = parseFloat(row[2]);\r\n        }\r\n\r\n        this.depths.add(row[3]);\r\n        this.dates.add(row[0]);\r\n\r\n        this.variableValues.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        const spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n\r\n        // Simple arrays of lats and lons\r\n        let lonsList = generateSpatialArray(this.lonStart, spatialResolution, this.parameters.lon2);\r\n        let latsList = generateSpatialArray(this.latStart, spatialResolution, this.parameters.lat2);\r\n\r\n        this.lonCount = lonsList.length;\r\n        this.latCount = latsList.length;\r\n\r\n        this.lonsDistinct = lonsList;\r\n        this.latsDistinct = latsList;\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        // Expanded arrays to be used in plots\r\n        let lats = [];\r\n        let lons = []\r\n\r\n        for(let i = 0; i < latsList.length; i ++){\r\n            for(let j = 0; j < this.depths.size; j++){\r\n                lats.push(latsList[i]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < lonsList.length; i ++){\r\n            for(let j = 0; j < this.depths.size; j++){\r\n                lons.push(lonsList[i]);\r\n            }\r\n        }\r\n\r\n        this.lats = lats;\r\n        this.lons = lons;\r\n\r\n        let zonalPlotDepths = [];\r\n        let meridionalPlotDepths = [];\r\n        let depthsList = Array.from(this.depths).map(depth => parseFloat(depth));\r\n\r\n        for(let i = 0; i < this.latsDistinct.length; i++){\r\n            for(let j = depthsList.length - 1; j > -1; j--){\r\n                meridionalPlotDepths.push(depthsList[j]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < this.lonsDistinct.length; i++){\r\n            for(let j = depthsList.length - 1; j > -1; j--){\r\n                zonalPlotDepths.push(depthsList[j]);\r\n            }\r\n        }\r\n\r\n        this.zonalPlotDepths = zonalPlotDepths;\r\n        this.meridionalPlotDepths = meridionalPlotDepths;\r\n        \r\n        this.orientation = this.lonCount > this.latCount ? 'zonal' : 'meridional';\r\n    }\r\n\r\n    // Direction is meridional or zonal\r\n    generatePlotData(orientation, splitByDate, splitBySpace) {\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const lonInterval = this.depths.size;\r\n        const latInterval = lonInterval * this.lonCount;\r\n        const dateInterval = latInterval * this.latCount;\r\n\r\n        // // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n\r\n        // either latCount or lonCount depending on orientation\r\n        let spaceCount;\r\n\r\n        if(orientation === 'zonal') {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, latInterval, this.latCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = this.latCount;\r\n        }\r\n\r\n        else {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, lonInterval, this.lonCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = this.lonCount;\r\n        }\r\n\r\n        if(splitByDate && splitBySpace){\r\n            // pass\r\n        } else if (splitByDate){\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                spaceCount,\r\n                spaceCount\r\n            )\r\n        } else if (splitBySpace) {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                spaceCount,\r\n                1,\r\n                this.dates.size\r\n            )\r\n        } else {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                variableValueSubsets.length,\r\n                variableValueSubsets.length\r\n            )\r\n        }\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i]},${depths[i % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SectionMapData;","import { quantile, extent } from 'd3-array';\r\n\r\nclass SparseData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = Boolean(payload.metadata.Depth_Min);\r\n        this.variableIndex = payload.metadata.Depth_Min ? 4 : 3;\r\n        this.depths = [];\r\n        this.times = [];\r\n        this.variableValues = [];\r\n        this.lats = [];\r\n        this.lons = [];\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n    }\r\n\r\n    add(row) {\r\n        if(row[this.variableIndex]){\r\n            this.times.push(row[0]);\r\n            this.lats.push(parseFloat(row[1]));\r\n            this.lons.push(parseFloat(row[2]));\r\n            if(this.hasDepth) this.depths.push(parseFloat(row[3]));\r\n            this.variableValues.push(parseFloat(row[this.variableIndex]));\r\n        }\r\n    }\r\n\r\n    finalize() {\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n\r\n        this.extent = extent(this.variableValues);\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        return this.variableValues;\r\n    }\r\n\r\n    generateCsv(){\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SparseData;","import CSVParser from 'csv-parse';\r\n\r\nimport { apiUrl } from './config';\r\nimport SpaceTimeData from './Classes/SpaceTimeData';\r\n\r\nimport storedProcedures from './Enums/storedProcedures';\r\nimport TimeSeriesData from './Classes/TimeSeriesData';\r\nimport DepthProfileData from './Classes/DepthProfileData';\r\nimport SectionMapData from './Classes/SectionMapData';\r\nimport SparseData from './Classes/SparseData';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            catalog.push(record)\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(payload) => {\r\n    const decoder = new TextDecoder();\r\n    var vizData;\r\n\r\n    switch(payload.parameters.spName) {\r\n        case storedProcedures.spaceTime:\r\n            if(payload.subType === 'Sparse') vizData = new SparseData(payload);\r\n            else vizData = new SpaceTimeData(payload);\r\n            break;\r\n\r\n        case storedProcedures.timeSeries:\r\n            vizData = new TimeSeriesData(payload);\r\n            break;\r\n\r\n        case storedProcedures.depthProfile:\r\n            vizData = new DepthProfileData(payload);\r\n            break;\r\n\r\n        case storedProcedures.sectionMap:\r\n            vizData = new SectionMapData(payload);\r\n            break;\r\n\r\n        default:\r\n            console.log('Unknown sproc name');\r\n    }\r\n\r\n    let response = await fetch(apiUrl + '/api/data/sp?' + storedProcedureParametersToUri(payload.parameters), fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            vizData.add(record);\r\n        }\r\n    })\r\n\r\n    csvParser.on('error', (e) => {\r\n        console.log(e);\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;\r\n}\r\n\r\napi.visualization.cruiseTrajectoryRequest = async(payload) => {\r\n    const cruiseId = payload.id;\r\n    const decoder = new TextDecoder();\r\n    let trajectory = {lats: [], lons: []};\r\n\r\n    let response = await fetch(apiUrl + '/api/data/cruisetrajectory?' + `id=${payload.id}`, fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            trajectory.lats.push(parseFloat(record[1]));\r\n            trajectory.lons.push(parseFloat(record[2]));\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return trajectory;\r\n}\r\n\r\napi.visualization.cruiseList = async() => {\r\n    let response = await fetch(apiUrl + '/api/data/cruiselist', fetchOptions);\r\n\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;   \r\n}\r\n\r\nexport default api;","import { put, takeLatest, all, call, delay } from 'redux-saga/effects';\r\n// import { eventChannel } from 'redux-saga';\r\nimport Cookies from 'js-cookie';\r\n// import worker from '../worker';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    \r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){    \r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    \r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    \r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(action){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    \r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    \r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    \r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload);\r\n    yield delay(50);\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'));\r\n    yield delay(70);\r\n    \r\n    // Result will be an object containing variable values and describing date shape\r\n    if(!result){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen(\"Request failed\"));\r\n    } else {\r\n        if(result.variableValues.length > 0){\r\n            result.finalize();\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            // yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            yield put(visualizationActions.triggerShowCharts());\r\n            yield put(visualizationActions.addChart({subType: action.payload.subType, data:result}));\r\n           \r\n        } else {\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges. Try selecting a different date or depth range.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* cruiseTrajectoryRequest(action) {\r\n    yield put(visualizationActions.cruiseTrajectoryRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Cruise Data'));\r\n    let result = yield call(api.visualization.cruiseTrajectoryRequest, action.payload);\r\n\r\n    if(!result || !result.lats.length){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(interfaceActions.snackbarOpen(`Unable to Fetch Cruise Data`));\r\n    } else {\r\n        yield put(visualizationActions.cruiseTrajectoryRequestSuccess(result));\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n    }\r\n}\r\n\r\nfunction* cruiseListRequest() {\r\n    yield put(visualizationActions.cruiseListRequestProcessing());\r\n    let cruiseList = yield call(api.visualization.cruiseList);\r\n\r\n    if(!cruiseList) {\r\n        yield put(visualizationActions.cruiseListRequestFailure());\r\n    } else{\r\n        yield put(visualizationActions.cruiseListRequestSuccess(cruiseList));\r\n    }\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\nfunction* watchCruiseTrajectoryRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND, cruiseTrajectoryRequest);\r\n}\r\n\r\nfunction* watchCruiseListRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_LIST_REQUEST_SEND, cruiseListRequest);\r\n}\r\n\r\n// function createWorkerChannel(worker) {\r\n//     return eventChannel(emit => {\r\n//         worker.onmessage = message => {\r\n//             emit(message);\r\n//         }\r\n\r\n//         const unsubscribe = () => {\r\n//             worker.teminate();\r\n//         }\r\n      \r\n//         return unsubscribe;\r\n//     })\r\n// }\r\n\r\n// function* watchWorkerChannel(){\r\n//     const workerChannel = yield call(createWorkerChannel, worker);\r\n\r\n//     while (true) {\r\n//         const message = yield take(workerChannel);\r\n//         yield put(message.data.type, message.data.payload);\r\n//         //   yield put({ type: INCOMING_PONG_PAYLOAD, payload })\r\n//         //   yield fork(pong, socket)\r\n//       }\r\n// }\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        watchCruiseTrajectoryRequest(),\r\n        watchCruiseListRequest()\r\n        // watchWorkerChannel(),\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","const colors = {\r\n    orange: '#FF8000',\r\n    // orange: '#ffa245',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9'\r\n}\r\n\r\nexport default colors;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    },\r\n    warningCaption: {\r\n        color: colors.orange,\r\n        fontSize: '11px',\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    wrapper: {\r\n        marginTop: theme.spacing(16)\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            \r\n            <div className={classes.wrapper}>\r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Key\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                        <Typography variant='caption' className={classes.warningCaption}>\r\n                            This API key is a unique identifier, and should not be shared.\r\n                        </Typography>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"body2\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n                </Paper>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires a user account. Please <Link component={RouterLink} to={{pathname: '/apikeymanagement'}} onClick={() => props.showLoginDialog()}> log in\r\n            </Link> or <Link component={RouterLink} to={{pathname: '/register'}}> register\r\n            </Link>.\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen, toggleShowHelp } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    appBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    toolBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    navWrapper: {\r\n        position: 'fixed',\r\n        width: '100vw',\r\n        top: '0px',\r\n        backgroundColor: 'transparent',\r\n        zIndex: 50,\r\n        paddingTop: '10px',\r\n        paddingLeft: '20px',\r\n        textAlign: 'left',\r\n        boxSizing: 'border-box'\r\n    },\r\n\r\n    navLink: {\r\n        cursor: 'pointer',\r\n        marginRight: 20,\r\n        color: 'white',\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        },\r\n        fontSize: '13px',\r\n        fontWeight: 100,\r\n        display: 'inline-block'     \r\n    },\r\n\r\n    rightNavLink: {\r\n        float: 'right'\r\n    },\r\n\r\n    rightLinkWrapper: {\r\n        display:'inline-block',\r\n        textAlign: 'right'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen,\r\n    toggleShowHelp\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    handleNavigate = (route) => {\r\n        this.props.restoreInterfaceDefaults()\r\n        this.props.history.push(route);\r\n    }\r\n\r\n    handleOutsideNavigate = (url) => {\r\n        window.open(url, '_blank')\r\n    }\r\n\r\n    render(){\r\n        const { classes, history, showHelp } = this.props;\r\n        const { pathname } = history.location;\r\n\r\n        return (\r\n            <div className={classes.navWrapper}>\r\n                <Typography variant='caption' onClick={() => this.handleNavigate('/')} className={classes.navLink}>Home</Typography>\r\n                <Typography variant='caption' onClick={() => this.handleNavigate('/catalog')} className={classes.navLink}>Catalog</Typography>\r\n                {pathname !== '/visualization' && <Typography variant='caption' onClick={() => this.handleNavigate('/apikeymanagement')} className={classes.navLink}>API Keys</Typography>}\r\n                {pathname !== '/visualization' && <Typography variant='caption' onClick={() => this.handleNavigate('/visualization')} className={classes.navLink}>Visualization</Typography>}\r\n                {this.props.user && <Typography variant='caption' onClick={() => this.handleLogOut()} className={`${classes.navLink} ${pathname === '/visualization' ? '' : classes.rightNavLink}`}>Log Out</Typography>}\r\n                {/* <Typography variant='caption' onClick={this.props.toggleShowHelp} className={classes.navLink}>{showHelp ? 'Hide Help' : 'Help(beta) '}</Typography> */}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' onClick={() => this.props.showLoginDialog()} className={`${classes.navLink} ${classes.rightNavLink}`}>Log In</Typography>}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' onClick={() => this.handleNavigate('/register')} className={`${classes.navLink} ${classes.rightNavLink}`}>Register</Typography>}\r\n            </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user ? <ApiKeyManagement/> : <LoginRequiredPrompt/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'Variable'],\r\n    ['Spatial Resolution', 'Spatial_Resolution'],\r\n    ['Temporal Resolution', 'Temporal_Resolution'],\r\n    ['Unit', 'Unit'],\r\n    ['Process Level', 'Process_Level'],\r\n    ['Study Domain', 'Study_Domain'],\r\n    ['SQL Table Name', 'Table_Name']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        margin: '-10px auto 0px auto',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(2),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing(2),\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        width: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={8} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={imageSource + 'viz_sample.png'} alt=\"Sample Visualization\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.Dataset_Description}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.Data_Source}\r\n                        </Typography> <br></br>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.Distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable} size='small'>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = theme => ({\r\n  tooltip: {\r\n      color: theme.palette.secondary.main,\r\n      opacity: 1\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst ConnectedTooltip = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    if(!showHelp) {\r\n        return (\r\n            <React.Fragment>\r\n                {props.children}\r\n            </React.Fragment>\r\n        )}\r\n    else {\r\n        return (\r\n            <Tooltip \r\n                placement={props.placement} \r\n                open={showHelp} \r\n                title={props.title} \r\n                className={classes.tooltip}\r\n                classes={{\r\n                    popper: classes.tooltip\r\n                }}\r\n            >\r\n                {props.children}\r\n            </Tooltip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(ConnectedTooltip));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst detailCellRendererParams = {\r\n  template:\r\n    '<div style=\"height: 100%; box-sizing: border-box\" class=\"testClass\">' +\r\n      '  <div style=\"height: 10%;\">Call Details</div>' +\r\n      '  <div ref=\"eDetailGrid\" style=\"height: 90%;\"></div>' +\r\n    \"</div>\"\r\n}\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"Long_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"Variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"Table_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"Dataset_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"Make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"Sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"Study_Domain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"Process_Level\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"Spatial_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"Temporal_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"Unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'Keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '60vh', \r\n    width: '90%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '60px 5vw',\r\n    padding: '30px'\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n        <Paper elevation={12} className={classes.gridPaper}>\r\n          <ConnectedTooltip placement title='Enter one or more search terms.' placement='top'>\r\n            <TextField\r\n              className={classes.gridSearch}\r\n              autoFocus={true}\r\n              margin=\"normal\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              variant='outlined'\r\n              name='filterText'\r\n              value={this.state.filterText}\r\n              onChange={this.handleChange}\r\n              label=\"Variable Search\"\r\n              InputLabelProps={{\r\n                  shrink: true,\r\n              }}\r\n            />\r\n          </ConnectedTooltip>\r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              suppressDragLeaveHidesColumns= {true}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n              detailCellRendererParams={detailCellRendererParams}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog) return <AGGridWrapper catalog={this.props.catalog}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n        else if(this.props.catalogRequestState === states.failed) return <p>Failed to get catalog. Have you tried turning it off and then on again?</p>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const regionRenderModes = {\r\n    draw: 'draw',\r\n    form: 'form'\r\n}\r\n\r\nexport default regionRenderModes;","const validation = {\r\n    depth: {\r\n        depthOneIsLower: 'Start cannot be larger than end',\r\n        depthOneOutOfBounds: 'Start must be smaller than $',\r\n        depthTwoOutOfBounds: 'End must be larger than $',\r\n        negative: 'Depth cannot be negative'\r\n    },\r\n\r\n    date: {\r\n        dateOneIsLater: 'Start cannot be later than end',\r\n        dateOneOutOfBounds: 'Start must be before $',\r\n        dateTwoOutOfBounds: 'End must be after $'\r\n    },\r\n\r\n    lat: {\r\n        latOneIsHigher: 'Start cannot be larger than end.',\r\n        latOneOutOfBounds: 'Start must be less than $',\r\n        latTwoOutOfBounds: 'End must be greater than $'\r\n    },\r\n\r\n    lon: {\r\n        lonOneIsHigher: 'Start cannot be larger than end.',\r\n        lonOneOutOfBounds: 'Start must be less than $',\r\n        lonTwoOutOfBounds: 'End must be greater than $'\r\n    },\r\n\r\n    type: {\r\n        dataIsIrregular: '$ is not available for sparse data',\r\n        dateRangeRequired: '$ requires a range of dates',\r\n        depthRangeRequired: '$ requires a range of depths',\r\n        surfaceOnlyDataset: '$ contains only surface data',\r\n        irregularOnly: 'Sparse map is only available for sparse data',\r\n        dataSizeTooLarge: 'Data set is too large for this visualization type.'\r\n    },\r\n\r\n    generic: {\r\n        invalid: 'Invalid input',\r\n        dataSizeWarning: 'Wait time and application performance may be poor due to size of data.',\r\n        dataSizePrevent: 'Data set is too large. Please reduce date range or area size.'\r\n    }\r\n}\r\n\r\nexport default validation;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    const { data } = props;\r\n\r\n    if(!data) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{data.Variable}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {data.Long_Name}\r\n                </DialogContentText>\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{data.Sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{data.Spatial_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{data.Temporal_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{data.Time_Min ? data.Time_Min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{data.Time_Max ? data.Time_Max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lat_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lat_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lon_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{data.Depth_Min ? `${data.Depth_Min}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{data.Depth_Max ? `${data.Depth_Max}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            {data.Variable_Min &&\r\n                                <TableRow>\r\n                                    <TableCell>Minimum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Min}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Max &&\r\n                                <TableRow>\r\n                                    <TableCell>Maximum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Max}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Mean && \r\n                                <TableRow>\r\n                                    <TableCell>Mean Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Mean}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Std &&\r\n                                <TableRow>\r\n                                    <TableCell>Standard Deviation({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Std}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);\r\n\r\n// Variable_Max: \"4.999\"\r\n// Variable_Mean: \"-0.0000008547\"\r\n// Variable_Min: \"-4.9956\"\r\n// Variable_Std: \"0.1428013424\"","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nconst mapTemporalResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [temporalResolutions.threeMinutes] : 1,\r\n        [temporalResolutions.sixHourly] : 1,\r\n        [temporalResolutions.daily] : 1,\r\n        [temporalResolutions.weekly] : 7,\r\n        [temporalResolutions.monthly] : 30,\r\n        [temporalResolutions.annual] : 365,\r\n        [temporalResolutions.irregular] : null,\r\n        [temporalResolutions.monthlyClimatology]: 30,\r\n        [temporalResolutions.threeDay]: 3,\r\n        [temporalResolutions.eightDayRunning]: 8,\r\n        [temporalResolutions.eightDays]: 8\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapTemporalResolutionToNumber;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { ArrowDropDown, LibraryBooks } from '@material-ui/icons';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend } from '../Redux/actions/visualization';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    dataRetrievalFormPaper: {\r\n        width: '1000px',\r\n        height: '260px',\r\n        padding: theme.spacing(2.5),\r\n        position:'fixed',\r\n        top: '10px',\r\n        left: '50%',\r\n        marginLeft: '-600px',\r\n        zIndex: 2,\r\n        paddingTop: theme.spacing(1.5),\r\n    },\r\n\r\n    dataRetrievalFormField: {\r\n        padding:`0px ${theme.spacing(1)}`\r\n    },\r\n\r\n    retrieveDataButton: {\r\n        margin:'10px auto'\r\n    },\r\n\r\n    variableSelect: {\r\n        margin: '0 30px 20px 30px'\r\n    },\r\n\r\n    visualizationSpeedDial: {\r\n        position: 'relative',\r\n        top: '5px',\r\n        left: '30px'\r\n    },\r\n\r\n    visualizeButton: {\r\n        borderRadius:'10%',\r\n        width: '100px',\r\n        height:'40px',\r\n        margin: 'auto 0',\r\n        backgroundColor: theme.palette\r\n    },\r\n\r\n    visualizeButtonText: {\r\n        dominantBaseline: \"middle\",\r\n        textAnchor: \"middle\"\r\n    },\r\n\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    datePickerGridSection: {\r\n        paddingLeft: '40px !important',\r\n        paddingRight: '40px !important'\r\n    },\r\n\r\n    shortenHeight: {\r\n        height: '60px'\r\n    },\r\n\r\n    vizSelect: {\r\n        minWidth: 120\r\n    },\r\n\r\n    gridItem: {\r\n        height: '48px'\r\n    },\r\n\r\n    generalMessage: {\r\n        textAlign: 'left'\r\n    },\r\n\r\n    vizTypeSelectFormControl: {\r\n        width: 150\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend\r\n}\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nconst reactWindowListRef = React.createRef();\r\nclass MenuList extends Component {\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if(!(this.props.children && this.props.children.length)) return;\r\n        let index = this.props.children.findIndex(child => child.props && child.props.isFocused);\r\n        reactWindowListRef.current.scrollToItem(index);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <ReactWindowList\r\n                style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length === 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <ArrowDropDown />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nclass DataRetrievalForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('Variable');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            visualizationSpeedDialOpen: false,\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.Variable,\r\n            label: item.Variable === item.Long_Name ? (item.Variable.length > 48 ? item.Variable.slice(0,45) + '...' : item.Variable) : (item.Variable.length > 23 ? item.Variable.slice(0,23) : item.Variable) + ' : ' + (item.Long_Name.length > 38 ? item.Long_Name.slice(0,35) + '...' : item.Long_Name),\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Histogram');\r\n        return '';\r\n    }\r\n\r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Depth Profile');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = () => {\r\n        if(this.estimateDataSize() > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = () => {\r\n        if(this.estimateDataSize() > 50000000) return validation.generic.dataSizePrevent;\r\n        return ''\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartDate(),\r\n                this.checkEndDate(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(),\r\n                this.checkGeneralPrevent()\r\n            ];\r\n        } else validations = Array(17).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startDateMessage,\r\n            endDateMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage\r\n        ] = validations;\r\n\r\n        const parametersAreInvalid = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage\r\n        ].some(message => message.length);\r\n\r\n        return (\r\n            <div className={this.props.showUI ? '' : classes.displayNone} id='drf'>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n                <Paper className={classes.dataRetrievalFormPaper}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={11} className={classes.shortenHeight}>\r\n                            <Select\r\n                                isLoading = {catalogRequestState === states.inProgress}\r\n                                components={{\r\n                                    IndicatorSeparator:'',\r\n                                    DropdownIndicator,\r\n                                    Option,\r\n                                    MenuList,\r\n                                    SingleValue,\r\n                                }}\r\n                                isClearable\r\n                                onInputChange={this.onAutoSuggestChange}\r\n                                filterOption={null}\r\n                                className={classes.variableSelect}\r\n                                autoFocus\r\n                                escapeClearsValue\r\n                                name=\"fields\"\r\n                                label=\"Variables\"\r\n                                options={options}\r\n                                onChange={this.props.updateFields}\r\n                                value={fields}\r\n                                placeholder=\"Variable Search\"\r\n                                styles={{\r\n                                    menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                                    input: provided => ({...provided,\r\n                                        color: 'white',\r\n                                        fontFamily: '\"Lato\", sans-serif'\r\n                                    }),\r\n\r\n                                    control: provided => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        border: '1px solid #333333',\r\n                                        '&:hover': { borderColor: 'white' },\r\n                                        '&:focus-within': { borderColor: colors.orange },\r\n                                    }),\r\n\r\n                                    placeholder: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        fontSize: '14px'\r\n                                    }),\r\n\r\n                                    noOptionsMessage: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        backgroundColor: colors.backgroundGray\r\n                                    }),\r\n\r\n                                    option: (provided, { data, isFocused }) => {\r\n                                        return ({...provided,\r\n                                        backgroundColor: isFocused ? '#383838' : '#424242',\r\n                                        color: data.data.Sensor === 'Satellite' ? '#1acf02' : data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        '&:hover': { backgroundColor: '#383838' },\r\n                                        ':active': { backgroundColor: '#383838' },\r\n                                        '&:after': { \r\n                                            content: data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            float: 'left'\r\n                                        },\r\n                                    })},\r\n\r\n                                    singleValue: (provided, state) => ({...provided,\r\n                                        fontFamily: state.data.data.Sensor === 'Satellite' ? 'Font Awesome 5 Free': '\"Lato\", sans-serif',\r\n                                        color: state.data.data.Sensor === 'Satellite' ? '#1acf02' : state.data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        paddingRight: '20px',\r\n                                        '&:after': { \r\n                                            content: state.data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            fontSize: '18px',\r\n                                            position: 'relative',\r\n                                            left: '8px',\r\n                                            top: '3px'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n                                    colors: {\r\n                                    ...theme.colors,\r\n                                    // Background color of hovered options\r\n                                    primary25: '#e0e0e0',\r\n                                    primary: '#212121',\r\n                                    },\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={1}>\r\n                            <IconButton\r\n                                disabled={!fields}\r\n                                onClick={this.handleTableStatsDialogOpen}\r\n                            >\r\n                                <LibraryBooks/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel htmlFor=\"depth1-input\" >Start Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth1-input\"\r\n                                        value={depth1}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth1-error\"\r\n                                        labelWidth={105}\r\n                                        name='depth1'\r\n                                    />\r\n                                    <FormHelperText id=\"depth1-error\">{startDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"depth2-input\" >End Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth2-input\"\r\n                                        value={depth2}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth2-error\"\r\n                                        labelWidth={95}\r\n                                        name='depth2'\r\n                                    />\r\n                                    <FormHelperText id=\"depth2-error\">{endDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat1-input\" >{'Start Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat1-input\"\r\n                                        value={lat1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lat1'\r\n                                    />\r\n                                    <FormHelperText id=\"lat1-error\">{startLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat2-input\" >{'End Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat2-input\"\r\n                                        value={lat2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lat2'\r\n                                    />\r\n                                    <FormHelperText id=\"lat2-error\">{endLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon1-input\" >{'Start Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon1-input\"\r\n                                        value={lon1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lon1'\r\n                                    />\r\n                                    <FormHelperText id=\"lon1-error\">{startLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon2-input\" >{'End Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon2-input\"\r\n                                        value={lon2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lon2'\r\n                                    />\r\n                                    <FormHelperText id=\"lon2-error\">{endLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={2}>\r\n                                <FormControl variant='outlined' className={classes.vizTypeSelectFormControl}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        labelWidth={35}\r\n                                        value={selectedVizType}\r\n                                        variant='outlined'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'outlined'\r\n                                        }}\r\n                                        >\r\n                                        <MenuItem disabled={Boolean(heatmapMessage)} value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>\r\n                                        <MenuItem disabled={Boolean(contourMessage)} value={vizSubTypes.contourMap}>Contour</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sectionMapMessage)} value={vizSubTypes.sectionMap}>Section Map</MenuItem>\r\n                                        <MenuItem disabled={Boolean(histogramMessage)} value={vizSubTypes.histogram}>Histogram</MenuItem>                                    \r\n                                        <MenuItem disabled={Boolean(timeSeriesMessage)} value={vizSubTypes.timeSeries}>Time Series</MenuItem>\r\n                                        <MenuItem disabled={Boolean(depthProfileMessage)} value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sparseMapMessage)} value={vizSubTypes.sparse}>Sparse Map</MenuItem>\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2}>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={() => this.props.onVisualize()}\r\n                                    disabled={!selectedVizType || parametersAreInvalid || !fields}\r\n                                >\r\n                                    Visualize\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <Typography variant='caption' color='error' className={classes.generalMessage}>\r\n                                    {generalPreventMessage || generalWarnMessage}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataRetrievalForm));","const utcDateStringToLocal = (utcString) => {\r\n    let date = new Date(utcString);\r\n    let utcYear = date.getUTCFullYear();\r\n    let utcMonth = date.getUTCMonth();\r\n    let utcDate = date.getUTCDate();\r\n\r\n    let newDate = new Date();\r\n    newDate.setFullYear(utcYear, utcMonth, utcDate);\r\n    return newDate;\r\n}\r\n\r\nexport default utcDateStringToLocal;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { LibraryBooks, ArrowRight, ChevronLeft, ChevronRight, InsertChartOutlined, Language, Delete } from '@material-ui/icons';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend, clearCharts } from '../Redux/actions/visualization';\r\n\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst navDrawerWidth = 260;\r\n\r\nconst styles = theme => ({\r\n  drawer: {\r\n    width: navDrawerWidth,\r\n    // height: 'calc(100% - 120px)',\r\n    top: 32,\r\n    bottom: 'auto',\r\n    overflow: 'visible'\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: navDrawerWidth,\r\n    height: '540px',\r\n    top: 'calc(50% - 270px)',\r\n    borderRadius: '0 4px 4px 0',\r\n    boxShadow: '2px 2px  2px 2px #242424',\r\n    border: 'none',\r\n    overflow: 'visible'\r\n  },\r\n\r\n  openPanelChevron: {\r\n    position: 'fixed',\r\n    left: '5px',\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  closePanelChevron: {\r\n    position: 'fixed',\r\n    left: navDrawerWidth + 5,\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  groupedButtons: {\r\n      width: '50%',\r\n      border: '1px solid #313131',\r\n      borderRadius: 0\r\n  },\r\n\r\n  controlPanelForm: {\r\n      marginTop: theme.spacing(1)\r\n  },\r\n\r\n  tableStatsButton: {\r\n      borderRadius: 0,\r\n      paddingTop: '11px',\r\n      backgroundColor: '#3C3C3C'\r\n  },\r\n\r\n    formGridItem: {\r\n        borderLeft: '1px solid #313131',\r\n        backgroundColor: '#3C3C3C'\r\n    },\r\n\r\n  vizTypeSelectFormControl: {\r\n      width: '100%'\r\n  },\r\n\r\n  depressed: {\r\n      boxShadow: 'inset 1px 1px 5px #1c1c1c'\r\n  },\r\n\r\n  padLeft: {\r\n      padding: '6px 0 2px 7px'\r\n  },\r\n\r\n  visualizeButton: {\r\n      height: '56px',\r\n      borderRadius: 0,\r\n      backgroundColor: '#3C3C3C',\r\n      color: theme.palette.primary.main,\r\n      fontVariant: 'normal',\r\n      '&:hover': {backgroundColor: '#874400'}\r\n  },\r\n\r\n  datePickerInputAdornment: {\r\n      padding: 0\r\n  },\r\n\r\n  clearChartsButton: {\r\n      borderRadius: 0\r\n  },\r\n\r\n  datePicker: {\r\n      width: '100%'\r\n  }\r\n\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend,\r\n    clearCharts\r\n}\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nconst reactWindowListRef = React.createRef();\r\nclass MenuList extends Component {\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if(!(this.props.children && this.props.children.length)) return;\r\n        let index = this.props.children.findIndex(child => child.props && child.props.isFocused);\r\n        reactWindowListRef.current.scrollToItem(index);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <ReactWindowList\r\n                // style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length == 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n    <components.DropdownIndicator {...props}>\r\n        <ArrowRight/>\r\n    </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}></components.SingleValue>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nconst formatOptionLabel = (option, meta) => {\r\n    return meta.context === 'value' ? option.value : option.label;\r\n}\r\n\r\nclass VizControlPanel extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        search.addIndex('Table_Name');\r\n        search.addIndex('Dataset_Name');\r\n        search.addIndex('Study_Domain');\r\n        search.addIndex('Spatial_Resolution');\r\n        search.addIndex('Temporal_Resolution');\r\n        search.addIndex('Keywords');\r\n\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: '',\r\n            showControlPanel: true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search});\r\n        }\r\n    }\r\n\r\n    handleOpenControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: true})\r\n    }\r\n\r\n    handleCloseControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: false})\r\n    }      \r\n    \r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.Variable,\r\n            label: item.Variable === item.Long_Name ? (item.Variable.length > 48 ? item.Variable.slice(0,45) + '...' : item.Variable) : (item.Variable.length > 23 ? item.Variable.slice(0,23) : item.Variable) + ' : ' + (item.Long_Name.length > 38 ? item.Long_Name.slice(0,35) + '...' : item.Long_Name),\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Histogram');\r\n        return '';\r\n    }\r\n\r\n    checkTimeSeries = () => {\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = () => {\r\n        if(this.estimateDataSize() > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = () => {\r\n        if(this.estimateDataSize() > 50000000) return validation.generic.dataSizePrevent;\r\n        return ''\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField, showControlPanel } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly,\r\n            showCharts,\r\n            handleShowCharts,\r\n            handleShowGlobe,\r\n            handleChange,\r\n            handleLatLonChange\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartDate(),\r\n                this.checkEndDate(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(),\r\n                this.checkGeneralPrevent()\r\n            ];\r\n        } else validations = Array(17).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startDateMessage,\r\n            endDateMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage\r\n        ] = validations;\r\n\r\n        const parametersAreInvalid = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage\r\n        ].some(message => message.length);\r\n\r\n        return (\r\n            <div>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n\r\n                { showControlPanel ? \r\n\r\n                        <IconButton \r\n                            className={classes.closePanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleCloseControlPanel}>\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                :\r\n                    \r\n                        <IconButton \r\n                            className={classes.openPanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleOpenControlPanel}>\r\n                            <ChevronRight />\r\n                        </IconButton>\r\n                }\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={showControlPanel}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >\r\n                    <ButtonGroup>\r\n                        <Tooltip title='Show Globe' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${!showCharts && classes.depressed}`} \r\n                                onClick={handleShowGlobe}\r\n                                color='inherit'\r\n                            >\r\n                                <Language/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        \r\n                        <Tooltip title='Show Charts' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${showCharts && classes.depressed}`}\r\n                                onClick={handleShowCharts}\r\n                                color='inherit'\r\n                            >\r\n                                <InsertChartOutlined/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ButtonGroup>\r\n\r\n                    <Tooltip title='Clear Charts' placement='right'>\r\n                        <IconButton color='inherit' onClick={this.props.clearCharts} className={classes.clearChartsButton}>\r\n                            <Delete/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <form>\r\n                        <Grid container>\r\n                            <Grid item xs={10}>\r\n                                <ConnectedTooltip placement='top' title='Enter one or more search terms.'>\r\n                                    <Select\r\n                                        formatOptionLabel={formatOptionLabel}\r\n                                        handleTableStatsDialogOpen={this.handleTableStatsDialogOpen}\r\n                                        isLoading = {catalogRequestState === states.inProgress}\r\n                                        components={{\r\n                                            IndicatorSeparator:'',\r\n                                            DropdownIndicator,\r\n                                            Option,\r\n                                            MenuList,\r\n                                            SingleValue,\r\n                                        }}\r\n                                        onInputChange={this.onAutoSuggestChange}\r\n                                        filterOption={null}\r\n                                        className={classes.variableSelect}\r\n                                        escapeClearsValue\r\n                                        name=\"fields\"\r\n                                        label=\"Variables\"\r\n                                        options={options}\r\n                                        onChange={this.props.updateFields}\r\n                                        value={fields}\r\n                                        placeholder=\"Variable Search\"\r\n                                        styles={{\r\n                                            menu: provided => ({\r\n                                                ...provided, \r\n                                                zIndex: 1300, \r\n                                                top: '-8px',\r\n                                                left: navDrawerWidth,\r\n                                                width: '980px',\r\n                                                borderRadius: '4px',\r\n                                                boxShadow: '2px 2px  2px 2px #242424',\r\n                                                overflow: 'hidden',\r\n                                                backgroundColor: 'rgba(0,0,0,.5)',\r\n                                                backdropFilter: 'blur(5px)',                            \r\n                                            }),\r\n\r\n                                            valueContainer: provided => ({\r\n                                                ...provided,\r\n                                                padding: '0 0 0 6px',\r\n                                                fontWeight: 100\r\n                                            }),\r\n\r\n                                            input: provided => ({...provided,\r\n                                                color: 'white',\r\n                                                fontFamily: '\"Lato\", sans-serif'\r\n                                            }),\r\n\r\n                                            control: provided => ({...provided,\r\n                                                backgroundColor: '#3C3C3C',\r\n                                                border: 'none',\r\n                                                borderBottom: '1px solid #333333',\r\n                                                borderRadius: 0,\r\n                                                '&:hover': { borderColor: 'white' },\r\n                                                '&:focus-within': { borderColor: colors.orange },\r\n                                                height: '56px'\r\n                                            }),\r\n\r\n                                            placeholder: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                fontSize: '14px',\r\n                                                fontWeight: 300\r\n                                            }),\r\n\r\n                                            noOptionsMessage: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                backgroundColor: colors.backgroundGray\r\n                                            }),\r\n\r\n                                            option: (provided, { data, isFocused }) => {\r\n                                                return ({...provided,\r\n                                                    fontWeight: 400,\r\n                                                    fontSize: '16px',\r\n                                                    backgroundColor: 'transparent',\r\n                                                    // backgroundColor: isFocused ? '#383838' : '#424242',\r\n                                                    // color: data.data.Sensor === 'Satellite' ? '#1acf02' : data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                                    '&:hover': { color: colors.orange },\r\n                                                    ':active': { backgroundColor: 'rgba(0,0,0,.5)' },\r\n                                                    '&:after': { \r\n                                                        content: data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                                        float: 'left'\r\n                                                    },\r\n                                            })},\r\n\r\n                                            singleValue: (provided, state) => ({...provided,\r\n                                                color: 'white',\r\n                                                fontWeight: 400\r\n                                            })\r\n                                        }}\r\n                                        theme={theme => ({\r\n                                            ...theme,\r\n                                            colors: {\r\n                                            ...theme.colors,\r\n                                            // Background color of hovered options\r\n                                            // primary25: '#e0e0e0',\r\n                                            // primary: '#212121',\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                </ConnectedTooltip>\r\n                            </Grid>\r\n                            <Grid item xs={2} className={classes.tableStatsButton}>\r\n                                <IconButton \r\n                                    size='small' \r\n                                    onClick={this.handleTableStatsDialogOpen}                                     \r\n                                    disabled={!fields}\r\n                                >\r\n                                    <LibraryBooks/>\r\n                                </IconButton>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    maxDate={fields ? utcDateStringToLocal(fields.data.Time_Max) : ''}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? utcDateStringToLocal(fields.data.Time_Min) : ''}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat1-input\"\r\n                                    error={Boolean(startLatMessage)}\r\n                                    label={\"Start Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat1}\r\n                                    onChange={handleLatLonChange}\r\n                                    helperText={startLatMessage}\r\n                                    name='lat1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat2-input\"\r\n                                    error={Boolean(endLatMessage)}\r\n                                    label={\"End Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat2}\r\n                                    onChange={handleLatLonChange}\r\n                                    helperText={endLatMessage}\r\n                                    name='lat2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon1-input\"\r\n                                    error={Boolean(startLonMessage)}\r\n                                    label={\"Start Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon1}\r\n                                    onChange={handleLatLonChange}\r\n                                    helperText={startLonMessage}\r\n                                    name='lon1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon2-input\"\r\n                                    error={Boolean(endLonMessage)}\r\n                                    label={\"End Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon2}\r\n                                    onChange={handleLatLonChange}\r\n                                    helperText={endLonMessage}\r\n                                    name='lon2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    disabled={!fields || surfaceOnly}\r\n                                    id=\"depth1-input\"\r\n                                    error={Boolean(startDepthMessage)}\r\n                                    label=\"Start Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth1}\r\n                                    onChange={handleChange}\r\n                                    helperText={startDepthMessage}\r\n                                    name='depth1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    disabled={!fields || surfaceOnly}\r\n                                    id=\"depth2-input\"\r\n                                    error={Boolean(endDepthMessage)}\r\n                                    label=\"End Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth2}\r\n                                    onChange={handleChange}\r\n                                    helperText={endDepthMessage}\r\n                                    name='depth2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <FormControl variant='filled' className={classes.vizTypeSelectFormControl} disabled={!fields}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        value={selectedVizType}\r\n                                        variant='filled'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'filled'\r\n                                        }}\r\n                                        >\r\n                                        <MenuItem disabled={Boolean(heatmapMessage)} value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>\r\n                                        <MenuItem disabled={Boolean(contourMessage)} value={vizSubTypes.contourMap}>Contour</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sectionMapMessage)} value={vizSubTypes.sectionMap}>Section Map</MenuItem>\r\n                                        <MenuItem disabled={Boolean(histogramMessage)} value={vizSubTypes.histogram}>Histogram</MenuItem>                                    \r\n                                        <MenuItem disabled={Boolean(timeSeriesMessage)} value={vizSubTypes.timeSeries}>Time Series</MenuItem>\r\n                                        <MenuItem disabled={Boolean(depthProfileMessage)} value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sparseMapMessage)} value={vizSubTypes.sparse}>Sparse Map</MenuItem>\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Button\r\n                                    className={classes.visualizeButton}\r\n                                    variant='contained'\r\n                                    onClick={() => this.props.onVisualize()}\r\n                                    disabled={!selectedVizType || parametersAreInvalid || !fields}\r\n                                    fullWidth\r\n                                >\r\n                                    Visualize\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>                    \r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));\r\n\r\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\r\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   root: {\r\n//     display: 'flex',\r\n//   },\r\n//   appBar: {\r\n//     transition: theme.transitions.create(['margin', 'width'], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//   },\r\n//   appBarShift: {\r\n//     width: `calc(100% - ${drawerWidth}px)`,\r\n//     marginLeft: drawerWidth,\r\n//     transition: theme.transitions.create(['margin', 'width'], {\r\n//       easing: theme.transitions.easing.easeOut,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//   },\r\n//   menuButton: {\r\n//     marginRight: theme.spacing(2),\r\n//   },\r\n//   hide: {\r\n//     display: 'none',\r\n//   },\r\n//   drawer: {\r\n//     width: drawerWidth,\r\n//     flexShrink: 0,\r\n//   },\r\n//   drawerPaper: {\r\n//     width: drawerWidth,\r\n//   },\r\n//   drawerHeader: {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     padding: theme.spacing(0, 1),\r\n//     ...theme.mixins.toolbar,\r\n//     justifyContent: 'flex-end',\r\n//   },\r\n//   content: {\r\n//     flexGrow: 1,\r\n//     padding: theme.spacing(3),\r\n//     transition: theme.transitions.create('margin', {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//     marginLeft: -drawerWidth,\r\n//   },\r\n//   contentShift: {\r\n//     transition: theme.transitions.create('margin', {\r\n//       easing: theme.transitions.easing.easeOut,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//     marginLeft: 0,\r\n//   },\r\n// }));\r\n\r\n// export default function PersistentDrawerLeft() {\r\n//   const classes = useStyles();\r\n//   const theme = useTheme();\r\n//   const [open, setOpen] = React.useState(false);\r\n\r\n//   const handleDrawerOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleDrawerClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Drawer\r\n//         className={classes.drawer}\r\n//         variant=\"persistent\"\r\n//         anchor=\"left\"\r\n//         open={open}\r\n//         classes={{\r\n//           paper: classes.drawerPaper,\r\n//         }}\r\n//       >\r\n//         <div className={classes.drawerHeader}>\r\n//           <IconButton onClick={handleDrawerClose}>\r\n//             {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n//           </IconButton>\r\n//         </div>\r\n//         <Divider />\r\n//         <List>\r\n//           {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n//             <ListItem button key={text}>\r\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n//               <ListItemText primary={text} />\r\n//             </ListItem>\r\n//           ))}\r\n//         </List>\r\n//         <Divider />\r\n//         <List>\r\n//           {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n//             <ListItem button key={text}>\r\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n//               <ListItemText primary={text} />\r\n//             </ListItem>\r\n//           ))}\r\n//         </List>\r\n//       </Drawer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// import React from 'react';\r\n// import { connect } from 'react-redux';\r\n\r\n// import { withStyles } from '@material-ui/core/styles';\r\n\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Tooltip from '@material-ui/core/Tooltip';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import { InsertChartOutlined, Delete, Web, Language } from '@material-ui/icons';\r\n\r\n// import { clearCharts } from '../Redux/actions/visualization';\r\n\r\n// const mapStateToProps = (state, ownProps) => ({\r\n//     charts: state.charts\r\n// })\r\n\r\n// const mapDispatchToProps = {\r\n//     clearCharts\r\n// }\r\n\r\n// const styles = (theme) => ({\r\n\r\n//     panelPaper: {\r\n//         width: '27px',\r\n//         // height: '240px',\r\n//         padding: theme.spacing(0.3),\r\n//         position:'fixed',\r\n//         left: '80vw',\r\n//         bottom: '15px',\r\n//         zIndex: 2,\r\n//         textDecoration:'none',\r\n//         cursor: 'pointer',\r\n//         borderRadius: '5%',\r\n//         backgroundColor: 'transparent'\r\n//     },\r\n\r\n//     iconButton: {\r\n//         padding: theme.spacing(0.4),\r\n//         marginLeft: '-2px',\r\n//         marginTop: '-1px'\r\n//     }\r\n// })\r\n\r\n// const VizControlPanel = (props) => {\r\n//     const { classes } = props;\r\n\r\n//     return (\r\n//         <div>\r\n//             <Paper className={classes.panelPaper}>\r\n//                 <Grid container direction='column'>\r\n\r\n//                     <Tooltip title={props.showUI ? 'Hide UI' : 'Show UI'}>\r\n//                         <IconButton color='secondary' onClick={props.toggleShowUI} className={classes.iconButton}>\r\n//                             <Web/>\r\n//                         </IconButton>\r\n//                     </Tooltip>\r\n\r\n//                     {props.showCharts? \r\n//                         <Tooltip title='Show Globe'>\r\n//                             <IconButton color='secondary' onClick={props.toggleChartView} className={classes.iconButton}>\r\n//                                 <Language/>\r\n//                             </IconButton>\r\n//                         </Tooltip>                \r\n//                     :\r\n//                         <Tooltip title='Show Charts'>\r\n//                             <IconButton color={props.charts.length ? 'primary' : 'secondary'} onClick={props.toggleChartView} className={classes.iconButton}>\r\n//                                 <InsertChartOutlined/>\r\n//                             </IconButton>\r\n//                         </Tooltip>            \r\n//                     }\r\n\r\n//                     <Tooltip title='Clear Visualizations'>\r\n//                         <IconButton color='secondary' onClick={props.clearCharts} className={classes.iconButton}>\r\n//                             <Delete/>\r\n//                         </IconButton>\r\n//                     </Tooltip>\r\n\r\n//                 </Grid>\r\n//             </Paper>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));\r\n","export default [\r\n    null,\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n]","export default (infoObject) => {\r\n\r\n    let lonRange = infoObject.lonMax - infoObject.lonMin;\r\n\r\n    let sectionSize;\r\n    if(lonRange < 2){\r\n        sectionSize = (lonRange / 6).toFixed(2);\r\n    } else {\r\n        sectionSize = Math.floor(lonRange / 6);\r\n    }\r\n\r\n    let tickvals = Array.from(Array(5), (e, i) => Math.ceil(infoObject.lonMin + ((i + 1) * sectionSize)));\r\n    let ticktext = tickvals.map(e => e > 180 ? e - 360 : e);\r\n\r\n    return {\r\n        tickmode: 'array',\r\n        tickvals,\r\n        ticktext\r\n    }\r\n}","import months from '../Enums/months';\r\n\r\nexport default (dateString, hasHour, isMonthly) => isMonthly ? months[parseInt(dateString)] : hasHour ? dateString.slice(0,10) + ' ' + dateString.slice(11,16): dateString.slice(0,10);","import colors from '../Enums/colors';\r\n\r\nexport default {\r\n    layout: {\r\n        font: {color: '#ffffff'},\r\n        paper_bgcolor: colors.backgroundGray,\r\n        margin: {\r\n            t: 50\r\n        },\r\n    },\r\n\r\n    config: {\r\n        modeBarButtonsToRemove: ['zoom2d', 'pan2d', 'select2d', 'zoomIn2d', 'zoomOut2d', 'autoScale2d', 'resetScale2d', 'hoverClosestGl2d', 'lasso2d','toggleSpikelines','hoverClosestCartesian', 'hoverCompareCartesian'],\r\n        displaylogo: false\r\n    },\r\n\r\n    annotations: (distributor, height) => (\r\n        [\r\n            {\r\n                text: `Source: ${distributor.length < 30 ? \r\n                    distributor : \r\n                    distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                font: {\r\n                    color: 'white',\r\n                    size: 10\r\n                },\r\n                xref: 'paper',\r\n                yref: 'paper',\r\n                yshift: height ? 0 - height + 160 : -290,\r\n                showarrow: false,\r\n            }\r\n        ]\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DateRange, Waves, CloudDownload, Palette, SwapVert, Gamepad } from '@material-ui/icons';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { ButtonGroup } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    popover: {\r\n        width: '470px',\r\n        height: '120px',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5)\r\n    },\r\n\r\n    iconButton: {\r\n        boxShadow: '0px 1px 1px 1px #242424',\r\n    },\r\n\r\n    colorForm: {\r\n        width: '100%'\r\n    },\r\n\r\n    firstIcon: {\r\n        borderTopLeftRadius: '10%',\r\n        borderBottomLeftRadius: '10%'\r\n    },\r\n\r\n    lastIcon: {\r\n        borderTopRightRadius: '10%',\r\n        borderBottomRightRadius: '10%'\r\n    },\r\n\r\n    buttonGroup: {\r\n        display: 'block',\r\n        margin: '0px auto 8px auto',\r\n        maxWidth: '700px'\r\n    },\r\n\r\n    depressed: {\r\n        boxShadow: 'inset 1px 1px 5px #262626'\r\n    },\r\n\r\n    colorscaleMenu: {\r\n        maxHeight: '400px'\r\n    },\r\n})\r\n\r\nconst colorscaleOptions = [\r\n    'Greys', \r\n    'YlGnBu', \r\n    'Greens', \r\n    'YlOrRd',\r\n    'Bluered',\r\n    'RdBu',\r\n    'Reds',\r\n    'Blues',\r\n    'Picnic',\r\n    'Rainbow',\r\n    'Portland',\r\n    'Jet',\r\n    'Hot',\r\n    'Blackbody',\r\n    'Earth',\r\n    'Electric',\r\n    'Viridis',\r\n    'Cividis'];\r\n\r\nconst ChartControlPanel = (props) => {\r\n\r\n    const { \r\n        classes, \r\n        onToggleSplitByDate, \r\n        onToggleSplitByDepth, \r\n        downloadCsv, \r\n        splitByDepth, \r\n        splitByDate,\r\n        handleZValueConfirm,\r\n        zValues,\r\n        markerOptions,\r\n        handleMarkerOptionsConfirm\r\n    } = props;\r\n\r\n    const [paletteAnchorElement, setPaletteAnchorElement] = useState(null);\r\n\r\n    let handleOpenPalette = (event) => {\r\n        setPaletteAnchorElement(event.currentTarget);\r\n    }\r\n\r\n    // Local version, not from props\r\n    let handlePaletteChoice = (option) => {\r\n        setPaletteAnchorElement(null);\r\n        props.handlePaletteChoice(option);\r\n    }\r\n\r\n    const [zScalePopoverAnchorElement, setZScalePopoverAnchorElement] = React.useState(null);\r\n    const [localZMin, setLocalZMin] = React.useState(zValues && zValues[0]);\r\n    const [localZMax, setLocalZMax] = React.useState(zValues && zValues[1]);\r\n\r\n    const zScalePopoverOpen = Boolean(zScalePopoverAnchorElement);\r\n    const zScalePopoverID = zScalePopoverOpen ? 'zscale-popover' : undefined;\r\n\r\n    const handleZScalePopoverClose = () => {\r\n        setZScalePopoverAnchorElement(null);\r\n    };\r\n    \r\n    const checkLocalZMin = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMin)) return 'Invalid value';\r\n    }\r\n\r\n    const checkLocalZMax = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMax)) return 'Invalid value';\r\n    }\r\n\r\n    const zScaleValidations = [\r\n        checkLocalZMin(),\r\n        checkLocalZMax()\r\n    ];\r\n\r\n    const [\r\n        zMinMessage,\r\n        zMaxMessage\r\n    ] = zScaleValidations;\r\n\r\n    const handleLocalZConfirm = () => {\r\n        handleZValueConfirm([localZMin, localZMax]);\r\n        handleZScalePopoverClose();\r\n    }\r\n\r\n    const [markerOptionsAnchorElement, setMarkerOptionsAnchorElement] = React.useState(null);\r\n    const [localMarkerOpacity, setLocalMarkerOpacity] = React.useState(markerOptions && markerOptions.opacity);\r\n    const [localMarkerColor, setLocalMarkerColor] = React.useState(markerOptions && markerOptions.color);\r\n    const [localMarkerSize, setLocalMarkerSize] = React.useState(markerOptions && markerOptions.size);\r\n\r\n    const markerPopoverOpen = Boolean(markerOptionsAnchorElement);\r\n    const markerPopoverID = markerPopoverOpen ? 'marker-popover' : undefined;\r\n\r\n    const handleMarkerOptionsClose = () => {\r\n        setMarkerOptionsAnchorElement(null);\r\n    }\r\n\r\n    const checkLocalMarkerOpacity = () => {\r\n        if(localMarkerOpacity < 0.1 || localMarkerOpacity > 1 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerOpacity)){\r\n            return 'Opacity should be 0.1 to 1'\r\n        }\r\n    }\r\n\r\n    const checkLocalMarkerSize = () => {\r\n        if(localMarkerSize < 1 || localMarkerSize > 18 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerSize)){\r\n            return 'Size should be 1 to 18'\r\n        }\r\n    }\r\n\r\n    const markerOptionsValidations = [\r\n        checkLocalMarkerOpacity(),\r\n        checkLocalMarkerSize()\r\n    ]\r\n\r\n    const [\r\n        localMarkerOpacityMessage,\r\n        localMarkerSizeMessage\r\n    ] = markerOptionsValidations;\r\n\r\n    const handleLocalMarkerOptionsConfirm = () => {\r\n        handleMarkerOptionsConfirm({opacity: localMarkerOpacity, color: localMarkerColor, size: localMarkerSize});\r\n        handleMarkerOptionsClose();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup className={classes.buttonGroup}>\r\n\r\n                {Boolean(onToggleSplitByDate) ? \r\n                    <Tooltip placement='top' title='Split By Date'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDate && classes.depressed} ${classes.firstIcon}`} \r\n                            disabled={!Boolean(onToggleSplitByDate)} \r\n                            onClick={onToggleSplitByDate}\r\n                        >\r\n                            <DateRange/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    :\r\n                    <IconButton color='inherit' className={`${classes.iconButton} ${splitByDate && classes.depressed} ${classes.firstIcon}`} \r\n                            disabled\r\n                        >\r\n                            <DateRange/>\r\n                    </IconButton>\r\n                    \r\n                }\r\n\r\n                {Boolean(onToggleSplitByDepth) ? \r\n                    <Tooltip placement='top' title={splitByDepth ? 'Merge Depths' : 'Split By Depth'}>\r\n                        <IconButton color='inherit' className={classes.iconButton} \r\n                            disabled={!Boolean(onToggleSplitByDepth)} \r\n                            onClick={onToggleSplitByDepth}\r\n                        >\r\n                            <Waves/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    :\r\n                    <IconButton color='inherit' className={`${classes.iconButton} ${splitByDepth && classes.depressed} ${classes.firstIcon}`} \r\n                        disabled \r\n                    >\r\n                        <Waves/>\r\n                    </IconButton>         \r\n                }\r\n\r\n                <Tooltip placement='top' title='Download CSV'>\r\n                    <IconButton color='inherit' onClick={downloadCsv} className={classes.iconButton} >\r\n                        <CloudDownload/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n                {Boolean(handleZValueConfirm) ?\r\n                    <Tooltip title='Change Colorscale Range' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setZScalePopoverAnchorElement(event.currentTarget)} className={classes.iconButton}>\r\n                            <SwapVert/>\r\n                        </IconButton>\r\n                    </Tooltip>  :\r\n\r\n                    <IconButton color='inherit' disabled className={classes.iconButton}>\r\n                        <SwapVert/>\r\n                    </IconButton>\r\n                }\r\n\r\n                {Boolean(props.handlePaletteChoice) ?\r\n                    <Tooltip title='Change Palette' placement='top'>\r\n                        <IconButton disabled={!Boolean(props.handlePaletteChoice)} color='inherit' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                            <Palette/>\r\n                        </IconButton>                \r\n                    </Tooltip> :\r\n\r\n                    <IconButton disabled color='inherit' className={classes.iconButton}>\r\n                        <Palette/>\r\n                    </IconButton>                 \r\n                }\r\n\r\n                {Boolean(props.handleMarkerOptionsConfirm) ?\r\n                    <Tooltip title='Marker Options' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setMarkerOptionsAnchorElement(event.currentTarget)} className={`${classes.iconButton} ${classes.lastIcon}`} >\r\n                            <Gamepad/>\r\n                        </IconButton>                \r\n                    </Tooltip> :\r\n\r\n                    <IconButton color='inherit' disabled className={`${classes.iconButton} ${classes.lastIcon}`}>\r\n                        <Gamepad/>\r\n                    </IconButton>    \r\n            \r\n            }\r\n            </ButtonGroup>\r\n            \r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={paletteAnchorElement}\r\n                keepMounted\r\n                open={Boolean(paletteAnchorElement)}\r\n                onClose={() => setPaletteAnchorElement(null)}\r\n                className={classes.colorscaleMenu}\r\n            >\r\n                {colorscaleOptions.map((option, index) => (\r\n                    <MenuItem onClick={() => handlePaletteChoice(option)} key={index}>{option}</MenuItem>\r\n                ))}\r\n                \r\n            </Menu>\r\n            \r\n            {/* zscale popover */}\r\n            <Popover\r\n                id={zScalePopoverID}\r\n                open={zScalePopoverOpen}\r\n                anchorEl={zScalePopoverAnchorElement}\r\n                onClose={handleZScalePopoverClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMinMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-min-input' >Min</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-min-input'\r\n                                    value={localZMin}\r\n                                    onChange={(event) => setLocalZMin(event.target.value)}\r\n                                    aria-describedby='local-zmin-error'\r\n                                    labelWidth={36}\r\n                                    name='local-zmin'\r\n                                />\r\n                                <FormHelperText id='local-zmin-error'>{zMinMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-max-input' >Max</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-max-input'\r\n                                    value={localZMax}\r\n                                    onChange={(event) => setLocalZMax(event.target.value)}\r\n                                    aria-describedby=\"local-zmax-error\"\r\n                                    labelWidth={36}\r\n                                    name='local-zmax'\r\n                                />\r\n                                <FormHelperText id=\"local-zmax-error\">{zMaxMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={7}>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleZScalePopoverClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalZConfirm}\r\n                                disabled={Boolean(zMinMessage || zMaxMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n                \r\n            {/* Marker popover */}\r\n            <Popover\r\n                id={markerPopoverID}\r\n                open={markerPopoverOpen}\r\n                anchorEl={markerOptionsAnchorElement}\r\n                onClose={handleMarkerOptionsClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(localMarkerOpacityMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-opacity' >Opacity</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='local-marker-opacity'\r\n                                    value={localMarkerOpacity}\r\n                                    onChange={(event) => setLocalMarkerOpacity(event.target.value)}\r\n                                    aria-describedby='local-marker-opacity'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-opacity'\r\n                                />\r\n                            <FormHelperText id=\"local-marker-opacity-error\">{localMarkerOpacityMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                // error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-size' >Size</InputLabel>\r\n                                <OutlinedInput\r\n                                    error={Boolean(localMarkerSizeMessage)}\r\n                                    id='local-marker-size'\r\n                                    value={localMarkerSize}\r\n                                    onChange={(event) => setLocalMarkerSize(event.target.value)}\r\n                                    aria-describedby=\"local-marker-size\"\r\n                                    labelWidth={36}\r\n                                    name='local-marker-size'\r\n                                />\r\n                                <FormHelperText id=\"local-marker-size-error\">{localMarkerSizeMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                className={classes.colorForm}\r\n                            >\r\n                                <InputLabel htmlFor='z-min-input'>Color</InputLabel>\r\n                                <OutlinedInput\r\n                                    type='color'\r\n                                    id='marker-color'\r\n                                    value={localMarkerColor}\r\n                                    onChange={(event) => setLocalMarkerColor(event.target.value)}\r\n                                    aria-describedby='local-marker-color'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-color'\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={1}></Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleMarkerOptionsClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalMarkerOptionsConfirm}\r\n                                disabled={Boolean(localMarkerOpacityMessage || localMarkerSizeMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ChartControlPanel);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\nimport months from '../../Enums/months';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport handleDateString from '../../Utility/handleChartDatestring';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst determineHeight = (infoObject) => {\r\n    const latRange = infoObject.latMax - infoObject.latMin;\r\n    const lonRange = infoObject.lonMax - infoObject.lonMin;\r\n    return (((latRange / lonRange) * 800) * .83) + 60;\r\n}\r\n// equal 608 wide, 670 high\r\n// height half 608 / 267\r\n\r\nconst handleContourMap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n    \r\n    // Handle axis labels when crossing 180th meridian\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    let height = determineHeight(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'contour',\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: '.2e'\r\n                    },\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    }\r\n                }\r\n            ]}\r\n\r\n            config={{...chartBase.config}}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height,\r\n                title: {\r\n                    text: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                },\r\n                xaxis: {title: 'Longitude', color: '#ffffff', ...xTicks},\r\n                yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHeatmap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    let height = determineHeight(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    zsmooth: subset.length < 20000 ? 'fast' : 'false',\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    colorscale: palette,\r\n                    autocolorscale: false,\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n                    \r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            config={{...chartBase.config}}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height,\r\n                title: {\r\n                    text: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                    font: {\r\n                        size: 16\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: 'Longitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Latitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SpaceTimeChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitByDepth, setSplitByDepth] = useState(false);\r\n    const [subTypeState, setSubTypeState] = useState(subType);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const subSets = data.generatePlotData(subTypeState, splitByDate, splitByDepth);\r\n    var plots;\r\n\r\n    switch(subTypeState){\r\n        case vizSubTypes.contourMap:\r\n            plots = handleContourMap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.heatmap:\r\n            plots = handleHeatmap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.histogram:\r\n            plots = handleHistogram(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        default:\r\n            plots = '';\r\n            break;        \r\n\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDepth = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDepth(!splitByDepth);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                onToggleSplitByDepth={depths.size===1 ? null : onToggleSplitByDepth}\r\n                onToggleSplitByDate={dates.size===1 ? null : onToggleSplitByDate}\r\n                splitByDepth={splitByDepth}\r\n                splitByDate={splitByDate}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plots}     \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SpaceTimeChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst TimeSeriesChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, dates, parameters, metadata } = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#5e5e5e', size: 12})\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                  x: dates,\r\n                  y: variableValues,\r\n                  error_y: {\r\n                    type: 'data',\r\n                    array: stds,\r\n                    opacity: 0.2,\r\n                    color: 'gray',\r\n                    visible: true\r\n                  },\r\n                  name: parameters.fields,\r\n                  type: 'scatter',\r\n                  line: {color: markerOptions.color},\r\n                  marker: {\r\n                      opacity: markerOptions.opacity,\r\n                      size: markerOptions.size,\r\n                      color: markerOptions.color\r\n                  }\r\n                  },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    width: 800,\r\n                    height: 570,\r\n                    title: `${parameters.fields}[${metadata.Unit}]  ${parameters.dt1} to ${parameters.dt2}`,\r\n                  xaxis: {\r\n                      title: 'Time',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: parameters.fields,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(TimeSeriesChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst DepthProfileChart = (props) => {\r\n\r\n    const { classes, setLoadingMessage } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, depths, parameters, metadata } = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#5e5e5e', size: 12})\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }    \r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                  x: depths,\r\n                  y: variableValues,\r\n                  error_y: {\r\n                    type: 'data',\r\n                    array: stds,\r\n                    opacity: 0.2,\r\n                    color: 'gray',\r\n                    visible: true\r\n                  },\r\n                  name: parameters.fields,\r\n                  type: 'scatter',\r\n                  line: {color: markerOptions.color},\r\n                  marker: {\r\n                      opacity: markerOptions.opacity,\r\n                      size: markerOptions.size,\r\n                      color: markerOptions.color\r\n                    }\r\n                  },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    width: 800,\r\n                    height: 570,\r\n                    title: `${parameters.fields}[${metadata.Unit}]  ${parameters.depth1} to ${parameters.depth2} meters`,\r\n                  xaxis: {\r\n                      title: 'Depth[m]',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(DepthProfileChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nconst handleSectionMap = (subsets, infoObject, splitByDate, splitBySpace, orientation) => {\r\n\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    const distinctMeridiansOrParallelsForSplitting = \r\n        orientation === 'zonal' ?\r\n        infoObject.latsDistinct : \r\n        infoObject.lonsDistinct;\r\n\r\n    const xAxisLabel = \r\n        orientation === 'zonal' ?\r\n        'Longitude' : \r\n        'Latitude';\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length < 2 ?\r\n            dates[0] :\r\n            !splitByDate ? \r\n                'Merged Dates' : \r\n                splitBySpace ? \r\n                    dates[Math.floor(index/distinctMeridiansOrParallelsForSplitting.length)].slice(0, 10) : \r\n                    dates[index];\r\n                \r\n        const spaceTitle = distinctMeridiansOrParallelsForSplitting.length <= 1 ? distinctMeridiansOrParallelsForSplitting[0] : \r\n            !splitBySpace ? `Merged ${xAxisLabel}s` : \r\n            `${distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length]} ${orientation === 'zonal' ? \r\n            'Parallel' :\r\n            'Meridian'}`\r\n \r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: infoObject.zMin,\r\n                    zmax: infoObject.zMax,\r\n                    zsmooth: subset.length < 20000 ? 'best' : 'fast',\r\n                    x: orientation === 'zonal' ? infoObject.lons : infoObject.lats,\r\n                    y: orientation === 'zonal' ? infoObject.zonalPlotDepths : infoObject.meridionalPlotDepths,\r\n                    z: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    connectgaps: true,\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    }\r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${spaceTitle}   ${date}`,\r\n                xaxis: {\r\n                    title: `${xAxisLabel}[\\xB0]`, \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: 'Depth[m]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />\r\n        )\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SectionMapChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { dates, extent, latsDistinct, lonsDistinct } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitBySpace, setSplitBySpace] = useState(false);\r\n    const [orientation, setOrientation] = useState(data.orientation);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const numSpaceSplits = \r\n        orientation === 'zonal' ?\r\n        latsDistinct.length : \r\n        lonsDistinct.length\r\n\r\n    const splitOrientation = orientation === 'zonal' ?\r\n        'Longitudes' : \r\n        'Latitudes'\r\n\r\n    const alternateOrientation = orientation === 'zonal' ? 'meridional' : 'zonal';\r\n\r\n    const subsets = data.generatePlotData(orientation, splitByDate, splitBySpace);\r\n    var plots = handleSectionMap(subsets, data, splitByDate, splitBySpace, orientation);\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n                {/* <Button {...buttonProps} disabled={dates.size === 1} onClick={() => setSplitByDate(!splitByDate)}>{splitByDate ? 'Merge Dates' : 'Split By Date'}</Button>\r\n                <Button {...buttonProps} disabled={numSpaceSplits === 1} onClick={() => setSplitBySpace(!splitBySpace)}>{splitBySpace ? `Merge ${splitOrientation}` : `Split By ${splitOrientation}`}</Button>\r\n                <Button {...buttonProps} disabled={numSpaceSplits === 1} onClick={() => setOrientation(alternateOrientation)}>Switch to {alternateOrientation}</Button> */}\r\n            <ChartControlPanel\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                downloadCsv={downloadCsv}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SectionMapChart));","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nconst SparseScatter = (props) => {\r\n    const {\r\n        xValues,\r\n        variableValues,\r\n        markerOptions,\r\n        infoObject,\r\n        xTitle\r\n    } = props;\r\n\r\n    const { parameters, metadata } = infoObject;\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n    \r\n            data={[\r\n                {\r\n                    x: xValues,\r\n                    y: variableValues,\r\n                    // error_y: {\r\n                    // type: 'data',\r\n                    // array: stds,\r\n                    // opacity: 0.2,\r\n                    // color: 'gray',\r\n                    // visible: true\r\n                    // },\r\n                    mode: 'markers',\r\n                    name: parameters.fields,\r\n                    type: variableValues.length > 1000 ? 'scattergl' : 'scatter',\r\n                    // line: {color: markerOptions.color},\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    }\r\n                },\r\n            ]}\r\n            config={{...chartBase.config}}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: `${parameters.fields}[${metadata.Unit}]  ${parameters.dt1} to ${parameters.dt2}`,\r\n                xaxis: {\r\n                    title: xTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: parameters.fields,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)\r\n            }}            \r\n        />\r\n    )\r\n}\r\n\r\nexport default SparseScatter;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport SparseScatter from './SparseScatter';\r\n\r\nconst handleSparseMap = (infoObject, palette, zValues) => {\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zValues[0],\r\n                    zmax: zValues[1],\r\n                    lon: infoObject.lons,\r\n                    lat: infoObject.lats,\r\n                    z: infoObject.variableValues,\r\n                    zmin:'',\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    radius: 6,                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'densitymapbox',\r\n                    \r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    },\r\n                }\r\n            ]}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: `${infoObject.parameters.fields}[${infoObject.metadata.Unit}]`,\r\n                // xaxis: {title: 'Longitude', color: '#ffffff'},\r\n                // yaxis: {title: 'Latitude', color: '#ffffff'},\r\n\r\n                mapbox: {\r\n                    style: 'basic',\r\n                    center: {\r\n                        lon: (infoObject.parameters.lon1 + infoObject.parameters.lon2) / 2,\r\n                        lat: (infoObject.parameters.lat1 + infoObject.parameters.lat2) / 2\r\n                    }\r\n                },\r\n\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n            }}\r\n            \r\n            config={{\r\n                ...chartBase.config,\r\n                mapboxAccessToken:\r\n                  \"pk.eyJ1IjoiZGVuaG9sdHoiLCJhIjoiY2p1ZW9obTNhMDVxZjQzcDRvMmdlcDN2aiJ9.HvLaX2bcradeE5T-lpTc8w\"\r\n              }}\r\n        />)\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nfunction tabProps(index) {\r\n    return {\r\n      id: `sparse-tab-${index}`,\r\n      'aria-controls': `sparse-tab-${index}`,\r\n    };\r\n  }\r\n\r\nconst SparseTabPanel = (props) => {\r\n    const { children, selectedTab, index, controlPanelProps, } = props;\r\n\r\n    return (\r\n        <div hidden={selectedTab !== index}>\r\n            <ChartControlPanel\r\n                // handlePaletteChoice={handlePaletteChoice}\r\n                // handleZValueConfirm={handleZValueConfirm}\r\n                // zValues={zValues}\r\n                // extent={data.extent}\r\n                // downloadCsv={downloadCsv}\r\n                {...controlPanelProps}\r\n            />\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst SparseMap = (props) => {\r\n\r\n    const { classes } = props;\r\n\r\n    const { data } = props.chart;\r\n\r\n    const [palette, setPalette] = useState('Heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [markerOptions, setMarkerOptions] = useState({opacity: .2, color:'#5e5e5e', size: 12});\r\n    const [tab, setTab] = useState(0);\r\n\r\n    const plot = handleSparseMap(data, palette, zValues)\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setTab(newValue)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    const controlPanelProps = {\r\n        map: {\r\n            palette,\r\n            handlePaletteChoice,\r\n            zValues,\r\n            handleZValueConfirm,\r\n            downloadCsv\r\n        },\r\n\r\n        scatter: {\r\n            downloadCsv,\r\n            markerOptions,\r\n            setMarkerOptions,\r\n            handleMarkerOptionsConfirm\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <AppBar position=\"static\"> */}\r\n                <Tabs value={tab} onChange={handleTabChange} aria-label=\"Sparse tabs\" centered>\r\n                    <Tab label=\"Map\" {...tabProps(0)} />\r\n                    <Tab label=\"Time Scatter\" {...tabProps(1)} />\r\n                    <Tab label=\"Lat Scatter\" {...tabProps(2)} />\r\n                    <Tab label=\"Lon Scatter\" {...tabProps(3)} />\r\n                    {data.hasDepth && <Tab label=\"Depth Scatter\" {...tabProps(4)} />}\r\n                </Tabs>\r\n            {/* </AppBar> */}\r\n            <SparseTabPanel selectedTab={tab} index={0} controlPanelProps={controlPanelProps.map}>\r\n                {plot}\r\n            </SparseTabPanel>\r\n            \r\n            <SparseTabPanel selectedTab={tab} index={1} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.times}\r\n                    variableValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Time'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={2} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.lats}\r\n                    variableValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Latitude'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={3} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.lons}\r\n                    variableValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Longitude'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            {data.hasDepth &&\r\n                <SparseTabPanel selectedTab={tab} index={4} controlPanelProps={controlPanelProps.scatter}>\r\n                    <SparseScatter\r\n                        xValues={data.depths}\r\n                        variableValues={data.variableValues}\r\n                        markerOptions={markerOptions}\r\n                        infoObject={data}\r\n                        xTitle='Depth'\r\n                    />\r\n                </SparseTabPanel>            \r\n            }\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\n// xValues,\r\n// variableValues,\r\n// markerOptions,\r\n// infoObject,\r\n// xTitle\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseMap));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../Enums/colors';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nimport SpaceTimeChart from './ChartComponents/SpaceTimeChart';\r\nimport TimeSeriesChart from './ChartComponents/TimeSeriesChart';\r\nimport DepthProfileChart from './ChartComponents/DepthProfileChart';\r\nimport SectionMapChart from './ChartComponents/SectionMapChart';\r\nimport SparseMap from './ChartComponents/SparseMap';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsContainer: {\r\n        margin: '300px 0 0 100px'\r\n    },\r\n\r\n    chartPaper: {\r\n      margin: '60px auto 0px auto',\r\n      width: '1000px',\r\n      paddingTop: '16px'\r\n  },\r\n\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n    }\r\n})\r\n\r\nconst SamplePlot = () => {\r\n  let x = [0,1,2,3,4,5];\r\n  let y = [0,1,2,3,4,5];\r\n  let z = [0,1,2,3,4,5];\r\n  return (\r\n\r\n      <Plot\r\n      style= {{\r\n          position: 'relative',\r\n          display:'inline-block',\r\n          marginTop: '50px'\r\n      }}\r\n      \r\n      data={[\r\n          {   \r\n              x,\r\n              y,\r\n              z,\r\n              connectgaps: false,\r\n              \r\n              name: 'Test',\r\n              type: 'contour',\r\n              contours: {\r\n                  showlabels: true,\r\n                  labelfont: {\r\n                      family: 'Raleway',\r\n                      size: 12,\r\n                      color: 'white',\r\n                  },\r\n                  labelformat: '.2e'\r\n              },\r\n              colorbar: {\r\n                  title: {\r\n                      text: `test`\r\n                  },\r\n                  exponentformat: 'power'\r\n              }\r\n          }\r\n      ]}\r\n      \r\n      layout= {{\r\n          font: {color: '#ffffff'},\r\n          margin: {\r\n            t: 50\r\n          },\r\n          title: {\r\n              text: `A sample chart title`,\r\n              // yanchor: 'bottom',\r\n              // y: .9,\r\n              // yref: 'container',\r\n              font: {\r\n                size: 18\r\n              }\r\n          },\r\n          paper_bgcolor: colors.backgroundGray,\r\n          xaxis: {title: 'Longitude', color: '#ffffff'},\r\n          yaxis: {title: 'Latitude', color: '#ffffff'},\r\n          annotations: [\r\n              {\r\n                  text: `test`,\r\n                      font: {\r\n                          color: 'white',\r\n                          size: 10\r\n                      },\r\n                      xref: 'paper',\r\n                      yref: 'paper',\r\n                      yshift: -202,\r\n                      showarrow: false,\r\n                  }\r\n              ]\r\n              \r\n          }}   \r\n          />\r\n          )\r\n      }\r\n      \r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n        const { classes, charts } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n              {/* <SamplePlot/>  */}\r\n                {charts.map((chart, index) => {\r\n                    switch(chart.data.parameters.spName){\r\n                        case storedProcedures.spaceTime:\r\n                          if(chart.subType === vizSubTypes.sparse) {\r\n                            return (\r\n                              <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                                <SparseMap chart={chart}/>\r\n                              </Paper>\r\n                            )\r\n                          }\r\n                          else return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <SpaceTimeChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.timeSeries:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <TimeSeriesChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.depthProfile:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <DepthProfileChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.sectionMap:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <DepthProfileChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n                        \r\n                        default:\r\n                          return '';\r\n                  }\r\n                })}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { cruiseListRequestSend, cruiseTrajectoryRequestSend, cruiseTrajectoryClear } from '../Redux/actions/visualization';\r\n\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    cruiseList: state.cruiseList,\r\n    getCruiseListState: state.getCruiseListState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseListRequestSend,\r\n    cruiseTrajectoryRequestSend,\r\n    cruiseTrajectoryClear\r\n}\r\n\r\nconst esriFonts = '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif';\r\nconst esriFontColor = 'white';\r\nconst esriBackgroundColor = '#424242';\r\nconst esriHoverFontColor = '#242424';\r\nconst esriHoverBackgroundColor = '#949393';\r\n\r\nconst styles = theme => ({\r\n    outerDiv: {\r\n        padding:'12px',\r\n        maxWidth: '260px',\r\n        backgroundColor: 'transparent',\r\n        color: esriFontColor,\r\n        borderRadius: '4px',\r\n        boxShadow: '2px',\r\n        position: 'relative',\r\n        backdropFilter: 'blur(2px)'\r\n    },\r\n\r\n    cruiseSelect: {\r\n        width: '260px',\r\n        borderRadius: '4px',\r\n    },\r\n\r\n    cruiseInfo: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        margin: '12px auto 0 auto',\r\n    },\r\n\r\n    cruiseInfoCell: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        borderStyle: 'none',\r\n    },\r\n\r\n    // blurEffectDiv: {\r\n    //     filter: 'blur(5px)',\r\n    //     position: 'absolute',\r\n    //     top: '0px',\r\n    //     left: '0px',\r\n    //     right: '0px',\r\n    //     bottom: '0px',\r\n    //     zIndex: 99999999\r\n    // }\r\n})\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\nclass CruiseSelector extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Nickname');\r\n        search.addIndex('Name');\r\n        search.addIndex('Chief_Name');\r\n        search.addIndex('Keywords');\r\n        try{\r\n            if(props.cruiseList && props.cruiseList.length) search.addDocuments(props.cruiseList);\r\n        } catch(e) {\r\n            console.log(e);\r\n            console.log(props.cruiseList);\r\n        }\r\n\r\n        this.state = {\r\n            search,\r\n            searchField: '',\r\n            selectedCruise: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.cruiseList || !this.props.cruiseList.length) this.props.cruiseListRequestSend();\r\n    }\r\n\r\n    getSelectOptionsFromCruiseList = (list) => {\r\n        return list.map(item => ({\r\n            value: item.Nickname,\r\n            label: item.Nickname,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    handleCruiseSelect = (selection) => {\r\n        if(selection && selection.data){\r\n            const id = selection.data.ID;\r\n            this.props.cruiseTrajectoryRequestSend(id);\r\n        } else {this.props.cruiseTrajectoryClear()}\r\n\r\n        this.setState({...this.state, selectedCruise: selection});\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.cruiseList && prevProps.cruiseList.length) && (this.props.cruiseList && this.props.cruiseList.length)){\r\n            this.state.search.addDocuments(this.props.cruiseList);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    render(){\r\n\r\n        const { search, searchField, selectedCruise } = this.state;\r\n\r\n        const { classes, cruiseList} = this.props;\r\n\r\n        const options = searchField && cruiseList ? this.getSelectOptionsFromCruiseList(search.search(searchField)) \r\n            : cruiseList ? this.getSelectOptionsFromCruiseList(cruiseList) \r\n            : []\r\n\r\n        return (\r\n            <div id='cruise-selector' className={classes.outerDiv}>\r\n                <div className={classes.blurEffectDiv}></div>\r\n                <Select\r\n                    isLoading={this.props.getCruiseListState === states.inProgress}\r\n                    components={{\r\n                        IndicatorSeparator:'',\r\n                        Option,\r\n                        SingleValue,\r\n                    }}\r\n                    isClearable\r\n                    onInputChange={this.onAutoSuggestChange}\r\n                    filterOption={null}\r\n                    className={classes.cruiseSelect}\r\n                    escapeClearsValue\r\n                    label=\"Cruise\"\r\n                    options={options}\r\n                    onChange={this.handleCruiseSelect}\r\n                    value={this.state.selectedCruise}\r\n                    placeholder=\"Search Cruises\"\r\n                    styles={{\r\n                        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                        menuList: provided => ({...provided, backgroundColor: esriBackgroundColor}),\r\n\r\n                        input: provided => ({...provided,\r\n                            color: 'inherit',\r\n                            fontFamily: esriFonts\r\n                        }),\r\n\r\n                        control: provided => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            border: 'none',\r\n                            boxShadow: '1px 1px 1px 1px #242424',\r\n                            color: esriFontColor,\r\n                            borderRadius: 4,\r\n                            '&:hover': { \r\n                                border: `1px solid white`,\r\n                            },\r\n                            '&:focus-within': {\r\n                                borderColor: colors.orange\r\n                            }\r\n                        }),\r\n\r\n                        placeholder: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: colors.orange,\r\n                            fontSize: '14px'\r\n                        }),\r\n\r\n                        noOptionsMessage: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: esriFontColor,\r\n                            backgroundColor: esriBackgroundColor\r\n                        }),\r\n\r\n                        option: (provided, state) => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            color: esriFontColor,\r\n                            '&:hover': { \r\n                                color: '#242424',\r\n                                backgroundColor: '#949393'\r\n                            },\r\n                        }),\r\n\r\n                        singleValue: (provided, state) => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: 'inherit',\r\n                            paddingRight: '20px',\r\n                        })\r\n                    }}\r\n                    theme={theme => ({\r\n                        ...theme,\r\n                        colors: {\r\n                            ...theme.colors,\r\n                            // Background color of hovered options\r\n                            primary25: '#e0e0e0',\r\n                            primary: '#212121',\r\n                        },\r\n                    })}\r\n                />\r\n                {selectedCruise &&\r\n                    <Table size='small' className={classes.cruiseInfo}>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Cruise:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Name}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Nickname:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Nickname}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            {\r\n                                selectedCruise.data.Start_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Start Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Start_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.End_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        End Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.End_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Chief_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Chief Scientist:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Chief_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Ship_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Ship:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Ship_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CruiseSelector));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\nimport regionRenderModes from '../Enums/regionRenderModes';\r\n\r\nimport CruiseSelector from './CruiseSelector';\r\nimport colors from '../Enums/colors';\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nconst drawButtonStyles = (theme) => ({\r\n    outerDiv: {\r\n        // padding:'12px 0 12px 0',\r\n        backgroundColor: 'transparent',\r\n        // width: '180px',\r\n        borderRadius: '4px',\r\n        marginRight: '20px'\r\n    },\r\n\r\n    drawButton: {\r\n        // border: '1px solid #333333',\r\n        border: `1px solid #333333`,\r\n        borderRadius: '4px',\r\n        color: colors.orange,\r\n        cursor: 'pointer',\r\n        padding: '6px',\r\n        width: '160px',\r\n        fontSize:'14px',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        // backgroundColor: 'rgba(255, 128, 0, .8)',\r\n        // backgroundColor: 'transparent',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif',\r\n        '&:hover': { \r\n            borderColor: 'white'\r\n        },\r\n    },\r\n\r\n    helpText: {\r\n        marginTop: 0,\r\n        color: 'white',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif'\r\n    },\r\n\r\n    cancelButton: {\r\n        display: 'none',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nconst DrawButtonRaw = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    return (\r\n        <div className={classes.outerDiv} id='draw-region-div'>\r\n            {showHelp && <p className={classes.helpText}>Click once to draw <br/>and again to finish</p>}\r\n            <button id='draw-button' className={classes.drawButton}>\r\n                Select Region\r\n            </button>\r\n            <button id='cancel-button' className={`${classes.drawButton} ${classes.cancelButton}`}>\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DrawButton = withStyles(drawButtonStyles)(DrawButtonRaw);\r\n\r\nconst polygonSymbol = {\r\n    type: \"polygon-3d\",\r\n    symbolLayers: [\r\n        {\r\n            type: \"fill\",\r\n            material: {\r\n            color: [255, 128, 0, .3]\r\n            },\r\n            outline: {\r\n                color: [255, 128, 0, 1],\r\n                size: '2px'\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { view, esriModules, regionLayer, setShowHelp, drawMode } = this.props;\r\n\r\n        const updateOptions = {\r\n            toggleToolOnClick: false,\r\n            tool: \"transform\"\r\n        }\r\n\r\n        var sketchModel = new esriModules.SketchViewModel({\r\n            layer: regionLayer,\r\n            view,\r\n            polygonSymbol,\r\n            defaultUpdateOptions: updateOptions\r\n        })\r\n\r\n        var drawButton = document.getElementById('draw-button');\r\n        var cancelButton = document.getElementById('cancel-button');\r\n\r\n        sketchModel.on(\"create\", (event) => {\r\n            if (event.state === \"complete\") {\r\n                setShowHelp(false);\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });        \r\n\r\n        sketchModel.on('update', (event) => {\r\n            this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphics[0].geometry.extent));\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })       \r\n        \r\n        drawButton.addEventListener(\"click\", (event) => {\r\n                drawMode();\r\n                regionLayer.removeAll();\r\n                setShowHelp(true);\r\n                sketchModel.create('rectangle', {\r\n                    mode:'click'            \r\n                });\r\n                drawButton.style.display = 'none';\r\n                cancelButton.style.display = 'inline-block';\r\n        });\r\n\r\n        cancelButton.addEventListener('click', (event) => {\r\n            sketchModel.cancel();\r\n            setShowHelp(false);\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })\r\n\r\n        view.ui.add('draw-region-div', 'bottom-right');\r\n        view.ui.add('cruise-selector', 'top-right');\r\n\r\n        view.ui.remove('zoom');\r\n        view.ui.remove('navigation-toggle');\r\n        view.ui.remove('compass');\r\n        view.ui.remove('attribution');\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst TrajectoryController = React.memo((props) => {\r\n    const { cruiseTrajectory, trajectoryLayer, esriModules } = props;\r\n    \r\n    if(cruiseTrajectory){\r\n        const { lons, lats } = cruiseTrajectory;\r\n\r\n        trajectoryLayer.removeAll();\r\n\r\n        var polyLines = [[]];\r\n        var lineIndex = 0;\r\n\r\n        let lonStart = lons[0];\r\n        let latStart = lats[0];\r\n        let maxDistance = 0;\r\n\r\n        // Create a new path array each time 180 lon is crossed\r\n        lons.forEach((lon, i) => {\r\n            let lat = lats[i];\r\n\r\n            let latDistance = Math.abs(lat - latStart);\r\n            let _lonDistance = Math.abs(lon - lonStart);\r\n            let lonDistance = _lonDistance > 180? 360 - _lonDistance : _lonDistance;\r\n\r\n            let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n            maxDistance = distance > maxDistance ? distance : maxDistance;\r\n\r\n            polyLines[lineIndex].push([lon, lat]);\r\n\r\n            if(i < lons.length - 1){\r\n                if((lon > 160 && lon < 180) && (lons[i + 1] > -180 && lons[i + 1] < -160)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n\r\n                if((lon > -180 && lon < -160) && (lon[i + 1] > 160 && lon[i + 1] < 180)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n            }\r\n        })\r\n\r\n        console.log(maxDistance);\r\n\r\n        var cruiseTrajectorySymbol = {\r\n            type: 'line-3d',\r\n            symbolLayers: [{\r\n                type: 'line',\r\n                material: { color: [255, 128, 0, 1] },\r\n                cap:  'round',\r\n                join: 'round',\r\n                size: 2\r\n            }]\r\n        }\r\n\r\n        polyLines.forEach(line => {\r\n\r\n            let cruiseTrajectoryGeometry = {\r\n                type: 'polyline',\r\n                paths: line\r\n            }\r\n\r\n            let graphic = new esriModules.Graphic({\r\n                geometry: cruiseTrajectoryGeometry,\r\n                symbol: cruiseTrajectorySymbol\r\n            });\r\n\r\n            trajectoryLayer.add(graphic);\r\n        })\r\n\r\n        try {\r\n            const center = [lons[0], lats[0]];\r\n\r\n            var zoom = 7 - Math.floor(maxDistance / 10);            \r\n    \r\n            props.view.goTo({\r\n                target: center,\r\n                zoom\r\n            }, {\r\n                maxDuration: 2500,\r\n                speedFactor: .5\r\n            });    \r\n\r\n        } catch(e) {console.log(e)}\r\n\r\n    } else {\r\n        trajectoryLayer.removeAll();\r\n\r\n        props.view.goTo({\r\n            target: [-140, 30],\r\n            zoom: 3\r\n        }, {\r\n            maxDuration: 2500,\r\n            speedFactor: .5\r\n        }); \r\n    }\r\n    return '';\r\n})\r\n\r\nclass MapContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showHelp: false\r\n        }\r\n        this.regionLayer = new props.esriModules.GraphicsLayer();\r\n        this.trajectoryLayer = new props.esriModules.GraphicsLayer();\r\n    }\r\n\r\n    render = () => {\r\n        const { classes, esriModules, regionRenderMode, spParams, cruiseTrajectory } = this.props;\r\n        const lat1 = parseFloat(spParams.lat1);\r\n        const lat2 = parseFloat(spParams.lat2);\r\n        const lon1 = parseFloat(spParams.lon1);\r\n        let _lon2 = parseFloat(spParams.lon2);\r\n        const lon2 = _lon2 < lon1 ? _lon2 + 360 : _lon2;\r\n\r\n        if(regionRenderMode === regionRenderModes.form){\r\n            this.regionLayer.removeAll();\r\n\r\n            var polygon = {\r\n                type: 'polygon', \r\n                rings: [\r\n                    [lon1, lat1],\r\n                    [lon2, lat1],\r\n                    [lon2, lat2],\r\n                    [lon1, lat2],\r\n                    [lon1, lat1]\r\n                ]\r\n            };\r\n\r\n            this.regionLayer.add(new esriModules.Graphic({\r\n                geometry: polygon,\r\n                symbol: polygonSymbol\r\n            }))\r\n        }\r\n        \r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ \r\n                        basemap: 'satellite',\r\n                        layers: [\r\n                            this.regionLayer,\r\n                            this.trajectoryLayer\r\n                        ]\r\n                    }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3\r\n                    }}\r\n                >\r\n                    <TrajectoryController \r\n                        cruiseTrajectory={cruiseTrajectory}\r\n                        trajectoryLayer={this.trajectoryLayer}\r\n                        esriModules={esriModules}\r\n                    />\r\n                    <UiComponents\r\n                        updateDomainFromMap={this.props.updateDomainFromMap}\r\n                        updateDomainFromGraphicExtent = {this.props.updateDomainFromGraphicExtent}\r\n                        esriModules={esriModules}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                        regionLayer={this.regionLayer}\r\n                        setShowHelp={(showHelp) => this.setState({...this.state, showHelp})}\r\n                        ref={this.props.globeUIRef}\r\n                        drawMode={this.props.drawMode}\r\n                    />\r\n                </Scene>\r\n                <DrawButton showHelp={this.state.showHelp}/>\r\n                <CruiseSelector/>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MapContainer);","const cleanSPParams = ({depth1, depth2, dt1, dt2, fields, lat1, lat2, lon1, lon2, spName, tableName}) => ({\r\n    depth1: parseFloat(depth1),\r\n    depth2: parseFloat(depth2),\r\n    dt1,\r\n    dt2,\r\n    fields,\r\n    lat1: parseFloat(lat1),\r\n    lat2: parseFloat(lat2),\r\n    lon1: parseFloat(lon1),\r\n    lon2: parseFloat(lon2),\r\n    spName,\r\n    tableName,\r\n})\r\n\r\nexport default cleanSPParams;","const localDateToString = (date) => {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate()\r\n\r\n    let nYear = year.toString();\r\n    let nMonth = month < 10 ? '0' + month.toString() : month.toString();\r\n    let nDay = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return nYear + '-' + nMonth + '-' + nDay;\r\n}\r\n\r\nexport default localDateToString;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport regionRenderModes from '../Enums/regionRenderModes';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport DataRetrievalForm from './DataRetrievalForm';\r\nimport VizControlPanel from './VizControlPanel';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend, cruiseListRequestSend, triggerShowCharts, completedShowCharts } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { loadModules } from 'esri-loader';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport Charts from './Charts';\r\nimport MapContainer from './MapContainer';\r\nimport colors from '../Enums/colors'\r\nimport cleanSPParams from '../Utility/cleanSPParams';\r\nimport localDateToString from '../Utility/localDateToString';\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport TopNavBar from './TopNavBar';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.sectionMap\r\n        }, \r\n        [vizSubTypes.timeSeries]: {\r\n            sp: storedProcedures.timeSeries,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: storedProcedures.depthProfile,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.heatmap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.heatmap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.contourMap\r\n        },\r\n        [vizSubTypes.sparse]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.sparse\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    loadingMessage: state.loadingMessage,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    cruiseList: state.cruiseList,\r\n    showChartsOnce: state.showChartsOnce\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n    cruiseListRequestSend,\r\n    completedShowCharts\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    background: {\r\n        backgroundColor: colors.backgroundGray\r\n    },\r\n\r\n    showCharts: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nclass Visualization extends Component {\r\n    globeUIRef = React.createRef();\r\n\r\n    state = {\r\n        filteredData: [],\r\n        opacity: 1,\r\n        showCharts: false,\r\n        showUI: false,\r\n        surfaceOnly: false,\r\n        irregularSpatialResolution: false,\r\n\r\n        regionRenderMode: regionRenderModes.draw,\r\n        \r\n        spParams: {\r\n            tableName: '',\r\n            fields: null,\r\n            depth1: 0,\r\n            depth2: 0,\r\n            dt1: new Date(),\r\n            dt2: new Date(),\r\n            lat1: 0,\r\n            lat2: 0,\r\n            lon1: 0,\r\n            lon2: 0,\r\n            selectedVizType: ''\r\n        }\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.cruiseList) this.props.cruiseListRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'GraphicsLayer',\r\n            'SketchViewModel',\r\n            'Utils',\r\n            'Graphic',\r\n            'Sketch'\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/layers/GraphicsLayer',\r\n            'esri/widgets/Sketch/SketchViewModel',\r\n            'esri/geometry/support/webMercatorUtils',\r\n            'esri/Graphic',\r\n            \"esri/widgets/Sketch\",\r\n        ]);\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.showChartsOnce) {\r\n            this.props.completedShowCharts();\r\n            this.setState({...this.state, showCharts: true})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleLatLonChange = (event) => {\r\n        this.setState({\r\n            ...this.state, \r\n            spParams: {...this.state.spParams, [event.target.name]: event.target.value},\r\n            regionRenderMode: regionRenderModes.form\r\n        })\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt1:newDate}});\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt2:newDate}});\r\n        }\r\n    }\r\n\r\n    onVisualize = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, selectedVizType } = this.state.spParams;\r\n\r\n        let mapping = mapVizType(selectedVizType);\r\n        let parameters = cleanSPParams({\r\n            depth1,\r\n            depth2,\r\n            dt1: localDateToString(dt1),\r\n            dt2: localDateToString(dt2),\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        });\r\n\r\n        let payload = {\r\n            parameters,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        if(fields) {\r\n            let surfaceOnly = !fields.data.Depth_Min;\r\n            let irregularSpatialResolution = fields.data.Spatial_Resolution === 'Irregular';\r\n\r\n            let dt1 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt1 : utcDateStringToLocal(fields.data.Time_Min);\r\n            let dt2 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt2 : \r\n                irregularSpatialResolution ? utcDateStringToLocal(fields.data.Time_Max) :\r\n                utcDateStringToLocal(fields.data.Time_Min);\r\n            let lat1 = irregularSpatialResolution ? fields.data.Lat_Min : this.state.spParams.lat1;\r\n            let lat2 = irregularSpatialResolution ? fields.data.Lat_Max : this.state.spParams.lat2;\r\n            let lon1 = irregularSpatialResolution ? fields.data.Lon_Min : this.state.spParams.lon1;\r\n            let lon2 = irregularSpatialResolution ? fields.data.Lon_Max : this.state.spParams.lon2;\r\n            let depth1 = irregularSpatialResolution ? fields.data.Depth_Min : this.state.spParams.depth1;\r\n            let depth2 = irregularSpatialResolution ? fields.data.Depth_Max : this.state.spParams.depth2;\r\n\r\n            let tableName = fields.data.Table_Name;\r\n            \r\n            this.setState({...this.state,\r\n                surfaceOnly,\r\n                irregularSpatialResolution,\r\n                spParams: {...this.state.spParams, \r\n                    fields,\r\n                    dt1,\r\n                    dt2,\r\n                    lat1,\r\n                    lat2,\r\n                    lon1,\r\n                    lon2,\r\n                    depth1,\r\n                    depth2,\r\n                    tableName\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    handleShowCharts = () => {\r\n        this.setState({...this.state, showCharts: true})\r\n    }\r\n\r\n    handleShowGlobe = () => {\r\n        this.setState({...this.state, showCharts: false})\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromMap = (coordinates) => {\r\n        if(!coordinates || !coordinates.length) return null;\r\n        \r\n        var lons = coordinates.map(a => a[0]);\r\n        var lats = coordinates.map(a => a[1]);\r\n\r\n        var newCoordinates = {\r\n            lat1: Math.min(...lats).toFixed(3),\r\n            lat2: Math.max(...lats).toFixed(3),\r\n            lon1: Math.min(...lons).toFixed(3),\r\n            lon2: Math.max(...lons).toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    updateDomainFromGraphicExtent = (extent) => {\r\n        var newCoordinates = {\r\n            lat1: extent.ymin.toFixed(3),\r\n            lat2: extent.ymax.toFixed(3),\r\n            lon1: extent.xmin.toFixed(3),\r\n            lon2: extent.xmax.toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        return (\r\n            <div>\r\n                <TopNavBar/>\r\n                <DataRetrievalForm \r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                   {...this.state.spParams}\r\n                   surfaceOnly={this.state.surfaceOnly}\r\n                   irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                />\r\n                <VizControlPanel\r\n                    toggleChartView={this.toggleChartView}\r\n                    toggleShowUI={this.toggleShowUI}\r\n                    showCharts={this.state.showCharts}\r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                    {...this.state.spParams}\r\n                    surfaceOnly={this.state.surfaceOnly}\r\n                    irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                    showCharts={this.state.showCharts}\r\n                    handleShowCharts={this.handleShowCharts}\r\n                    handleShowGlobe={this.handleShowGlobe}\r\n                />\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer\r\n                            globeUIRef={this.globeUIRef}\r\n                            updateDomainFromMap={this.updateDomainFromMap}\r\n                            updateDomainFromGraphicExtent={this.updateDomainFromGraphicExtent}\r\n                            drawMode={() => this.setState({...this.state, regionRenderMode: regionRenderModes.draw})}\r\n                            esriModules={this.state.esriModules}\r\n                            regionRenderMode={this.state.regionRenderMode}\r\n                            spParams={this.state.spParams}\r\n                            cruiseTrajectory={this.props.cruiseTrajectory}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                <div className={this.state.showCharts ? classes.showCharts : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password, or <Link onClick={this.handleClose} component={RouterLink} to={{pathname: '/register'}}>Register.</Link>\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Spinner from 'react-spinkit';\r\n\r\nconst styles = theme => ({\r\n    loader: {\r\n        backgroundColor: '#000000',\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        opacity: 0.5,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        zIndex: 9998\r\n    },\r\n\r\n    loaderContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItem: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 9999,\r\n        opacity: 1\r\n    },\r\n\r\n    spinnerText: {\r\n        zIndex: 10000,\r\n        color: '#FF8000',\r\n        marginTop: '25px',\r\n        opacity: 1\r\n    },\r\n\r\n    spinner: {\r\n        opacity: 1\r\n    }\r\n})\r\n\r\nconst LoadingOverlay = (props) => {\r\n    const { classes, loadingMessage } = props;\r\n\r\n    if(loadingMessage && loadingMessage.length){\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div className={classes.loaderContent}>\r\n                    <Spinner className={classes.spinner} color='#FF8000' name=\"ball-pulse-rise\" fadeIn='quarter'/>\r\n                    <Typography variant='h6' className={classes.spinnerText}>{loadingMessage}</Typography>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return '';\r\n\r\n}\r\n\r\nexport default withStyles(styles)(LoadingOverlay);","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper';\r\nimport LoadingOverlay from './LoadingOverlay';\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog,\r\n    loadingMessage: state.loadingMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n                <LoadingOverlay loadingMessage={this.props.loadingMessage}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nconst styles = theme => ({\r\n    landingWrapper: {\r\n        margin: '15vh auto'\r\n    },\r\n\r\n    welcomeMessage: {\r\n        color: '#ffffff',\r\n        maxWidth: '500px',\r\n        margin: `${theme.spacing(2)}px auto`\r\n    }\r\n})\r\n\r\nclass LandingPage extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.landingWrapper}>\r\n                <img \r\n                    src='/images/large_cmap_logo.png'\r\n                    height='290'\r\n                    width='600'\r\n                />\r\n                <Typography variant=\"body2\" component=\"p\" className={classes.welcomeMessage}>\r\n                    Welcome to Simons CMAP. This application is currently under heavy development, and some features may be incomplete.\r\n                </Typography>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingPage));","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { Home, CollectionsBookmark, AccountCircle, InsertChartOutlined, ChevronLeft } from '@material-ui/icons';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst navDrawerWidth = 150;\r\n\r\nconst styles = theme => ({\r\n  drawer: {\r\n    width: navDrawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: navDrawerWidth,\r\n  },\r\n\r\n  drForm: {\r\n      width: 180,\r\n      boxShadow: '0px 0px 0px 2px rgba(0,0,0,0.2)'\r\n  },\r\n\r\n  drFormPaper: {\r\n      width: 180,\r\n      left: navDrawerWidth,\r\n      boxShadow: '0px 0px 0px 2px rgba(0,0,0,0.2)'\r\n    //   boxShadow: theme.sha\r\n  },\r\n\r\n  drFormHead: {\r\n    alignItems: 'center',\r\n  },\r\n\r\n  nestedListItem: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingTop: 0,\r\n      marginTop: '-10px',\r\n  },\r\n\r\n  logo: {\r\n    margin: '10px auto 20px auto',\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n\r\n  moveRight: {\r\n      position: 'relative',\r\n      left: '160px'\r\n  }\r\n});\r\n\r\nconst primaryTypographyProps = {\r\n    variant: 'subtitle2'\r\n}\r\n\r\nconst nestedPrimaryTypographyProps = {\r\n    variant: 'caption'\r\n}\r\n\r\nclass PermanentDrawerLeft extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showDataRetrievalForm: false\r\n        }\r\n    }\r\n\r\n    handleOpenDRForm = () => {\r\n        this.setState({...this.state, showDataRetrievalForm: true})\r\n    }\r\n\r\n    handleCloseDRForm = () => {\r\n        this.setState({...this.state, showDataRetrievalForm: false})\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { pathname } = this.props.location;\r\n\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >\r\n                    <List>\r\n                        <ListItem button>\r\n                            <ListItemIcon><Home/></ListItemIcon>\r\n                            <ListItemText primary='Home' primaryTypographyProps={primaryTypographyProps}/>\r\n                        </ListItem>\r\n\r\n                        <ListItem button>\r\n                            <ListItemIcon><AccountCircle/></ListItemIcon>\r\n                            <ListItemText primary='Account' primaryTypographyProps={primaryTypographyProps}/>\r\n                        </ListItem>\r\n\r\n                        <ListItem button>\r\n                            <ListItemIcon><CollectionsBookmark/></ListItemIcon>\r\n                            <ListItemText primary='Catalog' primaryTypographyProps={primaryTypographyProps}/>\r\n                        </ListItem>\r\n\r\n                        <ListItem button>\r\n                            <ListItemIcon><InsertChartOutlined/></ListItemIcon>\r\n                            <ListItemText primary='Visualization' primaryTypographyProps={primaryTypographyProps}/>\r\n                        </ListItem>\r\n\r\n                        <Collapse \r\n                            in={pathname==='/visualization'}\r\n                            timeout=\"auto\" \r\n                            unmountOnExit\r\n                        >\r\n                            <List component=\"div\" disablePadding dense>\r\n                                <ListItem \r\n                                    button \r\n                                    className={classes.nestedListItem}\r\n                                    onClick={this.handleOpenDRForm}\r\n                                >\r\n                                    <ListItemText inset primary=\"New\" primaryTypographyProps={nestedPrimaryTypographyProps}/>\r\n                                </ListItem>\r\n                            </List>\r\n\r\n                            <List component=\"div\" disablePadding>\r\n                                <ListItem button className={classes.nestedListItem}>\r\n                                    <ListItemText inset primary=\"Charts\" primaryTypographyProps={nestedPrimaryTypographyProps}/>\r\n                                </ListItem>\r\n                            </List>\r\n                        </Collapse>\r\n                    </List>\r\n                </Drawer>\r\n\r\n                <Drawer\r\n                    className={classes.drForm}\r\n                    open={this.state.showDataRetrievalForm}\r\n                    variant=\"persistent\"\r\n                    classes={{\r\n                        paper: classes.drFormPaper,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >             \r\n\r\n                    <div className={classes.drFormHead}>\r\n                        <IconButton onClick={this.handleCloseDRForm}>\r\n                            <ChevronLeft color='action'/>\r\n                        </IconButton>\r\n                    </div>     \r\n                </Drawer>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(PermanentDrawerLeft));\r\n\r\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\r\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   root: {\r\n//     display: 'flex',\r\n//   },\r\n//   appBar: {\r\n//     transition: theme.transitions.create(['margin', 'width'], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//   },\r\n//   appBarShift: {\r\n//     width: `calc(100% - ${drawerWidth}px)`,\r\n//     marginLeft: drawerWidth,\r\n//     transition: theme.transitions.create(['margin', 'width'], {\r\n//       easing: theme.transitions.easing.easeOut,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//   },\r\n//   menuButton: {\r\n//     marginRight: theme.spacing(2),\r\n//   },\r\n//   hide: {\r\n//     display: 'none',\r\n//   },\r\n//   drawer: {\r\n//     width: drawerWidth,\r\n//     flexShrink: 0,\r\n//   },\r\n//   drawerPaper: {\r\n//     width: drawerWidth,\r\n//   },\r\n//   drawerHeader: {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     padding: theme.spacing(0, 1),\r\n//     ...theme.mixins.toolbar,\r\n//     justifyContent: 'flex-end',\r\n//   },\r\n//   content: {\r\n//     flexGrow: 1,\r\n//     padding: theme.spacing(3),\r\n//     transition: theme.transitions.create('margin', {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//     marginLeft: -drawerWidth,\r\n//   },\r\n//   contentShift: {\r\n//     transition: theme.transitions.create('margin', {\r\n//       easing: theme.transitions.easing.easeOut,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//     marginLeft: 0,\r\n//   },\r\n// }));\r\n\r\n// export default function PersistentDrawerLeft() {\r\n//   const classes = useStyles();\r\n//   const theme = useTheme();\r\n//   const [open, setOpen] = React.useState(false);\r\n\r\n//   const handleDrawerOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleDrawerClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Drawer\r\n//         className={classes.drawer}\r\n//         variant=\"persistent\"\r\n//         anchor=\"left\"\r\n//         open={open}\r\n//         classes={{\r\n//           paper: classes.drawerPaper,\r\n//         }}\r\n//       >\r\n//         <div className={classes.drawerHeader}>\r\n//           <IconButton onClick={handleDrawerClose}>\r\n//             {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n//           </IconButton>\r\n//         </div>\r\n//         <Divider />\r\n//         <List>\r\n//           {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n//             <ListItem button key={text}>\r\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n//               <ListItemText primary={text} />\r\n//             </ListItem>\r\n//           ))}\r\n//         </List>\r\n//         <Divider />\r\n//         <List>\r\n//           {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n//             <ListItem button key={text}>\r\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n//               <ListItemText primary={text} />\r\n//             </ListItem>\r\n//           ))}\r\n//         </List>\r\n//       </Drawer>\r\n//     </div>\r\n//   );\r\n// }","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport './App.scss';\n\nimport colors from './Enums/colors';\n\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\n\nimport Home from './Components/Home';\nimport Catalog from './Components/Catalog';\nimport Register from './Components/Register';\nimport Visualization from './Components/Visualization';\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\nimport LandingPage from './Components/LandingPage';\nimport NavDrawer from './Components/NavDrawer';\nimport TopNavBar from './Components/TopNavBar';\n\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: colors.backgroundGray,\n      paper: colors.backgroundGray\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiListItemIcon: {\n      root: {\n        minWidth: '40px'\n      }\n    },\n\n    MuiFormHelperText: {\n      filled: {\n        paddingLeft: '1px',\n        paddingRight: '1px',\n        fontSize: '13px'\n      }\n    },\n\n    MuiListItem: {\n      gutters: {\n        paddingLeft: '6px',\n        paddingRight: '10px'\n      },\n\n      root: {\n        paddingTop: '4px',\n        paddingBottom: '4px'\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: 'transparent',\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },\n\n    MuiButtonGroup: {\n      groupedOutlined: {\n        '&:not(:first-child)': {\n          marginLeft: 0\n        }\n      }\n    },\n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiFilledInput: {\n      input: {\n        paddingLeft: '6px',\n      },\n\n      inputSelect: {\n        paddingBottom: '6px'\n      },\n\n      adornedEnd: {\n        paddingRight: '6px'\n      }\n    }\n  }\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  loadingMessage: state.loadingMessage\n})\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.vizRef = React.createRef();\n  }\n\nrender() {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n        <BrowserRouter>\n          <GlobalUIComponentWrapper/>\n          <TopNavBar/>\n          <Switch>          \n            <Route exact path='/apikeymanagement' component={ Home } />\n            <Route exact path='/' component={ LandingPage } />\n            <Route exact path='/catalog' component={ Catalog } />\n            <Route exact path='/register' component={ Register } />\n            <Route exact path='/visualization' component={Visualization} />\n          </Switch>\n        </BrowserRouter>\n        </MuiThemeProvider>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n}\n\nexport default connect(mapStateToProps, null)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\n\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}