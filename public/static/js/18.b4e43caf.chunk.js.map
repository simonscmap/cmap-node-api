{"version":3,"sources":["Enums/metaTags.js","Components/DataSubmission/DSCellEditor.js","Components/DataSubmission/DSCellEditorTextArea.js","Components/DataSubmission/DSCellEditorSelect.js","Components/DataSubmission/ValidationGrid.js","Components/User/LoginRequiredPrompt.js","Utility/DataSubmission/dsGuideItems.js","Components/DataSubmission/DSCustomGridHeader.js","Utility/DataSubmission/formatDataSheet.js","Utility/DataSubmission/formatDatasetMetadataSheet.js","Utility/DataSubmission/formatVariableMetadataSheet.js","Utility/DataSubmission/generateAudits.js","Utility/DataSubmission/workbookAudits.js","Utility/DataSubmission/auditReference.js","Components/DataSubmission/ValidationTool.js","Components/DataSubmission/DSGuideItem.js","Components/DataSubmission/SubmissionGuide.js","Components/DataSubmission/Comment.js","Components/DataSubmission/UserDashboardPanelDetails.js","Components/DataSubmission/UserDashboard.js","Components/DataSubmission/AdminDashboardPanelDetails.js","Components/DataSubmission/AdminDashboard.js","Components/DataSubmission/DataSubmission.js"],"names":["metaTags","default","title","description","visualization","catalog","dataSubmission","community","DSCellEditor","props","context","getAuditReport","sheet","rowIndex","colId","column","auditReport","handleChange","e","value","target","errors","auditCell","setState","state","afterGuiAttached","inputRef","current","focus","select","setTimeout","attached","handleClickAway","stopEditing","React","createRef","parseValue","this","style","maxWidth","margin","ClickAwayListener","onClickAway","spellCheck","ref","onChange","backgroundColor","color","height","border","borderRadius","padding","map","err","i","key","lineHeight","textAlign","whiteSpace","Component","DSCellEditorTextArea","isPopup","rowCount","textAreaLookup","width","rows","cols","colors","primary","DSCellEditorSelect","undefined","dynamicOpts","selectOptions","toLowerCase","className","opts","disabled","display","Set","has","push","textDecoration","href","numberParser","newValue","isNaN","Number","columnDefs","data","headerName","field","valueParser","dataset_meta_data","autoHeight","tooltipField","cellEditor","vars_meta_data","ValidationGrid","render","gridContext","singleClickEdit","onModelUpdated","defaultColDef","defaultColumnDef","rowData","onGridReady","suppressDragLeaveHidesColumns","suppressMovableColumns","enableCellTextSelection","suppressContextMenu","onCellValueChanged","handleCellValueChanged","onGridSizeChanged","handleGridSizeChanged","frameworkComponents","mapDispatchToProps","showLoginDialog","connect","withStyles","theme","loginRequiredMessage","marginTop","spacing","classes","useEffect","Typography","Link","component","RouterLink","to","pathname","window","location","onClick","guideItems","dataItems","label","anchorEnd","text","plainText","bullets","images","Fragment","datasetMetadataItems","src","alt","caption","id","variableMetadataItems","sheetToReference","item","dsGuideItems","find","displayName","Tooltip","placement","Help","position","top","left","fontSize","workbook","length","sample","time","test","is1904","Workbook","WBProps","date1904","forEach","Date","toISOString","slice","console","log","Object","keys","keysContaining__EMPTY","indexOf","metadata","type","dataset_release_date","col","row","cellValue","trim","submissionOptions","Make","Sensor","Spatial_Resolution","Study_Domain","Temporal_Resolution","number","parseInt","required","datasetRequired","min","max","datasetLength","makes","makesSet","disciplines","disciplinesSet","sensors","sensorsSet","codeFriendly","binary","spatialResolutions","spatialResolutionSet","temporalResolutions","temporalResolutionsSet","firstRowOnly","lat","lon","depth","dataset_short_name","dataset_long_name","dataset_version","dataset_make","dataset_source","dataset_distributor","dataset_acknowledgement","dataset_history","dataset_description","dataset_references","climatology","cruise_names","var_short_name","var_long_name","var_sensor","var_unit","var_spatial_res","var_temporal_res","var_discipline","visualize","var_keywords","var_comment","nanVariants","warnings","sheetCheck","missingSheets","Sheets","checkSheets","join","missingCols","checkRequiredCols","fixedVariables","userVariables","filter","variableNameMismatches","checkVariableNameMismatches","missingVarMetadataRows","shortNames","Array","from","checkMissingVarMetadataRows","emptyColumns","header","checkEmptyColumns","includeDepth","Boolean","checkDepthAllOrNone","datasetMetadata","includes","datasetMetadataIncludesSampleRow","variableMetadata","variableMetadataIncludesSampleRow","checkMultipleCruisesOneCell","hasInSitu","some","isObservation","shouldHaveCruise","hasCruise","checkMissingCruiseNames","lonMin","lonMax","latMin","latMax","pi","Math","PI","checkRadians","duplicates","obj","result","matched","checkUniqueSpaceTime","typeConsistency","columnIsNumerical","parseFloat","checkTypeConsistency","allSameValue","sampleValue","j","allSameValueHelper","checkAllSameValue","containsNans","checkNans","outliers","vectors","stats","mean","deviation","abs","checkOutliers","auditReference","snackbarOpen","uploadSubmission","setLoadingMessage","retrieveMostRecentFile","storeSubmissionFile","checkSubmissionOptionsAndStoreFile","CleanupDummy","setUploadState","validationSteps","orderedColumns","generateSelectOptions","reduxStoreOptions","StyledBadgeRed","badge","right","Badge","StyledBadgeGreen","fileSizeTooLargeDummyState","validationStep","ValidationTool","checkCellStyle","params","node","childIndex","styles","boxShadow","file","menuTabs","resizable","editable","cellStyle","headerComponentFramework","DSCustomGridHeader","gridApi","sizeColumnsToFit","handleDragOver","preventDefault","cellAudit","auditFuncs","audits","func","auditWorkbook","workbookAudits","auditRows","audit","rowAudit","performAudit","workbookAudit","handleResetState","history","query","handleChangeValidationStep","oldValue","newAudit","updated","redrawRows","handleReadFile","reader","FileReader","size","onload","progressEvent","readFile","Uint8Array","XLSX","read","_data","utils","sheet_to_json","defval","formatDataSheet","_dataset_meta_data","formatDatasetMetadataSheet","_vars_meta_data","formatVariableMetadataSheet","readAsArrayBuffer","handleDrop","dataTransfer","items","getAsFile","handleFileSelect","files","handleUploadSubmission","book_new","book_append_sheet","json_to_sheet","wbArray","write","bookType","Blob","name","datasetName","dataSource","datasetLongName","handleDownload","requestAnimationFrame","writeFile","api","columnApi","scrollGridTo","index","ensureIndexVisible","handleFindNext","lastFocused","getFocusedCell","startRow","startColIndex","findIndex","ensureColumnVisible","startEditingCell","colKey","countErrors","counts","handleClickTab","event","componentDidMount","submissionID","URLSearchParams","search","get","componentWillUnmount","componentDidUpdate","prevProps","prevState","dataSubmissionSelectOptions","generateAudits","submissionFile","user","errorCount","preventSubmission","forwardArrowTooltip","hideSelectDifferentFile","needHelp","download","needHelpLink","Paper","elevation","fileSelectPaper","addBorder","onDragOver","onDrop","variant","currentlyViewingTypography","htmlFor","chooseNewFileLabel","ilb","IconButton","ArrowBack","currentSectionSpan","ArrowForward","Button","button","Divider","divider","ErrorOutline","linkLabel","Done","workbookAuditPaper","marginBottom","List","dense","ListItem","ListItemIcon","ListItemText","tabPaper","Tabs","Tab","badgeContent","workbookTab","submissionUploadState","states","succeeded","submittedTypography","encodeURI","failed","submitButton","input","accept","ownProps","withRouter","textTransform","float","letterSpacing","palette","main","cursor","minHeight","marginLeft","sectionHeader","fontWeight","fontFamily","anchor","visibility","bullet","image","maxwidth","doiProviderList","link","NavListItem","navListItem","subListText","navListSubItemText","stickyPaper","maxHeight","paddingLeft","overflow","guideSection","navListItemText","doiListItem","doiListItemText","doiListItemtextWrapper","navListItemtextWrapper","sampleTableRow","navListSubSubItemText","useState","activeSection","setActiveSection","observer","IntersectionObserver","entries","isIntersecting","threshold","document","querySelector","observe","disconnect","Grid","container","xs","root","Table","TableHead","TableRow","TableCell","TableBody","commentArea","commenterAndDateTime","comment","Comment","Commenter","Comment_Date_Time","dateTime","toLocaleString","retrieveSubmissionCommentHistory","addSubmissionComment","downloadMostRecentFile","steps","timeStampKey","submissionCommentHistoryRetrievalState","submissionComments","panelDetails","newCommentDiv","newCommentTextField","flexBasis","marginRight","postButton","setPhaseButton","stepper","newUpload","labelTimeStamp","opacity","activeStep","submission","setComment","comments","Submission_ID","renderComments","Phase","AccordionDetails","Stepper","alternativeLabel","Step","StepLabel","encodeURIComponent","inProgress","TextField","multiline","fullWidth","retrieveDataSubmissionsByUser","UserDashboard","expandedPanel","dataSubmissions","Dataset","handleExpansion","wrapperDiv","Accordion","expanded","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","noWrap","panelSummaryText","paddingRight","setSubmissionPhase","deleteButton","phaseControlWrapper","phaseSelect","helperText","Phase_ID","phase","setPhase","Select","MenuItem","FormHelperText","handleSelectDeleteTarget","retrieveAllSubmissions","dataSubmissionDelete","initialFilterState","AdminDashboard","addDocuments","handleChangeFilter","newFilterState","filters","queryString","stringify","handleChangeSearchString","searchString","handleResetExpandedPanel","deleteTarget","handleCloseDeleteDialog","handleConfirmDelete","submissions","Dialog","onClose","open","PaperProps","dialogPaper","dialogRoot","DialogTitle","DialogContent","DialogActions","startIcon","Delete","FormGroup","filterFormGroup","searchFieldWrapper","placeholder","InputProps","startAdornment","InputAdornment","Search","FormControlLabel","control","Checkbox","checked","filterFormControl","preserveBackgroundWhenDisabled","Dataset_Long_Name","enterDelay","Data_Source","Name","Start_Date_Time","Ingestion_Date_Time","parse","paramsIncludeFilterStates","JsSearch","indexStrategy","searchIndex","addIndex","fromEntries","modifiedDatasetID","borderTopLeftRadius","borderTopRightRadius","flexWrap","zIndex","z","HELP_DIALOG","solidPaper","paddingTop","match","exact","path","url","SubmissionGuide"],"mappings":"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","file":"static/js/18.b4e43caf.chunk.js","sourcesContent":["const metaTags = {\r\n    default: {\r\n        title: 'Simons Collaborative Marine Ocean Atlas',\r\n        description: \"Simons Collaborative Marine Atlas Project is an open-source data portal interconnecting data sets across Oceanography disciplines. It enables scientists and the public to dive into the vast and often underutilized ocean datasets to retrieve custom subsets of data.\",\r\n    },\r\n\r\n    visualization: {\r\n        title: 'CMAP Data Visualization',\r\n        description: 'Generate scatter plots, heatmaps, cruise routes, and more using oceanographic data from from CMAP datasets.'\r\n    },\r\n\r\n    catalog: {\r\n        title: 'CMAP Catalog',\r\n        description: 'Search for oceanographic datasets in the CMAP database using keywords, or temporal or spatial coverage.'\r\n    },\r\n\r\n    dataSubmission: {\r\n        title: 'CMAP Data Submission',\r\n        description: 'Validate and submit your dataset. Track the progress of your previous submissions.'\r\n    },\r\n\r\n    community: {\r\n        title: 'CMAP Community',\r\n        description: 'Join the CMAP team on slack, follow us on github, or download the CMAP software package for Python, R, Julia, or MATLAB.'\r\n    }\r\n}\r\n\r\nexport default metaTags;","// Custom standard cell editor for datasubmission ag-grid\r\n\r\nimport React from 'react';\r\n\r\nimport { ClickAwayListener } from '@material-ui/core';\r\n\r\nclass DSCellEditor extends React.Component {\r\n    constructor(props){\r\n        const { getAuditReport, sheet } = props.context;\r\n        const { rowIndex } = props;\r\n        const { colId } = props.column;\r\n        let auditReport = getAuditReport();\r\n\r\n        super(props);\r\n        this.inputRef = React.createRef();\r\n        this.parseValue = props.parseValue;\r\n        this.state = {\r\n            value: props.value || '',\r\n            errors: auditReport[sheet][rowIndex] && auditReport[sheet][rowIndex][colId] ? auditReport[sheet][rowIndex][colId] : [],\r\n            attached: false\r\n        }\r\n    }\r\n\r\n    getValue(){\r\n        return this.parseValue(this.state.value);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { value } = e.target;\r\n\r\n        let errors = this.props.context.auditCell(value, this.props.column.colId, this.props.rowIndex);\r\n        this.setState({...this.state, value, errors});\r\n    }\r\n\r\n    afterGuiAttached = () => {\r\n        this.inputRef.current.focus();\r\n        this.inputRef.current.select();\r\n        setTimeout(() => {\r\n            this.setState({...this.state, attached: true})\r\n        }, 20);\r\n    }\r\n\r\n    handleClickAway = () => {\r\n        if(this.state.attached){\r\n            this.props.stopEditing();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    maxWidth: '175px',\r\n                    margin: '0 auto'\r\n                }}\r\n            >\r\n                <ClickAwayListener onClickAway={this.handleClickAway}>\r\n                    <div>\r\n                        <input\r\n                            spellCheck='false'\r\n                            ref={this.inputRef}\r\n                            value={this.state.value}\r\n                            onChange={this.handleChange}\r\n                            style={{\r\n                                backgroundColor: 'transparent',\r\n                                color: 'white',\r\n                                height: '28px',\r\n                                border: `1px solid black`,\r\n                                borderRadius: '2px',\r\n                                padding: '2px 6px',\r\n                                maxWidth: '100%'\r\n                            }}\r\n                        />\r\n                        {\r\n                            errors.map((err, i) => {\r\n                                return (\r\n                                    <p \r\n                                        key={i}\r\n                                        style={{\r\n                                            lineHeight: 1.2,\r\n                                            margin: '6px auto',\r\n                                            textAlign: 'left',\r\n                                            maxWidth: '100%',\r\n                                            whiteSpace: 'pre-wrap'\r\n                                        }}\r\n                                    >\r\n                                        {err}\r\n                                    </p>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </ClickAwayListener>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DSCellEditor;","// Custom large text area cell editor for data submission ag-grid\r\n\r\nimport React from 'react';\r\n\r\nimport { ClickAwayListener } from '@material-ui/core';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nclass DSCellEditorTextArea extends React.Component {\r\n    constructor(props){\r\n        const { getAuditReport, sheet } = props.context;\r\n        const { rowIndex } = props;\r\n        const { colId } = props.column;\r\n        super(props);\r\n        let auditReport = getAuditReport();\r\n        this.inputRef = React.createRef();\r\n        this.parseValue = props.parseValue;\r\n        this.state = {\r\n            value: props.value || '',\r\n            errors: auditReport[sheet][rowIndex] && auditReport[sheet][rowIndex][colId] ? auditReport[sheet][rowIndex][colId] : [],\r\n            attached: false\r\n        }\r\n    }\r\n\r\n    getValue(){\r\n        return this.parseValue(this.state.value);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { value } = e.target;\r\n\r\n        let errors = this.props.context.auditCell(value, this.props.column.colId, this.props.rowIndex);\r\n        this.setState({...this.state, value, errors});\r\n    }\r\n\r\n    afterGuiAttached = () => {\r\n        this.inputRef.current.focus();\r\n        setTimeout(() => {\r\n            this.setState({...this.state, attached: true})\r\n        }, 20);\r\n    }\r\n\r\n    handleClickAway = () => {\r\n        if(this.state.attached){\r\n            this.props.stopEditing();\r\n        }\r\n    }\r\n\r\n    isPopup = () => true;\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        const { column, context } = this.props;\r\n\r\n        const rowCount = context.textAreaLookup[column.colId];\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    margin: '0 auto',\r\n                    width: 'auto',\r\n                    padding: '12px',\r\n                    height: 'auto'\r\n                }}\r\n            >\r\n                <ClickAwayListener onClickAway={this.handleClickAway}>\r\n                    <div>\r\n                        <textarea\r\n                            rows={rowCount}\r\n                            cols='70'\r\n                            spellCheck='false'\r\n                            ref={this.inputRef}\r\n                            value={this.state.value}\r\n                            onChange={this.handleChange}\r\n                            style={{\r\n                                backgroundColor: 'transparent',\r\n                                color: 'white',\r\n                                border: `1px solid ${colors.primary}`,\r\n                                borderRadius: '2px',\r\n                                padding: '2px 6px',\r\n                            }}\r\n                        />\r\n                        {\r\n                            errors.map((err, i) => {\r\n                                return (\r\n                                    <p \r\n                                        key={i}\r\n                                        style={{\r\n                                            lineHeight: 1.2,\r\n                                            margin: '6px auto',\r\n                                            textAlign: 'left',\r\n                                            maxWidth: '100%',\r\n                                            whiteSpace: 'pre-wrap'\r\n                                        }}\r\n                                    >\r\n                                        {err}\r\n                                    </p>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </ClickAwayListener>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DSCellEditorTextArea;","// Custom dropdown cell editor for data submission ag-grid\r\n\r\nimport React from 'react';\r\n\r\nimport { ClickAwayListener } from '@material-ui/core';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nclass DSCellEditorSelect extends React.Component {\r\n    constructor(props){\r\n        const { getAuditReport, sheet } = props.context;\r\n        const { rowIndex } = props;\r\n        const { colId } = props.column;\r\n        let auditReport = getAuditReport();\r\n        super(props);\r\n        this.inputRef = React.createRef();\r\n        this.parseValue = props.parseValue;\r\n        let value = (props.value !== null && props.value !== undefined) ? props.value : '';\r\n        this.state = {\r\n            value,\r\n            errors: auditReport[sheet][rowIndex] && auditReport[sheet][rowIndex][colId] ? auditReport[sheet][rowIndex][colId] : [],\r\n            attached: false\r\n        }\r\n    }\r\n\r\n    getValue(){\r\n        return this.parseValue(this.state.value);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { value } = e.target;\r\n\r\n        this.setState({...this.state, value}, () => this.props.stopEditing());\r\n    }\r\n\r\n    afterGuiAttached = () => {\r\n        this.inputRef.current.focus();\r\n        setTimeout(() => {\r\n            this.setState({...this.state, attached: true})\r\n        }, 20);\r\n    }\r\n\r\n    handleClickAway = () => {\r\n        if(this.state.attached){\r\n            this.props.stopEditing();\r\n        }\r\n    }\r\n\r\n    isPopup = () => true;\r\n\r\n    render() {\r\n        const { errors, value } = this.state;\r\n        const { column, context } = this.props;       \r\n\r\n        let dynamicOpts = context.selectOptions[column.colId].map( (e, i) => (\r\n            <option\r\n                key={i + 1} \r\n                value={e.toLowerCase()}\r\n                className='ds-cell-editor-select-option'\r\n                style={{\r\n                    backgroundColor: '#184562',\r\n                }}\r\n            >\r\n                {e}\r\n            </option>\r\n        ));\r\n\r\n        let opts = [<option key={0} disabled style={{display: 'none'}} value=''></option>, ...dynamicOpts];\r\n\r\n        let validOpts = new Set(this.props.context.selectOptions[this.props.column.colId].map(e => e.toLowerCase()));\r\n        if(!validOpts.has(value)) opts.push(<option key={value} value={value} style={{display: 'none'}}></option>)\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    margin: '0 auto',\r\n                    width: 'auto',\r\n                    padding: '12px',\r\n                    height: 'auto',\r\n                    maxWidth: '300px'\r\n                }}\r\n            >\r\n                <ClickAwayListener onClickAway={this.handleClickAway}>\r\n                    <div>\r\n                        <p \r\n                            style={{\r\n                                lineHeight: 1.2,\r\n                                margin: '10px auto',\r\n                                textAlign: 'left',\r\n                                maxWidth: '100%',\r\n                                whiteSpace: 'pre-wrap'\r\n                            }}\r\n                        >\r\n                            If you don't see the correct value on this list please contact us at: {'\\n'}<a style={{color:colors.primary, textDecoration: 'none'}} href=\"mailto:cmap-data-submission@uw.edu\">cmap-data-submission@uw.edu</a>.\r\n                        </p>\r\n\r\n                        <select\r\n                            ref={this.inputRef}\r\n                            value={this.state.value}\r\n                            onChange={this.handleChange}\r\n                            style={{\r\n                                backgroundColor: 'transparent',\r\n                                color: 'white',\r\n                                // height: '28px',\r\n                                border: `1px solid ${colors.primary}`,\r\n                                borderRadius: '2px',\r\n                                padding: '2px 6px',\r\n                                maxWidth: '100%'\r\n                            }}\r\n                        >\r\n                            {opts}\r\n                        </select>\r\n                        {\r\n                            errors.map((err, i) => {\r\n                                return (\r\n                                    <p \r\n                                        key={i}\r\n                                        style={{\r\n                                            lineHeight: 1.2,\r\n                                            margin: '6px auto',\r\n                                            textAlign: 'left',\r\n                                            maxWidth: '100%',\r\n                                            whiteSpace: 'pre-wrap'\r\n                                        }}\r\n                                    >\r\n                                        {err}\r\n                                    </p>\r\n                                )\r\n                            })\r\n                        }                        \r\n                    </div>\r\n                </ClickAwayListener>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DSCellEditorSelect;","// Wrapper for grid used for each of data, dataset_meta_data, variable_meta_data sections of data submission\r\n\r\nimport React from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n\r\nimport DSCellEditor from './DSCellEditor';\r\nimport DSCellEditorTextArea from './DSCellEditorTextArea';\r\nimport DSCellEditorSelect from './DSCellEditorSelect';\r\n\r\nconst numberParser = ({newValue}) => isNaN(newValue) ? null : Number(newValue);\r\n\r\nconst columnDefs = {\r\n    data: [\r\n        {\r\n            headerName: 'Time',\r\n            field: 'time'\r\n        },\r\n    \r\n        {\r\n            headerName: 'Latitude',\r\n            field: 'lat',\r\n            valueParser: numberParser\r\n        },\r\n    \r\n        {\r\n            headerName: 'Longitude',\r\n            field: 'lon',\r\n            valueParser: numberParser\r\n        },\r\n    \r\n        {\r\n            headerName: 'Depth',\r\n            field: 'depth',\r\n            valueParser: numberParser\r\n        }\r\n    ],\r\n\r\n    dataset_meta_data: [\r\n        {\r\n            headerName: 'Short Name',\r\n            field: 'dataset_short_name',\r\n            autoHeight: true,\r\n            tooltipField: 'dataset_short_name',\r\n        },\r\n\r\n        {\r\n            headerName: 'Long Name',\r\n            field: 'dataset_long_name',\r\n            autoHeight: true,\r\n            tooltipField: 'dataset_long_name',\r\n            cellEditor: 'DSCellEditorTextArea'\r\n        },\r\n\r\n        {\r\n            headerName: 'Version',\r\n            field: 'dataset_version',\r\n            autoHeight: true\r\n        },\r\n        \r\n\r\n        {\r\n            headerName: 'Release Date',\r\n            field: 'dataset_release_date',\r\n            autoHeight: true\r\n        },\r\n\r\n        {\r\n            headerName: 'Make',\r\n            field: 'dataset_make',\r\n            autoHeight: true,\r\n            cellEditor: 'DSCellEditorSelect'\r\n        },\r\n\r\n        {\r\n            headerName: 'Source',\r\n            field: 'dataset_source',\r\n            autoHeight: true\r\n        },\r\n\r\n        {\r\n            headerName: 'Distributor',\r\n            field: 'dataset_distributor',\r\n            autoHeight: true,\r\n            cellEditor: 'DSCellEditorTextArea'\r\n        },\r\n\r\n        {\r\n            headerName: 'acknowledgement',\r\n            field: 'dataset_acknowledgement',\r\n            autoHeight: true,\r\n            tooltipField: 'dataset_acknowledgement',\r\n            cellEditor: 'DSCellEditorTextArea'\r\n        },\r\n\r\n        {\r\n            headerName: 'History',\r\n            field: 'dataset_history',\r\n            autoHeight: true,\r\n            tooltipField: 'dataset_history',\r\n            cellEditor: 'DSCellEditorTextArea'\r\n        },      \r\n\r\n        {\r\n            headerName: 'Description',\r\n            field: 'dataset_description',\r\n            autoHeight: true,\r\n            tooltipField: 'dataset_description',\r\n            cellEditor: 'DSCellEditorTextArea'\r\n        },\r\n\r\n        {\r\n            headerName: 'References',\r\n            field: 'dataset_references',\r\n            autoHeight: true,\r\n            tooltipField: 'dataset_references',\r\n            cellEditor: 'DSCellEditorTextArea'\r\n        },\r\n\r\n        {\r\n            headerName: 'climatology',\r\n            field: 'climatology',\r\n            valueParser: numberParser\r\n        },\r\n\r\n        {\r\n            headerName: 'Cruise Names',\r\n            field: 'cruise_names',\r\n            autoHeight: true,\r\n            tooltipField: 'cruise_names',\r\n            cellEditor: 'DSCellEditorTextArea'\r\n        },\r\n    ],\r\n\r\n    vars_meta_data: [\r\n        {\r\n            headerName: 'Short Name',\r\n            field: 'var_short_name',\r\n            autoHeight: true,\r\n            tooltipField: 'var_short_name'\r\n        },\r\n\r\n        {\r\n            headerName: 'Long Name',\r\n            field: 'var_long_name',\r\n            autoHeight: true,\r\n            tooltipField: 'var_long_name',\r\n            cellEditor: 'DSCellEditorTextArea'\r\n        },\r\n\r\n        {\r\n            headerName: 'Sensor',\r\n            field: 'var_sensor',\r\n            autoHeight: true,\r\n            cellEditor: 'DSCellEditorSelect'\r\n        },\r\n\r\n        {\r\n            headerName: 'Unit',\r\n            field: 'var_unit',\r\n            autoHeight: true\r\n        },\r\n\r\n        {\r\n            headerName: 'Spatial Resolution',\r\n            field: 'var_spatial_res',\r\n            autoHeight: true,\r\n            cellEditor: 'DSCellEditorSelect'\r\n        },\r\n\r\n        {\r\n            headerName: 'Temporal Resolution',\r\n            field: 'var_temporal_res',\r\n            autoHeight: true,\r\n            cellEditor: 'DSCellEditorSelect'\r\n        },\r\n\r\n        {\r\n            headerName: 'Discipline',\r\n            field: 'var_discipline',\r\n            autoHeight: true,\r\n            cellEditor: 'DSCellEditorSelect'\r\n        },\r\n\r\n        {\r\n            headerName: 'Visualize',\r\n            field: 'visualize',\r\n            autoHeight: true,\r\n            valueParser: numberParser\r\n        },\r\n\r\n        {\r\n            headerName: 'Keywords',\r\n            field: 'var_keywords',\r\n            autoHeight: true,\r\n            tooltipField: 'var_keywords',\r\n            cellEditor: 'DSCellEditorTextArea'\r\n        },\r\n\r\n        {\r\n            headerName: 'Comment',\r\n            field: 'var_comment',\r\n            tooltipField: 'var_comment',\r\n            autoHeight: true,\r\n            tooltipField: 'var_comment',\r\n            cellEditor: 'DSCellEditorTextArea'\r\n        },\r\n    ]\r\n}\r\n\r\nclass ValidationGrid extends React.Component {\r\n\r\n    render = () => {\r\n        const { gridContext } = this.props;\r\n        \r\n        return (\r\n            <AgGridReact\r\n                singleClickEdit={true}\r\n                onModelUpdated={this.props.onModelUpdated}\r\n                columnDefs={columnDefs[gridContext.sheet]}\r\n                defaultColDef={this.props.defaultColumnDef}\r\n                rowData={this.props.rowData}\r\n                onGridReady={this.props.onGridReady}\r\n                // onGridSizeChanged={this.props.onGridSizeChanged}\r\n                suppressDragLeaveHidesColumns={true}\r\n                suppressMovableColumns={true}\r\n                enableCellTextSelection={true}\r\n                suppressContextMenu={true}\r\n                onCellValueChanged={this.props.handleCellValueChanged}\r\n                context={gridContext}\r\n                onGridSizeChanged={this.props.handleGridSizeChanged}\r\n                frameworkComponents={{\r\n                    DSCellEditor,\r\n                    DSCellEditorSelect,\r\n                    DSCellEditorTextArea\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ValidationGrid;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport { Link, Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = (theme) =>  ({\r\n    loginRequiredMessage: {\r\n        marginTop: theme.spacing(10),\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n    const { classes, showLoginDialog } = props;\r\n\r\n    useEffect(() => {\r\n        showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <Typography className={classes.loginRequiredMessage}>\r\n            This feature requires a user account. Please <Link component={RouterLink} to={{pathname: window.location.pathname}} onClick={() => props.showLoginDialog()}> log in\r\n            </Link> or <Link component={RouterLink} to={{pathname: '/register'}}> register\r\n            </Link>.\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(LoginRequiredPrompt));","import React from 'react';\r\n\r\nimport { Link } from '@material-ui/core';\r\n\r\nconst guideItems = {\r\n    dataItems: [\r\n        {\r\n            label: 'time',\r\n            anchorEnd: 'time',\r\n            text: [\r\n                'This column holds datetime values with the following format: %Y-%m-%dT%H:%M:%S. The date and time sections are separated by a “T” character.',\r\n                'Example: 2010-02-09T18:15:00'\r\n            ],\r\n            plainText: [\r\n                'This column holds datetime values with the following format: %Y-%m-%dT%H:%M:%S. The date and time sections are separated by a “T” character.',\r\n                'Example: 2010-02-09T18:15:00'\r\n            ],\r\n            bullets: [\r\n                'Year (%Y) is a four-digit value: example 2010',\r\n                'Month (%m) is a two-digit value: example 02 (for Feburary)',\r\n                'Day (%d) is a two-digit value: example 09',\r\n                'Hour (%H) is a two-digit value from 00 to 23: example 18',\r\n                'Minute (%M) is a two-digit value from 00 to 59: example 15',\r\n                'Second (%S) is a two-digit value from 00 to 59: example 00',\r\n                'Time zone: UTC'\r\n            ],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'lat',\r\n            anchorEnd: 'lat',\r\n            text: ['This column holds the latitude values with the following characteristics:'],\r\n            plainText: ['This column holds the latitude values with the following characteristics:'],\r\n            bullets: [\r\n                'Type: Numeric values from -90 to 90',\r\n                'Format: Decimal (not military grid system)',\r\n                'Unit: degree North'\r\n            ],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'lon',\r\n            anchorEnd: 'lon',\r\n            text: ['This column holds the longitude values with the following characteristics:'],\r\n            plainText: ['This column holds the longitude values with the following characteristics:'],\r\n            bullets: [\r\n                'Type: Numeric values from -180 to 180',\r\n                'Format: Decimal (not military grid system)',\r\n                'Unit: degree East'\r\n            ],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'depth',\r\n            anchorEnd: 'depth',\r\n            text: ['This column holds the depth values with the following characteristics:'],\r\n            plainText: ['This column holds the depth values with the following characteristics:'],\r\n            bullets: [\r\n                'Type: Positive numeric values. It is 0 at surface with increased values with depth.',\r\n                'Format: Decimal',\r\n                'Unit: meter',\r\n            ],\r\n            images: []\r\n        },\r\n        {\r\n            label: <React.Fragment>var<sub>1</sub>...var<sub>n</sub></React.Fragment>,\r\n            anchorEnd: 'var',\r\n            text: [\r\n                <React.Fragment>\r\n                    These columns represent the dataset variables (measurements). Please rename them to names appropriate for your data.\r\n                    Note that these names should be identical to the names defined as <Link href='#data-structure-var_short_name'>var_short_name</Link> \r\n                    &nbsp;in the <Link href='#data-structure-variable'>Variable Metadata</Link> sheet. Please do not include units in these columns; \r\n                    units are recorded in the Variable Metadata sheet. Leave a given cell empty for those instances when data was not taken and a value \r\n                    is missing. Do not replace the missing data with arbitrary values such as “99999”, “0”, “UNKNOWN”, etc. Please review the example \r\n                    datasets in the <Link href='#resources'>resources</Link> section for more information.\r\n                </React.Fragment>\r\n            ],\r\n            plainText: [''],\r\n            bullets: [],\r\n            images: []\r\n        },\r\n    \r\n    ],\r\n    \r\n    datasetMetadataItems: [\r\n        {\r\n            label: 'dataset_short_name',\r\n            anchorEnd: 'dataset_short_name',\r\n            text: ['This name is meant to be used in programming codes and scripts. It should only contain a combination of letters, numbers, and underscores (the first character can not be a number). Do not use space, dash, or special characters such as <, +, %, etc.'],\r\n            plainText: ['This name is meant to be used in programming codes and scripts. It should only contain a combination of letters, numbers, and underscores (the first character can not be a number). Do not use space, dash, or special characters such as <, +, %, etc.'],\r\n            bullets: [\r\n                'Required: Yes',\r\n                'Constraint: Less than 50 characters'\r\n            ],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'dataset_long_name',\r\n            anchorEnd: 'dataset_long_name',\r\n            text: [\r\n                <React.Fragment>\r\n                    A descriptive and human-readable name for the dataset. This name will identify your dataset in the CMAP \r\n                    catalog (<Link href='#fig-1'>Fig.1</Link>) and visualization search dialog (<Link href='#fig-2'>Fig.2</Link>). \r\n                    Any Unicode character can be used here, but please avoid names longer than 200 characters as they may get \r\n                    trimmed when displayed on graphical interfaces. A full textual description of your dataset, with no length limits, \r\n                    is entered in “<Link href='#data-structure-dataset_description'>dataset_description</Link>”. If your dataset is \r\n                    associated with a cruise, we recommend including the official cruise and and the cruise nickname in the\r\n                    dataset_long_name. For example: Underway CTD Gradients 3 KM1906.\r\n                </React.Fragment>\r\n                ],\r\n                plainText: [`A descriptive and human-readable name for the dataset. This name will identify your dataset in the CMAP \r\n                catalog and visualization search dialog. Any Unicode character can be used here, but please avoid names longer than 200 characters as they may get \r\n                trimmed when displayed on graphical interfaces. A full textual description of your dataset, with no length limits, \r\n                is entered in the dataset_description. If your dataset is associated with a cruise, we recommend including the official cruise and and the \r\n                cruise nickname in the dataset_long_name. For example: Underway CTD Gradients 3 KM1906.`],\r\n            bullets: [\r\n                'Required: Yes',\r\n                'Constraint: Less than 200 characters'\r\n            ],\r\n            images: [            \r\n                {\r\n                    src: 'https://cmap.readthedocs.io/en/latest/_static/data_submission_pics/dataset_long_name_cat.png',\r\n                    alt: 'Dataset Long_name in Catalog',\r\n                    caption: 'Figure 1. A sample dataset shown in the Simons CMAP catalog. The \"dataset_long_name\" is enclosed in the red rectangle.',\r\n                    id: 'fig-1'\r\n                },\r\n                {\r\n                    src: 'https://cmap.readthedocs.io/en/latest/_static/data_submission_pics/dataset_long_name_viz_search.png',\r\n                    alt: 'Dataset Long_name in Visualization Page',\r\n                    caption: 'Figure 2. The \"dataset_long_name\" appears in the visualization page search dialog.',\r\n                    id: 'fig-2'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            label: 'dataset_version',\r\n            anchorEnd: 'dataset_version',\r\n            text: ['Please assign a version number or an identifier to your dataset such as “1.0.0” or “Final”. Version identifiers will help track the evolution of a dataset over time.'],\r\n            plainText: ['Please assign a version number or an identifier to your dataset such as “1.0.0” or “Final”. Version identifiers will help track the evolution of a dataset over time.'],\r\n            bullets: [\r\n                'Required: Yes',\r\n                'Constraint: Less than 50 characters',\r\n                'Example: 1.0'\r\n            ],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'dataset_release_date',\r\n            anchorEnd: 'dataset_release_date',\r\n            text: ['Indicates the release date of the dataset. If your dataset has been previously published or released publicly, please specify that date. Otherwise, use the date the dataset was submitted to CMAP.'],\r\n            plainText: ['Indicates the release date of the dataset. If your dataset has been previously published or released publicly, please specify that date. Otherwise, use the date the dataset was submitted to CMAP.'],\r\n            bullets: [\r\n                'Required: Yes',\r\n                'Constraint: Less than 50 characters',\r\n                'Example: 2020-06-22'\r\n            ],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'dataset_make',\r\n            anchorEnd: 'dataset_make',\r\n            text: ['This is a required field that provides a broad category description of how a dataset was produced (also referred to as dataset make). Each dataset requires a single descriptor from a fixed set of options (observation, model, assimilation, laboratory), which are described below. This field will help in discovery of data in CMAP by categorizing datasets according to their Make class. Please contact us if you believe your dataset Make is not consistent with any of the categories below:'],\r\n            plainText: ['This is a required field that provides a broad category description of how a dataset was produced (also referred to as dataset make). Each dataset requires a single descriptor from a fixed set of options (observation, model, assimilation, laboratory), which are described below. This field will help in discovery of data in CMAP by categorizing datasets according to their Make class. Please contact us if you believe your dataset Make is not consistent with any of the categories below:'],\r\n            bullets: [\r\n                'Observation: refers to any in-situ or remote sensing measurements such as measurements made during a cruise expedition, data from an in-situ sensor, or satellite observations. Observations made as part of laboratory experiments have their own distinct category and do not fall in this category.',\r\n                'Model: refers to the outputs of numerical simulations.',\r\n                'Assimilation: refers to products that are a blend of observations and numerical models.',\r\n                'Laboratory: refers to the observations made in a laboratory setting such as culture experiment results.'\r\n            ],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'dataset_source',\r\n            anchorEnd: 'dataset_source',\r\n            text: [\r\n                <React.Fragment>\r\n                    Specifies the group and/or the institute name of the data owner(s). It can also include any link (such as a website) to \r\n                    the data producers. This information will be visible in the CMAP catalog as shown in <Link href='#fig-3'>Fig 3</Link>. \r\n                    Also, dataset_source will be annotated to any visualization made using the dataset (<Link href='#fig-4'>Fig. 4</Link>).\r\n                </React.Fragment>\r\n                ],\r\n            plainText: [`\r\n                Specifies the group and/or the institute name of the data owner(s). It can also include any link (such as a website) to \r\n                the data producers. This information will be visible in the CMAP catalog. Also, dataset_source will be annotated to any visualization \r\n                made using the dataset.\r\n            `],\r\n            bullets: [\r\n                'Required: Yes',\r\n                'Constraint: Less than 100 characters',\r\n                'Example: Armbrust Lab, University of Washington'\r\n            ],\r\n            images: [\r\n                {\r\n                    src: 'https://cmap.readthedocs.io/en/latest/_static/data_submission_pics/dataset_source_cat.png',\r\n                    alt: 'Dataset Source in Catalog',\r\n                    caption: 'Figure 3. A sample dataset shown in the Simons CMAP catalog. The \"dataset_source\" is enclosed in the red rectangle.',\r\n                    id: 'fig-3'\r\n                },\r\n                {\r\n                    src: 'https://cmap.readthedocs.io/en/latest/_static/data_submission_pics/dataset_source_viz.png',\r\n                    alt: 'Dataset Source in Visualizations\"',\r\n                    caption: 'Figure 4. The \"dataset_source\" appears in visualizations made using the corresponding dataset (enclosed in the red rectangle).',\r\n                    id: 'fig-4'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: 'dataset_distributor',\r\n            anchorEnd: 'dataset_distributor',\r\n            text: ['If your dataset has already been published by a data distributor provide a link to the data distributor. Otherwise, leave this field empty.'],\r\n            plainText: ['If your dataset has already been published by a data distributor provide a link to the data distributor. Otherwise, leave this field empty.'],\r\n            bullets: [\r\n                'Required: No (optional)',\r\n                'Constraint: Less than 100 characters',\r\n                'Example: http://marine.copernicus.eu/'\r\n            ],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'dataset_acknowledgement',\r\n            anchorEnd: 'dataset_acknowledgement',\r\n            text: [\r\n                <React.Fragment>\r\n                    Specify how your dataset should be acknowledged. You may mention your funding agency, grant number, or \r\n                    you may ask those that use your data to acknowledge your dataset with a particular statement. Dataset \r\n                    acknowlegment will be visible in the catalog page (<Link href='#fig-5'>Fig. 5</Link>).\r\n                </React.Fragment>\r\n            ],\r\n            plainText: [`\r\n                Specify how your dataset should be acknowledged. You may mention your funding agency, grant number, or \r\n                you may ask those that use your data to acknowledge your dataset with a particular statement. Dataset \r\n                acknowlegment will be visible in the catalog page.\r\n            `],\r\n            bullets: [\r\n                'Required: No (optional)',\r\n                'Constraint: No length limits'\r\n            ],\r\n            images: [\r\n                {\r\n                    src: 'https://cmap.readthedocs.io/en/latest/_static/data_submission_pics/dataset_ack_cat.png',\r\n                    alt: 'Dataset Acknowledgment in Catalog',\r\n                    caption: 'Figure 5. A sample dataset shown in the Simons CMAP catalog. The \"dataset_acknowledgement\" is enclosed in the red rectangle.',\r\n                    id: 'fig-5'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: 'dataset_history',\r\n            anchorEnd: 'dataset_history',\r\n            text: ['Use this field if your dataset has evolved over time and you wish to add notes about the history of your dataset. Otherwise, leave this field empty.'],\r\n            plainText: ['Use this field if your dataset has evolved over time and you wish to add notes about the history of your dataset. Otherwise, leave this field empty.'],\r\n            bullets: ['Required: No (optional)'],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'dataset_description',\r\n            anchorEnd: 'dataset_description',\r\n            text: [\r\n                <React.Fragment>\r\n                    Include any description that you think will help a reader better understand your dataset. This description can \r\n                    include information about data acquisition, processing methods, figures, and links to external content. This \r\n                    field serves as the dataset documentation that is visible in the Simons CMAP catalog (<Link href='#fig-6'>Fig. 6</Link>).\r\n                </React.Fragment>\r\n            ],\r\n            plainText: [`\r\n                Include any description that you think will help a reader better understand your dataset. This description can \r\n                include information about data acquisition, processing methods, figures, and links to external content. This \r\n                field serves as the dataset documentation that is visible in the Simons CMAP catalog.\r\n            `],\r\n\r\n            bullets: [\r\n                'Required: Yes',\r\n                'Constraint: No length limits'\r\n            ],\r\n            images: [\r\n                {\r\n                    src: 'https://cmap.readthedocs.io/en/latest/_static/data_submission_pics/dataset_description_cat.png',\r\n                    alt: 'Dataset description in Catalog',\r\n                    caption: 'Figure 6. A sample dataset shown in the Simons CMAP catalog. The \"dataset_description\" is accessible using the \"Dataset Details\" button, enclosed in the red rectangle.',\r\n                    id: 'fig-6'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: 'dataset_references',\r\n            anchorEnd: 'dataset_references',\r\n            text: ['List any publications or documentation that one may cite in reference to the dataset. If there are more than one reference, please put them in separate cells under the dataset_reference column. Leave this field empty if there are no publications associated with this dataset.'],\r\n            plainText: ['List any publications or documentation that one may cite in reference to the dataset. If there are more than one reference, please put them in separate cells under the dataset_reference column. Leave this field empty if there are no publications associated with this dataset.'],\r\n            bullets: ['Required: No (optional)'],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'climatology',\r\n            anchorEnd: 'climatology',\r\n            text: ['This is a flag indicating whether the dataset represents a climatological product. If your dataset is a climatological product fill this field with “1”. Otherwise, leave this field blank.'],\r\n            plainText: ['This is a flag indicating whether the dataset represents a climatological product. If your dataset is a climatological product fill this field with “1”. Otherwise, leave this field blank.'],\r\n            bullets: ['Required: No (optional)'],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'cruise_names',\r\n            anchorEnd: 'cruise_names',\r\n            text: ['If your dataset represents measurements made during a cruise expedition (or expeditions), provide a list of cruise official names here. If your dataset is associated with more than one cruise, please put them in separate cells under the cruise_names column. If the cruises have any nicknames, please include them in the same cell as the official cruise name separated by a comma(s). Leave this field blank if your dataset is not associated with a cruise expedition.'],\r\n            plainText: ['If your dataset represents measurements made during a cruise expedition (or expeditions), provide a list of cruise official names here. If your dataset is associated with more than one cruise, please put them in separate cells under the cruise_names column. If the cruises have any nicknames, please include them in the same cell as the official cruise name separated by a comma(s). Leave this field blank if your dataset is not associated with a cruise expedition.'],\r\n            bullets: [\r\n                'Required: No (optional)',\r\n                'Constraint: No length limits',\r\n                'Example: KOK1606, Gradients 1'\r\n            ],\r\n            images: []\r\n        }\r\n    ],\r\n    \r\n    variableMetadataItems: [\r\n        {\r\n            label: 'var_short_name',\r\n            anchorEnd: 'var_short_name',\r\n            text: [\r\n                <React.Fragment>\r\n                    This name is meant to be used in programming codes and scripts. It should only contain a combination of letters, numbers, \r\n                    and underscores (the first character can not be a number). Do not use space, dash, or special characters such as {'<'}, +, \r\n                    %, etc. Finally, there must be a one-to-one match between the short_names listed here and the variable column names in the \r\n                    “Data” sheet (see <Link href='#data-structure-var'>vars</Link>). var_short_name will be seen in the CMAP catalog \r\n                    (<Link href='#fig-7'>Fig. 7</Link>), and will appear as the title of the generated figures (\r\n                    <Link href='#fig-8'>Fig. 8</Link>).\r\n                </React.Fragment>\r\n            ],\r\n            plainText: [`\r\n                This name is meant to be used in programming codes and scripts. It should only contain a combination of letters, numbers, \r\n                and underscores (the first character can not be a number). Do not use space, dash, or special characters such as <, +, \r\n                %, etc. Finally, there must be a one-to-one match between the short_names listed here and the variable column names in the \r\n                “Data” sheet. var_short_name will be seen in the CMAP catalog and will appear as the title of the generated figures.\r\n            `],\r\n            bullets: [\r\n                'Required: Yes',\r\n                'Constraint: Less than 50 characters'\r\n            ],\r\n            images: [\r\n                {\r\n                    src: 'https://cmap.readthedocs.io/en/latest/_static/data_submission_pics/var_short_name_cat.png',\r\n                    alt: 'Variable short name in catalog',\r\n                    caption: 'Figure 7. A sample dataset shown in the Simons CMAP catalog. The \"var_short_name\" is highlighted in the red rectangle.',\r\n                    id: 'fig-7'\r\n                },\r\n                {\r\n                    src: 'https://cmap.readthedocs.io/en/latest/_static/data_submission_pics/viz_short_name.png',\r\n                    alt: 'Variable short name in a figure',\r\n                    caption: 'Figure 8. A sample figure generated in the Simons CMAP catalog. The \"var_short_name\" appears as the figure title and is highlighted in the red rectangle.',\r\n                    id: 'fig-8'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: 'var_long_name',\r\n            anchorEnd: 'var_long_name',\r\n            text: [\r\n                <React.Fragment>\r\n                    A descriptive and human-readable label for the variable in accordance with the CF and COARDS conventions [\r\n                    <Link href='#reference-1'>1</Link>, <Link href='#reference-2'>2</Link>, <Link href='#reference-3'>3</Link>]. This \r\n                    name will present your variable in the CMAP catalog (<Link href='#fig-9'>Fig. 9</Link>) and visualization search \r\n                    dialog (<Link href='#fig-10'>Fig. 10</Link>). var_long_name can contain any unicode character, but please avoid names \r\n                    longer than 200 characters as they may get trimmed while displayed on graphical interfaces. Please use&nbsp;\r\n                    <Link href='#data-structure-var_comment'>var_comment</Link> if you would like to add a full textual description \r\n                    (with no length limits) for your variable.\r\n                </React.Fragment>\r\n            ],\r\n            plainText: [`\r\n                A descriptive and human-readable label for the variable in accordance with the CF and COARDS conventions.\r\n                This name will present your variable in the CMAP catalog and visualization search dialog. var_long_name can contain any unicode character, \r\n                but please avoid names longer than 200 characters as they may get trimmed while displayed on graphical interfaces. Please use var_comment\r\n                if you would like to add a full textual description (with no length limits) for your variable.\r\n            `],\r\n            bullets: [\r\n                'Required: Yes',\r\n                'Constraint: Less than 200 characters'\r\n            ],\r\n            images: [\r\n                {\r\n                    src: 'https://cmap.readthedocs.io/en/latest/_static/data_submission_pics/var_long_name_cat.png',\r\n                    alt: 'Variable long name in catalog',\r\n                    caption: 'Figure 9. A sample dataset shown in the Simons CMAP catalog. The \"var_long_name\" is highlighted in the red rectangle.',\r\n                    id: 'fig-9'\r\n                },\r\n                {\r\n                    src: 'https://cmap.readthedocs.io/en/latest/_static/data_submission_pics/var_long_name_viz_search.png',\r\n                    alt: 'var long name in visualization page',\r\n                    caption: 'Figure 10. The \"var_long_name\" appears in the visualization page search dialog.',\r\n                    id: 'fig-10'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: 'var_sensor',\r\n            anchorEnd: 'var_sensor',\r\n            text: ['This is a required field that refers to the instrument used to produce the measurements such as CTD, fluorometer, flow cytometer, sediment trap, etc. If your dataset is the result of a field expedition but you are not sure about the name of the instrument used for the measurements, use the term “in-situ” to fill out this field. If your dataset is the output of a numerical model or a combination of model and observation, use the term “simulation” and “blend”, respectively. This field will significantly help to find and categorize data generated using a similar class of instruments. var_sensor will be visible in the Simons CMAP catalog.'],\r\n            plainText: ['This is a required field that refers to the instrument used to produce the measurements such as CTD, fluorometer, flow cytometer, sediment trap, etc. If your dataset is the result of a field expedition but you are not sure about the name of the instrument used for the measurements, use the term “in-situ” to fill out this field. If your dataset is the output of a numerical model or a combination of model and observation, use the term “simulation” and “blend”, respectively. This field will significantly help to find and categorize data generated using a similar class of instruments. var_sensor will be visible in the Simons CMAP catalog.'],\r\n            bullets: [],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'var_unit',\r\n            anchorEnd: 'var_unit',\r\n            text: [\r\n                <React.Fragment>\r\n                    Specifies variable units, if applicable. Leave this field blank if your variable is unitless (e.g. “station numbers” or “quality \r\n                    flags”). Units may contain unicode characters such as subscripts and superscripts. var_unit will be visible in the Simons CMAP \r\n                    catalog (see <Link href='#fig-9'>Fig. 9</Link>) and in the generated visualizations (see <Link href='#fig-8'>Fig. 8</Link>).\r\n                </React.Fragment>\r\n            ],\r\n            plainText: [`\r\n                Specifies variable units, if applicable. Leave this field blank if your variable is unitless (e.g. “station numbers” or “quality \r\n                flags”). Units may contain unicode characters such as subscripts and superscripts. var_unit will be visible in the Simons CMAP \r\n                catalog and in the generated visualizations.\r\n            `],\r\n            bullets: [\r\n                'Required: No (optional)',\r\n                'Constraint: Less than 50 characters',\r\n                <React.Fragment>Example: ug L<sup>-1</sup></React.Fragment>\r\n            ],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'var_spatial_res',\r\n            anchorEnd: 'var_spatial_res',\r\n            text: [\r\n                <React.Fragment>\r\n                    Specifies the spatial resolution of the variable. Typically, gridded products have uniform spatial spacing (such as 0.25° X 0.25°) \r\n                    while field expeditions do not have a regular spatial resolution. If your variable does not have a regular spatial resolution, \r\n                    use the term “irregular” to fill out this field. Note that if samples are taken at a series of distinct but spatially-non-uniform \r\n                    stations, the spatial resolution is considered irregular. var_spatial_res may contain unicode characters such as degree symbol ( ° ) \r\n                    and will be visible in the Simons CMAP catalog (see <Link href='#fig-9'>Fig. 9</Link>).\r\n                </React.Fragment>\r\n            ],\r\n            plainText: [`\r\n                Specifies the spatial resolution of the variable. Typically, gridded products have uniform spatial spacing (such as 0.25° X 0.25°) \r\n                while field expeditions do not have a regular spatial resolution. If your variable does not have a regular spatial resolution, \r\n                use the term “irregular” to fill out this field. Note that if samples are taken at a series of distinct but spatially-non-uniform \r\n                stations, the spatial resolution is considered irregular. var_spatial_res may contain unicode characters such as degree symbol ( ° ) \r\n                and will be visible in the Simons CMAP catalog.\r\n            `],\r\n            bullets: [\r\n                'Required: Yes',\r\n                'Constraint: Less than 50 characters',\r\n                'Example: irregular'\r\n            ],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'var_temporal_res',\r\n            anchorEnd: 'var_temporal_res',\r\n            text: [\r\n                <React.Fragment>\r\n                    Specifies the temporal resolution of measurements (such as daily, hourly, 3-minutes, etc). If the measurements do not have a \r\n                    regular temporal spacing, use the term “irregular” to fill out this field. var_temporal_res will be visible in the Simons CMAP \r\n                    catalog (see <Link href='#fig-9'>Fig. 9</Link>).\r\n                </React.Fragment>\r\n            ],\r\n            plainText: [`\r\n                Specifies the temporal resolution of measurements (such as daily, hourly, 3-minutes, etc). If the measurements do not have a \r\n                regular temporal spacing, use the term “irregular” to fill out this field. var_temporal_res will be visible in the Simons CMAP \r\n                catalog.\r\n            `],\r\n            bullets: [\r\n                'Required: Yes',\r\n                'Constraint: Less than 50 characters',\r\n                'Example: irregular'\r\n            ],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'var_discipline',\r\n            anchorEnd: 'var_discipline',\r\n            text: [\r\n                <React.Fragment>\r\n                    Indicates in which disciplines (such as Physics, Biology …) this variable is commonly studied. You can specify more than one \r\n                    discipline. If you list multiple disciplines per variable, please separate them by +. var_discipline will be visible in \r\n                    the Simons CMAP catalog (referred to as “Study Domain” in <Link href='#fig-9'>Fig. 9</Link>).\r\n                </React.Fragment>\r\n            ],\r\n            plainText: [`\r\n                Indicates in which disciplines (such as Physics, Biology …) this variable is commonly studied. You can specify more than one \r\n                discipline. If you list multiple disciplines per variable, please separate them by +. var_discipline will be visible in \r\n                the Simons CMAP catalog (referred to as “Study Domain”).\r\n            `],\r\n            bullets: [\r\n                'Required: Yes',\r\n                'Constraint: Less than 100 characters',\r\n                'Example: Physics, BioGeoChemistry'\r\n            ],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'visualize',\r\n            anchorEnd: 'visualize',\r\n            text: ['This is a flag field and can only be 0 or 1. Fill this field with 1, if you think this variable can be visualized on a graph by Simons CMAP. In principle, any variable with numeric values can be visualized while variables with string values, station numbers, or quality flags may not be the best candidates for visualization in CMAP. Please consult with the data curation team if you have any questions.'],\r\n            plainText: ['This is a flag field and can only be 0 or 1. Fill this field with 1, if you think this variable can be visualized on a graph by Simons CMAP. In principle, any variable with numeric values can be visualized while variables with string values, station numbers, or quality flags may not be the best candidates for visualization in CMAP. Please consult with the data curation team if you have any questions.'],\r\n            bullets: ['Required: No'],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'var_keywords',\r\n            anchorEnd: 'var_keywords',\r\n            text: ['Every variable in CMAP is annotated with a range of semantically related keywords to ensure a variable can be easily discovered. For example, use of keywords allows you to search using the term “PO4” and retrieve a list of all phosphate data even if “PO4” was not used as the var_long_name for a given dataset. Similarly, if one searches for “MIT”, CMAP returns all variables generated by MIT groups, or if one looks for “model”, only model outputs are returned. These “semantic” searches are made possible using the keywords that are added to each variable. We would like to have keywords to cover the following areas described below (where applicable). Please note that there is no limit to the number of keywords used for a variable. The keywords are case-insensitive and you may add/remove them at any point (even after data ingestion). This is a required field.'],\r\n            plainText: ['Every variable in CMAP is annotated with a range of semantically related keywords to ensure a variable can be easily discovered. For example, use of keywords allows you to search using the term “PO4” and retrieve a list of all phosphate data even if “PO4” was not used as the var_long_name for a given dataset. Similarly, if one searches for “MIT”, CMAP returns all variables generated by MIT groups, or if one looks for “model”, only model outputs are returned. These “semantic” searches are made possible using the keywords that are added to each variable. We would like to have keywords to cover the following areas described below (where applicable). Please note that there is no limit to the number of keywords used for a variable. The keywords are case-insensitive and you may add/remove them at any point (even after data ingestion). This is a required field.'],\r\n            bullets: [\r\n                'Alternative names: other official, unofficial, abbreviation, technical (or jargon) names or notations associated with the variable. Examples: Nitrate, NO3, NO_3',\r\n                'Method and Instrument: Keywords related to the method and instruments used for the variable measurements. Examples: observation, in-situ, model, satellite, remote sensing, cruise, CTD, cytometry, ….',\r\n                'Note these keywords are not mutually exclusive. For example, a CTD temperature measurement made during a cruise can have all of the following keywords: observation, in-situ, cruise, CTD',\r\n                'Data Producers: Keywords associated with the lead scientist/lab name/institute name. Examples: UW, University of Washington, Virginia Armbrust, Ginger',\r\n                'Cruise: The official/unoffical name of the cruise(s) during which the variable was measured, if applicable. Examples: KOK1606, Gradients_1, diel',\r\n                'Project name: If your data are in the context of a project, include the project name. Examples: HOT, Darwin, SeaFlow'\r\n            ],\r\n            images: []\r\n        },\r\n        {\r\n            label: 'var_comment',\r\n            anchorEnd: 'var_comment',\r\n            text: [\r\n                <React.Fragment>\r\n                    Use this field to communicate any detailed information about this particular variable with the users. This could include, \r\n                    for example, description of method(s) used to process the raw measurements. var_comment is visible in the Simons CMAP \r\n                    catalog (<Link href='#fig-11'>Fig. 11</Link>).\r\n                </React.Fragment>\r\n            ],\r\n            plainText: [`\r\n                Use this field to communicate any detailed information about this particular variable with the users. This could include, \r\n                for example, description of method(s) used to process the raw measurements. var_comment is visible in the Simons CMAP \r\n                catalog.\r\n            `],\r\n            bullets: [\r\n                'Required: No (optional)',\r\n                'Constraint: No length limits'\r\n            ],\r\n            images: [\r\n                {\r\n                    src: 'https://cmap.readthedocs.io/en/latest/_static/data_submission_pics/var_comment_cat.png',\r\n                    alt: 'Variable description in Catalog',\r\n                    caption: 'Figure 11. A sample dataset shown in the Simons CMAP catalog. The \"var_commentn\" is accessible using the \"Comment\" button, highlighted in the red rectangle.',\r\n                    id: 'fig-11'\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default guideItems;","// Custom grid header to add tooltip from data submission guide to data sub ag-grid columns\r\n\r\nimport React from 'react';\r\n\r\nimport { withStyles, Tooltip } from '@material-ui/core';\r\nimport { Help } from '@material-ui/icons';\r\n\r\nimport dsGuideItems from '../../Utility/DataSubmission/dsGuideItems';\r\n\r\nconst sheetToReference = {\r\n    data: 'dataItems',\r\n    dataset_meta_data: 'datasetMetadataItems',\r\n    vars_meta_data: 'variableMetadataItems'\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\r\n});\r\n\r\nconst DSCustomGridHeader = (props) => {\r\n    let item = dsGuideItems[sheetToReference[props.context.sheet]].find(e => e.label === props.column.colId);\r\n    return (\r\n        <>\r\n            {props.displayName}\r\n            <Tooltip\r\n                placement='top'\r\n                title={\r\n                    <>\r\n                        {item.plainText.map((e, i) => <p key={i}>{e}</p>)}\r\n                        <ul>\r\n                            {item.bullets.map((e, i) => <li key={i}>{e}</li>)}\r\n                        </ul>\r\n                    </>\r\n                }\r\n            >\r\n                <Help style={{position: 'relative', top: 5, left: 5, fontSize: '17px'}}/>\r\n            </Tooltip>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(DSCustomGridHeader);","export default (data, workbook) => {\r\n    if(!data || !data.length) return;\r\n\r\n    try {\r\n        let sample = data[0].time;\r\n\r\n        // Test sample row for correct format\r\n        if(/^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z)?$/.test(sample)){\r\n        }\r\n\r\n        else {\r\n            let is1904 = !!(((workbook.Workbook||{}).WBProps||{}).date1904);\r\n    \r\n            let type = typeof sample;\r\n    \r\n            if(type === 'number') {\r\n                if(is1904){\r\n                    data.forEach(e => {\r\n                        e.time = new Date(((e.time - (25567))*86400*1000) + 1000 * 60 * 60 * 24 * 365 * 4).toISOString().slice(0, -5);\r\n                    })\r\n                }\r\n        \r\n                else {\r\n                    data.forEach(e => {\r\n                        e.time = new Date(((e.time - (25567))*86400*1000)).toISOString().slice(0, -5);\r\n                    })\r\n                }\r\n        \r\n            }\r\n        \r\n            else {\r\n                data.forEach(e => {\r\n                    e.time = new Date(e.time).toISOString().slice(0, -5);\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    catch(e){\r\n        console.log('Caught while formatting data');\r\n    }\r\n\r\n    let cols = Object.keys(data[0]);\r\n    let keysContaining__EMPTY = [];\r\n    cols.forEach(e => {\r\n        if(e.indexOf('__EMPTY') !== -1) keysContaining__EMPTY.push(e);\r\n    })\r\n\r\n    if(keysContaining__EMPTY.length){\r\n        data.forEach(e => {\r\n            keysContaining__EMPTY.forEach(key => {\r\n                delete e[key];\r\n            })\r\n        })\r\n    }\r\n\r\n    return data;\r\n}","export default (metadata, workbook) => {\r\n    if(!metadata || !metadata.length) return;\r\n    \r\n    try {\r\n        var sample = metadata[0];\r\n        var type = typeof sample.dataset_release_date;\r\n\r\n        var is1904 = !!(((workbook.Workbook||{}).WBProps||{}).date1904);\r\n\r\n        if(type === 'number') {\r\n            if(is1904){\r\n                sample.dataset_release_date = new Date(((sample.dataset_release_date - (25567))*86400*1000) + 1000 * 60 * 60 * 24 * 365 * 4).toISOString().slice(0, -14);\r\n            }\r\n    \r\n            else {\r\n                sample.dataset_release_date = new Date(((sample.dataset_release_date - (25567))*86400*1000)).toISOString().slice(0, -14);\r\n            }    \r\n        }\r\n    \r\n        else {\r\n            sample.dataset_release_date = new Date(sample.dataset_release_date).toISOString().slice(0, -14);\r\n        }\r\n    }\r\n\r\n    catch{\r\n        \r\n    }\r\n\r\n    let cols = Object.keys(metadata[0]);\r\n    let keysContaining__EMPTY = [];\r\n    cols.forEach(e => {\r\n        if(e.indexOf('__EMPTY') !== -1) keysContaining__EMPTY.push(e);\r\n    })\r\n\r\n    if(keysContaining__EMPTY.length){\r\n        metadata.forEach(e => {\r\n            keysContaining__EMPTY.forEach(key => {\r\n                delete e[key];\r\n            })\r\n        })\r\n    }\r\n\r\n    cols.forEach(col => {\r\n        metadata.forEach((row) => {\r\n            let cellValue = row[col];\r\n            if(typeof cellValue === 'string') row[col] = cellValue.trim();\r\n        });\r\n    });\r\n\r\n    return metadata;\r\n}\r\n\r\n// Format must match 2016-04-21T15:22:00\r\n\r\n// const localDateToString = (date) => {\r\n//     let year = date.getFullYear();\r\n//     let month = date.getMonth() + 1;\r\n//     let day = date.getDate()\r\n\r\n//     let nYear = year.toString();\r\n//     let nMonth = month < 10 ? '0' + month.toString() : month.toString();\r\n//     let nDay = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n//     return nYear + '-' + nMonth + '-' + nDay;\r\n// }\r\n\r\n// export default localDateToString;","export default (metadata) => {\r\n    if(!metadata || !metadata.length) return;\r\n    let cols = Object.keys(metadata[0]);\r\n    let keysContaining__EMPTY = [];\r\n    cols.forEach(e => {\r\n        if(e.indexOf('__EMPTY') !== -1) keysContaining__EMPTY.push(e);\r\n    })\r\n\r\n    if(keysContaining__EMPTY.length){\r\n        metadata.forEach(e => {\r\n            keysContaining__EMPTY.forEach(key => {\r\n                delete e[key];\r\n            })\r\n        })\r\n    }\r\n\r\n    cols.forEach(col => {\r\n        metadata.forEach(row => {\r\n            let cellValue = row[col];\r\n            if(typeof cellValue === 'string') row[col] = cellValue.trim();\r\n        });\r\n    });\r\n\r\n    return metadata;\r\n}","export default (submissionOptions) => {\r\n    const { Make, Sensor, Spatial_Resolution, Study_Domain, Temporal_Resolution } = submissionOptions;\r\n    \r\n    const number = (value) => {\r\n        if(!value && value !== 0) return null;\r\n        if(isNaN(value) || isNaN(parseInt(value))) return 'Must be a number';\r\n    }\r\n    \r\n    const validLat = (value) => {\r\n        if(value < -90 || value > 90) return 'Must be -90 to 90';\r\n    }\r\n    \r\n    const validLon = (value) => {\r\n        if(value < -180 || value > 180) return 'Must be -180 to 180';\r\n    }\r\n    \r\n    const validTime = (value) => {\r\n        if(!value && value !== 0) return null;\r\n    \r\n    \r\n        if(/^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z)?$/.test(value) === false){\r\n            return 'Format must match 2016-04-21T15:22:00'\r\n        }    \r\n    }\r\n\r\n    const required = (value) => {\r\n        if(value === null || value === undefined || value === '') return 'Value is required';\r\n    }\r\n\r\n    const datasetRequired = (value, row) => {\r\n        if(row !== 0) return;\r\n        if(value === null || value === undefined || value === '') return 'Value is required';\r\n    }\r\n    \r\n    const length = (min, max) => {\r\n        return (value) => {\r\n            value = value + '';\r\n            if(value.length < min || value.length > max) {\r\n                return `Must be ${min} to ${max} characters in length`;\r\n            }\r\n        }\r\n    }\r\n\r\n    const datasetLength = (min, max) => {\r\n        return (value, row) => {\r\n            value = value + '';\r\n            if((value.length < min && row === 0) || (value.length > max && row === 0)) {\r\n                return `Must be ${min} to ${max} characters in length`;\r\n            }\r\n        }\r\n    }\r\n    \r\n    const positive = (value) => {\r\n        if(value < 0) return 'Cannot be negative';\r\n    }\r\n    \r\n    const makes = Make.map(e => e.toLowerCase());\r\n    const makesSet = new Set(makes);\r\n    \r\n    const validMake = (value, row) => {\r\n        if(row !== 0) return;\r\n        if(!value || !makesSet.has(value.toLowerCase())) {\r\n            return `Must be one of the above options.`;\r\n        }\r\n    }\r\n    \r\n    const disciplines = Study_Domain.map(e => e.toLowerCase());\r\n    const disciplinesSet = new Set(disciplines);\r\n    \r\n    const validDiscipline = (value) => {\r\n        if(!value || !disciplinesSet.has(value.toLowerCase())) {\r\n            return `Must be one of the above options.`;\r\n        }\r\n    }\r\n    \r\n    const sensors = Sensor.map(e => e.toLowerCase());\r\n    const sensorsSet = new Set(sensors);\r\n    \r\n    const validSensor = (value) => {\r\n        if(!value || !sensorsSet.has(value.toLowerCase())) {\r\n            return `Must be one of the above options.`;\r\n        }\r\n    }\r\n    \r\n    const codeFriendly = (value) => {\r\n        if(!(/^[a-zA-Z]{1}[a-zA-Z0-9_]*$/.test(value))){\r\n            return 'Must start with a letter and contain only letters, numbers, and underscores.'\r\n        }\r\n    }\r\n    \r\n    const binary = (value) => {\r\n        if(!value || value == 1 || value == 0){\r\n            return;\r\n        }\r\n    \r\n        else {\r\n            return 'Must be 0, 1, or empty.';\r\n        }\r\n    }\r\n    \r\n    // const validEmail = (value, row) => {\r\n    //     if(!value) return;\r\n    //     if(row > 0) return;\r\n    //     if(!(/^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/.test(value))){\r\n    //         return 'Must be a valid email address'\r\n    //     }\r\n    // }\r\n    \r\n    const spatialResolutions = Spatial_Resolution.map(e => e.toLowerCase());\r\n    const spatialResolutionSet = new Set(spatialResolutions);\r\n    const validSpatialResolution = (value) => {\r\n        if(!value || !spatialResolutionSet.has(value.toLowerCase())) {\r\n            return `Must be one of the above options.`;\r\n        }\r\n    }\r\n    \r\n    const temporalResolutions = Temporal_Resolution.map(e => e.toLowerCase());\r\n    const temporalResolutionsSet = new Set(temporalResolutions);\r\n    const validTemporalResolution = (value) => {\r\n        if(!value || !temporalResolutionsSet.has(value.toLowerCase())) {\r\n            return `Must be one of the above options.`;\r\n        }\r\n    }\r\n    \r\n    const maxDepth = (value) => {\r\n        if(value > 11000) {\r\n            return 'Cannot be greater than 11000';\r\n        }\r\n    }\r\n    \r\n    const releaseDate = (value, row) => {\r\n        if(row !== 0) return;\r\n        if(!(/^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$/.test(value))){\r\n            return 'Format must match 2018-06-20'\r\n        }\r\n    }\r\n\r\n    const firstRowOnly = (value, row) => {\r\n        if((value || value === 0) && row > 0){\r\n            return 'Value only allowed in first row of sheet'\r\n        }\r\n    }\r\n    \r\n    return {\r\n        time: [required, validTime],\r\n        lat: [number, required, validLat],\r\n        lon: [number, required, validLon],\r\n        depth: [number, positive, maxDepth],\r\n    \r\n        dataset_short_name: [datasetRequired, codeFriendly, datasetLength(1, 50), firstRowOnly],\r\n        dataset_long_name: [datasetRequired, datasetLength(1, 200), firstRowOnly],\r\n        dataset_version: [datasetRequired, length(0, 50), firstRowOnly],\r\n        dataset_release_date: [datasetRequired, releaseDate, firstRowOnly],\r\n        dataset_make: [datasetRequired, validMake, firstRowOnly],\r\n        dataset_source: [datasetRequired, datasetLength(1, 100), firstRowOnly],\r\n        dataset_distributor: [length(0, 100), firstRowOnly],\r\n        dataset_acknowledgement: [datasetRequired, datasetLength(1, 10000)],\r\n        dataset_history: [firstRowOnly],\r\n        dataset_description: [datasetRequired, datasetLength(50, 10000), firstRowOnly],\r\n\r\n        // Issue warning if no references\r\n        dataset_references: [datasetLength(1, 500)],\r\n        climatology: [binary, firstRowOnly],\r\n        cruise_names: [datasetLength(0, 200)],\r\n        \r\n        var_short_name: [required, codeFriendly, length(1, 50)],\r\n        var_long_name: [required, length(1, 200)],\r\n        var_sensor: [required, validSensor],\r\n        var_unit: [length(0, 50)],\r\n        var_spatial_res: [required, validSpatialResolution],\r\n        var_temporal_res: [required, validTemporalResolution],\r\n        var_discipline: [validDiscipline],\r\n        visualize: [binary],\r\n        var_keywords: [],\r\n        var_comment: []\r\n    }\r\n}","import { mean, deviation } from 'd3-array';\r\n\r\nconst datasetMetadataSampleRowValue = '< short name of your dataset (<50 chars) >';\r\nconst variableMetadataSampleRowValue = '< variable short name (<50 chars) >';\r\n\r\nlet checkSheets = (workbook) => {\r\n    let expected = ['data', 'vars_meta_data', 'dataset_meta_data'];\r\n    let missingSheets = [];\r\n\r\n    expected.forEach(e => {\r\n        if(!workbook.Sheets[e]){\r\n            missingSheets.push(e);\r\n        }\r\n    });\r\n    \r\n    return missingSheets;\r\n}\r\n\r\nlet checkVariableNameMismatches = (data, vars_meta_data, userVariables) => {\r\n    let shortNames = vars_meta_data.map(e => e.var_short_name);\r\n    return shortNames.filter(e => !userVariables.has(e));\r\n}\r\n\r\nconst checkMissingVarMetadataRows = (data, vars_meta_data, userVariables) => {\r\n    let shortNames = new Set(vars_meta_data.map(e => e.var_short_name));\r\n    return Array.from(userVariables).filter(e => !shortNames.has(e));\r\n}\r\n\r\nlet checkEmptyColumns = (data, userVariables) => {\r\n    let emptyColumns = [];\r\n\r\n    userVariables.forEach(header => {\r\n        for(let i = 0; i < data.length; i++){\r\n            if(data[i][header] || data[i][header] === 0) return;\r\n        }\r\n    \r\n        emptyColumns.push(header);\r\n    });\r\n\r\n    return emptyColumns;    \r\n}\r\n\r\nlet checkMissingCruiseNames = (dataset_meta_data, vars_meta_data) => {\r\n    let hasInSitu = vars_meta_data.some(e => e.var_sensor && e.var_sensor.toLowerCase() == 'in-situ');\r\n    let isObservation = dataset_meta_data[0].dataset_make && dataset_meta_data[0].dataset_make.toLowerCase() == 'observation';\r\n    let shouldHaveCruise = Boolean(hasInSitu && isObservation);\r\n    let hasCruise = (dataset_meta_data[0]['cruise_names']);\r\n    return Boolean(shouldHaveCruise && !hasCruise);\r\n}\r\n\r\nlet checkMultipleCruisesOneCell = (dataset_meta_data) =>  Boolean(typeof dataset_meta_data[0].cruise_names === 'string' && dataset_meta_data[0].cruise_names.includes(','));\r\n\r\nlet checkRadians = (data) => {\r\n    let lonMin = data[0].lon;\r\n    let lonMax = data[0].lon;\r\n    let latMin = data[0].lat;\r\n    let latMax = data[0].lat;\r\n    let pi = Math.PI;\r\n\r\n    data.forEach(e => {\r\n        if(e.lon < lonMin) lonMin = e.lon;\r\n        if(e.lon > lonMax) lonMax = e.lon;\r\n        if(e.lat < latMin) latMin = e.lat;\r\n        if(e.lat > latMax) latMax = e.lat;\r\n    });\r\n\r\n    return Boolean(lonMin >= -pi && lonMax <= pi && latMin >= -pi/2 && latMax <= pi/2);\r\n}\r\n\r\nlet checkUniqueSpaceTime = (data) => {\r\n    let includeDepth = Boolean(data[0].depth || data[0].depth == 0);\r\n    let obj = {};\r\n    let result = []; //{row: Number, matched: Number}\r\n\r\n    try {\r\n        for(let i = 0; i < data.length; i++){\r\n            if(obj[data[i].time] === undefined){\r\n                obj[data[i].time] = {};\r\n            }\r\n    \r\n            if(obj[data[i].time][data[i].lat] === undefined){\r\n                obj[data[i].time][data[i].lat] = {};\r\n            }\r\n\r\n            if(!includeDepth){\r\n                if(obj[data[i].time][data[i].lat][data[i].lon] === undefined){\r\n                    obj[data[i].time][data[i].lat][data[i].lon] = i + 2;\r\n                }\r\n\r\n                else {\r\n                    result.push({row: i + 2, matched: obj[data[i].time][data[i].lat][data[i].lon]});\r\n                    if(result.length > 5) return result;\r\n                }\r\n            }\r\n\r\n            else {\r\n                if(obj[data[i].time][data[i].lat][data[i].lon] === undefined){\r\n                    obj[data[i].time][data[i].lat][data[i].lon] = {};\r\n                }\r\n\r\n                if(obj[data[i].time][data[i].lat][data[i].lon][data[i].depth] === undefined){\r\n                    obj[data[i].time][data[i].lat][data[i].lon][data[i].depth] = i + 2;\r\n                }\r\n\r\n                else {\r\n                    result.push({row: i + 2, matched: obj[data[i].time][data[i].lat][data[i].lon][data[i].depth]});\r\n                    if(result.length > 5) return result;\r\n                }\r\n            }    \r\n        }\r\n    }\r\n\r\n    catch(e) {\r\n        result = [];\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nlet checkTypeConsistency = (data, userVariables) => {\r\n    // Look for mixture of strings and numbers\r\n    let result = [];\r\n\r\n    userVariables.forEach(e => {\r\n        let columnIsNumerical;\r\n        for(let i = 0; i < data.length; i++){\r\n            if(columnIsNumerical === undefined){\r\n                if(data[i][e] || data[i][e] == 0) columnIsNumerical = !isNaN(parseFloat(data[i][e]));\r\n            }\r\n\r\n            else if(columnIsNumerical && (data[i][e] || data[i][e] == 0)) {\r\n                if(isNaN(parseFloat(data[i][e]))){\r\n                    result.push({column: e, row: i + 2});\r\n                    break;\r\n                }\r\n            }\r\n\r\n            else if(data[i][e] || data[i][e] == 0){\r\n                if(!isNaN(parseFloat(data[i][e]))){\r\n                    result.push({column: e, row: i + 2});\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nlet allSameValueHelper = (data, col) => {\r\n    let sampleValue;\r\n    let i = 0;\r\n\r\n    while(sampleValue === undefined && i < data.length){\r\n        if(data[i][col] || data[i][col] == 0){\r\n            sampleValue = data[i][col];\r\n        }\r\n        i++;\r\n    }\r\n\r\n    for(let j = i; j < data.length; j++){\r\n        if(data[j][col] != sampleValue) return false;\r\n    }\r\n\r\n    return true;    \r\n}\r\n\r\nlet checkAllSameValue = (data, userVariables) => {\r\n    let result = [];\r\n\r\n    userVariables.forEach(e => {\r\n        let allSame = allSameValueHelper(data, e);\r\n        if(allSame) result.push(e);\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nlet checkDepthAllOrNone = (data) => {\r\n    let includeDepth = Boolean(data[0].depth || data[0].depth == 0);\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        if(includeDepth != Boolean(data[i].depth || data[i].depth == 0)){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nlet datasetMetadataIncludesSampleRow = (datasetMetadata) => {\r\n    for(let i = 0; i < datasetMetadata.length; i++){\r\n        if(typeof datasetMetadata[i]['dataset_short_name'] === 'string' && datasetMetadata[i]['dataset_short_name'].includes(datasetMetadataSampleRowValue)) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nlet variableMetadataIncludesSampleRow = (variableMetadata) => {\r\n    for(let i = 0; i < variableMetadata.length; i++){\r\n        if(typeof variableMetadata[i]['var_short_name'] === 'string' && variableMetadata[i]['var_short_name'].includes(variableMetadataSampleRowValue)) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nlet nanVariants = new Set(['nan', 'NaN', 'NAN', 'Nan', 'null', 'Null', 'NULL'])\r\nlet checkNans = (data, userVariables) => {\r\n    let result = []; // {row, column}\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        for(let j = 0; j < userVariables.length; j++){\r\n            if(nanVariants.has(data[i][userVariables[j]])){\r\n                result.push({row: i + 2, column: userVariables[j]});\r\n                if(result.length > 4) return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nlet outlierN = 5;\r\nlet checkOutliers = (data, userVariables) => {\r\n    let outliers = []; //{row, column}\r\n    let vectors = {};\r\n    userVariables.forEach(e => vectors[e] = []);\r\n\r\n    let stats = {};\r\n    userVariables.forEach(e => stats[e] = {});\r\n\r\n    data.forEach(row => {\r\n        userVariables.forEach(e => {\r\n            vectors[e].push(row[e]);\r\n        })\r\n    });\r\n\r\n    userVariables.forEach(e => {\r\n        stats[e].mean = mean(vectors[e]);\r\n        stats[e].deviation = deviation(vectors[e]);\r\n    })\r\n    \r\n    let keys = Object.keys(stats);\r\n\r\n    for(let i = 0; i < keys.length; i++){\r\n        if((stats[keys[i]].mean || stats[keys[i]].mean === 0) && (stats[keys[i]].deviation || stats[keys[i]].deviation === 0)){\r\n            for(let j = 0; j < data.length; j++){\r\n                if((data[j][keys[i]] ||  data[j][keys[i]] == 0) && Math.abs(data[j][keys[i]] - stats[keys[i]].mean) > outlierN * stats[keys[i]].deviation){\r\n                    outliers.push({row: j + 2, column: keys[i], value:data[j][keys[i]]});\r\n                    if(outliers.length > 9) return outliers;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return outliers;\r\n}\r\n\r\nlet checkRequiredCols = data => {\r\n    let missingCols = [];\r\n    let sample = data[0];\r\n\r\n    ['time', 'lat', 'lon'].forEach(e => {\r\n        if(!sample[e] && sample[e] !== 0 ) missingCols.push(e);\r\n    })\r\n\r\n    return missingCols;\r\n}\r\n\r\nexport default ({ data, dataset_meta_data, vars_meta_data, workbook }) => {\r\n    let errors = [];\r\n    let warnings = [];\r\n\r\n    let sheetCheck = checkSheets(workbook);\r\n    if(sheetCheck.length){\r\n        errors.push(`Workbook is missing required sheet${sheetCheck.length > 1 ? 's' : ''}: ${sheetCheck.join(', ')}.`);\r\n        return {errors, warnings};\r\n    }\r\n\r\n    if(!data.length){\r\n        errors.join.push(`Found no rows on the data sheet`);\r\n        return {errors, warnings};\r\n    }\r\n\r\n    let missingCols = checkRequiredCols(data);\r\n    if(missingCols.length){\r\n        errors.push(`Data sheet is missing required column${missingCols.length > 1 ? 's' : ''}: ${missingCols.join(', ')}`);\r\n    }\r\n\r\n    let fixedVariables = new Set(['time', 'lat', 'lon', 'depth']);        \r\n    let userVariables = new Set(Object.keys(data[0]).filter(key => !fixedVariables.has(key)));\r\n    \r\n    let variableNameMismatches = checkVariableNameMismatches(data, vars_meta_data, userVariables);\r\n    if(variableNameMismatches.length){\r\n        errors.push(`The following value${variableNameMismatches.length > 1 ? 's' : ''} ` +\r\n        `for var_short_name on the vars_meta_data sheet did not match a column header on the data sheet:\\n` +\r\n        `${variableNameMismatches.join(', ')}.`);\r\n    }\r\n\r\n    let missingVarMetadataRows = checkMissingVarMetadataRows(data, vars_meta_data, userVariables);\r\n    if(missingVarMetadataRows.length){\r\n        errors.push(`The following column header${missingVarMetadataRows.length > 1 ? 's' : ''} on the data sheet ` +\r\n            `did not match any value for var_short_name on the vars_meta_data sheet: \\n` +\r\n            `${missingVarMetadataRows.join(', ')}.`);\r\n    }\r\n\r\n    let emptyColumns = checkEmptyColumns(data, userVariables);\r\n    if(emptyColumns.length){\r\n        errors.push(`The column${emptyColumns.length > 1 ? 's' : ''} ${emptyColumns.join(', ')} contain${emptyColumns > 1 ? '' : 's'} no values.`);\r\n    }\r\n\r\n    if(!checkDepthAllOrNone(data)){\r\n        errors.push('The depth column on the data sheet must contain a value for every row, or be empty.');\r\n    }\r\n\r\n    if(datasetMetadataIncludesSampleRow(dataset_meta_data)){\r\n        errors.push('The value \"< short name of your dataset (<50 chars) >\" was found in the dataset_short_name column ' +\r\n        'of the dataset_meta_data sheet. Please delete the template sample row and re-select the workbook by clicking ' + \r\n        '\"select a different file\" above.');\r\n    }\r\n\r\n    if(variableMetadataIncludesSampleRow(vars_meta_data)){\r\n        errors.push('The value \"< variable short name (<50 chars) >\" was found in the var_short_name column ' +\r\n        'of the vars_meta_data sheet. Please delete the template sample row and re-select the workbook by clicking ' + \r\n        '\"select a different file\" above.');\r\n    }\r\n    \r\n    if(checkMultipleCruisesOneCell(dataset_meta_data)) {\r\n        warnings.push(`The cruise_names column of the dataset_meta_data sheet may contain multiple cruises in one cell. Please separate ` +\r\n        `cruise names beyond the first into separate rows in this column.`);\r\n    }\r\n\r\n    if(checkMissingCruiseNames(dataset_meta_data, vars_meta_data)){\r\n        warnings.push(`The supplied values for make and sensor suggest that some or all of your data may ` + \r\n        `have been gathered on a scientific cruise, but no values were included for cruise_names in the dataset_meta_data sheet. ` +\r\n        `Including cruise names will improve the discoverability of your data.`);\r\n    }\r\n\r\n    if(checkRadians(data)){\r\n        warnings.push(`Values supplied for lat and lon indicate the possible use of radian as unit of measurement.` +\r\n        `Lat and lon must be in degrees north and degrees east, respectively.`);\r\n    }\r\n\r\n    let duplicates = checkUniqueSpaceTime(data);\r\n    if(duplicates.length){\r\n        warnings.push(`Found non-unique space and time value combinations` +\r\n            `${duplicates.length >= 5 ? '(Showing a maximum of 5 matches)' : ''}:\\n` +         \r\n            `${duplicates.map(e => `Row ${e.row} matched ${e.matched}`).join('\\n')}`);\r\n    }\r\n\r\n    let typeConsistency = checkTypeConsistency(data, userVariables);\r\n    if(typeConsistency.length){\r\n        warnings.push(`Found column${typeConsistency.length > 1 ? 's' : ''} with a mixture of string and numerical data types.` +\r\n        `\\n${typeConsistency.map(e => `Column ${e.column} contained a value of unexpected type in row ${e.row}`).join('\\n')}`)\r\n    }\r\n\r\n    let allSameValue = checkAllSameValue(data, userVariables);\r\n    if(allSameValue.length){\r\n        warnings.push(`Found column${allSameValue.length > 1 ? 's' : ''} on data sheet with all identical values: ${allSameValue.join(', ')}.`);\r\n    }\r\n\r\n    let containsNans = checkNans(data, userVariables);\r\n    if(containsNans.length){\r\n        errors.push(`NaN and null strings are not allowed. Cells should contain a value or be blank.` +\r\n            `${containsNans.length > 4 ? 'Showing a maximum of 5 matches.' : ''}` +\r\n            `Found illegal value${containsNans.length > 1 ? 's' : ''}` +\r\n            `at ${containsNans.map(e => `row ${e.row} column ${e.column}`).join('\\n')}.`)\r\n    }\r\n\r\n    let outliers = checkOutliers(data, userVariables);\r\n    if(outliers.length){\r\n        warnings.push(`Found possible data outlier${outliers.length > 1 ? 's' : ''} ` +\r\n            `${outliers.length > 9 ? '(Showing a maximum of 10 values)' : ''}:\\n` +\r\n            `${outliers.map(e => `Value ${e.value} in column ${e.column} row ${e.row}`).join('\\n')}`);\r\n    }\r\n\r\n    return {errors, warnings};\r\n};","const auditReference = {\r\n    data: [\r\n        'time',\r\n        'lat',\r\n        'lon',\r\n        'depth'\r\n    ],\r\n\r\n    dataset_meta_data: [\r\n        'dataset_short_name',\r\n        'dataset_long_name',\r\n        'dataset_version',\r\n        'dataset_release_date',\r\n        'dataset_make',\r\n        'dataset_source',\r\n        'dataset_distributor',\r\n        'dataset_acknowledgement',\r\n        'dataset_history',\r\n        'dataset_description',\r\n        'dataset_references',\r\n        'climatology',\r\n        'contact_email',\r\n        'cruise_names'\r\n    ],\r\n\r\n    vars_meta_data: [\r\n        'var_short_name',\r\n        'var_long_name',\r\n        'var_sensor',\r\n        'var_unit',\r\n        'var_spatial_res',\r\n        'var_temporal_res',\r\n        'var_discipline',\r\n        'visualize',\r\n        'var_keywords',\r\n        'var_comment'\r\n    ]\r\n};\r\n\r\nexport default auditReference;","// Wrapper for data submission process\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport XLSX from 'xlsx';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Typography, Paper, Button, Link, IconButton, Tooltip, List, ListItem, ListItemIcon, ListItemText, Divider, Tabs, Tab, Badge } from '@material-ui/core';\r\nimport { ErrorOutline, ArrowBack, ArrowForward, Done } from \"@material-ui/icons\";\r\n\r\nimport { uploadSubmission, retrieveMostRecentFile, storeSubmissionFile, checkSubmissionOptionsAndStoreFile, setUploadState } from '../../Redux/actions/dataSubmission';\r\nimport { snackbarOpen, setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport ValidationGrid from './ValidationGrid';\r\nimport LoginRequiredPrompt from '../User/LoginRequiredPrompt';\r\nimport DSCustomGridHeader from './DSCustomGridHeader';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport formatDataSheet from '../../Utility/DataSubmission/formatDataSheet';\r\nimport formatDatasetMetadataSheet from '../../Utility/DataSubmission/formatDatasetMetadataSheet';\r\nimport formatVariableMetadataSheet from '../../Utility/DataSubmission/formatVariableMetadataSheet';\r\nimport generateAudits from '../../Utility/DataSubmission/generateAudits';\r\nimport workbookAudits from '../../Utility/DataSubmission/workbookAudits';\r\nimport auditReference from '../../Utility/DataSubmission/auditReference';\r\n\r\nimport states from '../../Enums/asyncRequestStates';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    submissionFile: state.submissionFile,\r\n    dataSubmissionSelectOptions: state.dataSubmissionSelectOptions,\r\n    submissionUploadState: state.submissionUploadState,\r\n    user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarOpen,\r\n    uploadSubmission,\r\n    setLoadingMessage,\r\n    retrieveMostRecentFile,\r\n    storeSubmissionFile,\r\n    checkSubmissionOptionsAndStoreFile\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n    input: {\r\n        display: 'none'\r\n    },\r\n\r\n    button: {\r\n        color: 'white',\r\n        textTransform: 'none',\r\n        display: 'block',\r\n        maxWidth: '100px',\r\n        margin: '12px auto 0px auto'\r\n    },\r\n\r\n    needHelp: {\r\n        float: 'left',\r\n        color: 'white',\r\n        margin: '12px 0 0 12px',\r\n        letterSpacing: 'normal'\r\n    },\r\n\r\n    needHelpLink: {\r\n        letterSpacing: 'normal',\r\n        color: theme.palette.primary.main,\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    fileSelectPaper: {\r\n        margin: '70px auto 24px auto',\r\n        maxWidth: '50vw',\r\n        padding: '16px',        \r\n        padding: '12px',\r\n        whiteSpace: 'pre-wrap'\r\n    },\r\n\r\n    workbookAuditPaper: {\r\n        margin: '70px auto 24px auto',\r\n        maxWidth: '50vw',\r\n        padding: '16px',        \r\n        padding: '12px',\r\n        minHeight: '110px',\r\n        whiteSpace: 'pre-wrap',\r\n        textAlign: 'left'\r\n    },\r\n\r\n    addBorder: {\r\n        border: `1px dashed ${theme.palette.primary.main}`\r\n    },\r\n\r\n    chooseNewFileLabel: {\r\n        display: 'inline',\r\n        position: 'absolute',\r\n        marginTop: '10px',\r\n        marginLeft : '14px',\r\n        fontSize: '11px',\r\n        borderRadius: '2px',\r\n        color: colors.primary,\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(0,0,0,.2)'\r\n        }\r\n    },\r\n\r\n    linkLabel: {\r\n        color: colors.primary,\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(0,0,0,.2)'\r\n        }\r\n    },\r\n\r\n    submitButton: {\r\n        color: 'white',\r\n        margin: '24px 0 12px 0',\r\n        textTransform: 'none'\r\n    },\r\n\r\n    tabPaper: {\r\n        maxWidth: '80vw',\r\n        height: 'calc(100vh - 320px)',\r\n        minHeight: '300px',\r\n        margin: '0 auto 24px auto'\r\n    },\r\n\r\n    currentlyViewingTypography: {\r\n        marginLeft: '4px'\r\n    },\r\n\r\n    ilb: {\r\n        display: 'inline-block'\r\n    },\r\n\r\n    currentSectionSpan: {\r\n        margin: '4px 8px 0 8px',\r\n        width: '200px',\r\n        display: 'inline-block'\r\n    },\r\n\r\n    divider: {\r\n        margin: '8px 0'\r\n    },\r\n\r\n    workbookTab: {\r\n        textTransform: 'none'\r\n    },\r\n\r\n    submittedTypography: {\r\n        marginBottom: '12px'\r\n    }\r\n\r\n});\r\n\r\nconst _CleanupDummy = (props) => {\r\n    React.useEffect(() => {\r\n        return function cleanup() {\r\n            props.setUploadState(null);\r\n        };\r\n    });\r\n\r\n    return '';\r\n}\r\n\r\nconst CleanupDummy = connect(null, {setUploadState})(_CleanupDummy);\r\n\r\nconst textAreaLookup = {\r\n    var_keywords: 4,\r\n    var_comment: 5,\r\n    var_long_name: 3,\r\n    dataset_references: 8,\r\n    dataset_description: 14,\r\n    dataset_acknowledgement: 8,\r\n    cruise_names: 5,\r\n    dataset_long_name: 3,\r\n    dataset_history: 3,\r\n    dataset_distributor: 3\r\n};\r\n\r\nconst validationSteps = [\r\n    {\r\n        // before selecting file\r\n    },\r\n\r\n    {\r\n        label: 'Workbook Validation',\r\n        sheet: 'workbook'\r\n    },\r\n\r\n    {\r\n        label: 'Data Sheet',\r\n        sheet: 'data'\r\n    },\r\n\r\n    {\r\n        label: 'Dataset Metadata Sheet',\r\n        sheet: 'dataset_meta_data'\r\n    },\r\n\r\n    {\r\n        label: 'Variable Metadata Sheet',\r\n        sheet: 'vars_meta_data'\r\n    },\r\n\r\n    {\r\n        label: 'Submission',\r\n        sheet: 'submission'\r\n    }\r\n];\r\n\r\nlet orderedColumns = {\r\n    data: ['time', 'lat', 'lon', 'depth'],\r\n    dataset_meta_data: ['dataset_short_name', 'dataset_long_name', 'dataset_version', 'dataset_release_date', 'dataset_make', 'cruise_names', 'dataset_source', 'dataset_distributor', 'dataset_acknowledgement', //'contact_email'\r\n    , 'dataset_doi', 'dataset_history', 'dataset_description', 'dataset_references', 'climatology'],\r\n    vars_meta_data: ['var_short_name', 'var_long_name', 'var_unit', 'var_sensor', 'var_spatial_res', 'var_temporal_res', 'var_discipline', 'visualize',\t'var_keywords', 'var_comment']\r\n}\r\n\r\nconst generateSelectOptions = (reduxStoreOptions) => ({\r\n    var_temporal_res: reduxStoreOptions.Temporal_Resolution,\r\n    var_discipline: reduxStoreOptions.Study_Domain,\r\n    var_sensor: reduxStoreOptions.Sensor,\r\n    var_spatial_res: reduxStoreOptions.Spatial_Resolution,\r\n    dataset_make: reduxStoreOptions.Make\r\n});\r\n\r\nconst StyledBadgeRed = withStyles((theme) => ({\r\n    badge: {\r\n        right: -11,\r\n        top: 1,\r\n        backgroundColor: 'rgba(255, 0, 0, .6)'\r\n    },\r\n}))(Badge);\r\n\r\nconst StyledBadgeGreen = withStyles((theme) => ({\r\n    badge: {\r\n        right: -11,\r\n        top: 1,\r\n        backgroundColor: 'green'\r\n    },\r\n}))(Badge);\r\n\r\nlet fileSizeTooLargeDummyState = {\r\n    auditReport: {\r\n        workbook: {\r\n            errors: ['This workbook exceeds the file size limit of this application. Please contact our data curation team at cmap-data-submission@uw.edu for assistance.'],\r\n            warnings: []\r\n        },\r\n        data: [],\r\n        dataset_meta_data: [],\r\n        vars_meta_data: []\r\n    },\r\n    validationStep: 1,\r\n};\r\n\r\n// validationSteps:\r\n// 1 - workbook,\r\n// 2 - data,\r\n// 3 - dataset metadata\r\n// 4 - variable metadata\r\n// 5 - submission\r\n\r\nclass ValidationTool extends React.Component {\r\n\r\n    checkCellStyle = (params) => {\r\n        let row = params.node.childIndex;\r\n        let colId = params.column.colId; \r\n        let { sheet } = params.context;\r\n\r\n        let styles = {};\r\n        \r\n        if(this.state.auditReport && this.state.auditReport[sheet] && this.state.auditReport[sheet][row] && this.state.auditReport[sheet][row][colId]){\r\n            styles.boxShadow = 'inset 0 0 1px 1px rgba(255, 0, 0, .5)'\r\n        }\r\n\r\n        return styles;\r\n    }\r\n\r\n    state = {\r\n        validationStep: 0,\r\n        file: null,\r\n        data: null,\r\n        dataset_meta_data: null,\r\n        vars_meta_data: null,\r\n        auditReport: null,\r\n        defaultColumnDef: {\r\n            menuTabs: [],\r\n            resizable: true,\r\n            editable: true,\r\n            cellStyle: this.checkCellStyle,\r\n            cellEditor: 'DSCellEditor',\r\n            width: 270,\r\n            headerComponentFramework: DSCustomGridHeader\r\n        }\r\n    }\r\n\r\n    handleGridSizeChanged = () => {\r\n        if(this.state.validationStep === 2){\r\n            this.gridApi.sizeColumnsToFit()\r\n        }\r\n    }\r\n\r\n    handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    auditCell = (value, col, row) => {\r\n        let cellAudit = [];\r\n        let auditFuncs = this.audits[col];\r\n        \r\n        if(auditFuncs){\r\n            auditFuncs.forEach(func => {\r\n                let result = func(value, row);\r\n    \r\n                if(result) {\r\n                    cellAudit.push(result);\r\n                }\r\n            });\r\n        }\r\n   \r\n        return cellAudit;\r\n    }\r\n\r\n    auditWorkbook = (params) => {\r\n        return workbookAudits(params);\r\n    }\r\n\r\n    auditRows = (rows, sheet) => {\r\n        let audit = [];\r\n        rows.forEach((row, i) => {\r\n            let rowAudit = {};\r\n\r\n            let columns = auditReference[sheet];\r\n\r\n            columns.forEach((col) => {\r\n                let cellAudit = this.auditCell(row[col], col, i);\r\n\r\n                if(cellAudit.length){\r\n                    rowAudit[col] = cellAudit;\r\n                }\r\n            });\r\n\r\n            if(Object.keys(rowAudit).length){\r\n                audit[i] = rowAudit;\r\n            }\r\n        });\r\n\r\n        return audit;\r\n    }\r\n\r\n    // Takes a workbook and returns an audit report\r\n    performAudit = (workbook) => {\r\n        let workbookAudit = this.auditWorkbook(workbook);\r\n        if(workbookAudit.errors.length) return {\r\n            workbook: workbookAudit,\r\n            data: [],\r\n            dataset_meta_data: [],\r\n            vars_meta_data: []\r\n        };\r\n\r\n        let report = {\r\n            workbook: workbookAudit,\r\n            data: this.auditRows(workbook.data, 'data'),\r\n            dataset_meta_data: this.auditRows(workbook.dataset_meta_data, 'dataset_meta_data'),\r\n            vars_meta_data: this.auditRows(workbook.vars_meta_data, 'vars_meta_data'),\r\n        };\r\n\r\n        return report;\r\n    }\r\n\r\n    handleResetState = () => {\r\n        this.props.storeSubmissionFile(null);\r\n        this.props.history.push({ pathname: '/datasubmission/validationtool', query: {} });\r\n        this.setState({\r\n            ...this.state,\r\n            data: null,\r\n            dataset_meta_data: null,\r\n            vars_meta_data: null,\r\n            validationStep: 0\r\n        });\r\n    }\r\n\r\n    handleChangeValidationStep = (validationStep) => {\r\n        this.setState({...this.state, validationStep}, () => {\r\n            if(this.gridApi && validationStep == 2) this.gridApi.sizeColumnsToFit()\r\n        });\r\n    }\r\n    \r\n    handleCellValueChanged = ({rowIndex, newValue, column, node, context, oldValue}) => {\r\n        if(oldValue === newValue) return;\r\n\r\n        let { sheet } = context;\r\n\r\n        let newAudit = this.auditCell(newValue, column.colId, rowIndex);\r\n        \r\n        let auditReport = {...this.state.auditReport};\r\n\r\n        if(!auditReport[sheet][rowIndex]) auditReport[sheet][rowIndex] = {};\r\n\r\n        auditReport[sheet] = [...this.state.auditReport[sheet]];\r\n\r\n        if(newAudit.length){\r\n            auditReport[sheet][rowIndex][column.colId] = newAudit\r\n        } else delete auditReport[sheet][rowIndex][column.colId];\r\n\r\n        if(!Object.keys(auditReport[sheet][rowIndex]).length) {\r\n            auditReport[sheet][rowIndex] = null;\r\n        }\r\n\r\n        let updated = [...this.state[sheet].slice(0, rowIndex), node.data, ...this.state[sheet].slice(rowIndex + 1)];\r\n        this.setState({...this.state, [sheet]: updated, auditReport}, () => {\r\n            this.gridApi.redrawRows();\r\n        });\r\n    }\r\n\r\n    handleReadFile = (file) => {\r\n        var reader = new FileReader();\r\n        if(file.size > 150000000){\r\n            this.setState({...this.state, ...fileSizeTooLargeDummyState}, () => this.props.setLoadingMessage(''));\r\n            return;\r\n        }\r\n        \r\n        reader.onload = (progressEvent) => {\r\n            var readFile = new Uint8Array(progressEvent.target.result);\r\n            var workbook = XLSX.read(readFile, {type: 'array'});\r\n            let _data = XLSX.utils.sheet_to_json(workbook.Sheets['data'], {defval: null});\r\n            let data = _data ? formatDataSheet(_data, workbook) : _data;\r\n\r\n            let _dataset_meta_data = XLSX.utils.sheet_to_json(workbook.Sheets['dataset_meta_data'], {defval: null});\r\n            let dataset_meta_data = _dataset_meta_data ? formatDatasetMetadataSheet(_dataset_meta_data, workbook) : _dataset_meta_data;\r\n            \r\n            let _vars_meta_data = XLSX.utils.sheet_to_json(workbook.Sheets['vars_meta_data'], {defval: null});\r\n            let vars_meta_data = _vars_meta_data ? formatVariableMetadataSheet(_vars_meta_data) : _vars_meta_data;\r\n\r\n            var auditReport = this.performAudit({workbook, data, dataset_meta_data, vars_meta_data});\r\n\r\n            let validationStep = (auditReport.workbook.errors.length || auditReport.workbook.warnings.length) ? 1 : 2;\r\n            this.setState({...this.state, data, dataset_meta_data, vars_meta_data, auditReport, validationStep}, () => this.props.setLoadingMessage(''));\r\n        }\r\n\r\n        reader.readAsArrayBuffer(file);        \r\n    }\r\n\r\n    handleDrop = (e) => {\r\n        e.preventDefault();        \r\n        var file = e.dataTransfer.items[0].getAsFile();\r\n        this.props.setLoadingMessage('Reading Workbook');\r\n        this.props.checkSubmissionOptionsAndStoreFile(file);\r\n    }\r\n\r\n    handleFileSelect = (e) => {\r\n        var file = e.target.files[0];\r\n        if(!file) return;\r\n        this.props.setLoadingMessage('Reading Workbook');\r\n        this.props.checkSubmissionOptionsAndStoreFile(file);\r\n        e.target.value = null;\r\n    }\r\n\r\n    handleUploadSubmission = () => {\r\n        let workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, XLSX.utils.json_to_sheet(this.state.data), 'data');\r\n        XLSX.utils.book_append_sheet(workbook, XLSX.utils.json_to_sheet(this.state.dataset_meta_data), 'dataset_meta_data');\r\n        XLSX.utils.book_append_sheet(workbook, XLSX.utils.json_to_sheet(this.state.vars_meta_data), 'vars_meta_data');\r\n        let wbArray = XLSX.write(workbook, {bookType:'xlsx', type:'array'});\r\n        let file = new Blob([wbArray]);\r\n        file.name = `${this.state.dataset_meta_data[0].dataset_short_name}.xlsx`;\r\n        this.props.uploadSubmission({\r\n            file, \r\n            datasetName: this.state.dataset_meta_data[0].dataset_short_name,\r\n            dataSource: this.state.dataset_meta_data[0].dataset_source,\r\n            datasetLongName: this.state.dataset_meta_data[0].dataset_long_name\r\n        });\r\n    }\r\n\r\n    handleDownload = () => {\r\n        this.props.setLoadingMessage('Downloading');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => this.props.setLoadingMessage(''));\r\n        }, 50)\r\n        let workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, XLSX.utils.json_to_sheet(this.state.data), 'data');\r\n        XLSX.utils.book_append_sheet(workbook, XLSX.utils.json_to_sheet(this.state.dataset_meta_data), 'dataset_meta_data');\r\n        XLSX.utils.book_append_sheet(workbook, XLSX.utils.json_to_sheet(this.state.vars_meta_data), 'vars_meta_data');\r\n        XLSX.writeFile(workbook, this.state.dataset_meta_data[0].dataset_short_name + '.xlsx');\r\n    }\r\n\r\n    onGridReady = (params) => {\r\n        this.gridApi = params.api;\r\n        this.columnApi = params.columnApi;\r\n        if(this.state.validationStep === 2) this.gridApi.sizeColumnsToFit();\r\n    }\r\n\r\n    onModelUpdated = (params) => {\r\n        if(this.gridApi && validationSteps[this.state.validationStep].sheet === 'data'){\r\n            this.gridApi.sizeColumnsToFit();\r\n        }\r\n    }\r\n\r\n    scrollGridTo = (index) => {\r\n        this.gridApi.ensureIndexVisible(index, 'middle')\r\n    }\r\n\r\n    //TODO clean this up when it's not late at night\r\n    handleFindNext = () => {\r\n        let lastFocused = this.gridApi.getFocusedCell();\r\n        let { sheet } = validationSteps[this.state.validationStep];\r\n        let { auditReport } = this.state;\r\n        \r\n        let cols = orderedColumns[sheet];\r\n        var startRow = lastFocused ? lastFocused.rowIndex : -1;\r\n        var startColIndex = lastFocused ? cols.findIndex(e => e === lastFocused.column.colId) : 0;\r\n\r\n        // Search the remaining columns in focused row\r\n        if(lastFocused){\r\n            for(let i = startColIndex + 1; i < cols.length && i > -1; i++){\r\n                if(auditReport[sheet][startRow] && auditReport[sheet][startRow][cols[i]]){\r\n                    this.gridApi.ensureColumnVisible(cols[i]);\r\n                    this.gridApi.startEditingCell({\r\n                        rowIndex: startRow,\r\n                        colKey: cols[i]\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Start from startRow + 1, end at beginning of startRow\r\n        for(let i = startRow + 1; i != startRow; i++){\r\n            if(auditReport[sheet][i]){\r\n                for(let j = 0; j < cols.length; j++){\r\n                    if(auditReport[sheet][i][cols[j]]){\r\n                        this.gridApi.ensureColumnVisible(cols[j]);\r\n                        this.gridApi.startEditingCell({\r\n                            rowIndex: i,\r\n                            colKey: cols[j]\r\n                        });\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(i === auditReport[sheet].length) i = -1;\r\n        }\r\n\r\n        // Search the rest of start row\r\n        if(lastFocused){\r\n            for(let i = 0; i <= startColIndex && i < cols.length; i++){\r\n                if(auditReport[sheet][startRow] && auditReport[sheet][startRow][cols[i]]){\r\n                    this.gridApi.ensureColumnVisible(cols[i]);\r\n                    this.gridApi.startEditingCell({\r\n                        rowIndex: startRow,\r\n                        colKey: cols[i]\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    countErrors = () => {\r\n        let counts = {\r\n            workbook: this.state.auditReport.workbook.errors.length,\r\n            data: 0,\r\n            dataset_meta_data: 0,\r\n            vars_meta_data: 0\r\n        };        \r\n\r\n        this.state.auditReport['data'].forEach(e => {\r\n            if(e){\r\n                counts.data += Object.keys(e).length;\r\n            }\r\n        })\r\n\r\n        this.state.auditReport['dataset_meta_data'].forEach(e => {\r\n            if(e){\r\n                counts.dataset_meta_data += Object.keys(e).length;\r\n            }\r\n        })\r\n\r\n        this.state.auditReport['vars_meta_data'].forEach(e => {\r\n            if(e){\r\n                counts.vars_meta_data += Object.keys(e).length;\r\n            }\r\n        })\r\n\r\n        return counts;\r\n    }\r\n\r\n    handleClickTab = (event, newValue) => {\r\n        this.setState({...this.state, validationStep: newValue});\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let submissionID = new URLSearchParams(window.location.search).get('submissionID');\r\n        if(submissionID){\r\n            this.props.retrieveMostRecentFile(submissionID);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.storeSubmissionFile(null);\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if((!prevProps.dataSubmissionSelectOptions && this.props.dataSubmissionSelectOptions) || (!this.audits && this.props.dataSubmissionSelectOptions) || (prevProps.dataSubmissionSelectOptions !== this.props.dataSubmissionSelectOptions && this.props.dataSubmissionSelectOptions)){\r\n            this.audits = generateAudits(this.props.dataSubmissionSelectOptions);\r\n        }\r\n        if(prevProps.submissionFile !== this.props.submissionFile && this.props.submissionFile){\r\n            this.handleReadFile(this.props.submissionFile);\r\n        }\r\n\r\n    }\r\n\r\n    render = () => {\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        const { classes } = this.props;\r\n        const { validationStep } = this.state;\r\n\r\n        const datasetName = this.state.dataset_meta_data && this.state.dataset_meta_data.length ? this.state.dataset_meta_data[0].dataset_short_name : null;\r\n\r\n        const sheet = validationSteps[validationStep].sheet;\r\n\r\n        var errorCount;\r\n\r\n        if(validationStep > 0 && validationStep < 5){\r\n            errorCount = this.countErrors();\r\n        }\r\n        \r\n        const preventSubmission = Boolean(\r\n            validationStep >= 5 || \r\n            (validationStep === 1 && errorCount.workbook) ||\r\n            (validationStep === 4 && (\r\n                errorCount.data > 0 || \r\n                errorCount.dataset_meta_data > 0 ||\r\n                errorCount.vars_meta_data > 0\r\n            ))\r\n        )\r\n\r\n        const forwardArrowTooltip = validationStep === 0 || validationStep >= 5 ? '' :\r\n            (errorCount.data > 0 || errorCount.dataset_meta_data > 0 || errorCount.vars_meta_data > 0) && validationStep === 4 ?\r\n            'Please Correct Errors to Proceed' :\r\n            'Next Section';\r\n\r\n        const hideSelectDifferentFile = validationStep >= 5;\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Typography className={classes.needHelp}>\r\n                    Need help? \r\n                    <Link \r\n                        href='https://github.com/simonscmap/DBIngest/raw/master/template/datasetTemplate.xlsx' \r\n                        download='datasetTemplate.xlsx' \r\n                        className={classes.needHelpLink}\r\n                    >\r\n                        &nbsp;Download\r\n                    </Link>\r\n                    &nbsp;a blank template, or view the <Link className={classes.needHelpLink} component={RouterLink} to='/datasubmission/guide'>Data Submission Guide</Link>.\r\n                </Typography>\r\n\r\n                <Paper elevation={2} className={`${classes.fileSelectPaper} ${!this.props.submissionFile && classes.addBorder}`} onDragOver={this.handleDragOver} onDrop={this.handleDrop}>\r\n                    {\r\n                        this.props.submissionFile ?\r\n                        <React.Fragment>\r\n\r\n                            <Typography variant='h6' className={classes.currentlyViewingTypography}>\r\n\r\n                                {datasetName ? `${datasetName}` : 'Dataset Short Name Not Found'}\r\n                                { hideSelectDifferentFile ? '' :\r\n                                    <>\r\n                                        <label htmlFor=\"select-file-input\" className={classes.chooseNewFileLabel}>\r\n                                            Select a Different File\r\n                                        </label> {'\\n'}\r\n                                    </>\r\n                                }\r\n                            </Typography>\r\n\r\n                            <div>\r\n                                <Tooltip title='Previous Section'>\r\n                                    <div className={classes.ilb}>\r\n                                        <IconButton \r\n                                            size='small'\r\n                                            onClick={() => this.handleChangeValidationStep(this.state.validationStep - 1)}\r\n                                            disabled={Boolean(this.state.validationStep <= 1)}\r\n                                        >\r\n                                            <ArrowBack/>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </Tooltip>\r\n\r\n                                <span className={classes.currentSectionSpan}>{validationSteps[validationStep].label}</span>\r\n\r\n                                <Tooltip title= {forwardArrowTooltip}>\r\n                                    <div className={classes.ilb}>\r\n                                        <IconButton \r\n                                            size='small'\r\n                                            onClick={() => this.handleChangeValidationStep(this.state.validationStep + 1)}\r\n                                            disabled={preventSubmission}\r\n                                        >\r\n                                            <ArrowForward/>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </React.Fragment>\r\n\r\n                        :\r\n\r\n                        <React.Fragment>\r\n                            <Typography variant='h5'>\r\n                                To begin drag or \r\n\r\n                                <label htmlFor=\"select-file-input\">\r\n                                    <Button variant='contained' color=\"primary\" component=\"span\" className={classes.button}>\r\n                                        Select File\r\n                                    </Button>\r\n                                </label>                                \r\n                            </Typography>\r\n\r\n                            \r\n                        </React.Fragment>\r\n                    }\r\n\r\n                    {\r\n                        (validationStep > 1 && validationStep < 5) &&\r\n                        <React.Fragment>\r\n                            <Divider className={classes.divider}/>\r\n                            {\r\n                                Boolean(errorCount[sheet] > 0) ?\r\n\r\n                                <Typography variant='body2'>\r\n                                    <ErrorOutline style={{color: 'rgba(255, 0, 0, .7)', margin: '0 2px -5px 0', fontSize: '1.4em'}}/> \r\n                                    We found {errorCount[sheet]} cell{errorCount[sheet] > 1 ? 's' : ''} with errors on this sheet. \r\n                                    <span className={classes.linkLabel} onClick={this.handleFindNext}> Find Errors</span>\r\n                                </Typography>\r\n\r\n                                :\r\n\r\n                                Boolean(sheet === 'vars_meta_data' && (errorCount['data'] || errorCount['dataset_meta_data'])) ?\r\n\r\n                                <Typography variant='body2'>\r\n                                    <ErrorOutline style={{color: 'rgba(255, 0, 0, .7)', margin: '0 2px -5px 0', fontSize: '1.4em'}}/> \r\n                                    Please correct errors from the previous sheets before moving forward. \r\n                                </Typography>\r\n                                \r\n                                :\r\n                                \r\n                                <Typography variant='body2'>\r\n                                    <Done style={{color: colors.primary, margin: '0 2px -5px 0', fontSize: '1.4em'}}/>All set! Click the arrow above to move to the next step.\r\n                                </Typography>\r\n                            }\r\n                        </React.Fragment>\r\n                    }\r\n                </Paper>\r\n\r\n                {Boolean(validationStep === 1) &&\r\n                    <Paper elevation={2} className={`${classes.workbookAuditPaper}`}>\r\n                        <Typography style={{marginBottom: '24px'}}>\r\n                            {\r\n                                Boolean(this.state.auditReport.workbook.errors.length) &&\r\n\r\n                                <React.Fragment>\r\n                                    One or more parts of your submission did not match CMAP's requirements. \r\n                                    Please review the information below, update your workbook, \r\n                                    and <label className={classes.linkLabel} htmlFor='select-file-input'>try again</label>.\r\n                                </React.Fragment>\r\n                            }\r\n\r\n                            {\r\n                                Boolean(!this.state.auditReport.workbook.errors.length && this.state.auditReport.workbook.warnings.length) &&\r\n                                'We found some potential issues with your submission.'\r\n                            }\r\n\r\n                            {\r\n                                Boolean(this.state.auditReport.workbook.warnings.length) &&\r\n                                    <React.Fragment>\r\n                                        {'\\n'}\r\n                                        {'\\n'}\r\n                                        Messages marked with a yellow icon\r\n                                        <ErrorOutline style={{color: 'rgba(255, 255, 0, .7)', fontSize: '18px', margin: '0 3px -4px 3px'}}/>\r\n                                        are warnings. These should be reviewed and corrected if necessary, but will not prevent you \r\n                                        from moving to the next validation step.\r\n                                    </React.Fragment>\r\n                            }\r\n                        </Typography>\r\n\r\n                        {\r\n\r\n                        <List dense={true}>\r\n                            {\r\n                                this.state.auditReport.workbook.errors.map((e,i) => (\r\n                                    <ListItem key={i}>\r\n                                        <ListItemIcon style={{color: 'rgba(255, 0, 0, .7)'}}>\r\n                                            <ErrorOutline/>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={e}\r\n                                        />\r\n                                    </ListItem>\r\n                                ))\r\n                            }\r\n\r\n                            {\r\n                                this.state.auditReport.workbook.warnings.map((e,i) => (\r\n                                    <ListItem key={i}>\r\n                                        <ListItemIcon style={{color: 'rgba(255, 255, 0, .7)'}}>\r\n                                            <ErrorOutline/>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={e}\r\n                                        />\r\n                                    </ListItem>\r\n                                    ))\r\n                            }\r\n                            \r\n                        </List>\r\n                        }\r\n                    </Paper>\r\n                }\r\n\r\n                {Boolean((this.state.data && this.state.data.length) && (validationStep >= 2 && validationStep < 5)) &&\r\n                    <React.Fragment>\r\n\r\n                        <Paper elevation={2} className={classes.tabPaper + \" ag-theme-material\"}>\r\n                            <Tabs value={validationStep} onChange={this.handleClickTab}>\r\n                                <Tab \r\n                                    value={2}\r\n                                    label={ \r\n                                        errorCount['data'] > 0 ?\r\n                                        <StyledBadgeRed badgeContent={errorCount['data']}>Data</StyledBadgeRed>\r\n                                        :                              \r\n                                        <StyledBadgeGreen badgeContent={'\\u2713'}>Data</StyledBadgeGreen>\r\n                                    } \r\n                                    className={classes.workbookTab}\r\n                                />\r\n\r\n                                <Tab \r\n                                    value={3}\r\n                                    label={ \r\n                                        errorCount['dataset_meta_data'] > 0 ?\r\n                                        <StyledBadgeRed badgeContent={errorCount['dataset_meta_data']}>Dataset Metadata</StyledBadgeRed>\r\n                                        :                              \r\n                                        <StyledBadgeGreen badgeContent={'\\u2713'}>Dataset Metadata</StyledBadgeGreen>\r\n                                    } \r\n                                    className={classes.workbookTab}\r\n                                />\r\n\r\n                                <Tab \r\n                                    value={4}\r\n                                    label={ \r\n                                        errorCount['vars_meta_data'] > 0 ?\r\n                                        <StyledBadgeRed badgeContent={errorCount['vars_meta_data']}>Variable Metadata</StyledBadgeRed>\r\n                                        :                              \r\n                                        <StyledBadgeGreen badgeContent={'\\u2713'}>Variable Metadata</StyledBadgeGreen>\r\n                                    } \r\n                                    className={classes.workbookTab}\r\n                                />\r\n                            </Tabs>\r\n\r\n                            <div style={{height: 'calc(100% - 48px)'}}>\r\n                                <ValidationGrid\r\n                                    onGridReady={this.onGridReady}\r\n                                    rowData={this.state[sheet]}\r\n                                    defaultColumnDef={this.state.defaultColumnDef}\r\n                                    handleCellValueChanged={this.handleCellValueChanged}\r\n                                    handleGridSizeChanged={this.handleGridSizeChanged}\r\n                                    gridContext={{\r\n                                        sheet, \r\n                                        getAuditReport: () => this.state.auditReport, \r\n                                        textAreaLookup, \r\n                                        selectOptions: generateSelectOptions(this.props.dataSubmissionSelectOptions),\r\n                                        auditCell: this.auditCell\r\n                                    }}\r\n                                    onModelUpdated={this.onModelUpdated}\r\n                                />\r\n                            </div>\r\n                        </Paper>\r\n                    </React.Fragment>\r\n                }\r\n\r\n                {Boolean(validationStep === 5) && \r\n                    <Paper elevation={2} className={`${classes.fileSelectPaper}`}>\r\n                        <CleanupDummy/>                        \r\n                        {\r\n                            this.props.submissionUploadState === states.succeeded ?\r\n                                <React.Fragment>\r\n                                    <Typography className={classes.submittedTypography}>\r\n                                        Your dataset has been successfully submitted, and will be reviewed by our data curation team.\r\n                                    </Typography>\r\n\r\n                                    <Typography className={classes.submittedTypography}>\r\n                                        You can view the status of your submission <Link style={{display: 'inline-block'}} className={classes.needHelpLink} component={RouterLink} to={`/datasubmission/userdashboard?datasetName=${encodeURI(datasetName)}`}>here</Link>.\r\n                                    </Typography>\r\n\r\n                                    <Typography className={classes.submittedTypography}>                                    \r\n                                        If you made any changes during this process you can download the edited workbook <Link style={{display: 'inline-block'}} className={classes.needHelpLink} onClick={this.handleDownload} component='span'>here</Link>.\r\n                                    </Typography>\r\n\r\n                                    <Typography className={classes.submittedTypography}>\r\n                                        A detailed description of remaining steps in the submission process can be found in the <Link style={{display: 'inline-block'}} className={classes.needHelpLink} component={RouterLink} to='/datasubmission/guide'>Data Submission Guide</Link>.\r\n                                    </Typography>\r\n\r\n                                    <Typography className={classes.submittedTypography}>\r\n                                        To start over and submit another dataset click <Link style={{display: 'inline-block'}} className={classes.needHelpLink} onClick={() =>this.handleResetState()} component='span'>here</Link>.\r\n                                    </Typography>\r\n                                </React.Fragment>\r\n\r\n                            :\r\n\r\n                            this.props.submissionUploadState === states.failed ?\r\n\r\n                            <React.Fragment>\r\n                                <List>\r\n                                    <ListItem>\r\n                                        <ListItemIcon style={{color: 'rgba(255, 0, 0, .7)'}}>\r\n                                            <ErrorOutline/>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary=\"A dataset with this name has already been submitted by another user. If you believe you're receiving this message in error please contact us at cmap-data-submission@uw.edu.\"\r\n                                        />\r\n\r\n                                    <Typography className={classes.submittedTypography}>\r\n                                        To start over and submit another dataset click <Link style={{display: 'inline-block'}} className={classes.needHelpLink} onClick={() =>this.handleResetState()} component='span'>here</Link>.\r\n                                    </Typography>\r\n                                    </ListItem>\r\n                                </List>\r\n                                    \r\n                                <Typography className={classes.submittedTypography}>                                    \r\n                                    If you made any changes during this process you can download the edited workbook <Link style={{display: 'inline-block'}} className={classes.needHelpLink} onClick={this.handleDownload} component='span'>here</Link>.\r\n                                </Typography>\r\n\r\n                            </React.Fragment>\r\n\r\n                            :\r\n\r\n                            <React.Fragment>\r\n                                <Typography>\r\n                                    You've completed dataset validation! Click the button below to upload your workbook.\r\n                                </Typography>\r\n\r\n                                <Button variant='contained' color='primary' className={classes.submitButton} onClick={this.handleUploadSubmission}>\r\n                                    Submit\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        }\r\n                    </Paper>\r\n                }\r\n                <input\r\n                    onChange={this.handleFileSelect}\r\n                    className={classes.input}\r\n                    accept='.xlsx'\r\n                    id=\"select-file-input\"\r\n                    type=\"file\"\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(ValidationTool)));\r\n\r\n//Undo / redo\r\n// https://www.ag-grid.com/javascript-grid-undo-redo-edits/\r\n\r\n","// Renders data submission guide items\r\n\r\nimport React from 'react';\r\n\r\nimport { withStyles, Typography } from '@material-ui/core';\r\n\r\nconst styles = (theme) => ({\r\n    sectionHeader: {\r\n        margin: '8px 0',\r\n        fontWeight: 100,\r\n        fontFamily: '\"roboto\", Serif', \r\n    },\r\n\r\n    anchor: {\r\n        display: 'block',\r\n        position: 'relative',\r\n        top: '-120px',\r\n        visibility: 'hidden'\r\n    },\r\n});\r\n\r\nconst DSGuideItem = (props) => {\r\n    let { item, classes } = props;\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant='h6' className={classes.sectionHeader} style={{marginTop: '50px'}}>\r\n                {item.label}\r\n                <a className={classes.anchor} id={`data-structure-${item.anchorEnd}`}></a>\r\n            </Typography>\r\n            {item.text.map((text, i) => (\r\n                <Typography key={i}>\r\n                    {text}                           \r\n                </Typography>\r\n            ))}\r\n            <ul>\r\n                {item.bullets.map((bullet, i) => (\r\n                    <li key={i}>{bullet}</li>\r\n                ))}\r\n            </ul>\r\n            {item.images.map((image, i) => (\r\n                <figure key={i} style={{margin: '30px 0 0 0'}}>\r\n                    <a className={classes.anchor} id={image.id}></a>\r\n                    <img\r\n                        src={image.src}\r\n                        alt={image.alt}\r\n                        width='100%'\r\n                        style={{maxwidth: '100%'}}                                            \r\n                    />\r\n                    <figcaption>\r\n                        {image.caption}\r\n                    </figcaption>\r\n                </figure>\r\n            ))\r\n\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(DSGuideItem);","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Typography, ListItem, List, ListItemText, Grid, Paper, Divider, Link, Table, TableRow, TableHead, TableCell, TableBody } from '@material-ui/core';\r\n\r\nimport DSGuideItem from './DSGuideItem';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport dsGuideItems from '../../Utility/DataSubmission/dsGuideItems';\r\n\r\nconst doiProviderList = [\r\n    {link: 'https://zenodo.org/', name: 'Zenodo'},\r\n    {link: 'https://datadryad.org/stash', name: 'Dryad'},\r\n    {link: 'https://figshare.com/', name: 'FigShare'},\r\n    {link: 'https://osf.io/', name: 'Open Science Framework'},\r\n    {link: 'https://dataverse.harvard.edu/', name: 'Harvard Dataverse'},\r\n    {link: 'https://www.nodc.noaa.gov/', name: 'NCEI'},\r\n    {link: 'https://daac.ornl.gov/', name: 'ORNL DAAC'},\r\n    {link: 'https://portal.edirepository.org/nis/home.jsp', name: 'EDI'},\r\n    {link: 'https://www.pangaea.de/', name: 'PANGAEA'},\r\n    {link: 'https://www.seanoe.org/', name: 'SEANOE'},\r\n    {link: 'https://disc.gsfc.nasa.gov/', name: 'NASA Goddard'},\r\n    {link: 'https://nerc.ukri.org/research/sites/data/', name: 'NERC'},\r\n];\r\n\r\nconst NavListItem = ({item, classes}) => (\r\n    <ListItem component='a' href={`#data-structure-${item.anchorEnd}`} className={classes.navListItem}>\r\n        <ListItemText                                                    \r\n            primary={item.label}\r\n            className={classes.subListText}\r\n            classes={{primary: classes.navListSubItemText}}\r\n        />\r\n    </ListItem>\r\n);\r\n\r\nconst styles = (theme) => ({\r\n    stickyPaper: {\r\n        position: '-webkit-sticky',\r\n        maxHeight: 'calc(100vh - 128px)',\r\n        position: 'sticky',\r\n        top: '90px',\r\n        width: '200px',\r\n        marginLeft: '20px',\r\n        paddingLeft: '12px',\r\n        backgroundColor: 'rgba(0,0,0,.4)',\r\n        overflow: 'auto'\r\n    },\r\n\r\n    guideSection: {\r\n        width: '90%',\r\n        // height: '2000px',\r\n        margin: '20px auto 0 auto',\r\n        textAlign: 'left',\r\n        padding: '12px 32px',\r\n        fontFamily: '\"roboto\", Serif',\r\n        maxWidth: '800px',\r\n        backgroundColor: 'rgba(0,0,0,.4)',\r\n        marginBottom: '20px'\r\n    },\r\n\r\n    sectionHeader: {\r\n        margin: '8px 0',\r\n        fontWeight: 100,\r\n        fontFamily: '\"roboto\", Serif', \r\n    },\r\n\r\n    '@media screen and (max-width: 1300px)': {\r\n        stickyPaper: {\r\n          display: 'none',\r\n        },\r\n    },\r\n\r\n    navListItem: {\r\n        color: theme.palette.primary.main,\r\n        padding: '2px 10px 2px 6px'\r\n    },\r\n\r\n    navListItemText: {\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n\r\n    doiListItem: {\r\n        color: theme.palette.primary.main,\r\n        padding: '0 10px 0 6px',\r\n        width: 'max-content'\r\n    },\r\n\r\n    doiListItemText: {\r\n        fontSize: '16px',\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n\r\n    doiListItemtextWrapper: {\r\n        margin: '0'\r\n    },\r\n\r\n    navListItemtextWrapper: {\r\n        margin: '2px 0'\r\n    },\r\n\r\n    subListText: {\r\n        margin: 0,\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n\r\n    anchor: {\r\n        display: 'block',\r\n        position: 'relative',\r\n        top: '-120px',\r\n        visibility: 'hidden'\r\n    },\r\n\r\n    divider: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        marginBottom: '8px'\r\n    },\r\n\r\n    sampleTableRow: {\r\n        border: '1px solid black'\r\n    },\r\n\r\n    navListSubItemText: {\r\n        fontSize: '.785rem'\r\n    },\r\n\r\n    navListSubSubItemText: {\r\n        fontSize: '.7rem'\r\n    }\r\n})\r\n// toggle display from none to block\r\nconst SubmissionGuide = (props) => {\r\n    const { classes } = props;\r\n\r\n    const [ activeSection, setActiveSection ] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        let onThreshold = (entries) => {\r\n            entries.forEach(e => {\r\n                if(e.isIntersecting && e.target.id !== activeSection) setActiveSection(e.target.id);\r\n            })\r\n        }\r\n        let observer = new IntersectionObserver(onThreshold, {threshold: .5});\r\n        [\r\n            document.querySelector('#data-structure-time'),\r\n            document.querySelector('#data-structure-dataset_short_name'),\r\n            document.querySelector('#data-structure-var_short_name')\r\n        ].forEach(e => observer.observe(e));\r\n\r\n        return (() => observer.disconnect());\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container>\r\n                <Grid item xs={2}>\r\n                    <Paper className={classes.stickyPaper} elevation={6}>\r\n                        <List dense={true}>\r\n                            <ListItem component='a' href='#getting-started' className={classes.navListItem}>\r\n                                <ListItemText\r\n                                    primary=\"Getting Started\"\r\n                                    classes={{primary: classes.navListItemText}}\r\n                                    className={classes.navListItemtextWrapper}\r\n                                />\r\n                            </ListItem>\r\n\r\n                            <ListItem component='a' href='#submission-process' className={classes.navListItem}>\r\n                                <ListItemText\r\n                                    primary=\"Submission Process\"\r\n                                    classes={{primary: classes.navListItemText}}\r\n                                    className={classes.navListItemtextWrapper}\r\n                                />\r\n                            </ListItem>\r\n\r\n                            <List dense={true} style={{padding: '0 0 0 12px'}}>\r\n                                <ListItem component='a' href='#validation' className={classes.navListItem}>\r\n                                    <ListItemText\r\n                                        primary=\"Validation\"\r\n                                        className={classes.subListText}\r\n                                        classes={{primary: classes.navListSubItemText}}\r\n                                    />\r\n                                </ListItem>\r\n\r\n                                <ListItem component='a' href='#feedback' className={classes.navListItem}>\r\n                                    <ListItemText\r\n                                        primary=\"Feedback\"\r\n                                        className={classes.subListText}\r\n                                        classes={{primary: classes.navListSubItemText}}\r\n                                    />\r\n                                </ListItem>\r\n\r\n                                <ListItem component='a' href='#doi' className={classes.navListItem}>\r\n                                    <ListItemText\r\n                                        primary=\"DOI\"\r\n                                        className={classes.subListText}\r\n                                        classes={{primary: classes.navListSubItemText}}\r\n                                    />\r\n                                </ListItem>\r\n\r\n                                <ListItem component='a' href='#ingestion' className={classes.navListItem}>\r\n                                    <ListItemText\r\n                                        primary=\"Ingestion\"\r\n                                        className={classes.subListText}\r\n                                        classes={{primary: classes.navListSubItemText}}\r\n                                    />\r\n                                </ListItem>\r\n                            </List>\r\n\r\n                            <ListItem component='a' href='#dashboard' className={classes.navListItem}>\r\n                                <ListItemText\r\n                                    primary=\"User Dashboard\"\r\n                                    classes={{primary: classes.navListItemText}}\r\n                                    className={classes.navListItemtextWrapper}\r\n                                />\r\n                            </ListItem>\r\n\r\n                            <ListItem component='a' href='#data-structure' className={classes.navListItem}>\r\n                                <ListItemText\r\n                                    primary=\"Data Structure\"\r\n                                    classes={{primary: classes.navListItemText}}\r\n                                    className={classes.navListItemtextWrapper}\r\n                                />\r\n                            </ListItem>\r\n\r\n                            <List dense={true} style={{padding: '0 0 0 12px'}}>\r\n                                <ListItem component='a' href='#data-structure-data' className={classes.navListItem}>\r\n                                    <ListItemText\r\n                                        primary=\"Data\"\r\n                                        className={classes.subListText}\r\n                                        classes={{primary: classes.navListSubItemText}}\r\n                                    />\r\n                                </ListItem>\r\n\r\n                                <List dense={true} style={{padding: '0 0 0 12px', display: activeSection === 'data-structure-time' ? 'block' : 'none'}}>\r\n                                    {dsGuideItems.dataItems.map((e, i) => <NavListItem item={e} key={i} classes={classes}/>)}\r\n                                </List>\r\n\r\n                                <ListItem component='a' href='#data-structure-dataset_short_name' className={classes.navListItem}>\r\n                                    <ListItemText\r\n                                        primary=\"Dataset Metadata\"\r\n                                        className={classes.subListText}\r\n                                        classes={{primary: classes.navListSubItemText}}\r\n                                    />\r\n                                </ListItem>\r\n\r\n                                <List dense={true} style={{padding: '0 0 0 12px', display: activeSection === 'data-structure-dataset_short_name' ? 'block' : 'none'}}>\r\n                                    {dsGuideItems.datasetMetadataItems.map((e, i) => <NavListItem item={e} key={i} classes={classes}/>)}\r\n                                </List>\r\n\r\n                                <ListItem component='a' href='#data-structure-variable' className={classes.navListItem}>\r\n                                    <ListItemText\r\n                                        primary=\"Variable Metadata\"\r\n                                        className={classes.subListText}\r\n                                        classes={{primary: classes.navListSubItemText}}\r\n                                    />\r\n                                </ListItem>\r\n\r\n                                <List dense={true} style={{padding: '0 0 0 12px', display: activeSection === 'data-structure-var_short_name' ? 'block' : 'none'}}>\r\n                                    {dsGuideItems.variableMetadataItems.map((e, i) => <NavListItem item={e} key={i} classes={classes}/>)}\r\n                                </List>\r\n\r\n                                <ListItem component='a' href='#data-structure-references' className={classes.navListItem}>\r\n                                    <ListItemText\r\n                                        primary=\"References\"\r\n                                        className={classes.subListText}\r\n                                        classes={{primary: classes.navListSubItemText}}\r\n                                    />\r\n                                </ListItem>\r\n                            </List>\r\n\r\n                            <ListItem component='a' href='#faq' className={classes.navListItem}>\r\n                                <ListItemText\r\n                                    primary=\"FAQ &amp; Help\"\r\n                                    classes={{primary: classes.navListItemText}}\r\n                                    className={classes.navListItemtextWrapper}\r\n                                />\r\n                            </ListItem>\r\n\r\n                            <List dense={true} style={{padding: '0 0 0 12px'}}>\r\n                                <ListItem component='a' href='#faq-doi' className={classes.navListItem}>\r\n                                    <ListItemText\r\n                                        primary=\"DOIs\"\r\n                                        className={classes.subListText}\r\n                                    />\r\n                                </ListItem>\r\n\r\n                                <ListItem component='a' href='#faq-curation' className={classes.navListItem}>\r\n                                    <ListItemText\r\n                                        primary=\"Curation\"\r\n                                        className={classes.subListText}\r\n                                    />\r\n                                </ListItem>\r\n\r\n                                <ListItem component='a' href='#faq-validation-warnings' className={classes.navListItem}>\r\n                                    <ListItemText\r\n                                        primary=\"Validation Warnings\"\r\n                                        className={classes.subListText}\r\n                                    />\r\n                                </ListItem>\r\n                            </List>\r\n\r\n                            <ListItem component='a' href='#contact' className={classes.navListItem}>\r\n                                <ListItemText\r\n                                    primary=\"Contact\"\r\n                                    classes={{primary: classes.navListItemText}}\r\n                                    className={classes.navListItemtextWrapper}\r\n                                />\r\n                            </ListItem>\r\n\r\n                            <ListItem component='a' href='#resources' className={classes.navListItem}>\r\n                                <ListItemText\r\n                                    primary=\"Resources\"\r\n                                    classes={{primary: classes.navListItemText}}\r\n                                    className={classes.navListItemtextWrapper}\r\n                                />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={8}>\r\n                    <Paper className={classes.guideSection} elevation={4}>\r\n                        <Typography variant='h3' className={classes.sectionHeader}>\r\n                            <a className={classes.anchor} id='getting-started'></a>\r\n                            Getting Started\r\n                        </Typography>\r\n\r\n                        <Divider variant='fullWidth' classes={{root: classes.divider}}/>\r\n\r\n                        <Typography>\r\n                            Data submitted to <span style={{fontWeight: 600}}>Simons Collaborative Marine Atlas Project</span> must be precisely formatted to maintain\r\n                            high levels of <em>discoverability</em>, <em>comparability</em>, and <em>database performance</em>. \r\n                        </Typography>\r\n                        \r\n                        <Typography style={{marginTop: '16px'}}>\r\n                            The purpose of the data submission toolset is to provide automatic, immediate feedback to assist you in formatting your \r\n                            submission, facilitate communication with the data curation team, and allow you to track the progress of your submission.\r\n                        </Typography>\r\n\r\n                        <Typography variant='h3' className={classes.sectionHeader} style={{marginTop: '80px'}}>\r\n                            <a className={classes.anchor} id='submission-process'></a>\r\n                            The Submission Process\r\n                        </Typography>\r\n                        <Divider variant='fullWidth' classes={{root: classes.divider}}/>\r\n\r\n                        <Typography>\r\n                            Begin the process by downloading and populating a&nbsp;\r\n                            <Link href='https://github.com/simonscmap/DBIngest/raw/master/template/datasetTemplate.xlsx' download='datasetTemplate.xlsx'>\r\n                                blank xlsx template.\r\n                            </Link>\r\n                            &nbsp;Completed sample templates can be found in the&nbsp;\r\n                            <Link href='#resources'>resources section</Link>.\r\n                            Details on the requirements and structure can be found in the&nbsp;\r\n                            <Link href='#data-structure'>Data Structure</Link> section.\r\n                        </Typography>\r\n\r\n                        <Typography style={{marginTop: '16px'}}>\r\n                            Please note that xlsx workbooks over 150MB <em>cannot be processed</em> using the web submission tools. If you would like to submit\r\n                            a dataset that exceeds this limit please contact the data curation team at <a style={{color:colors.primary, textDecoration: 'none'}} href=\"mailto:cmap-data-submission@uw.edu\">cmap-data-submission@uw.edu</a>.\r\n                        </Typography>\r\n\r\n                        <Typography variant='h5' className={classes.sectionHeader} style={{marginTop: '50px'}}>\r\n                            Validation\r\n                            <a className={classes.anchor} id='validation'></a>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            Load your workbook into the&nbsp;\r\n                            <Link target='_blank' href='/datasubmission/validationtool'>submission tool</Link>\r\n                            &nbsp;to begin validation. The tool will walk you through a step-by-step\r\n                            process to identify and resolve any potential data or format issues.\r\n                            Once the workbook has been validated it will be uploaded to a staging \r\n                            area to be reviewed by our data curation team. From this point you'll be able to track\r\n                            the progress of your submission in the&nbsp;\r\n                            <Link href='#dashboard'>user dashboard</Link>.\r\n                        </Typography>\r\n\r\n                        <Typography variant='h5' className={classes.sectionHeader} style={{marginTop: '50px'}}>\r\n                            Feedback\r\n                            <a className={classes.anchor} id='feedback'></a>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            The data curation team may have suggestions for additional changes to the workbook.\r\n                            Any feedback will be sent to you via email notification, and visible in the&nbsp;\r\n                            <Link href='#dashboard'>user dashboard</Link>.\r\n                        </Typography>\r\n\r\n                        <Typography variant='h5' className={classes.sectionHeader} style={{marginTop: '50px'}}>\r\n                            DOI\r\n                            <a className={classes.anchor} id='doi'></a>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            Once your submission has been approved the data curation team will request a DOI\r\n                            for the data. Information on DOIs can be found in the&nbsp;\r\n                            <Link href='#faq-doi'>\r\n                                DOI Help Section\r\n                            </Link>.\r\n                            The DOI can be submitted using the messaging feature of the <Link href='#dashboard'>user dashboard</Link>.\r\n                        </Typography>\r\n\r\n                        <Typography variant='h5' className={classes.sectionHeader} style={{marginTop: '50px'}}>\r\n                            Ingestion\r\n                            <a className={classes.anchor} id='ingestion'></a>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            Once a DOI has been submitted your data will be ingested into the CMAP database. After ingestion,\r\n                            you'll be able to view your dataset in the <Link href='/catalog' target=\"_blank\">data catalog</Link>, and\r\n                            access it through the CMAP API using any of the CMAP&nbsp;\r\n                            <Link href='https://cmap.readthedocs.io/en/latest/user_guide/API_ref/api_ref.html' target=\"_blank\">software packages</Link>.\r\n                        </Typography>\r\n\r\n                        <Typography variant='h3' className={classes.sectionHeader} style={{marginTop: '80px'}}>\r\n                            <a className={classes.anchor} id='dashboard'></a>\r\n                            User Dashboard\r\n                        </Typography>\r\n                        <Divider variant='fullWidth' classes={{root: classes.divider}}/>\r\n\r\n                        <Typography>\r\n                            In the&nbsp;\r\n                            <Link href='/datasubmission/userdashboard' target=\"_blank\">user dashboard</Link>&nbsp;\r\n                            you can track the ingestion process for any dataset that you've submitted,\r\n                            send messages to the data curation team, and download the most recently submitted version of the workbook.\r\n                            Additionally, in the event that the curation team requests additional changes to your submission you can \r\n                            load the most recent version directly into the validation tool, make any necessary changes, and resubmit.\r\n                        </Typography>\r\n\r\n                        <Typography variant='h3' className={classes.sectionHeader} style={{marginTop: '80px'}}>\r\n                            <a className={classes.anchor} id='data-structure'></a>\r\n                            Data Structure\r\n                        </Typography>\r\n                        <Divider variant='fullWidth' classes={{root: classes.divider}}/>\r\n\r\n                        <Typography>\r\n                            The CMAP data template consists of three sheets: data, dataset metadata, and variable metadata. Data is stored \r\n                            in the first sheet called “data”. Metadata that describes the dataset is entered in the second \r\n                            sheet called “dataset_meta_data”. Metadata associated with the variables in the dataset are entered in the third \r\n                            sheet called “vars_meta_data”. Information must be provided for all columns except those specifically noted as \r\n                            optional. The data and metadata field names (e.g. time, lat, lon, short_name, long_name, ...) used in the template \r\n                            file are based on the CF and COARDS naming conventions [\r\n                                <Link href='#reference-1'>1</Link>,&nbsp;\r\n                                <Link href='#reference-2'>2</Link>,&nbsp;\r\n                                <Link href='#reference-3'>3</Link>\r\n                            ].\r\n                        </Typography>\r\n\r\n                        <Typography variant='h5' className={classes.sectionHeader} style={{marginTop: '50px'}}>\r\n                            Data\r\n                            <a className={classes.anchor} id='data-structure-data'></a>\r\n                        </Typography>\r\n\r\n                        <Table size='small' style={{marginBottom: '12px'}}>\r\n                            <TableHead>\r\n                                <TableRow className={classes.sampleTableRow}>\r\n                                    <TableCell>\r\n                                        time\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        lat\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        lon\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        depth[if exists]\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        var<sub>1</sub>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        ...\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        var<sub>n</sub>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                <TableRow className={classes.sampleTableRow}>\r\n                                    <TableCell>\r\n                                        2016-5-01T15:02:00\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        25\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        -158\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        5\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        value\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        ...\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        value\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n\r\n                        <Typography>\r\n                            All data points are stored in the “Data” sheet. Each data point must have time and location information. The \r\n                            exact name and order of the time and location columns are shown in the table above. If a dataset does not have \r\n                            depth values (e.g., sea surface measurements), you may remove the depth column. If your dataset represents \r\n                            results of a Laboratory study (see dataset_make) fill these fields with the time of study and the location of \r\n                            your laboratory. The columns var<sub>1</sub>...var<sub>n</sub> represent the dataset variables (measurements). Please \r\n                            rename var<sub>1</sub>...var<sub>n</sub> to names appropriate to your data. The format of “time”, “lat”, “lon”, and \r\n                            “depth” columns are described in the following sections. Please review the example datasets listed under&nbsp;\r\n                            <Link href='#resources'>resources</Link> for more detailed information.\r\n                        </Typography>\r\n\r\n                        {dsGuideItems.dataItems.map((e, i) => <DSGuideItem item={e} key={i}/>)}\r\n\r\n                        <Typography variant='h5' className={classes.sectionHeader} style={{marginTop: '50px'}}>\r\n                            Dataset Metadata\r\n                            <a className={classes.anchor} id='data-structure-dataset'></a>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            This sheet holds a list of top-level attributes about the dataset such as the dataset name and description. \r\n                            Below are the list of these attributes along with their descriptions. Please review the example datasets listed \r\n                            under <Link href='#resources'>resources</Link> for more detailed information.\r\n                        </Typography>\r\n\r\n                        {dsGuideItems.datasetMetadataItems.map((e, i) => <DSGuideItem item={e} key={i}/>)}\r\n\r\n                        <Typography variant='h5' className={classes.sectionHeader} style={{marginTop: '50px'}}>\r\n                            Variable Metadata\r\n                            <a className={classes.anchor} id='data-structure-variable'></a>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            A dataset can contain multiple different measurements (variables). This sheet (labeled as \"vars_meta_data\") \r\n                            holds a list of top-level attributes about these variables such as the variable name, unit, and description. \r\n                            Each variable along with its attributes (metadata) is stored in separate rows. Below is the list of these \r\n                            attributes along with their descriptions. Please review the example datasets listed in the&nbsp;\r\n                            <Link href='#resources'>resources</Link> section for more information.\r\n                        </Typography>\r\n\r\n                        {dsGuideItems.variableMetadataItems.map((e, i) => <DSGuideItem item={e} key={i}/>)}\r\n\r\n                        <Typography variant='h5' className={classes.sectionHeader} style={{marginTop: '50px'}}>\r\n                            References\r\n                            <a className={classes.anchor} id='data-structure-references'></a>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            <a className={classes.anchor} id='reference-1'></a>\r\n                            <Link href='http://cfconventions.org/cf-conventions/cf-conventions.html' target='_blank'>\r\n                                NetCDF Climate and Forecast (CF) Metadata Conventions\r\n                            </Link>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            <a className={classes.anchor} id='reference-2'></a>\r\n                            <Link href='https://ferret.pmel.noaa.gov/noaa_coop/coop_cdf_profile.html' target='_blank'>\r\n                                Conventions for the standardization of NetCDF files\r\n                            </Link>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            <a className={classes.anchor} id='reference-3'></a>\r\n                            <Link href='https://ferret.pmel.noaa.gov/Ferret/documentation/coards-netcdf-conventions' target='_blank'>\r\n                                COARDS NetCDF Conventions\r\n                            </Link>\r\n                        </Typography>\r\n\r\n                        <Typography variant='h3' className={classes.sectionHeader} style={{marginTop: '80px'}}>\r\n                            <a className={classes.anchor} id='faq'></a>\r\n                            FAQ &amp; Help\r\n                        </Typography>\r\n                        <Divider variant='fullWidth' classes={{root: classes.divider}}/>\r\n\r\n                        <Typography variant='h5' className={classes.sectionHeader} style={{marginTop: '50px'}}>\r\n                            What is a DOI and how can I get one for my dataset?\r\n                            <a className={classes.anchor} id='faq-doi'></a>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            A <em>DOI</em> or <em>Digital Object Identifier</em> is a digital identifier for a dataset. Some DOI providers, such as Zenodo, \r\n                            allow for dataset version controlling. We require a DOI to be registered for your dataset in the submission process. \r\n                            It allows for users to cite the use of a dataset and properly acknowledge the dataset creators.\r\n                        </Typography>\r\n\r\n                        <Typography style={{marginTop:'24px'}}>\r\n                            Below is a list of entities that may issue and link your dataset to a unique DOI:\r\n                        </Typography>\r\n\r\n                        <List>\r\n                            {\r\n                                doiProviderList.map((e, i) => (\r\n                                    <ListItem target='_blank' component='a' href={e.link} className={classes.doiListItem} key={i}>\r\n                                        <ListItemText\r\n                                            primary={e.name}\r\n                                            classes={{primary: classes.doiListItemText}}\r\n                                            className={classes.doiListItemtextWrapper}\r\n                                        />\r\n                                    </ListItem>\r\n                                ))\r\n                            }\r\n                        </List>\r\n\r\n                        <Typography style={{margin:'18px 0'}}>\r\n                            See the tutorial video below to learn how to obtain a DOI for your dataset using Zenodo.\r\n                        </Typography>\r\n\r\n                        <iframe src=\"https://player.vimeo.com/video/407462463\" width=\"780\" height=\"440\" style={{margin:'0 auto'}}></iframe>\r\n\r\n                        <Typography variant='h5' className={classes.sectionHeader} style={{marginTop: '50px'}}>\r\n                            Isn't this automated? Why do I need to wait for feedback from a curator?\r\n                            <a className={classes.anchor} id='faq-curation'></a>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            The online validator is designed to catch formatting issues, missing information, and fields which don't meet  \r\n                            CMAP's ingestion requirements. Evaluating the accuracy and descriptiveness of metadata \r\n                            requires significant domain knowledge and understanding of the CMAP ecosystem, and are best done by a human.\r\n                        </Typography>\r\n\r\n                        <Typography variant='h5' className={classes.sectionHeader} style={{marginTop: '50px'}}>\r\n                            What should I do about the validation warnings?\r\n                            <a className={classes.anchor} id='faq-curation'></a>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            Validation warnings if present will appear in yellow when you select your workbook in the validation tool, \r\n                            indicating <em>possible</em> errors in your data or metadata such as outliers, columns with mixed data types, or\r\n                            missing cruise information. They should be reviewed carefully, but if you determine they do not need to be corrected\r\n                            they will not prevent you from moving forward with your submission.\r\n                        </Typography>                \r\n\r\n                        <Typography variant='h3' className={classes.sectionHeader} style={{marginTop: '80px'}}>\r\n                            <a className={classes.anchor} id='contact'></a>\r\n                            Contact\r\n                        </Typography>\r\n                        <Divider variant='fullWidth' classes={{root: classes.divider}}/>\r\n\r\n                        <Typography>\r\n                            You can reach the CMAP data curation team at <a style={{color:colors.primary, textDecoration: 'none'}} href=\"mailto:cmap-data-submission@uw.edu\">cmap-data-submission@uw.edu</a>.\r\n                        </Typography>\r\n\r\n                        <Typography variant='h3' className={classes.sectionHeader} style={{marginTop: '80px'}}>\r\n                            <a className={classes.anchor} id='resources'></a>\r\n                            Resources\r\n                        </Typography>\r\n                        <Divider variant='fullWidth' classes={{root: classes.divider}}/>\r\n\r\n                        <Typography>\r\n                            <Link href='https://github.com/simonscmap/DBIngest/raw/master/template/datasetTemplate.xlsx' download='datasetTemplate.xlsx'>\r\n                                Download a Blank xlsx Template\r\n                            </Link>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            <Link href='https://github.com/simonscmap/DBIngest/raw/master/template/KOK1606_Gradients1_Cobalamin_example_2020_07_15.xlsx' download='KOK1606_Gradients1_Cobalamin_Sample.xlsx'>\r\n                                Sample Dataset - KOK1606_Gradients1_Cobalamin\r\n                            </Link>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            <Link href='https://github.com/simonscmap/DBIngest/raw/master/template/amt01_extracted_cholorphyll_2020_07_25.xlsx' download='AMT01_Extracted_Cholorphyll_Sample.xlsx'>\r\n                                Sample Dataset - amt01_extracted_cholorphyll\r\n                            </Link>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            <Link href='https://github.com/simonscmap/DBIngest/raw/master/template/Influx_Stations_Gradients_2016_example_2020_08_13.xlsx' download='Influx_Stations_Gradients_2016_example.xlsx'>\r\n                                Sample Dataset - Influx_Stations_Gradients_2016\r\n                            </Link>\r\n                        </Typography>\r\n\r\n                        <Typography>\r\n                            <Link href='https://github.com/simonscmap/DBIngest/raw/master/template/SCOPE_HOT224-238_omics_cmap_example_2020_08_13.xlsx' download='SCOPE_HOT224-238_omics_cmap_example_2020_08_13.xlsx'>\r\n                                Sample Dataset - SCOPE_HOT224-238_omics\r\n                            </Link>\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(SubmissionGuide);","// Comment component used in user and admin dashboard\r\n\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    commentArea: {\r\n        backgroundColor: 'rgba(0,0,0,.2)',\r\n        width: '70vw',\r\n        margin: \"0 auto\",\r\n        padding: '12px 16px',\r\n        textAlign: 'left',\r\n        whiteSpace: 'pre-wrap',\r\n        overflow: 'auto'\r\n    },\r\n\r\n    commenterAndDateTime: {\r\n        marginTop: '16px',\r\n        width: 'calc(70vw + 32px)',\r\n        padding: '4px 0',\r\n        margin: '0 auto',\r\n        textAlign: 'left',\r\n        color: theme.palette.primary.main,\r\n        fontSize: 12\r\n    },\r\n});\r\n\r\nconst Comment = (props) => {\r\n    const { classes } = props;\r\n    const { Comment, Commenter, Comment_Date_Time } = props.comment;\r\n    \r\n    let dateTime = new Date(Comment_Date_Time).toLocaleString();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.commenterAndDateTime}>\r\n                {Commenter} at {dateTime}\r\n            </div>\r\n\r\n            <div className={classes.commentArea}>              \r\n                {Comment}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Comment);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { AccordionDetails, TextField, Button, Typography, Link, Step, StepLabel, Stepper } from '@material-ui/core';\r\n\r\nimport { retrieveSubmissionCommentHistory, addSubmissionComment, downloadMostRecentFile } from '../../Redux/actions/dataSubmission';\r\n\r\nimport Comment from './Comment';\r\n\r\nimport states from '../../Enums/asyncRequestStates';\r\n\r\nconst styles = (theme) => ({\r\n    panelDetails: {\r\n        display: 'block',\r\n        textAlign: 'left'\r\n    },\r\n\r\n    newCommentDiv: {\r\n        width: '70vw',\r\n        margin: '24px auto 0px auto'\r\n    },\r\n\r\n    newCommentTextField: {\r\n        flexBasis: 'calc(70vw - 200px)',\r\n        marginRight: '16px'\r\n    },\r\n\r\n    postButton: {\r\n        color: 'white',\r\n        marginTop: '16px',\r\n        textTransform: 'none'\r\n    },\r\n\r\n    setPhaseButton: {\r\n        color: 'white',\r\n        marginLeft: '12px'\r\n    },\r\n\r\n    stepper: {\r\n        borderRadius: '4px',\r\n        margin: '16px 2vw 24px 2vw'\r\n    },\r\n\r\n    newUpload: {\r\n        marginLeft: '2vw',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    labelTimeStamp: {\r\n        opacity: .9,\r\n        fontSize: '11px',\r\n        display: 'block'\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    submissionCommentHistoryRetrievalState: state.submissionCommentHistoryRetrievalState,\r\n    submissionComments: state.submissionComments\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    retrieveSubmissionCommentHistory,\r\n    addSubmissionComment,\r\n    downloadMostRecentFile\r\n};\r\n\r\nconst steps = [\r\n    {\r\n        label: 'Submission',\r\n        timeStampKey: 'Start_Date_Time'\r\n    },\r\n\r\n    {\r\n        label: 'Admin Review and Feedback',\r\n        timeStampKey: 'QC1_Completion_Date_Time'\r\n    },\r\n\r\n    {\r\n        label: 'Secondary Admin Review',\r\n        timeStampKey: 'QC2_Completion_Date_Time'\r\n    },\r\n\r\n    {\r\n        label: 'DOI',\r\n        timeStampKey: 'DOI_Accepted_Date_Time'\r\n    },\r\n\r\n    {\r\n        label: 'Ingestion',\r\n        timeStampKey: 'Ingestion_Date_Time'\r\n    }\r\n]\r\n\r\nconst UserDashboardPanelDetails = (props) => {\r\n    const { classes, submission } = props;\r\n\r\n    const [ comment, setComment ] = React.useState();\r\n\r\n    let comments = props.submissionComments[submission.Submission_ID];\r\n    let renderComments = Boolean(comments && comments.length);\r\n\r\n    let activeStep;\r\n\r\n    switch(submission.Phase){\r\n        case 'Awaiting admin action':\r\n            activeStep = 1;\r\n            break;\r\n\r\n        case 'Awaiting user update':\r\n            activeStep = 1;\r\n            break;\r\n\r\n        case 'Awaiting QC2':\r\n            activeStep = 2;\r\n            break;\r\n\r\n        case 'Awaiting DOI':\r\n            activeStep = 3;\r\n            break;\r\n\r\n        case 'Awaiting ingestion':\r\n            activeStep = 4;\r\n            break;\r\n\r\n        case 'Complete':\r\n            activeStep = 6;\r\n            break;\r\n\r\n        default:\r\n            activeStep = 1;        \r\n    }\r\n\r\n    useEffect(() => {\r\n        props.retrieveSubmissionCommentHistory(submission.Submission_ID);\r\n    }, []);\r\n\r\n    // control this input from redux so we can reset properly, also create connected \"NewComment\" component\r\n    const handlePostComment = () => {\r\n        props.addSubmissionComment(submission.Submission_ID, comment, 'user');\r\n        setComment('');\r\n    }\r\n    \r\n    return (\r\n        <AccordionDetails className={classes.panelDetails}>\r\n            <Stepper \r\n                className={classes.stepper} \r\n                alternativeLabel \r\n                activeStep={activeStep}\r\n            >\r\n                {steps.map((item, i) => {\r\n                        return (\r\n                            <Step key={i}>\r\n                                <StepLabel>\r\n                                    {item.label}\r\n                                    <span className={classes.labelTimeStamp}>{submission[item.timeStampKey] && activeStep > i ? submission[item.timeStampKey].slice(0, 10) : ''}</span>\r\n                                </StepLabel>\r\n                            </Step>\r\n                        )\r\n                    })} \r\n            </Stepper>\r\n\r\n            <Typography className={classes.newUpload}>\r\n                <Link component={RouterLink} to={`/datasubmission/validationtool?submissionID=${encodeURIComponent(submission.Submission_ID)}`}>Update</Link> this submission.\r\n            </Typography>\r\n\r\n            <Typography className={classes.newUpload}>\r\n                <Link component='span' onClick={() => props.downloadMostRecentFile(submission.Submission_ID)}>Download</Link> the most recent version.\r\n            </Typography>\r\n\r\n            {\r\n                props.submissionCommentHistoryRetrievalState === states.inProgress ?\r\n                'Loading Comments.....' : \r\n\r\n                <React.Fragment>\r\n                    {\r\n                        renderComments && comments.map((e,i) => (\r\n                            <Comment comment={e} key={i}/>\r\n                        ))\r\n                    }\r\n                </React.Fragment>\r\n            }\r\n            <div className={classes.newCommentDiv}>\r\n                <TextField\r\n                    multiline\r\n                    rows={4}\r\n                    variant='outlined'\r\n                    onChange={(e) => setComment(e.target.value)}\r\n                    value={comment}\r\n                    fullWidth\r\n                />\r\n\r\n                <Button \r\n                    variant='contained' \r\n                    color='primary' \r\n                    className={classes.postButton}\r\n                    onClick={handlePostComment}\r\n                >\r\n                    Post Message\r\n                </Button>\r\n            </div>\r\n        </AccordionDetails>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UserDashboardPanelDetails));","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from \"react-router\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nimport { Link, Accordion, AccordionSummary, Typography } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport { retrieveDataSubmissionsByUser } from '../../Redux/actions/dataSubmission';\r\n\r\nimport UserDashboardPanelDetails from './UserDashboardPanelDetails';\r\nimport LoginRequiredPrompt from '../User/LoginRequiredPrompt';\r\n\r\n// import colors from '../../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n    dataSubmissions: state.dataSubmissions\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrieveDataSubmissionsByUser\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapperDiv: {\r\n        width: '90vw',\r\n        margin: '24px auto'\r\n    },\r\n\r\n    panelSummaryText: {\r\n        flexBasis: '40%',\r\n        textAlign: 'left',\r\n        paddingRight: '20px',\r\n        fontSize: '.8rem'\r\n    },\r\n\r\n    needHelp: {\r\n        float: 'left',\r\n        color: 'white',\r\n        margin: '12px 0 0 12px',\r\n        letterSpacing: 'normal'\r\n    },\r\n\r\n})\r\n\r\nclass UserDashboard extends React.Component {\r\n    state = {\r\n        expandedPanel: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.retrieveDataSubmissionsByUser();\r\n\r\n        let params = new URLSearchParams(window.location.search)\r\n        let submissionID = params.get('submissionID');\r\n        let datasetName = params.get('datasetName');\r\n\r\n        if(submissionID){\r\n            this.props.dataSubmissions.forEach((e, i) => {\r\n                if(submissionID == e.Submission_ID){\r\n                    this.setState({...this.state, expandedPanel: i});\r\n                }\r\n            })\r\n        }\r\n\r\n        if(datasetName){\r\n            this.props.dataSubmissions.forEach((e, i) => {\r\n                if(datasetName.trim() == e.Dataset.trim()){\r\n                    this.setState({...this.state, expandedPanel: i});\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if(!prevProps.user && this.props.user){\r\n            this.props.retrieveDataSubmissionsByUser();\r\n        }\r\n    }\r\n\r\n    handleExpansion = (i) => {\r\n        this.props.history.push({ pathname: '/datasubmission/userdashboard', query: {} });\r\n        if(this.state.expandedPanel === i){\r\n            this.setState({...this.state, expandedPanel: false});\r\n        }\r\n\r\n        else {\r\n            this.setState({...this.state, expandedPanel: i});\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        if(!this.props.user) return <LoginRequiredPrompt/>    \r\n        const { classes, dataSubmissions } = this.props;\r\n        const { expandedPanel } = this.state;\r\n\r\n        return (\r\n            <div className={classes.wrapperDiv}>\r\n            {dataSubmissions && dataSubmissions.length ?\r\n\r\n            <React.Fragment>                    \r\n                {\r\n                    dataSubmissions.map((e, i) => (\r\n                        <Accordion \r\n                            expanded={expandedPanel === i}\r\n                            onChange={() => this.handleExpansion(i)} \r\n                            key={i}\r\n                            TransitionProps={{ unmountOnExit: true }}\r\n                        >\r\n                            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                                \r\n                                <Typography noWrap className={classes.panelSummaryText}>\r\n                                    {e.Dataset}\r\n                                </Typography>\r\n\r\n                                <Typography noWrap className={classes.panelSummaryText}>\r\n                                    {e.Phase}\r\n                                </Typography>\r\n                            </AccordionSummary>\r\n\r\n                            <UserDashboardPanelDetails \r\n                                submission={e} \r\n                            />\r\n                        </Accordion>\r\n                    ))\r\n                }\r\n            </React.Fragment>\r\n                \r\n                :\r\n\r\n                <Typography className={classes.needHelp}>\r\n                    We haven't received any submissions from you yet. Need help? \r\n                    <Link \r\n                        href='https://github.com/simonscmap/DBIngest/raw/master/template/datasetTemplate.xlsx' \r\n                        download='datasetTemplate.xlsx' \r\n                        className={classes.needHelpLink}\r\n                    >\r\n                        &nbsp;Download\r\n                    </Link>\r\n                    &nbsp;a blank template, or view the <Link className={classes.needHelpLink} component={RouterLink} to='/datasubmission/guide'>Data Submission Guide</Link>.\r\n                </Typography>\r\n            }\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(UserDashboard)));","// Individual data submission. \r\n\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { FormHelperText, AccordionDetails, TextField, Button, Select, MenuItem, Typography, Link } from '@material-ui/core';\r\n\r\nimport { retrieveSubmissionCommentHistory, addSubmissionComment, setSubmissionPhase, downloadMostRecentFile } from '../../Redux/actions/dataSubmission';\r\n\r\nimport Comment from './Comment';\r\n\r\nimport states from '../../Enums/asyncRequestStates';\r\n\r\nconst styles = (theme) => ({\r\n    panelDetails: {\r\n        display: 'block'\r\n    },\r\n\r\n    newCommentDiv: {\r\n        width: '70vw',\r\n        margin: '24px auto 0px auto'\r\n    },\r\n\r\n    newCommentTextField: {\r\n        flexBasis: 'calc(70vw - 200px)',\r\n        marginRight: '16px'\r\n    },\r\n\r\n    postButton: {\r\n        color: 'white',\r\n        marginTop: '16px',\r\n        textTransform: 'none'\r\n    },\r\n\r\n    setPhaseButton: {\r\n        color: 'white',\r\n        marginLeft: '12px',\r\n        textTransform: 'none'\r\n    },\r\n\r\n    deleteButton: {\r\n        display: 'block',\r\n        textTransform: 'none',\r\n        color: 'white',\r\n        marginTop: '28px'\r\n    },\r\n\r\n    phaseControlWrapper: {\r\n        textAlign: 'left',\r\n        margin: '12px 0 32px 0'\r\n    },\r\n\r\n    phaseSelect: {\r\n        width: '190px'\r\n    },\r\n\r\n    newUpload: {\r\n        marginBottom: '2vw',\r\n        cursor: 'pointer',\r\n        textAlign: 'left'\r\n    },\r\n\r\n    helperText: {\r\n        color: 'rgba(255, 255, 255, .6)',\r\n        marginTop: '-1px !important'\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    submissionCommentHistoryRetrievalState: state.submissionCommentHistoryRetrievalState,\r\n    submissionComments: state.submissionComments\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    retrieveSubmissionCommentHistory,\r\n    addSubmissionComment,\r\n    setSubmissionPhase,\r\n    downloadMostRecentFile\r\n};\r\n\r\nconst AdminDashboardPanelDetails = (props) => {\r\n    const { classes, submission, setSubmissionPhase } = props;\r\n\r\n    const [ comment, setComment ] = React.useState();\r\n    const [ phase, setPhase ] = React.useState(submission.Phase_ID);\r\n\r\n    let comments = props.submissionComments[submission.Submission_ID];\r\n    let renderComments = Boolean(comments && comments.length);\r\n\r\n    useEffect(() => {\r\n        props.retrieveSubmissionCommentHistory(submission.Submission_ID);\r\n    }, []);\r\n\r\n    const handlePostComment = () => {\r\n        props.addSubmissionComment(submission.Submission_ID, comment, 'admin');\r\n        setComment('');\r\n    }\r\n    \r\n    const handlePhaseChange = (e) => {\r\n        setPhase(e.target.value);\r\n    }\r\n\r\n    const handleCommitPhase = () => {\r\n        setSubmissionPhase(submission.Submission_ID, phase);\r\n    }\r\n    \r\n    return (\r\n        <AccordionDetails className={classes.panelDetails}>\r\n            <Typography className={classes.newUpload}>\r\n                <Link component='span' onClick={() => props.downloadMostRecentFile(submission.Submission_ID)}>Download</Link> the most recent version.\r\n            </Typography>\r\n\r\n            <div className={classes.phaseControlWrapper}>\r\n                <Select value={phase} onChange={handlePhaseChange} className={classes.phaseSelect} >\r\n                    <MenuItem value={2}>Awaiting admin action</MenuItem>\r\n                    <MenuItem value={3}>Awaiting user update</MenuItem>\r\n                    <MenuItem value={7}>Awaiting QC2</MenuItem>\r\n                    <MenuItem value={4}>Awaiting DOI</MenuItem>\r\n                    <MenuItem value={5}>Awaiting ingestion</MenuItem>\r\n                    <MenuItem value={6}>Complete</MenuItem>\r\n                </Select>               \r\n\r\n                <Button\r\n                    variant='contained' \r\n                    color='primary' \r\n                    onClick={handleCommitPhase}\r\n                    className={classes.setPhaseButton}\r\n                    disabled={Boolean(phase === submission.Phase_ID)}\r\n                >\r\n                    Set Phase\r\n                </Button>\r\n\r\n                <FormHelperText className={classes.helperText}>Update Submission Phase</FormHelperText>\r\n\r\n                <Button\r\n                    variant='contained' \r\n                    color='primary' \r\n                    onClick={() => props.handleSelectDeleteTarget(submission)}\r\n                    className={classes.deleteButton}\r\n                >\r\n                    Delete This Submission\r\n                </Button>\r\n            </div>\r\n\r\n            {\r\n                props.submissionCommentHistoryRetrievalState === states.inProgress ?\r\n                'Loading Comments.....' : \r\n\r\n                <React.Fragment>\r\n                    {\r\n                        renderComments && comments.map((e,i) => (\r\n                            <Comment comment={e} key={i}/>\r\n                        ))\r\n                    }\r\n                </React.Fragment>\r\n            }\r\n            <div className={classes.newCommentDiv}>\r\n                <TextField\r\n                    multiline\r\n                    rows={4}\r\n                    variant='outlined'\r\n                    onChange={(e) => setComment(e.target.value)}\r\n                    value={comment}\r\n                    fullWidth\r\n                />\r\n\r\n                <Button \r\n                    variant='contained' \r\n                    color='primary' \r\n                    className={classes.postButton}\r\n                    onClick={handlePostComment}\r\n                >\r\n                    Post Message\r\n                </Button>\r\n            </div>\r\n        </AccordionDetails>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AdminDashboardPanelDetails));","// Admininstrator dashboard for data submission.\r\n\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Search } from '@material-ui/icons';\r\n\r\nimport * as JsSearch from 'js-search';\r\nimport queryString from 'query-string';\r\n\r\nimport { Button, Dialog, DialogContent, DialogActions,DialogTitle, Accordion, AccordionSummary, Typography, FormGroup, FormControlLabel, Checkbox, TextField, InputAdornment, Tooltip } from '@material-ui/core';\r\nimport { ExpandMore, Delete } from '@material-ui/icons';\r\n\r\nimport AdminDashboardPanelDetails from './AdminDashboardPanelDetails';\r\n\r\nimport { retrieveAllSubmissions, dataSubmissionDelete } from '../../Redux/actions/dataSubmission';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport z from '../../Enums/zIndex';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n    dataSubmissions: state.dataSubmissions\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrieveAllSubmissions,\r\n    dataSubmissionDelete\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapperDiv: {\r\n        width: '96vw',\r\n        margin: '24px auto'\r\n    },\r\n\r\n    panelSummaryText: {\r\n        textAlign: 'left',\r\n        paddingRight: '20px',\r\n        fontSize: '.8rem'\r\n    },\r\n\r\n    filterFormGroup: {\r\n        backgroundColor: 'rgba(0,0,0,.4)',\r\n        color: 'white',\r\n        padding: '8px 12px',\r\n        borderTopLeftRadius: '4px',\r\n        borderTopRightRadius: '4px',\r\n        flexWrap: 'wrap'\r\n    },\r\n\r\n    filterFormControl: {\r\n        marginRight: '24px'\r\n    },\r\n\r\n    searchFieldWrapper: {\r\n        flexBasis: '100%',\r\n        textAlign: 'left'\r\n    },\r\n\r\n    preserveBackgroundWhenDisabled: {\r\n        backgroundColor: 'rgba(0,0,0,.3) !important'\r\n    },\r\n\r\n    dialogRoot: {\r\n        zIndex: `${z.HELP_DIALOG} !important`,\r\n    },\r\n\r\n    dialogPaper: {\r\n        backgroundColor: colors.solidPaper\r\n    },\r\n\r\n    button: {\r\n        textTransform: 'none',\r\n        color: 'white'\r\n    },\r\n\r\n\r\n})\r\n\r\nconst initialFilterState = {\r\n    'Awaiting admin action': true,\r\n    'Awaiting QC2': true,\r\n    'Awaiting user update': true,\r\n    'Awaiting DOI': true,\r\n    'Awaiting ingestion': true,\r\n    'Complete': false\r\n};\r\n\r\nclass AdminDashboard extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let params = queryString.parse(this.props.location.search);\r\n        let paramsIncludeFilterStates = Object.keys(params).some(e => initialFilterState[e] !== undefined);\r\n\r\n        var search = new JsSearch.Search('Submission_ID');\r\n        search.indexStrategy = new JsSearch.AllSubstringsIndexStrategy()\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Dataset');\r\n        search.addIndex('Name');\r\n        search.addIndex('Dataset_Long_Name');\r\n\r\n        if(props.dataSubmissions) search.addDocuments(props.dataSubmissions);\r\n\r\n        let filters = Object.fromEntries(Object.keys(initialFilterState).map(e => [e, paramsIncludeFilterStates ? params[e] === 'true' : initialFilterState[e]]));\r\n\r\n        this.state = {\r\n            searchString: params.datasetName || '',\r\n            search,\r\n            expandedPanel: false,\r\n            filters,\r\n            modifiedDatasetID: null,\r\n            deleteTarget: null\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.dataSubmissions && prevProps.dataSubmissions.length) && (this.props.dataSubmissions && this.props.dataSubmissions.length)){\r\n            this.state.search.addDocuments(this.props.dataSubmissions);\r\n            this.setState({search: this.state.search});\r\n        }\r\n\r\n        if(!prevProps.user && this.props.user) this.props.retrieveAllSubmissions();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.retrieveAllSubmissions();\r\n    }\r\n\r\n    handleExpansion = (i) => {\r\n        if(this.state.expandedPanel === i){\r\n            this.setState({...this.state, expandedPanel: false})\r\n        }\r\n\r\n        else {\r\n            this.setState({...this.state, expandedPanel: i})\r\n        }\r\n    }\r\n\r\n    handleChangeFilter = (e) => {\r\n        let newFilterState = {...this.state.filters};\r\n        newFilterState[e.target.name] = !newFilterState[e.target.name];\r\n\r\n        this.setState({...this.state, filters: {...newFilterState}});\r\n        this.props.history.push(`/datasubmission/admindashboard?${queryString.stringify(newFilterState)}`);\r\n    }\r\n\r\n    handleChangeSearchString = (e) => {\r\n        this.setState({...this.state, searchString: e.target.value});\r\n    }\r\n\r\n    handleResetExpandedPanel = () => {\r\n        this.setState({...this.state, expandedPanel: false});\r\n    }\r\n\r\n    handleSelectDeleteTarget = (submissionID) => {\r\n        this.setState({...this.state, deleteTarget: submissionID})\r\n    }\r\n\r\n    handleCloseDeleteDialog = () => {\r\n        this.setState({...this.state, deleteTarget: null});\r\n    }\r\n\r\n    handleConfirmDelete = () => {\r\n        this.props.dataSubmissionDelete(this.state.deleteTarget);\r\n        this.setState({...this.state, deleteTarget: null, expandedPanel: false});\r\n    }\r\n\r\n    render = () => {\r\n        const { classes, dataSubmissions } = this.props;\r\n        const { search, searchString, deleteTarget } = this.state;\r\n        \r\n        let submissions = searchString ? \r\n            search.search(searchString).filter(item => this.state.filters[item.Phase]) :\r\n            dataSubmissions.filter(item => this.state.filters[item.Phase]);\r\n\r\n        return (\r\n            <div className={classes.wrapperDiv}>\r\n\r\n                <Dialog \r\n                    onClose={this.handleCloseDeleteDialog} \r\n                    open={Boolean(deleteTarget)}\r\n                    PaperProps={{\r\n                        className: classes.dialogPaper\r\n                    }}\r\n                    classes={{\r\n                        root: classes.dialogRoot\r\n                    }}\r\n                >\r\n                    <DialogTitle>Deleting {deleteTarget ? deleteTarget.Dataset : ''}</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        This action will permanently delete all database records of this submission including references to all uploaded versions, and comments. Workbooks in dropbox\r\n                        will not be affected.\r\n                    </DialogContent>\r\n                        \r\n                    <DialogActions>\r\n                        <Button\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            variant='outlined'\r\n                            onClick={this.handleCloseDeleteDialog}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            startIcon={<Delete/>}\r\n                            className={classes.button}\r\n                            onClick={this.handleConfirmDelete}\r\n                        >\r\n                            Confirm Delete {deleteTarget ? deleteTarget.Dataset : ''} Forever\r\n                        </Button>\r\n\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <FormGroup row className={classes.filterFormGroup}>\r\n                    <div className={classes.searchFieldWrapper}>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            value={searchString}\r\n                            onChange={this.handleChangeSearchString}\r\n                            placeholder='Search'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Search style={{color:colors.primary}}/>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        Object.keys(initialFilterState).map(e => (\r\n                            <FormControlLabel\r\n                            key={e}\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={this.state.filters[e]}\r\n                                    onChange={this.handleChangeFilter}\r\n                                    name={e}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label={e}\r\n                            className={classes.filterFormControl}\r\n                        />\r\n                        ))\r\n                    }\r\n                      \r\n                    </FormGroup>\r\n\r\n                {submissions && submissions.length ?\r\n\r\n                <React.Fragment>\r\n                    <Accordion\r\n                        disabled={true}\r\n                        classes={{\r\n                            disabled: classes.preserveBackgroundWhenDisabled\r\n                        }}\r\n                    >\r\n                        <AccordionSummary expandIcon={<ExpandMore/>}>\r\n                            <Typography noWrap className={classes.panelSummaryText} style={{flexBasis:'23%'}}>\r\n                                Dataset Long Name\r\n                            </Typography>\r\n\r\n                            <Typography noWrap className={classes.panelSummaryText} style={{flexBasis:'15%'}}>\r\n                                Dataset Short Name\r\n                            </Typography>\r\n\r\n                            <Typography noWrap className={classes.panelSummaryText} style={{flexBasis:'15%'}}>\r\n                                Data Source\r\n                            </Typography>\r\n\r\n                            <Typography noWrap className={classes.panelSummaryText} style={{flexBasis:'15%'}}>\r\n                                Submitter Name\r\n                            </Typography>\r\n\r\n                            <Typography noWrap className={classes.panelSummaryText} style={{flexBasis:'12%'}}>\r\n                                Submission Phase\r\n                            </Typography>\r\n\r\n                            <Typography noWrap className={classes.panelSummaryText} style={{flexBasis:'10%'}}>\r\n                                Date of Submission\r\n                            </Typography>\r\n\r\n                            <Typography noWrap className={classes.panelSummaryText} style={{flexBasis:'10%'}}>\r\n                                Date of Ingestion\r\n                            </Typography>\r\n                        </AccordionSummary>\r\n                    </Accordion>                  \r\n                    {\r\n                        submissions.map((e, i) => (\r\n                            <Accordion \r\n                                expanded={this.state.expandedPanel === e.Submission_ID}\r\n                                onChange={() => this.handleExpansion(e.Submission_ID)} \r\n                                key={i}\r\n                                TransitionProps={{ unmountOnExit: true }}\r\n                            >\r\n                                <AccordionSummary expandIcon={<ExpandMore/>}>\r\n                                    <Tooltip title={e.Dataset_Long_Name} enterDelay={500}>\r\n                                        <Typography noWrap className={classes.panelSummaryText} style={{flexBasis:'23%'}}>\r\n                                            {e.Dataset_Long_Name}\r\n                                        </Typography>\r\n                                    </Tooltip>\r\n\r\n                                    <Tooltip title={e.Dataset} enterDelay={500}>\r\n                                        <Typography noWrap className={classes.panelSummaryText} style={{flexBasis:'15%'}}>\r\n                                            {e.Dataset}\r\n                                        </Typography>\r\n                                    </Tooltip>\r\n\r\n                                    <Tooltip title={e.Data_Source} enterDelay={500}>\r\n                                        <Typography noWrap className={classes.panelSummaryText} style={{flexBasis:'15%'}}>\r\n                                            {e.Data_Source}\r\n                                        </Typography>\r\n                                    </Tooltip>\r\n\r\n                                    <Tooltip title={e.Name} enterDelay={500}>\r\n                                        <Typography noWrap className={classes.panelSummaryText} style={{flexBasis:'15%'}}>\r\n                                            {e.Name}\r\n                                        </Typography>\r\n                                    </Tooltip>\r\n    \r\n                                    <Typography noWrap className={classes.panelSummaryText} style={{flexBasis:'12%'}}>\r\n                                        {e.Phase}\r\n                                    </Typography>\r\n\r\n                                    <Typography noWrap className={classes.panelSummaryText} style={{flexBasis:'10%'}}>\r\n                                        {e.Start_Date_Time.slice(0,10)}\r\n                                    </Typography>\r\n\r\n                                    <Typography noWrap className={classes.panelSummaryText} style={{flexBasis:'10%'}}>\r\n                                        {e.Ingestion_Date_Time ? e.Ingestion_Date_Time.slice(0,10) : 'NA'}\r\n                                    </Typography>\r\n\r\n                                </AccordionSummary>\r\n                                \r\n                                <AdminDashboardPanelDetails \r\n                                    submission={e} \r\n                                    handleResetExpandedPanel={this.handleResetExpandedPanel}\r\n                                    handleSelectDeleteTarget={this.handleSelectDeleteTarget}\r\n                                />\r\n                            </Accordion>\r\n                        ))\r\n                    }\r\n                </React.Fragment>\r\n                    \r\n                    :\r\n\r\n                    <Typography>\r\n                        No submissions yet...\r\n                    </Typography>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(AdminDashboard)));","// Subrouter for Data Submission components\r\n\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { snackbarOpen } from '../../Redux/actions/ui';\r\n\r\nimport ValidationTool from './ValidationTool';\r\nimport SubmissionGuide from './SubmissionGuide';\r\nimport UserDashboard from './UserDashboard';\r\nimport AdminDashboard from './AdminDashboard';\r\n\r\nimport metaTags from '../../Enums/metaTags';\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        paddingTop: '70px'\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarOpen\r\n}\r\n\r\nconst DataSubmission = (props) => {\r\n    const { classes, match, user } = props;\r\n\r\n    useEffect(() => {\r\n        document.title = metaTags.dataSubmission.title;\r\n        document.description = metaTags.dataSubmission.description;\r\n\r\n        return () => {\r\n            document.title = metaTags.default.title;\r\n            document.title = metaTags.default.description;\r\n        }\r\n    })\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n        <Switch>\r\n            <Route exact path={match.url + '/'} component={ SubmissionGuide } />\r\n            <Route exact path={match.url + '/guide'} component={ SubmissionGuide } />\r\n            <Route exact path={match.url + '/validationtool'} component={ ValidationTool } />\r\n            <Route exact path={match.url + '/userdashboard'} component={ UserDashboard } />\r\n            <Route exact path={match.url + '/admindashboard'} component={ AdminDashboard } /> \r\n        </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataSubmission));"],"sourceRoot":""}