{"version":3,"sources":["Enums/metaTags.js","Components/UI/MultiCheckboxDropdown.js","Components/Catalog/SearchResults.js","Components/Catalog/CatalogSearch.js","Components/Catalog/Catalog.js"],"names":["metaTags","default","title","description","visualization","catalog","dataSubmission","community","withStyles","theme","menuOpenIcon","color","colors","primary","margin","formGroupWrapper","textAlign","paddingLeft","multiSelectHeader","fontSize","formControlLabelRoot","height","formControlLabelLabel","checkboxGroupHeader","backgroundColor","greenHover","cursor","boxShadow","marginTop","props","classes","selectedOptions","handleClear","options","parentStateKey","handleClickCheckbox","groupHeaderLabel","React","useState","open","setOpen","item","xs","container","alignItems","className","onClick","size","cs","justify","style","marginRight","component","map","e","i","key","control","onChange","checkbox","name","checked","has","label","root","mapDispatchToProps","searchResultsFetch","searchResultsStore","searchResultsSetLoadingState","SearchResultStatusIndicator","connect","state","ownProps","searchResults","searchResultsLoadingState","resultsCount","display","states","inProgress","length","wrapperDiv","padding","boxSizing","overflow","breakpoints","down","resultsWrapper","width","maxWidth","downloadWrapper","borderRadius","downloadIcon","marginBottom","helpButton","helpIcon","withRouter","useEffect","location","search","itemCount","elevation","justifyContent","paddingRight","csv","stringify","header","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","setAttribute","body","appendChild","click","removeChild","handleDownloadSearchResults","buttonClass","iconClass","content","itemData","innerHeight","itemSize","index","dataset","submissionOptionsRetrieval","defaultState","keywords","hasDepth","timeStart","timeEnd","Date","toISOString","slice","latStart","latEnd","lonStart","lonEnd","sensor","Set","make","region","CatalogSearch","showAdditionalFilters","helpDialogOpen","componentDidMount","params","queryString","parse","forEach","s","newState","join","setState","handleToggleshowAdditionalFilters","handleChangeSearchValue","altTypeValue","target","value","qstring","split","Array","from","pushHistory","column","newSet","add","delete","handleResetSearch","history","push","handleClearMultiSelect","statePiece","_pushHistory","debounce","render","submissionOptions","Paper","searchPaper","Grid","TextField","autoFocus","placeholder","InputProps","startAdornment","Fragment","InputAdornment","position","Search","variant","fullWidth","MultiCheckboxDropdown","Make","Sensor","Region","showAdditionalFiltersWrapper","Link","searchPanelRow","Typography","searchSectionHeader","formControl","id","InputLabelProps","shrink","inputProps","min","max","FormControl","FormHelperText","Select","MenuItem","Button","resetButton","Component","maxHeight","textTransform","palette","main","borderColor","searchGrid","paddingTop","md","SearchResults"],"mappings":"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","file":"static/js/14.f2470c20.chunk.js","sourcesContent":["const metaTags = {\r\n    default: {\r\n        title: 'Simons Collaborative Marine Ocean Atlas',\r\n        description: \"Simons Collaborative Marine Atlas Project is an open-source data portal interconnecting data sets across Oceanography disciplines. It enables scientists and the public to dive into the vast and often underutilized ocean datasets to retrieve custom subsets of data.\",\r\n    },\r\n\r\n    visualization: {\r\n        title: 'CMAP Data Visualization',\r\n        description: 'Generate scatter plots, heatmaps, cruise routes, and more using oceanographic data from from CMAP datasets.'\r\n    },\r\n\r\n    catalog: {\r\n        title: 'CMAP Catalog',\r\n        description: 'Search for oceanographic datasets in the CMAP database using keywords, or temporal or spatial coverage.'\r\n    },\r\n\r\n    dataSubmission: {\r\n        title: 'CMAP Data Submission',\r\n        description: 'Validate and submit your dataset. Track the progress of your previous submissions.'\r\n    },\r\n\r\n    community: {\r\n        title: 'CMAP Community',\r\n        description: 'Join the CMAP team on slack, follow us on github, or download the CMAP software package for Python, R, Julia, or MATLAB.'\r\n    }\r\n}\r\n\r\nexport default metaTags;","import React from 'react';\r\n\r\nimport { withStyles, Grid, FormGroup, Checkbox, Link, FormControlLabel } from '@material-ui/core';\r\nimport { ExpandMore, ChevronRight } from '@material-ui/icons';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nconst styles = (theme) => ({\r\n    menuOpenIcon:{\r\n        color:colors.primary, \r\n        margin: '0 8px 0 4px'\r\n    },\r\n\r\n    formGroupWrapper: {\r\n        textAlign: 'left',\r\n        paddingLeft: '20px'\r\n    },\r\n\r\n    multiSelectHeader: {\r\n        fontSize: '13px',\r\n        margin: '6px 0px 2px 0px'\r\n    },\r\n\r\n    formControlLabelRoot: {\r\n        height: '30px'\r\n    },\r\n\r\n    formControlLabelLabel: {\r\n        fontSize: '14px'\r\n    },\r\n\r\n    checkboxGroupHeader: {\r\n        '&:hover': {\r\n            backgroundColor: colors.greenHover\r\n        },\r\n\r\n        cursor: 'pointer',\r\n        height: '38px',\r\n        boxShadow: '0px 0px 0px 1px #242424',\r\n        // backgroundColor: 'rgba(0,0,0,.15)',\r\n        marginTop: '8px'\r\n    }\r\n});\r\n\r\n//component expects to be wrapped in a grid\r\nconst MultiCheckboxDrowndown = (props) => {\r\n\r\n    const {\r\n        classes,\r\n        selectedOptions, //set\r\n        handleClear,\r\n        options,\r\n        parentStateKey,\r\n        handleClickCheckbox,\r\n        groupHeaderLabel\r\n    } = props;\r\n\r\n    const [ open, setOpen ] = React.useState(false);\r\n    \r\n    return (\r\n        <> \r\n            <Grid \r\n                item xs={12} \r\n                container \r\n                alignItems='center' \r\n                className={classes.checkboxGroupHeader} \r\n                onClick={() => setOpen(!open)}\r\n                >\r\n                {open ? \r\n                    <ExpandMore className={classes.menuOpenIcon}/> : \r\n                    <ChevronRight className={classes.menuOpenIcon}/>\r\n                }\r\n                {groupHeaderLabel}\r\n            </Grid>\r\n\r\n            {\r\n                open ?\r\n\r\n                <Grid item xs={12} className={classes.formGroupWrapper}>\r\n                    {\r\n                        selectedOptions.size ?\r\n\r\n                        <Grid item container cs={12} justify='flex-start' className={classes.multiSelectHeader}>\r\n                            <span style={{marginRight: '8px'}}>{selectedOptions.size} Selected </span>\r\n                            <Link component='button' onClick={handleClear}>Reset</Link>\r\n                        </Grid> : ''\r\n                    }                                \r\n                    \r\n                    <FormGroup>\r\n                        {options.map((e, i) => (\r\n                            <Grid item xs={12} key={i}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox \r\n                                            color='primary' \r\n                                            onChange={handleClickCheckbox} \r\n                                            className={classes.checkbox} \r\n                                            size='small'\r\n                                            name={parentStateKey + '!!' + e}\r\n                                            checked={selectedOptions.has(e)}\r\n                                        />\r\n                                    }\r\n                                    label={e}\r\n                                    classes={{\r\n                                        root: classes.formControlLabelRoot,\r\n                                        label: classes.formControlLabelLabel\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        ))}\r\n                    </FormGroup>\r\n                </Grid>\r\n\r\n                : ''\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(MultiCheckboxDrowndown);\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { withStyles, Paper, Typography } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nimport stringify from 'csv-stringify/lib/sync';\r\n\r\nimport { FixedSizeList } from 'react-window';\r\n\r\nimport SearchResult from './SearchResult';\r\n\r\nimport { searchResultsFetch, searchResultsStore, searchResultsSetLoadingState } from '../../Redux/actions/catalog';\r\n\r\nimport states from '../../Enums/asyncRequestStates';\r\n\r\nimport HelpButtonAndDialog from '../UI/HelpButtonAndDialog';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    searchResults: state.searchResults,\r\n    searchResultsLoadingState: state.searchResultsLoadingState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    searchResultsFetch,\r\n    searchResultsStore,\r\n    searchResultsSetLoadingState\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    wrapperDiv: {\r\n        padding: '0 20px 20px 20px',\r\n        boxSizing: 'border-box',\r\n        overflow: 'hidden',\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: '0 0 20px 0'\r\n        },\r\n      },\r\n\r\n    resultsWrapper: {\r\n        width: '60vw',\r\n        maxWidth: '1200px',\r\n        padding: '16px 24px',\r\n        margin: '8px auto 24px auto',\r\n        backgroundColor: 'transparent',\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: '12px 4px 20px 4px',\r\n            width: '90vw',\r\n        },\r\n    },   \r\n\r\n    downloadWrapper: {\r\n        fontSize: '1rem',\r\n        color: 'white',\r\n        marginTop: '-9px',\r\n        cursor: 'pointer',\r\n        borderRadius: '6px',\r\n        padding: '1px 8px',\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n        }\r\n    },\r\n\r\n    downloadIcon: {\r\n        marginRight: '7px',\r\n        marginBottom: '-3px',\r\n        fontSize: '1.2rem'\r\n    },\r\n\r\n    helpButton: {\r\n        padding: '0 2px',\r\n        marginTop: '-9.5px',\r\n        color: 'white',\r\n        fontSize: '1.2rem'\r\n    },\r\n\r\n    helpIcon: {\r\n        color: 'white',\r\n        fontSize: '1.2rem'\r\n    }\r\n});\r\n\r\nconst _mapStateToProps = (state, ownProps) => ({\r\n    searchResults: state.searchResults,\r\n    searchResultsLoadingState: state.searchResultsLoadingState\r\n});\r\n\r\nconst _styles = (theme) => ({\r\n    resultsCount: {\r\n        marginTop: '-9px',\r\n        textAlign: 'left',\r\n        display: 'inline-block'\r\n    },\r\n})\r\n\r\nconst SearchResultStatusIndicator = connect(_mapStateToProps, null)(withStyles(_styles)((props) => {\r\n\r\n    return (\r\n        <Typography className={props.classes.resultsCount}>\r\n            {\r\n                props.searchResultsLoadingState === states.inProgress ?\r\n                'Searching...' :\r\n                `Found ${props.searchResults.length} datasets:`\r\n            }\r\n        </Typography>\r\n    )\r\n}));\r\n\r\nconst SearchResults = (props) => {\r\n    const { classes, searchResults, searchResultsSetLoadingState, searchResultsFetch, searchResultsStore } = props;\r\n\r\n    useEffect(() => {\r\n        searchResultsSetLoadingState(states.inProgress);\r\n        searchResultsFetch(props.location.search);\r\n\r\n        // return () => searchResultsStore([], buildSearchOptionsFromDatasetList([]));\r\n    }, [props.location.search]);\r\n\r\n    const handleDownloadSearchResults = () => {\r\n        let csv = stringify(searchResults, {\r\n            header: true\r\n        });\r\n    \r\n        const blob = new Blob([csv], {type: 'text/csv'});\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.setAttribute('hidden', '');\r\n        a.setAttribute('href', url);\r\n        a.setAttribute('download', `CMAP_Search_Results.csv`);\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n    }\r\n\r\n    const itemCount = searchResults && searchResults.length ? searchResults.length : 0;\r\n\r\n    return (\r\n        <div className={classes.wrapperDiv}>\r\n            <Paper className={classes.resultsWrapper} elevation={0}>\r\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                    <SearchResultStatusIndicator/>\r\n\r\n                    {   \r\n                        searchResults && searchResults.length ?\r\n                        <div style={{display: 'flex', justifyContent: 'space-between', paddingRight: '8px'}}>\r\n                            <Typography className={classes.downloadWrapper} onClick={() => handleDownloadSearchResults()}>\r\n                                <CloudDownload className={classes.downloadIcon}/>\r\n                                Download Search Results\r\n                            </Typography>\r\n\r\n                            <HelpButtonAndDialog\r\n                                title='Download Search Results'\r\n                                buttonClass={classes.helpButton}\r\n                                iconClass={classes.helpIcon}\r\n                                content={\r\n                                    <Typography>\r\n                                        This button will download a csv formatted file containing metadata for all datasets returned by your search.\r\n                                    </Typography>}\r\n                            />\r\n                        </div>\r\n\r\n                        : ''\r\n                    }               \r\n                    \r\n                </div>\r\n\r\n                <FixedSizeList\r\n                    itemData={searchResults}\r\n                    itemCount={itemCount}\r\n                    height={window.innerHeight - 140}\r\n                    width='100%'\r\n                    itemSize={222}\r\n                >\r\n                    {({ index, style }) => (\r\n                        <div style={style}>\r\n                            <SearchResult dataset={searchResults[index]}/>\r\n                        </div>                        \r\n                    )}\r\n                </FixedSizeList>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(SearchResults)));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { withStyles } from '@material-ui/core';\r\nimport { Link, Typography, FormControl, Select, MenuItem, FormHelperText, TextField, InputAdornment, Paper, Button, Grid } from '@material-ui/core';\r\nimport { Search } from '@material-ui/icons';\r\n\r\nimport { debounce } from 'throttle-debounce';\r\n\r\nimport MultiCheckboxDropdown from '../UI/MultiCheckboxDropdown';\r\n\r\nimport queryString from 'query-string';\r\n\r\nimport { submissionOptionsRetrieval } from '../../Redux/actions/catalog';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    searchResults: state.searchResults,\r\n    submissionOptions: state.submissionOptions\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    submissionOptionsRetrieval\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n    searchPaper: {\r\n        padding: '14px 20px',\r\n        maxHeight: 'calc(100vh - 200px)',\r\n        overflow: 'auto'\r\n    },\r\n\r\n    resetButton: {\r\n        textTransform: 'none',\r\n        width: '160px',\r\n        height: '37px',\r\n        color: theme.palette.primary.main,\r\n        borderColor: theme.palette.primary.main,\r\n        marginTop: '12px'\r\n    },\r\n\r\n    searchPanelRow: {\r\n        marginTop: '10px',\r\n    },\r\n\r\n    formControl: {\r\n        width: '90%',\r\n        marginBottom: '6px'\r\n    },\r\n\r\n    searchSectionHeader: {\r\n        color: theme.palette.primary.main,\r\n        textAlign: 'left',\r\n        marginBottom: '8px'\r\n    },\r\n\r\n    showAdditionalFiltersWrapper: {\r\n        textAlign: 'left',\r\n        marginTop: '12px',\r\n        width: '100%'\r\n    },\r\n});\r\n\r\nconst defaultState = {\r\n    keywords: '',\r\n    hasDepth: 'any',\r\n    timeStart: '1900-01-01',\r\n    timeEnd: new Date().toISOString().slice(0,10),\r\n    latStart: -90,\r\n    latEnd: 90,\r\n    lonStart: -180,\r\n    lonEnd: 180,\r\n    sensor: new Set(),\r\n    make: new Set(),\r\n    region: new Set()\r\n}\r\n\r\nclass CatalogSearch extends React.Component {\r\n\r\n    state = {\r\n        showAdditionalFilters: false,\r\n        helpDialogOpen: false,\r\n        ...defaultState\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.location.search) {\r\n            let params = queryString.parse(this.props.location.search);\r\n            \r\n            ['region', 'sensor', 'make'].forEach(s => {\r\n                if(typeof params[s] === 'string') params[s] = [params[s]];\r\n            })\r\n\r\n            let newState = {\r\n                ...params,\r\n                sensor: new Set(params.sensor || []),\r\n                region: new Set(params.region || []),\r\n                make: new Set(params.make || []),\r\n                keywords: typeof params.keywords === 'string' ? params.keywords : params.keywords.join(' ')\r\n            };\r\n            this.setState({...this.state, ...newState});\r\n        }\r\n    }\r\n\r\n    handleToggleshowAdditionalFilters = () => {\r\n        this.setState({...this.state, showAdditionalFilters: !this.state.showAdditionalFilters});\r\n    }\r\n\r\n    handleChangeSearchValue = (e, altTypeValue) => {\r\n\r\n        const target = e.target.name;\r\n        const value = e.target.value;\r\n        \r\n        let newState = {...this.state, [target]: value};\r\n\r\n        this.setState(newState);\r\n\r\n        let qstring = queryString.stringify({\r\n            keywords: newState.keywords.split(' '),\r\n            hasDepth: newState.hasDepth,\r\n            timeStart: newState.timeStart,\r\n            timeEnd: newState.timeEnd,\r\n            latStart: newState.latStart,\r\n            latEnd: newState.latEnd,\r\n            lonStart: newState.lonStart,\r\n            lonEnd: newState.lonEnd,\r\n            sensor: Array.from(newState.sensor),\r\n            region: Array.from(newState.region),\r\n            make: Array.from(newState.make)\r\n        });\r\n\r\n        this.pushHistory(qstring);\r\n    }\r\n\r\n    handleClickCheckbox = (e, checked) => {\r\n        let [ column, value ] = e.target.name.split('!!');\r\n        let newSet = new Set(this.state[column]);\r\n\r\n        checked ? newSet.add(value) : newSet.delete(value);\r\n        \r\n        this.handleChangeSearchValue({target: {name: column, value: newSet}});\r\n    }\r\n\r\n    handleResetSearch = () => {\r\n        this.setState({...this.state, ...defaultState});\r\n        this.props.history.push('/catalog');\r\n    }\r\n\r\n    handleClearMultiSelect = (statePiece) => {\r\n        this.handleChangeSearchValue({target: {name: statePiece, value: new Set()}});\r\n    }\r\n\r\n    _pushHistory = (qstring) => {\r\n        this.props.history.push('/catalog?' + qstring);\r\n    }\r\n\r\n    pushHistory = debounce(150, this._pushHistory);\r\n\r\n    render = () => {\r\n        const { classes, submissionOptions } = this.props;\r\n        const { keywords, hasDepth, timeStart, timeEnd, latStart, latEnd, lonStart, lonEnd, make, sensor, region } = this.state;\r\n\r\n        return (\r\n            <Paper elevation={4} className={classes.searchPaper}>\r\n                <Grid container justify='center' alignItems='center'>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            autoFocus\r\n                            name='keywords'\r\n                            placeholder='Search'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <React.Fragment>\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Search style={{color: colors.primary}}/>\r\n                                        </InputAdornment>\r\n                                    </React.Fragment>\r\n                                )\r\n                            }}\r\n                            value={keywords}\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChangeSearchValue}\r\n                            fullWidth                      \r\n                        />\r\n                    </Grid>\r\n\r\n                    <MultiCheckboxDropdown\r\n                        options={submissionOptions.Make}\r\n                        selectedOptions={make}\r\n                        handleClear={() => this.handleClearMultiSelect('make')}\r\n                        parentStateKey={'make'}\r\n                        handleClickCheckbox={this.handleClickCheckbox}\r\n                        groupHeaderLabel='Makes'\r\n                    />\r\n\r\n                    <MultiCheckboxDropdown\r\n                        options={submissionOptions.Sensor}\r\n                        selectedOptions={sensor}\r\n                        handleClear={() => this.handleClearMultiSelect('sensor')}\r\n                        parentStateKey={'sensor'}\r\n                        handleClickCheckbox={this.handleClickCheckbox}\r\n                        groupHeaderLabel='Sensors'\r\n                    />\r\n\r\n                    <MultiCheckboxDropdown\r\n                        options={submissionOptions.Region}\r\n                        selectedOptions={region}\r\n                        handleClear={() => this.handleClearMultiSelect('region')}\r\n                        parentStateKey={'region'}\r\n                        handleClickCheckbox={this.handleClickCheckbox}\r\n                        groupHeaderLabel='Regions'\r\n                    />\r\n\r\n                    <div className={classes.showAdditionalFiltersWrapper}>\r\n                        <Link\r\n                            component='button'\r\n                            onClick={this.handleToggleshowAdditionalFilters}\r\n                        >\r\n                            {this.state.showAdditionalFilters ? 'Hide Additional Filters' : 'Show Additional Filters'}\r\n                        </Link>\r\n                    </div>\r\n\r\n\r\n                    {   this.state.showAdditionalFilters ?\r\n                    <>\r\n\r\n                        <Grid item container xs={12} className={classes.searchPanelRow}>\r\n                            <Grid item xs={12}>\r\n                                <Typography className={classes.searchSectionHeader}>\r\n                                    Temporal Coverage\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    name='timeStart'\r\n                                    className={classes.formControl}\r\n                                    id=\"date\"\r\n                                    label=\"Start Date\"\r\n                                    type=\"date\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={timeStart}\r\n                                    onChange={this.handleChangeSearchValue}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    name='timeEnd'\r\n                                    className={classes.formControl}\r\n                                    id=\"date\"\r\n                                    label=\"End Date\"\r\n                                    type=\"date\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={timeEnd}\r\n                                    onChange={this.handleChangeSearchValue}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>                        \r\n\r\n                        <Grid item container xs={12} className={classes.searchPanelRow} style={{marginTop: '14px'}}>\r\n                            <Grid item xs={12}>\r\n                                <Typography className={classes.searchSectionHeader} style={{marginBottom: 0}}>\r\n                                    Spatial Coverage\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    name='latStart'\r\n                                    className={classes.formControl}\r\n                                    label=\"Lat Start&deg;\"\r\n                                    type=\"number\"\r\n                                    inputProps={{\r\n                                        min: -90,\r\n                                        max: 90\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={latStart}\r\n                                    onChange={this.handleChangeSearchValue}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    name='latEnd'\r\n                                    className={classes.formControl}\r\n                                    label=\"Lat End&deg;\"\r\n                                    type=\"number\"\r\n                                    inputProps={{\r\n                                        min: -90,\r\n                                        max: 90\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={latEnd}\r\n                                    onChange={this.handleChangeSearchValue}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    name='lonStart'\r\n                                    className={classes.formControl}\r\n                                    label=\"Lon Start&deg;\"\r\n                                    type=\"number\"\r\n                                    inputProps={{\r\n                                        min: -180,\r\n                                        max: 180\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={lonStart}\r\n                                    onChange={this.handleChangeSearchValue}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    name='lonEnd'\r\n                                    className={classes.formControl}\r\n                                    label=\"Lon End&deg;\"\r\n                                    type=\"number\"\r\n                                    inputProps={{\r\n                                        min: -180,\r\n                                        max: 180\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={lonEnd}\r\n                                    onChange={this.handleChangeSearchValue}\r\n                                />\r\n                            </Grid>                            \r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControl className={classes.formControl}>\r\n                                <FormHelperText>Depth Levels</FormHelperText>\r\n                                <Select\r\n                                    value={hasDepth}\r\n                                    onChange={this.handleChangeSearchValue}\r\n                                    name='hasDepth'\r\n                                >\r\n                                    <MenuItem value='any'>Any</MenuItem>\r\n                                    <MenuItem value='yes'>Multiple Levels</MenuItem>\r\n                                    <MenuItem value='no'>Surface Only</MenuItem>\r\n                                </Select>                            \r\n                                </FormControl>\r\n                            </Grid>\r\n                            </Grid>                        \r\n                        </>\r\n                        : ''\r\n                    }\r\n\r\n                    <Grid item xs={12} className={classes.searchPanelRow}>\r\n                        <Button variant='outlined' onClick={this.handleResetSearch} className={classes.resetButton}>\r\n                            Reset Filters\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(CatalogSearch)));","import React, { useEffect } from 'react';\r\nimport { withStyles, Grid } from '@material-ui/core';\r\n\r\nimport CatalogSearch from './CatalogSearch';\r\nimport SearchResults from './SearchResults';\r\n\r\nimport metaTags from '../../Enums/metaTags';\r\n\r\nconst styles = (theme) => ({\r\n    wrapperDiv: {\r\n        marginTop: '68px',\r\n        padding: '20px',\r\n        boxSizing: 'border-box',\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: '20px 8px'\r\n        },\r\n      },\r\n    \r\n    searchGrid: {\r\n        '@media (min-width: 960px)': {\r\n            paddingTop: '62px'\r\n        },\r\n    }\r\n});\r\n\r\nconst Catalog = (props) => {\r\n\r\n    const { classes } = props;\r\n\r\n    useEffect(() => {\r\n        document.title = metaTags.catalog.title;\r\n        document.description = metaTags.catalog.description;\r\n\r\n        return () => {\r\n            document.title = metaTags.default.title;\r\n            document.description = metaTags.default.description;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        document.body.style.overflow = 'hidden';\r\n\r\n        return () => document.body.style.overflow = 'auto'\r\n    })\r\n\r\n    return (\r\n        <div className={classes.wrapperDiv}>\r\n            <Grid container justify='center'>\r\n                \r\n                <Grid item xs={12} md={4} className={classes.searchGrid}>\r\n                    <CatalogSearch/>                    \r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={8}>\r\n                    <SearchResults/>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Catalog);"],"sourceRoot":""}