{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","Enums/spatialResolutions.js","Utility/MapSpatialResolutionToNumber.js","Utility/GenerateSpatialArray.js","Utility/FlattenArray.js","Utility/SplitData.js","Utility/MergeArraysAndComputeMeans.js","Utility/MergeArrays.js","Enums/visualizationSubTypes.js","Classes/SpaceTimeData.js","Enums/storedProcedures.js","api.js","Redux/sagas.js","Redux/store.js","Components/LoadingSpinner.js","Components/TopNavBar.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/Home.js","Components/GridDetail.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/colors.js","Components/TableStatsDialog.js","Components/DataRetrievalForm.js","Components/DebugButton.js","Components/ClearVisualizationsButton.js","Components/GoBackButton.js","Components/ChartTypes/SpaceTimeChart.js","Components/Charts.js","Components/ToggleChartViewButton.js","Components/ToggleHideUIButton.js","Components/MapContainer.js","Components/Visualization.js","routes.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/GlobalUIComponentWrapper.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","GET_TABLE_STATS","initialState","catalog","snackbarIsOpen","snackbarMessage","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","tableStats","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addChart","getTableStatsRequestProcessing","storeTableStats","apiUrl","spatialResolutions","irregular","halfDegree","quarterDegree","twentyFifthDegree","fourKm","twelfthDegree","seventyKm","oneDegree","mapSpatialResolutionToNumber","resolution","_map","defineProperty","generateSpatialArray","start","end","arr","i","push","flattenArray","flattenedArray","length","j","splitData","changeInterval","numDistinct","Math","floor","mergeArraysAndComputeMeans","mergeTargetDistance","nextMergeStartDistance","numArraysPerMerge","mergedArrays","travelDistance","subArray","sum","count","k","mergeArrays","subTypes","sectionMap","timeSeries","histogram","depthProfile","heatmap","contourMap","SpaceTimeData","classCallCheck","this","parameters","metadata","hasDepth","depths","Set","dates","variableValues","lonStart","latStart","lonCount","latCount","row","depth","lon","lat","add","time","fields","spatialResolution","lonsList","lon2","latsList","lat2","lats","lons","subType","splitByDate","splitByDepth","_this","size","variableValueSubsets","depthInterval","dateInterval","map","subset","vizSubTypes","console","log","storedProcedures","spaceTime","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","reduce","queryString","key","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","ndjsonParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","ndjson","on","sent","ok","abrupt","getReader","read","done","write","decode","value","stop","keyRetrieval","_callee2","_context2","json","keyCreation","_ref3","_callee3","description","_context3","trim","_x","apply","arguments","visualization","queryRequest","_ref4","_callee4","query","vizData","_context4","_x2","storedProcedureRequest","_ref5","_callee5","_context5","t0","spName","finalize","_x3","getTableStats","_ref6","_callee6","tableName","_context6","_x4","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","watchGetTableStats","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_marked6","_context7","_marked7","_context8","visualizationActions","_marked8","_context9","_marked9","_context10","_marked10","_context11","takeLatest","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","visualizationActionTypes","_marked18","_context19","_marked19","_context20","_marked20","_context21","all","_marked21","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","withStyles","theme","centered","position","top","props","classes","react_default","createElement","CircularProgress","className","customVariant","mapDispatchToProps","TopNavBar","possibleConstructorReturn","getPrototypeOf","handleChange","event","setState","target","name","handleLogOut","clearState","username","password","getCurrentPath","pathname","beepBoop","set","AppBar","Toolbar","Tabs","onChange","Tab","component","Link","to","label","onClick","firstName","lastName","Component","connect","ownProps","withRouter","inlineBlock","display","keyCreationRequestSend","ApiKeyManagement","componentDidMount","handleClick","Fragment","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","Grid","container","alignItems","justify","spacing","item","TextField","margin","id","placeholder","descriptionField","Button","disabled","color","Components_LoadingSpinner","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","useEffect","Home","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","wrapper","height","infoCard","padding","gridClass","gridItem","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","variableDetailTable","marginLeft","marginRight","variableDetailTableRow","variableDetailTableCell","borderBottomColor","xs","src","imageSource","alt","dataSource","distributor","detailCellRendererParams","template","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","textAlign","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","handleColumnRowGroupChanged","columns","forEach","column","setColumnVisible","colId","render","gridPaper","gridSearch","autoFocus","InputLabelProps","shrink","gridWrapper","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","optional","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","colors","orange","backgroundGray","aqua","variableInfo","Dialog","open","onClose","DialogTitle","variable","DialogContent","DialogContentText","longName","sensor","temporalResolution","min","slice","max","visualizationSpeedDialActions","icon","Map","Timeline","BarChart","Waves","Language","LeakAdd","MenuList","_this$props","options","children","maxHeight","_getValue","getValue","slicedToArray","initialOffset","indexOf","dist_index_esm","style","backgroundColor","itemCount","itemSize","initialScrollOffset","_ref","DropdownIndicator","chunk_5d200a41_browser_esm","ArrowDropDown","SingleValue","assign","Option","DataRetrievalForm","componentDidUpdate","prevProps","search","addDocuments","filterVariables","variableWrapper","searchString","values","join","split","some","term","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","handleVisualizationSpeedDialClose","visualizationSpeedDialOpen","handleVisualizationSpeedDialOpen","handleVisualizationSpeedDialClick","getSelectOptionsFromCatalogItems","items","onAutoSuggestChange","searchField","JsSearch","searchIndex","addIndex","_this2","_this$state","_this$props2","depth1","depth2","dt1","dt2","lat1","lon1","depthIsInvalid","latIsInvalid","lonIsInvalid","showUI","displayNone","Components_TableStatsDialog","dataRetrievalFormPaper","shortenHeight","react_select_browser_esm","isLoading","components","IndicatorSeparator","isClearable","onInputChange","filterOption","variableSelect","escapeClearsValue","updateFields","styles","menu","provided","zIndex","input","fontFamily","control","border","&:hover","borderColor","&:focus-within","fontSize","noOptionsMessage","option","&:after","float","singleValue","paddingRight","primary25","primary","IconButton","LibraryBooks","datePickerGridSection","material_ui_pickers_esm","format","disableFuture","autoOk","handleStartDateChange","inputVariant","handleEndDateChange","SpeedDial","ariaLabel","ButtonProps","visualizeButton","visualizationSpeedDial","x","y","fill","fontVariant","visualizeButtonText","onBlur","onFocus","onMouseEnter","onMouseLeave","direction","SpeedDialAction","tooltipTitle","onVisualize","tooltipPlacement","dataRetrievalFormField","retrieveDataButton","borderRadius","palette","dominantBaseline","textAnchor","paddingLeft","buttonPaper","bottom","textDecoration","cursor","goBackText","statePieces","statePiece","clearCharts","clearMaps","buttonProps","chartWrapper","boxShadow","buttonBlock","plots","_props$chart","chart","_useState","useState","_useState2","setSplitByDate","_useState3","_useState4","setSplitByDepth","_useState5","_useState6","subTypeState","setSubTypeState","subSets","generatePlotData","subsets","infoObject","Array","from","variableName","date","toFixed","react_plotly_default","z","contours","coloring","showlabels","labelfont","family","colorbar","text","unit","layout","font","xaxis","yaxis","paper_bgcolor","annotations","xref","yref","yshift","showarrow","handleContourMap","e","handleHeatmap","handleHistogram","Charts","chartsContainer","ChartTypes_SpaceTimeChart","ChartsText","childClass","numberOfCharts","showCharts","toggleChartView","ToggleChartViewButton_ChartsText","toggleShowUI","UiComponents","shouldComponentUpdate","nextProps","nextState","measurementWidget","esriModules","AreaMeasurement3D","view","watch","updateDomainFromMap","viewModel","tool","model","viewData","positionsGeographic","ui","Search","React","MapContainer","esm","mapProperties","basemap","viewProperties","center","zoom","MapContainer_UiComponents","measurementPositions","mapVizType","vizType","_mapping","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","isNaN","parseDate","mm","getUTCMonth","dd","getUTCDate","getUTCFullYear","Visualization","filteredData","dateSliderPosition","opacity","pickedIndex","pickedLon","pickedLat","spParams","dateString","Date","parametersAreInvalid","_this$state$spParams","_this$state$spParams2","mapping","handleDateSliderChange","pickedInfo","datum","handleOpacitySliderChange","coordinates","newCoordinates","esriModuleNames","loadModules","loadedModules","accumulator","currentValue","currentIndex","Components_DataRetrievalForm","Components_GoBackButton","Components_ToggleChartViewButton","ToggleHideUIButton","Components_DebugButton","Components_ClearVisualizationsButton","Components_MapContainer","Components_Charts","routes","react_router_dom","react_router","exact","path","userLoginRequestSend","LoginDialog","handleLogin","handleClose","aria-labelledby","onSubmit","preventDefault","DialogActions","snackbarClose","centerText","Snackbar","autoHideDuration","anchorOrigin","horizontal","vertical","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","Components_LoginDialog","Components_SnackbarWrapper","createMuiTheme","typography","useNextVariants","contrastText","main","secondary","background","default","grey","paper","overrides","MuiIconButton","MuiToolbar","MuiOutlinedInput","&$focused","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","App","componentDidCatch","info","utils","DateFnsUtils","MuiThemeProvider","Components_GlobalUIComponentWrapper","hasError","LicenseManager","setLicenseKey","rootElement","document","getElementById","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4b8953b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\n\r\nexport const GET_TABLE_STATS = 'GET_TABLE_STATS';\r\nexport const GET_TABLE_STATS_REQUEST_PROCESSING = 'GET_TABLE_STATS_REQUEST_PROCESSING';\r\nexport const STORE_TABLE_STATS = 'STORE_TABLE_STATS';\r\n","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    tableStats: {}\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING: return {...state, getTableStatsRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.STORE_TABLE_STATS: return {...state,\r\n            getTableStatsRequestState: states.succeeded,\r\n            tableStats: {\r\n                ...state.tableStats,\r\n                ...action.payload.tableStats\r\n            }\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload:\r\n    {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const getTableStats = (tableName) => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS,\r\n    payload: {\r\n        tableName\r\n    }\r\n})\r\n\r\nexport const getTableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storeTableStats = (tableStats) => ({\r\n    type: visualizationActionTypes.STORE_TABLE_STATS,\r\n    payload: {\r\n        tableStats\r\n    }\r\n})","// export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\nexport const apiUrl = 'https://simonscmap.dev';","const spatialResolutions = {\r\n    irregular: 'Irregular',\r\n    halfDegree: '1/2° X 1/2°' ,\r\n    quarterDegree: '1/4° X 1/4°' ,\r\n    twentyFifthDegree: '1/25° X 1/25°' ,\r\n    fourKm: '4km X 4km',\r\n    twelfthDegree: '1/12° X 1/12°',\r\n    seventyKm: '70km X 70km',\r\n    oneDegree: '1° X 1°'\r\n}\r\n\r\nexport default spatialResolutions;","import spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nconst mapSpatialResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [spatialResolutions.halfDegree] : .5,\r\n        [spatialResolutions.quarterDegree] : .25,\r\n        [spatialResolutions.twentyFifthDegree] : .04,\r\n        [spatialResolutions.fourKm] : .041672,\r\n        [spatialResolutions.twelfthDegree] : .083333,\r\n        [spatialResolutions.oneDegree] : 1,\r\n        [spatialResolutions.seventyKm] : .25\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapSpatialResolutionToNumber;","const generateSpatialArray = (start, resolution, end) => {\r\n    let arr = [];\r\n\r\n    for(let i = start; i <= end; i += resolution){\r\n        arr.push(i);\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nexport default generateSpatialArray;","// Flattens an array by 1 level\r\n// [[[],[]], [[],[]], [[],[]]] => [[], [], [], [], [], []]\r\n\r\nconst flattenArray = (arr) => {\r\n    let flattenedArray = [];\r\n\r\n    for(let i = 0; i < arr.length; i++){\r\n        for(let j = 0; j < arr[i].length; j++){\r\n            flattenedArray.push(arr[i][j]);\r\n        }\r\n    }\r\n\r\n    return flattenedArray;\r\n}\r\n\r\nexport default flattenArray;","// Interval number of indices between changes in this parameter, or in order words\r\n// how many times will we see the same value for this parameter in a row before it changes\r\n// as we iterate through the values array.\r\n// We use modulo for cases where data.length / interval is larger than the number of \r\n// distinct values for that parameter.\r\n\r\nconst splitData = (data, changeInterval, numDistinct) => {\r\n    var splitData = [];\r\n\r\n    for(let i = 0; i < numDistinct; i++){\r\n        splitData.push([]);\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        let index = Math.floor(i / changeInterval) % numDistinct;\r\n        splitData[index].push(data[i]);\r\n    }\r\n\r\n    return splitData;\r\n}\r\n\r\nexport default splitData;","// mergeTargetDistance - number of hops between arrays being merged\r\n// mergeTargetNumber - number of arrays being merged - implicit\r\n// nextStartDistance - once a merge is complete how many hops to next start\r\nconst mergeArraysAndComputeMeans = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n    \r\n    // Find each merging start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        // Iterate through each value in the first array of this merge. Count\r\n        // the number of values summed so we can ignore nulls and compute a mean.\r\n        for(let j = 0; j < data[i].length; j ++){\r\n            let sum = 0;\r\n            let count = 0;\r\n\r\n            // Aggregate values of all merge targets\r\n            for(let k = i; k < i + (mergeTargetDistance * numArraysPerMerge); k += mergeTargetDistance){\r\n                if(data[k][j] !== null) {\r\n                    sum += data[k][j];\r\n                    count ++;\r\n                };\r\n            }\r\n            subArray.push(count < 1 ? null : sum / (count));\r\n        }\r\n\r\n        mergedArrays.push(subArray)\r\n    }\r\n\r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArraysAndComputeMeans;","const mergeArrays = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n\r\n    // Find each merge start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        for(let j = i; j <= i + travelDistance; j += mergeTargetDistance){\r\n            subArray = [...subArray, ... data[j]];\r\n        }\r\n\r\n        mergedArrays.push(subArray);\r\n    }\r\n   \r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArrays;\r\n\r\n","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    heatmap: 'Heatmap',\r\n    contourMap: 'Contour Map'\r\n}\r\n\r\nexport default subTypes;","import mapSpatialResolutionToNumber from '../Utility/MapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/FlattenArray';\r\nimport splitData from '../Utility/SplitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/MergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/MergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nclass SpaceTimeData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = null;\r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n        this.lonStart = null;\r\n        this.latStart = null;\r\n        this.lonCount = null;\r\n        this.latCount = null;\r\n    }\r\n\r\n    add(row) {\r\n        // Only on first row\r\n        if(this.hasDepth === null) {\r\n            this.hasDepth = Boolean(row.depth);\r\n            this.lonStart = row.lon;\r\n            this.latStart = row.lat;\r\n        }\r\n\r\n        if(this.hasDepth){\r\n            this.depths.add(row.depth);\r\n        }\r\n\r\n        this.dates.add(row.time);\r\n\r\n        this.variableValues.push(row[this.parameters.fields])\r\n    }\r\n\r\n    finalize() {\r\n        const spatialResolution = mapSpatialResolutionToNumber(this.metadata.spatialResolution);\r\n\r\n        // Simple arrays of lats and lons\r\n        let lonsList = generateSpatialArray(this.lonStart, spatialResolution, this.parameters.lon2);\r\n        let latsList = generateSpatialArray(this.latStart, spatialResolution, this.parameters.lat2);\r\n\r\n        this.lonCount = lonsList.length;\r\n        this.latCount = latsList.length;\r\n\r\n        // Expanded arrays to be used in plots\r\n        let lats = [];\r\n        let lons = []\r\n\r\n        for(let i = 0; i < latsList.length; i ++){\r\n            for(let j = 0; j < lonsList.length; j++){\r\n                lats.push(latsList[i]);\r\n                lons.push(lonsList[j]);\r\n            }\r\n        }\r\n\r\n        this.lats = lats;\r\n        this.lons = lons;\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        if(this.depths.size === 0) this.depths.add('Surface');\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const lonInterval = 1;\r\n        const latInterval = this.lonCount;\r\n        const depthInterval = latInterval * this.latCount;\r\n        const dateInterval = depthInterval * this.depths.size;\r\n\r\n        // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n        variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, depthInterval, this.depths.size));\r\n        variableValueSubsets = flattenArray(variableValueSubsets);\r\n\r\n        // Contour and heatmap compute mean variable values per lat and lon\r\n        // when not split by date and/or time\r\n        if(subType === vizSubTypes.contourMap || subType === vizSubTypes.heatmap) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    this.depths.size, \r\n                    this.depths.size\r\n                    );\r\n    \r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    this.depths.size, \r\n                    1, \r\n                    this.dates.size\r\n                    );\r\n    \r\n            } else {\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    variableValueSubsets.length, \r\n                    variableValueSubsets.length\r\n                    );            \r\n            }\r\n        } \r\n        \r\n        // Histograms split and aggregate without computing means\r\n        else if (subType === vizSubTypes.histogram) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets, \r\n                    1,\r\n                    this.depths.size,\r\n                    this.depths.size\r\n                    );\r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets,\r\n                    this.depths.size,\r\n                    1,\r\n                    this.dates.size\r\n                );\r\n            } else {\r\n                variableValueSubsets = [this.variableValues];\r\n            }\r\n        }\r\n\r\n        // Nothing here yet\r\n        else {}\r\n\r\n        console.log(variableValueSubsets);\r\n        return variableValueSubsets;\r\n    }    \r\n}\r\n\r\nexport default SpaceTimeData;","const storedProcedures = {\r\n    sectionMap: 'uspSectionMap',\r\n    timeSeries: 'uspTimeSeries',\r\n    spaceTime: 'uspSpaceTime',\r\n    depthProfile: 'uspDepthProfile'\r\n}\r\n\r\nexport default storedProcedures;","import ndjson from 'ndjson';\r\n\r\nimport { apiUrl } from './config';\r\nimport SpaceTimeData from './Classes/SpaceTimeData';\r\n\r\nimport storedProcedures from './Enums/storedProcedures';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n    ndjsonParser.on('data', data => {\r\n        catalog.push(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/catalog/', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.queryRequest = async(query) => {\r\n    const decoder = new TextDecoder();\r\n    let vizData = [];\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n\r\n    ndjsonParser.on('data', data => {\r\n        vizData.push(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/dataretrieval/query?query=' + query, fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return vizData;\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(payload) => {\r\n    console.log(payload);\r\n    const decoder = new TextDecoder();\r\n    var vizData;\r\n\r\n    switch(payload.parameters.spName) {\r\n        case storedProcedures.spaceTime:\r\n            vizData = new SpaceTimeData(payload);\r\n            break;\r\n        default:\r\n            console.log('Default sproc name?');\r\n    }\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n\r\n    ndjsonParser.on('data', data => {\r\n        vizData.add(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/dataretrieval/sp?' + storedProcedureParametersToUri(payload.parameters), fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    vizData.finalize();\r\n    return vizData;\r\n}\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;\r\n}\r\n\r\nexport default api;\r\n\r\n// Test for splitData\r\n// let depthMap = {};\r\n//     let dateMap = {};\r\n\r\n//     let depthCount = 0;\r\n//     vizData.depths.forEach(depth => {\r\n//         depthMap[depth] = depthCount;\r\n//         depthCount ++;\r\n//     })\r\n\r\n//     let dateCount = 0;\r\n//     vizData.dates.forEach(date => {\r\n//         dateMap[date] = dateCount;\r\n//         dateCount ++;\r\n//     })\r\n    \r\n//     let splitData = vizData.generatePlotData(true,true);\r\n//     console.log(splitData);\r\n//     for(let i = 0; i < tempArr.length; i++){\r\n//         let theValue = tempArr[i].Fe\r\n//         let theIndex = dateMap[tempArr[i].time] * vizData.depths.size + depthMap[tempArr[i].depth];\r\n//         console.log(splitData[theIndex]);\r\n//         console.log(theValue);\r\n//         if(splitData[theIndex].includes(theValue)) console.log('correct');\r\n//         else {\r\n//             console.log('Incorrect'); \r\n//             return;\r\n//         }\r\n//     }\r\n\r\n//     console.log(depthMap);\r\n//     console.log(dateMap);","import { put, takeLatest, all, call } from 'redux-saga/effects';\r\nimport Cookies from 'js-cookie';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    \r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){    \r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    \r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    \r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(action){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    \r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    \r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    \r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    console.log(action);\r\n    console.log(`Retrieving ${action.payload.parameters.fields}`);\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    \r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload);\r\n    console.log(`Got ${action.payload.parameters.fields}`);\r\n    \r\n    // Result will be an object containing variable values and describing date shape\r\n    if(!result){\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen(\"Request failed\"));\r\n    } else {\r\n        if(result.variableValues.length > 0){\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            console.log(action);\r\n            yield put(visualizationActions.addChart({subType: action.payload.subType, data:result}));\r\n           \r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges. Try selecting a different date or depth range.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* getTableStats(action){\r\n    yield put(visualizationActions.getTableStatsRequestProcessing());\r\n    let result = yield call(api.visualization.getTableStats, action.payload.tableName);\r\n    \r\n    if(result) {\r\n        yield put(visualizationActions.storeTableStats({[action.payload.tableName]:result}));\r\n    } else {\r\n        yield put(interfaceActions.snackbarOpen(`Failed to retrieve table stats for ${action.payload.tableName}`)); \r\n    }\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\nfunction* watchGetTableStats(){\r\n    yield takeLatest(visualizationActionTypes.GET_TABLE_STATS, getTableStats);\r\n}\r\n  \r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        watchGetTableStats()\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return state;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    getCurrentPath = () => {\r\n        switch(this.props.location.pathname){\r\n            case '/apikeymanagement': return 0;\r\n            case '/': return 1;\r\n            case '/visualization': return 2;\r\n            case '/register': return 3;\r\n            default: return 0;\r\n        }\r\n    };\r\n\r\n    // Debug button\r\n    beepBoop = () => {\r\n        console.log(this.props);\r\n        Cookies.set('hi','there');\r\n        Cookies.get();\r\n    };\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <Tabs value={this.getCurrentPath() || 0} onChange={this.handleChange}>\r\n                        <Tab key='0' component={Link} to={{pathname: '/apikeymanagement'}} label='API Keys' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='1' component={Link} to={{pathname: '/'}} label='Catalog' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='2' component={Link} to={{pathname: '/visualization'}} label='Visualization' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        {this.props.user ? '' : <Tab key='3' component={Link} to={{pathname: '/register'}} label='Register' onClick={this.props.restoreInterfaceDefaults}/>}\r\n                        {this.props.user ? '' : <Tab key='4' label='Log In' onClick={this.props.showLoginDialog}/>}\r\n                        {this.props.user ? <Tab key='5' label={`Welcome ${this.props.user.firstName} ${this.props.user.lastName}!`}/> : ''}\r\n                        {this.props.user ? <Tab key='4' label='Log Out' onClick={this.handleLogOut}/> : ''}                        \r\n                        <Tab key='6' label='Debug' onClick={this.beepBoop}/>\r\n                    </Tabs>                    \r\n                </Toolbar>\r\n                {/* <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/> */}\r\n            </AppBar>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>       \r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Keys\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n            </Paper>\r\n            </React.Fragment>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires login. Please log in.</p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.user) return <LoginRequiredPrompt/>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user && <ApiKeyManagement/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'variable'],\r\n    ['Spatial Resolution', 'spatialResolution'],\r\n    ['Temporal Resolution', 'temporalResolution'],\r\n    ['Unit', 'unit'],\r\n    ['Process Level', 'processLevel'],\r\n    ['Study Domain', 'studyDomain'],\r\n    ['SQL Table Name', 'tableName']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        margin: '-10px auto 0px auto',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(2),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing(2),\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        width: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n    console.log(props.data);\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={8} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={imageSource + 'viz_sample.png'} alt=\"Sample Visualization\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.datasetDescription}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.dataSource}\r\n                        </Typography> <br></br>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable} size='small'>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst detailCellRendererParams = {\r\n  template:\r\n    '<div style=\"height: 100%; box-sizing: border-box\" class=\"testClass\">' +\r\n      '  <div style=\"height: 10%;\">Call Details</div>' +\r\n      '  <div ref=\"eDetailGrid\" style=\"height: 90%;\"></div>' +\r\n    \"</div>\"\r\n}\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"longName\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"tableName\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"datasetName\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"studyDomain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"processLevel\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"spatialResolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"temporalResolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '60vh', \r\n    width: '90%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '60px 5vw',\r\n    padding: '30px'\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n        <Paper elevation={12} className={classes.gridPaper}>\r\n          <TextField\r\n            className={classes.gridSearch}\r\n            autoFocus={true}\r\n            margin=\"normal\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            variant='outlined'\r\n            name='filterText'\r\n            value={this.state.filterText}\r\n            onChange={this.handleChange}\r\n            label=\"Variable Search\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n          />\r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              suppressDragLeaveHidesColumns= {true}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n              detailCellRendererParams={detailCellRendererParams}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog) return <AGGridWrapper catalog={this.props.catalog}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n        else if(this.props.catalogRequestState === states.failed) return <p>Failed to get catalog. Have you tried turning it off and then on again?</p>\r\n        else return <p>I don't know how we got here. Please debug the catalog retrieval process.</p>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const colors = {\r\n    orange: '#FF8000',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9'\r\n}\r\n\r\nexport default colors;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    const { classes, variableInfo, tableStats } = props;\r\n\r\n    if(!variableInfo || !tableStats) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{variableInfo.variable}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {variableInfo.longName}\r\n                </DialogContentText>\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{variableInfo.sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{variableInfo.spatialResolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{variableInfo.temporalResolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{tableStats.time && tableStats.time.min ? tableStats.time.min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{tableStats.time && tableStats.time.max ? tableStats.time.max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{tableStats.lat.min}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{tableStats.lat.max}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{tableStats.lon.min}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{tableStats.lon.max}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{tableStats.depth.min === null ? 'Surface Only' : tableStats.depth.min}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{tableStats.depth.min === null ? 'Surface Only' : tableStats.depth.max}</TableCell>\r\n                            </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as List } from \"react-window\";\r\n\r\n// import createFilterOptions from \"react-select-fast-filter-options\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/TextField';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport { \r\n    BarChart,\r\n    Map,\r\n    Timeline,\r\n    Waves,\r\n    Language,\r\n    LeakAdd,\r\n    ArrowDropDown,\r\n    LibraryBooks\r\n} from '@material-ui/icons';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport { Button } from '@material-ui/core';\r\nimport TableStatsDialog from './TableStatsDialog';\r\n\r\nconst styles = (theme) => ({\r\n    dataRetrievalFormPaper: {\r\n        width: '1200px',\r\n        height: '205px',\r\n        padding: theme.spacing(2.5),\r\n        position:'fixed',\r\n        top: '10px',\r\n        left: '50%',\r\n        marginLeft: '-600px',\r\n        zIndex: 2,\r\n        paddingTop: theme.spacing(1.5),\r\n    },\r\n\r\n    dataRetrievalFormField: {\r\n        padding:`0px ${theme.spacing(1)}`\r\n    },\r\n\r\n    retrieveDataButton: {\r\n        margin:'10px auto'\r\n    },\r\n\r\n    variableSelect: {\r\n        margin: '0 30px 20px 30px'\r\n    },\r\n\r\n    visualizationSpeedDial: {\r\n        position: 'relative',\r\n        top: '5px',\r\n        left: '30px'\r\n    },\r\n\r\n    visualizeButton: {\r\n        borderRadius:'10%',\r\n        width: '100px',\r\n        height:'40px',\r\n        margin: 'auto 0',\r\n        backgroundColor: theme.palette\r\n    },\r\n\r\n    visualizeButtonText: {\r\n        dominantBaseline: \"middle\",\r\n        textAnchor: \"middle\"\r\n    },\r\n\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    datePickerGridSection: {\r\n        paddingLeft: '40px !important',\r\n        paddingRight: '40px !important'\r\n    },\r\n\r\n    shortenHeight: {\r\n        height: '60px'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    tableStats: state.tableStats\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nconst visualizationSpeedDialActions = [\r\n    {icon: <Map/>, name: vizSubTypes.sectionMap },\r\n    {icon: <Timeline/>, name: vizSubTypes.timeSeries},\r\n    {icon: <BarChart/>, name: vizSubTypes.histogram},\r\n    {icon: <Waves/>, name: vizSubTypes.depthProfile},\r\n    {icon: <Language/>, name: vizSubTypes.heatmap},\r\n    {icon: <LeakAdd/>, name: vizSubTypes.contourMap}\r\n];\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nclass MenuList extends Component {\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <List\r\n                style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length === 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <ArrowDropDown />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nclass DataRetrievalForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('variable');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('variable');\r\n        search.addIndex('make');\r\n        search.addIndex('sensor');\r\n        search.addIndex('dataSource');\r\n        search.addIndex('processLevel');\r\n        search.addIndex('longName');\r\n        search.addIndex('keywords');\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            visualizationSpeedDialOpen: false,\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: '',\r\n        }\r\n    }\r\n\r\n    // When we get the catalog add them to the search\r\n    // This is not reactive - it mutates the search piece of state in \r\n    // a way that is not visible to react and will not trigger a re-render.\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    // Includes every variable that returns true when filtering\r\n    // variableWrapper parameter is {label, value, variable object}\r\n    filterVariables = (variableWrapper, searchString) => {\r\n\r\n        // Create one string from all column values (using Boolean to remove falsey elements)\r\n        let values = Object.values(variableWrapper.data).filter(Boolean).join(' ');\r\n\r\n        let searchTerms = searchString.split(' ');\r\n\r\n        // array.some method will return a true as soon as we failed to\r\n        // find one search term, which we negate.\r\n        return !searchTerms.some(term => values.indexOf(term) === -1)\r\n    }\r\n\r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.variable,\r\n            label: item.variable === item.longName ? item.variable : item.variable + ' : ' + item.longName,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField } = this.state;\r\n        \r\n        const { classes, \r\n            tableName,\r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            catalog,\r\n            depthIsInvalid,\r\n            latIsInvalid,\r\n            lonIsInvalid,\r\n            catalogRequestState\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n                \r\n        const tableStats = {\r\n            tableName,\r\n            tableStats: tableName && this.props.tableStats[tableName],\r\n            variableInfo: fields && fields.data\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.showUI ? '' : classes.displayNone}>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    {...tableStats}\r\n                />\r\n                <Paper className={classes.dataRetrievalFormPaper}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={11} className={classes.shortenHeight}>\r\n                            <Select\r\n                                isLoading = {catalogRequestState === states.inProgress}\r\n                                components={{\r\n                                    IndicatorSeparator:'',\r\n                                    DropdownIndicator,\r\n                                    Option,\r\n                                    MenuList,\r\n                                    SingleValue,\r\n                                }}\r\n                                isClearable\r\n                                onInputChange={this.onAutoSuggestChange}\r\n                                filterOption={null}\r\n                                className={classes.variableSelect}\r\n                                autoFocus\r\n                                escapeClearsValue\r\n                                name=\"fields\"\r\n                                label=\"Variables\"\r\n                                options={options}\r\n                                onChange={this.props.updateFields}\r\n                                value={fields}\r\n                                placeholder=\"Variable Search\"\r\n                                styles={{\r\n                                    menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                                    input: provided => ({...provided,\r\n                                        color: 'white',\r\n                                        fontFamily: '\"Lato\", sans-serif'\r\n                                    }),\r\n\r\n                                    control: provided => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        border: '1px solid #333333',\r\n                                        '&:hover': { borderColor: 'white' },\r\n                                        '&:focus-within': { borderColor: colors.orange },\r\n                                    }),\r\n\r\n                                    placeholder: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        fontSize: '14px'\r\n                                    }),\r\n\r\n                                    noOptionsMessage: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        backgroundColor: colors.backgroundGray\r\n                                    }),\r\n\r\n                                    option: (provided, state) => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        color: state.data.data.sensor === 'Satellite' ? '#1acf02' : state.data.data.sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        '&:hover': { backgroundColor: '#383838' },\r\n                                        '&:after': { \r\n                                            content: state.data.data.sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            float: 'left'\r\n                                        },\r\n                                    }),\r\n\r\n                                    singleValue: (provided, state) => ({...provided,\r\n                                        fontFamily: state.data.data.sensor === 'Satellite' ? 'Font Awesome 5 Free': '\"Lato\", sans-serif',\r\n                                        color: state.data.data.sensor === 'Satellite' ? '#1acf02' : state.data.data.sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        paddingRight: '20px',\r\n                                        '&:after': { \r\n                                            content: state.data.data.sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            fontSize: '18px',\r\n                                            position: 'relative',\r\n                                            left: '8px',\r\n                                            top: '3px'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n                                    colors: {\r\n                                    ...theme.colors,\r\n                                    // Background color of hovered options\r\n                                    primary25: '#e0e0e0',\r\n                                    primary: '#212121',\r\n                                    },\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={1}>\r\n                            <IconButton\r\n                                disabled={!this.props.tableStats[this.props.tableName]}\r\n                                onClick={this.handleTableStatsDialogOpen}\r\n                            >\r\n                                <LibraryBooks/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    disableFuture\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    disableFuture\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startDepth\"\r\n                                    label=\"Start Depth(m)\"\r\n                                    name=\"depth1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={depthIsInvalid(this.props.depth1)}\r\n                                    value={depth1}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endDepth\"\r\n                                    label=\"End Depth(m)\"\r\n                                    name=\"depth2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={depthIsInvalid(this.props.depth2)}\r\n                                    value={depth2}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startLat\"\r\n                                    label=\"Start Latitude(deg)\"\r\n                                    name=\"lat1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={latIsInvalid(lat1)}\r\n                                    value={lat1}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endLat\"\r\n                                    label=\"End Latitude(deg)\"\r\n                                    name=\"lat2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={latIsInvalid(lat2)}\r\n                                    value={lat2}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startLon\"\r\n                                    label=\"Start Longitude(deg)\"\r\n                                    name=\"lon1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={lonIsInvalid(lon1)}\r\n                                    value={lon1}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endLon\"\r\n                                    label=\"End Longitude(deg)\"\r\n                                    name=\"lon2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={lonIsInvalid(lon2)}\r\n                                    value={lon2}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>   \r\n                        </Grid>\r\n                        <SpeedDial\r\n                            ariaLabel=\"Visualization Speed Dial\"\r\n                            disabled\r\n                            ButtonProps={{\r\n                                variant: 'round',\r\n                                classes: {\r\n                                    root: classes.visualizeButton\r\n                                },\r\n                                color: 'secondary'\r\n                            }}\r\n                            className={classes.visualizationSpeedDial}\r\n                            icon={<svg height=\"30\" width=\"200\">\r\n                                    <text x=\"50%\" y=\"50%\" fill='white' fontVariant='normal' className={classes.visualizeButtonText}>Visualize</text>\r\n                                </svg>}\r\n                            onBlur={this.handleVisualizationSpeedDialClose}\r\n                            onClick={this.handleVisualizationSpeedDialClick}\r\n                            onClose={this.handleVisualizationSpeedDialClose}\r\n                            onFocus={this.handleVisualizationSpeedDialOpen}\r\n                            onMouseEnter={this.handleVisualizationSpeedDialOpen}\r\n                            onMouseLeave={this.handleVisualizationSpeedDialClose}\r\n                            open={this.state.visualizationSpeedDialOpen}\r\n                            direction= 'right'\r\n                        >\r\n                            {visualizationSpeedDialActions.map(action => (                                   \r\n                                <SpeedDialAction\r\n                                    key={action.name}\r\n                                    icon={action.icon}\r\n                                    tooltipTitle={action.name}\r\n                                    onClick={() => this.props.onVisualize(action.name)}\r\n                                    tooltipPlacement='bottom'\r\n                                />\r\n                            ))}\r\n                        </SpeedDial>                            \r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataRetrievalForm));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    ...state\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        bottom: '10px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst DebugButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    const logState = () => {\r\n        props.statePieces.forEach(statePiece => {\r\n            console.log(statePiece);\r\n            console.log(props[statePiece]);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={logState}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Debug</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DebugButton));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { clearCharts, clearMaps } from '../Redux/actions/visualization';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    clearCharts,\r\n    clearMaps\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '250px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst ClearVisualizationsButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    const clearVisualizations = () => {\r\n        props.clearCharts();\r\n        props.clearMaps();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={clearVisualizations}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Clear</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ClearVisualizationsButton));\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '10px',\r\n        zIndex: 2,\r\n        textDecoration:'none'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst GoBackButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} component={Link} to={{pathname: '/'}}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Go Back</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(GoBackButton);","import React, { useState } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { Paper, Typography } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nconst handleContourMap = (subsets, infoObject, splitByDate, splitByDepth) => {\r\n\r\n    const depths = Array.from(infoObject.depths);\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = !splitByDate ? 'Mean Over Time' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Mean Over Depth' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'contour',\r\n                    contours: {\r\n                        coloring: 'heatmap',\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        }\r\n                    },\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `${infoObject.metadata.unit}`\r\n                        }\r\n                    }\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName} - ${depth}  - ${date}`,\r\n                xaxis: {title: 'Longitude', color: '#ffffff'},\r\n                yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.distributor.length < 30 ? \r\n                            infoObject.metadata.distributor : \r\n                            infoObject.metadata.distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth) => {\r\n\r\n    const depths = Array.from(infoObject.depths);\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    console.log(subsets);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = !splitByDate ? 'Aggregated Time' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Aggregated Depth' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName} - ${depth}  - ${date}`,\r\n                xaxis: {title: `${infoObject.parameters.fields} ${infoObject.metadata.unit}`, color: '#ffffff'},\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.distributor.length < 30 ? \r\n                            infoObject.metadata.distributor : \r\n                            infoObject.metadata.distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHeatmap = (subsets, infoObject, splitByDate, splitByDepth) => {\r\n\r\n    const depths = Array.from(infoObject.depths);\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = !splitByDate ? 'Mean Over Time' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Mean Over Depth' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        try {\r\n            return (\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n    \r\n                data={[\r\n                    {\r\n                        x: infoObject.lons,\r\n                        y: infoObject.lats,\r\n                        z: subset,\r\n                        name: infoObject.parameters.fields,\r\n                        type: 'heatmap',\r\n                        colorbar: {\r\n                            title: {\r\n                                text: `${infoObject.metadata.unit}`\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n                \r\n                key={index}\r\n                layout= {{\r\n                    font: {color: '#ffffff'},\r\n                    title: `${variableName} - ${depth}  - ${date}`,\r\n                    xaxis: {title: 'Longitude', color: '#ffffff'},\r\n                    yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                    paper_bgcolor: colors.backgroundGray,\r\n                    annotations: [\r\n                        {\r\n                            text: `Source: ${infoObject.metadata.distributor.length < 30 ? \r\n                                infoObject.metadata.distributor : \r\n                                infoObject.metadata.distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                            font: {\r\n                                color: 'white',\r\n                                size: 10\r\n                            },\r\n                            xref: 'paper',\r\n                            yref: 'paper',\r\n                            yshift: -202,\r\n                            showarrow: false,\r\n                        }\r\n                    ]\r\n    \r\n                }}   \r\n            />)\r\n        } catch (e) {\r\n            console.log('Failed to plot subset');\r\n            console.log(subset);\r\n        }\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n        backgroundColor: colors.backgroundGray\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst buttonProps = {\r\n    size: 'small',\r\n    color: 'primary',\r\n    variant: 'contained'\r\n}\r\n\r\nconst SpaceTimeChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { lats, lons, dates, depths } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitByDepth, setSplitByDepth] = useState(false);\r\n    const [subTypeState, setSubTypeState] = useState(subType);\r\n\r\n    const subSets = data.generatePlotData(subTypeState, splitByDate, splitByDepth);\r\n\r\n    var plots;\r\n\r\n    switch(subTypeState){\r\n        case vizSubTypes.contourMap:\r\n            plots = handleContourMap(subSets, data, splitByDate, splitByDepth);\r\n            break;\r\n\r\n        case vizSubTypes.heatmap:\r\n            plots = handleHeatmap(subSets, data, splitByDate, splitByDepth);\r\n            break;\r\n\r\n        case vizSubTypes.histogram:\r\n            plots = handleHistogram(subSets, data, splitByDate, splitByDepth);\r\n            break;\r\n\r\n        default:\r\n            plots = '';\r\n            break;        \r\n\r\n    }\r\n        \r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n                <Button {...buttonProps} disabled={dates.size===1} onClick={() => setSplitByDate(!splitByDate)}>{splitByDate ? 'Merge Dates' : 'Split By Date'}</Button>\r\n                <Button {...buttonProps} disabled={depths.size===1} onClick={() => setSplitByDepth(!splitByDepth)}>{splitByDepth ? 'Merge Depths' : 'Split By Depth'}</Button>\r\n                \r\n                {subTypeState == vizSubTypes.heatmap ? '' : \r\n                    <Button {...buttonProps} \r\n                        onClick={() => setSubTypeState(vizSubTypes.heatmap)}\r\n                        >Switch to Heatmap\r\n                    </Button>\r\n                }\r\n                \r\n                {subTypeState == vizSubTypes.contourMap ? '' : \r\n                    <Button {...buttonProps} \r\n                        onClick={() => setSubTypeState(vizSubTypes.contourMap)}\r\n                        >Switch to Contour\r\n                    </Button>\r\n                }\r\n                \r\n                {subTypeState == vizSubTypes.histogram ? '' : \r\n                    <Button {...buttonProps}\r\n                        onClick={() => setSubTypeState(vizSubTypes.histogram)}\r\n                        >Switch to Histogram\r\n                    </Button>\r\n                }\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(SpaceTimeChart);\r\n\r\n{/* <div key={index} className={classes.chartWrapper}>\r\n<Plot\r\n    style= {{\r\n        position: 'relative',\r\n        display:'inline-block'\r\n    }}\r\n    key={index}\r\n    layout= {{...chart.layout,\r\n\r\n        title: `${chart.parameters.fields} - ${chart.subType} - ${chart.parameters.dt1} - ${Number(chart.parameters.depth1) || 'Surface'}`,\r\n        font: {... chart.layout.font,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        xaxis: {...chart.layout.xaxis,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        yaxis: {...chart.layout.yaxis,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        paper_bgcolor: colors.backgroundGray,\r\n\r\n        annotations: [\r\n            {\r\n                text: `Source: ${chart.metadata.distributor.length < 30 ? \r\n                        chart.metadata.distributor : \r\n                        chart.metadata.distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                font: {\r\n                    color: 'white',\r\n                    size: 10\r\n                },\r\n                xref: 'paper',\r\n                yref: 'paper',\r\n                yshift: -202,\r\n                showarrow: false,\r\n            }\r\n        ]\r\n    }}\r\n    data={chart.data}\r\n/>\r\n</div>   */}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport { Paper, Typography } from '@material-ui/core';\r\n\r\nimport colors from '../Enums/colors';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\n\r\nimport SpaceTimeChart from './ChartTypes/SpaceTimeChart';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsContainer: {\r\n        margin: '260px 0 0 100px'\r\n    },\r\n\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n        backgroundColor: colors.backgroundGray\r\n    }\r\n})\r\n\r\n\r\n\r\nconst handleTimeSeries = (chart) => ({\r\n    parameters: chart.parameters,\r\n    metadata: chart.metadata,\r\n    subType: chart.subType,\r\n    data: [\r\n      {\r\n      x: chart.data.map(row => row.time || row.month),\r\n      y: chart.data.map(row => row[chart.parameters.fields]),\r\n      error_y: {\r\n        type: 'data',\r\n        array: chart.data.map(row => row[chart.parameters.fields + '_std']),\r\n        opacity: 0.2,\r\n        color: 'gray',\r\n        visible: true\r\n      },\r\n      name: chart.parameters.fields,\r\n      type: 'scatter',\r\n      line: {color: '#e377c2'},\r\n      },\r\n    ],\r\n    layout: {\r\n      xaxis: {title: chart.data[0].time ? 'Time' : 'Month'},\r\n      yaxis: {title: chart.parameters.fields}\r\n    }\r\n  })\r\n\r\nconst handleSectionMap = (chart) => ({\r\n    parameters: chart.parameters,\r\n    metadata: chart.metadata,\r\n    subType: chart.subType,\r\n    data: [\r\n      {\r\n      x: chart.data.map(row => row.lat),\r\n      y: chart.data.map(row => row.depth),\r\n      z: chart.data.map(row => row[chart.parameters.fields]),\r\n      name: chart.parameters.fields,\r\n      type: 'heatmap',\r\n      }\r\n    ],\r\n    layout: {\r\n      xaxis: {title: 'Latitude'},\r\n      yaxis: {autorange: 'reversed', title: 'Depth [m]'}\r\n    }\r\n  })\r\n\r\nconst handleDepthProfile = (chart) => ({\r\n    parameters: chart.parameters,\r\n    metadata: chart.metadata,\r\n    subType: chart.subType,\r\n    data: [\r\n      {\r\n        x: chart.data.map(row => row.depth),\r\n        y: chart.data.map(row => row[chart.parameters.fields]),\r\n        error_y: {\r\n          type: 'data',\r\n          array: chart.data.map(row => row[chart.parameters.fields] + '_std'),\r\n          opacity: 0.2,\r\n          color: 'gray',\r\n          visible: true\r\n        },\r\n        name: chart.parameters.fields,\r\n        type: 'scatter',\r\n        line: {color: '#e377c2'},\r\n        },\r\n    ],\r\n    layout: {\r\n      xaxis: {title: 'Depth [m]'},\r\n      yaxis: {title: chart.parameters.fields}\r\n    }\r\n  })\r\n\r\n\r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n        const { classes, charts } = this.props;\r\n\r\n        return (\r\n            <div className={classes.chartsContainer}>\r\n                {charts.map((chart, index) => {\r\n                    switch(chart.data.parameters.spName){\r\n                        case storedProcedures.spaceTime:\r\n                            return <SpaceTimeChart chart={chart} key={index}/>\r\n\r\n                        default:\r\n                            break;\r\n                  }\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));\r\n\r\n{/* <div key={index} className={classes.chartWrapper}>\r\n<Plot\r\n    style= {{\r\n        position: 'relative',\r\n        display:'inline-block'\r\n    }}\r\n    key={index}\r\n    layout= {{...chart.layout,\r\n\r\n        title: `${chart.parameters.fields} - ${chart.subType} - ${chart.parameters.dt1} - ${Number(chart.parameters.depth1) || 'Surface'}`,\r\n        font: {... chart.layout.font,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        xaxis: {...chart.layout.xaxis,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        yaxis: {...chart.layout.yaxis,\r\n            color: '#ffffff'\r\n        },\r\n\r\n        paper_bgcolor: colors.backgroundGray,\r\n\r\n        annotations: [\r\n            {\r\n                text: `Source: ${chart.metadata.distributor.length < 30 ? \r\n                        chart.metadata.distributor : \r\n                        chart.metadata.distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                font: {\r\n                    color: 'white',\r\n                    size: 10\r\n                },\r\n                xref: 'paper',\r\n                yref: 'paper',\r\n                yshift: -202,\r\n                showarrow: false,\r\n            }\r\n        ]\r\n    }}\r\n    data={chart.data}\r\n/>\r\n</div>   */}","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport colors from '../Enums/colors';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '90px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    },\r\n\r\n    numberOfCharts: {\r\n        color: colors.orange\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst ChartsText = (props) => (\r\n    <React.Fragment>\r\n        Charts<span className={props.childClass}>{props.charts.length ? `(${props.charts.length})` : ''}</span>\r\n    </React.Fragment>\r\n)\r\n\r\nconst ToggleChartViewButton = (props) => {\r\n    const { classes, showCharts, charts } = props;\r\n\r\n    return (\r\n        <div>            \r\n            <Paper className={classes.buttonPaper} onClick={props.toggleChartView}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>{showCharts ? 'Globe' : <ChartsText charts={charts} childClass={classes.numberOfCharts}/>}</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(ToggleChartViewButton));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '170px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst GoBackButton = (props) => {\r\n    const { classes, showUI } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={props.toggleShowUI}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>{showUI ? 'Hide UI' : 'Show UI'}</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(GoBackButton);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() { \r\n        var measurementWidget = new this.props.esriModules.AreaMeasurement3D({view: this.props.view})\r\n        measurementWidget.watch('viewModel.measurement.area.text', () => {\r\n            this.props.updateDomainFromMap(measurementWidget.viewModel.tool.model.viewData.positionsGeographic);\r\n        })    \r\n    \r\n        this.props.view.ui.add(measurementWidget, 'bottom-right');\r\n        this.props.view.ui.add(new this.props.esriModules.Search({view: this.props.view}),'bottom-right')\r\n        // this.props.view.ui.add(new this.props.esriModules.Fullscreen({view: this.props.view}),'bottom-left')\r\n        return null;\r\n    }\r\n}\r\n\r\nclass MapContainer extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ basemap: 'satellite' }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3\r\n                    }}\r\n                >\r\n                    <UiComponents\r\n                        updateDomainFromMap={this.props.updateDomainFromMap}\r\n                        esriModules={{...this.props.esriModules}}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                    />\r\n                </Scene>    \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MapContainer));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\n// import VizTooltip from './VizTooltip';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport DataRetrievalForm from './DataRetrievalForm';\r\nimport DebugButton from './DebugButton';\r\nimport ClearVisualizationsButton from  './ClearVisualizationsButton';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend, getTableStats } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { loadModules } from '@esri/react-arcgis';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport GoBackButton from './GoBackButton';\r\nimport Charts from './Charts';\r\nimport ToggleChartViewButton from './ToggleChartViewButton';\r\nimport ToggleHideUIButton from './ToggleHideUIButton';\r\nimport MapContainer from './MapContainer';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.sectionMap\r\n        }, \r\n        [vizSubTypes.timeSeries]: {\r\n            sp: storedProcedures.timeSeries,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: storedProcedures.depthProfile,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.heatmap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.heatmap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.contourMap\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    tableStats: state.tableStats\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n    getTableStats\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    }\r\n})\r\n\r\nconst depthIsInvalid = (depth) => isNaN(depth) || depth < 0; \r\n\r\nconst lonIsInvalid = (lon) => isNaN(lon) || lon > 180 || lon < -180;\r\n\r\nconst latIsInvalid = (lat) => isNaN(lat) || lat > 90 || lat < -90;\r\n\r\nconst parseDate = (date) => {\r\n    var mm = date.getUTCMonth() + 1; // getMonth() is zero-based\r\n    var dd = date.getUTCDate();\r\n\r\n    return [date.getUTCFullYear(),\r\n        (mm>9 ? '' : '0') + mm,\r\n        (dd>9 ? '' : '0') + dd\r\n        ]\r\n        .join('-');    \r\n}\r\n\r\nclass Visualization extends Component {\r\n\r\n    state = {\r\n        filteredData: [],\r\n        dateSliderPosition: 3,\r\n        variable: 'SiO2_darwin_3day',\r\n        opacity: 1,\r\n        pickedIndex: null,\r\n        pickedLon: null,\r\n        pickedLat: null,\r\n        showCharts: false,\r\n        showUI: true,\r\n\r\n        spParams: {\r\n            tableName: '',\r\n            fields: null,\r\n            depth1: '0',\r\n            depth2: '3',\r\n            dt1: '2012-05-05',\r\n            dt2: '2012-05-12',\r\n            lat1: '38',\r\n            lat2: '40',\r\n            lon1: '-52',\r\n            lon2: '-50'\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'Fullscreen',\r\n            'EsriSceneView',\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/widgets/Fullscreen',\r\n            'esri/views/SceneView',\r\n        ]);\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        // Filter data on starting date\r\n        if(!prevProps.sampleData && this.props.sampleData){\r\n            this.handleDateSliderChange(null, 3);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleStartDateChange = (date) => {\r\n        let dateString = date instanceof Date ? parseDate(date) : date;\r\n        this.setState({...this.state, spParams: {...this.state.spParams, dt1:dateString}});\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        let dateString = date instanceof Date ? parseDate(date) : date;\r\n        this.setState({...this.state, spParams: {...this.state.spParams, dt2:dateString}});\r\n    }\r\n\r\n    parametersAreInvalid = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, fields } = this.state.spParams;\r\n\r\n        if(!fields){\r\n            this.props.snackbarOpen('Please select a variable.');\r\n            return true;\r\n        }\r\n\r\n        if(depthIsInvalid(depth1)){\r\n            this.props.snackbarOpen('Starting depth must be a positive number.');\r\n            return true;\r\n        } \r\n\r\n        if(depthIsInvalid(depth2)){\r\n            this.props.snackbarOpen('Ending depth must be a positive number.');\r\n            return true;\r\n        }\r\n\r\n        if(latIsInvalid(lat1)){\r\n            this.props.snackbarOpen('Please select a starting latitude between -90 and 90.');\r\n            return true;\r\n        }\r\n\r\n        if(latIsInvalid(lat2)){\r\n            this.props.snackbarOpen('Please select an ending latitude between -90 and 90.');\r\n            return true;\r\n        }\r\n\r\n        if(lonIsInvalid(lon1)){\r\n            this.props.snackbarOpen('Please select a starting longitude between -180 and 180.');\r\n            return true;\r\n        }\r\n\r\n        if(lonIsInvalid(lon2)){\r\n            this.props.snackbarOpen('Please select an ending longitude between -180 and 180.');\r\n            return true;\r\n        }\r\n\r\n        if(isNaN(Date.parse(dt1))){\r\n            this.props.snackbarOpen('Please enter a valid starting date.');\r\n            return true;\r\n        }\r\n\r\n        if(isNaN(Date.parse(dt2))){\r\n            this.props.snackbarOpen('Please enter a valid ending date.');\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    onVisualize = (vizType) => {\r\n        if(this.parametersAreInvalid()) return;\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, fields } = this.state.spParams;\r\n    \r\n        let mapping = mapVizType(vizType);\r\n        let parameters = {\r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        };\r\n\r\n        let payload = {\r\n            parameters,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        if(fields) {\r\n            this.props.getTableStats(fields.data.tableName);\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: fields.data.tableName}});\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    handleDateSliderChange = (event, value) => {\r\n        this.setState({...this.state, \r\n            dateSliderPosition: value,\r\n            pickedInfo: null,\r\n            filteredData: this.props.sampleData.filter(datum => datum.time === `1994-01-${this.state.dateSliderPosition > 9 ? this.state.dateSliderPosition : \"0\" + this.state.dateSliderPosition}T00:00:00.000Z`)\r\n        });\r\n    }\r\n\r\n    handleOpacitySliderChange = (event, value) => {\r\n        this.setState({...this.state, opacity: value})\r\n    }\r\n\r\n    toggleChartView = () => {\r\n        this.setState({...this.state, showCharts: !this.state.showCharts});\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromMap = (coordinates) => {\r\n        if(!coordinates || !coordinates.length) return null;\r\n        \r\n        var lons = coordinates.map(a => a[0]);\r\n        var lats = coordinates.map(a => a[1]);\r\n\r\n        var newCoordinates = {\r\n            lat1: Math.min(...lats).toFixed(3),\r\n            lat2: Math.max(...lats).toFixed(3),\r\n            lon1: Math.min(...lons).toFixed(3),\r\n            lon2: Math.max(...lons).toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, showUI: true, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    render(){\r\n        const { classes, tableStats } = this.props;\r\n\r\n        // const { lon1, lon2, lat1, lat2 } = this.state;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n \r\n        return (\r\n            <div>\r\n                <DataRetrievalForm \r\n                    handleChange={this.handleChange} \r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                    depthIsInvalid={depthIsInvalid}\r\n                    latIsInvalid={latIsInvalid}\r\n                    lonIsInvalid={lonIsInvalid}\r\n                   {...this.state.spParams}\r\n                />\r\n                <GoBackButton/>\r\n                <ToggleChartViewButton toggleChartView={this.toggleChartView} showCharts={this.state.showCharts}/>\r\n                <ToggleHideUIButton toggleShowUI={this.toggleShowUI} showUI={this.state.showUI}/>\r\n                <DebugButton statePieces={['maps','charts', 'storedProcedureRequestState', 'catalog']}/>\r\n                <ClearVisualizationsButton/>\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer \r\n                            updateDomainFromMap={this.updateDomainFromMap}\r\n                            // measurementPositions={[[lon1, lat1, 0], [lon1, lat2, 0], [lon2, lat2, 0], [lon2, lat1, 0]]}\r\n                            esriModules={this.state.esriModules}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                {this.props.storedProcedureRequestState === states.inProgress && <LoadingSpinner customVariant='centered' size='36'/>}\r\n\r\n                <div className={this.state.showCharts ? '' : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));\r\n\r\n\r\n// Viz demo layers\r\n// new ColumnLayer({\r\n//     id: `SiO2-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 520000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [255,0,0] : [60,60,60],\r\n//     getElevation: d => d[this.state.variable],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'SiO2_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].SiO2_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`SiO2: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n//   }),\r\n\r\n//   new ColumnLayer({\r\n//     id: `DIN-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 50000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [0,255,0] : [60,60,60],\r\n//     getElevation: d => d['DIN_darwin_3day'],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'DIN_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].DIN_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`DIN: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n// }),\r\n\r\n// new ColumnLayer({\r\n//     id: `PO4-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 2000000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [43, 172, 219] : [60,60,60],\r\n//     getElevation: d => d['PO4_darwin_3day'],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'PO4_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].PO4_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`PO4: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n// })\r\n\r\n// Deck.gl stuff:\r\n\r\n// source: Natural Earth http://www.naturalearthdata.com/ via geojson.xyz\r\n// const COUNTRIES = 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_50m_admin_0_scale_rank.geojson';\r\n\r\n// const spatialResolutionToMetersMapping = {\r\n//     '1/12° X 1/12°': null,\r\n//     '1/2° X 1/2°': null,\r\n//     '1/25° X 1/25°': null,\r\n//     '1/4° X 1/4°': 30000,\r\n//     '1° X 1°': null,\r\n//     '4km X 4km': null,\r\n//     '70km X 70km': null,\r\n//     'Irregular': null\r\n// }\r\n\r\n// const ambientLight = new AmbientLight({\r\n//     color: [255, 255, 255],\r\n//     intensity: 1000000.0\r\n//   });\r\n\r\n// const lightingEffect = new LightingEffect({ambientLight});\r\n\r\n// const INITIAL_VIEW_STATE = {\r\n//   latitude: 35,\r\n//   longitude: -50,\r\n//   zoom: 3,\r\n//   bearing: 0,\r\n//   pitch: 10\r\n// };\r\n\r\n// let colormap = require('colormap')\r\n\r\n// const paletteSize = 48\r\n\r\n// let colors = colormap({\r\n//     colormap: 'hot',\r\n//     format: 'rba',\r\n//     alpha: [255,255],\r\n//     nshades: paletteSize\r\n// })\r\n\r\n// const minMax = (array, key) => {\r\n//     let min = array[0][key];\r\n//     let max = array[0][key];\r\n//     for(let i = 0; i < array.length; i ++){\r\n//         if(array[i][key] > max || max === null) max = array[i][key];\r\n//         if(array[i][key] < min || min === null) min = array[i][key];\r\n//     }\r\n//     return [min, max];\r\n// }\r\n\r\n// const handleheatmap = (map) => {\r\n//     if(!map.data.length) {\r\n//         console.log(`No data in map ${map.parameters.fields}`);\r\n//         console.log(map);\r\n//         return;\r\n//     }\r\n\r\n//     let minAndMaxArray = minMax(map.data, map.parameters.fields);\r\n//     let min = minAndMaxArray[0];\r\n//     let max = minAndMaxArray[1];\r\n//     let step = (max - min) / paletteSize;\r\n//     console.log(min, max, step);\r\n\r\n//     console.log(`Rendering ${map.data.length} data points.`);\r\n\r\n//     const getColor = (row) => {\r\n//         let index = Math.floor((row[map.parameters.fields] - min) / step);\r\n//         return colors[index] ? colors[index].slice(0,3) : null;\r\n//     }\r\n\r\n//     return new PointCloudLayer({\r\n//     id: 'point-cloud-layer',\r\n//     data: map.data,\r\n//     pickable: false,\r\n//     coordinateSystem: COORDINATE_SYSTEM.LNGLAT,\r\n//     sizeUnits:'meters',\r\n//     pointSize: 28000,\r\n//     getPosition: d => d[map.parameters.fields] ? [d.lon, d.lat] : [600,600],\r\n//     getColor,\r\n//     opacity: 1,\r\n//     // material: null,\r\n//     parameters:{\r\n//         depthTest: false\r\n//       }\r\n//   })\r\n// }\r\n\r\n// const handleHexMap = (map) => {\r\n//     if(!map.data.length) {\r\n//         console.log(`No data in map ${map.parameters.fields}`);\r\n//         console.log(map);\r\n//         return;\r\n//     }\r\n\r\n//     console.log(`Binning and rendering ${map.data.length} data points.`);\r\n\r\n//     // const getColorWeight = (point) => point[map.parameters.fields];\r\n//     const reducer = (accumulator, point) => accumulator + point[map.parameters.fields];\r\n//     const getColorValue = (points) => {\r\n//         return points.reduce(reducer, 0)/points.length;\r\n//     }\r\n\r\n//     return new HexagonLayer({\r\n//     id: 'hexagon-later',\r\n//     radius: 30000,\r\n//     data: map.data,\r\n//     pickable: false,\r\n//     getColorValue,\r\n//     // colorAggregation: 'MEAN',\r\n//     // getColorWeight,\r\n//     getPosition: d => d[map.parameters.fields] ? [d.lon, d.lat] : [0,0],\r\n//   })\r\n// }\r\n\r\n/* <DeckGL \r\n                        // effects={[lightingEffect]}\r\n                        material={null}\r\n                        controller\r\n                        parameters={{\r\n                            depthTest: false\r\n                          }}\r\n                        initialViewState={INITIAL_VIEW_STATE}\r\n                        layers= {[\r\n                            new GeoJsonLayer({\r\n                                id:\"base-map\",\r\n                                data:COUNTRIES,\r\n                                stroked: true,\r\n                                filled: true,\r\n                                lineWidthMinPixels: 1,\r\n                                opacity: 1,\r\n                                getLineDashArray:[3, 3],\r\n                                getLineColor: [0,0,0],\r\n                                getFillColor: [60,60,60]\r\n                            }),\r\n                            ...processedMaps\r\n                        ]\r\n                        }\r\n                    >\r\n                    </DeckGL> */\r\n\r\n// Inside render function\r\n// const processedMaps = this.props.maps.map(map => {\r\n//     switch(map.subType){\r\n//         case subTypes.heatmap:\r\n//             return handleHeatmap(map);\r\n//         case subTypes.hexMap:\r\n//             return handleHexMap(map);\r\n//         default:\r\n//             console.log(`Unknown map type ${map.subType}`);\r\n//     }\r\n// })\r\n","import React from 'react'\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\r\n\r\nimport Home from './Components/Home';\r\nimport Catalog from './Components/Catalog';\r\nimport Register from './Components/Register';\r\nimport Visualization from './Components/Visualization';\r\n\r\nexport default props => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path='/apikeymanagement' component={ Home } />\r\n          <Route exact path='/' component={ Catalog } />\r\n          <Route exact path='/register' component={ Register } />\r\n          <Route exact path='/visualization' component={ Visualization } />\r\n        </Switch>\r\n    </BrowserRouter>\r\n  )","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password to log in.\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper'\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React, { Component } from 'react';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { shadows } from '@material-ui/system';\nimport grey from '@material-ui/core/colors/grey';\n\nimport './App.scss';\nimport Routes from './routes';\n\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\n\nimport colors from './Enums/colors';\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: grey[800],\n      paper: grey[800]\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: grey[800],\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },    \n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    }\n  }\n});\n\nclass App extends Component {\n\n  componentDidCatch = (error, info) => {\n    console.log('Error:');\n    console.log(error);\n    console.log('Info');\n    console.log(info);\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <div className=\"App\">\n          <MuiThemeProvider theme={theme}>\n            <GlobalUIComponentWrapper/>\n            <Routes />\n          </MuiThemeProvider>\n        </div>\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}