{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","Enums/spatialResolutions.js","Utility/mapSpatialResolutionToNumber.js","Utility/GenerateSpatialArray.js","Utility/flattenArray.js","Utility/splitData.js","Utility/mergeArraysAndComputeMeans.js","Utility/mergeArrays.js","Enums/visualizationSubTypes.js","Classes/SpaceTimeData.js","Enums/storedProcedures.js","Classes/TimeSeriesData.js","Classes/DepthProfileData.js","Classes/SectionMapData.js","Classes/SparseData.js","api.js","Redux/sagas.js","Redux/store.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/TopNavBar.js","Components/Home.js","Components/GridDetail.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/regionRenderModes.js","Enums/colors.js","Enums/validation.js","Components/TableStatsDialog.js","Enums/temporalResolutions.js","Utility/mapTemporalResolutionToNumber.js","Components/DataRetrievalForm.js","Components/VizControlPanel.js","Components/ChartComponents/PaletteControls.js","Components/ChartComponents/ZValueControls.js","Components/ChartComponents/ChartControlPanel.js","Components/ChartComponents/SpaceTimeChart.js","Components/ChartComponents/TimeSeriesChart.js","Components/ChartComponents/DepthProfileChart.js","Components/ChartComponents/SectionMapChart.js","Components/ChartComponents/SparseMap.js","Components/Charts.js","Components/CruiseSelector.js","Components/MapContainer.js","Utility/cleanSPParams.js","Components/Visualization.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/LoadingOverlay.js","Components/GlobalUIComponentWrapper.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","CRUISE_TRAJECTORY_REQUEST_SEND","CRUISE_LIST_REQUEST_SEND","initialState","catalog","snackbarIsOpen","snackbarMessage","loadingMessage","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","getCruiseTrajectoryRequestState","cruiseTrajectory","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","cruiseList","getCruiseListRequestState","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","trajectory","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","setLoadingMessage","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addChart","cruiseTrajectoryRequestSend","id","visualizationActionTypes","cruiseTrajectoryRequestSuccess","cruiseTrajectoryRequestProcessing","cruiseListRequestSend","cruiseListRequestSuccess","cruiseListRequestFailure","cruiseListRequestProcessing","apiUrl","spatialResolutions","irregular","halfDegree","quarterDegree","twentyFifthDegree","fourKm","twelfthDegree","seventyKm","oneDegree","mapSpatialResolutionToNumber","resolution","_map","defineProperty","generateSpatialArray","start","end","arr","i","push","flattenArray","flattenedArray","length","j","splitData","changeInterval","numDistinct","Math","floor","mergeArraysAndComputeMeans","mergeTargetDistance","nextMergeStartDistance","numArraysPerMerge","mergedArrays","travelDistance","subArray","sum","count","k","mergeArrays","subTypes","sectionMap","timeSeries","histogram","depthProfile","heatmap","contourMap","sparse","SpaceTimeData","_this","this","classCallCheck","generateCsv","dates","Array","from","console","log","depths","hasDepth","csvArray","parameters","fields","variableValues","lats","lons","join","metadata","Set","lonStart","latStart","lonCount","latCount","zMin","zMax","extent","depthIndexAdjust","row","parseFloat","add","spatialResolution","Spatial_Resolution","lonsList","lon2","latsList","lat2","quantile","subType","splitByDate","splitByDepth","_this2","size","variableValueSubsets","depthInterval","dateInterval","map","subset","vizSubTypes","storedProcedures","spaceTime","TimeSeriesData","stds","lat","lon","depth","csvString","DepthProfileData","SectionMapData","orientation","latsDistinct","lonsDistinct","zonalPlotDepths","meridionalPlotDepths","depthsList","splitBySpace","spaceCount","lonInterval","latInterval","SparseData","Depth_Min","variableIndex","times","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","reduce","queryString","key","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","csvParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","CSVParser","columns","on","record","read","sent","ok","abrupt","getReader","done","write","decode","value","stop","keyRetrieval","_callee2","_context2","json","keyCreation","_ref3","_callee3","description","_context3","trim","_x","apply","arguments","visualization","storedProcedureRequest","_ref4","_callee4","vizData","_context4","t0","spName","_x2","getTableStats","_ref5","_callee5","tableName","_context5","_x3","cruiseTrajectoryRequest","_ref6","_callee6","_context6","_x4","_callee7","_context7","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","queryRequest","cruiseListRequest","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","watchCruiseTrajectoryRequest","watchCruiseListRequest","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_marked6","_marked7","_context8","visualizationActions","query","_marked8","_context9","delay","finalize","_marked9","_context10","_marked10","_context11","_marked11","_context12","takeLatest","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","_context22","_marked22","_context23","all","_marked23","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","withStyles","theme","centered","position","top","props","classes","react_default","createElement","CircularProgress","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleClick","handleChange","event","setState","target","Fragment","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","Grid","container","alignItems","justify","spacing","item","TextField","margin","name","onChange","placeholder","descriptionField","Button","disabled","color","onClick","Components_LoadingSpinner","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","useEffect","Link","component","RouterLink","to","pathname","TopNavBar","handleLogOut","clearState","username","password","getCurrentPath","AppBar","Toolbar","Tabs","Tab","label","firstName","lastName","withRouter","inlineBlock","display","Home","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","wrapper","height","infoCard","padding","gridClass","gridItem","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","variableDetailTable","marginLeft","marginRight","variableDetailTableRow","variableDetailTableCell","borderBottomColor","xs","src","imageSource","alt","Dataset_Description","Data_Source","Distributor","detailCellRendererParams","template","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","textAlign","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","handleColumnRowGroupChanged","forEach","column","setColumnVisible","colId","render","gridPaper","gridSearch","autoFocus","InputLabelProps","shrink","gridWrapper","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","optional","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","regionRenderModes","draw","form","colors","orange","backgroundGray","aqua","validation","depthOneIsLower","depthOneOutOfBounds","depthTwoOutOfBounds","negative","date","dateOneIsLater","dateOneOutOfBounds","dateTwoOutOfBounds","latOneIsHigher","latOneOutOfBounds","latTwoOutOfBounds","lonOneIsHigher","lonOneOutOfBounds","lonTwoOutOfBounds","dataIsIrregular","dateRangeRequired","depthRangeRequired","surfaceOnlyDataset","irregularOnly","dataSizeTooLarge","generic","invalid","dataSizeWarning","dataSizePrevent","Dialog","open","onClose","DialogTitle","Variable","DialogContent","DialogContentText","Long_Name","Sensor","Temporal_Resolution","Time_Min","slice","Time_Max","Lat_Min","Lat_Max","Lon_Min","Depth_Max","temporalResolutions","threeMinutes","sixHourly","daily","weekly","monthly","annual","monthlyClimatology","threeDay","eightDayRunning","eightDays","mapTemporalResolutionToNumber","MenuList","_this$props","options","children","maxHeight","_getValue","getValue","slicedToArray","initialOffset","indexOf","dist_index_esm","style","backgroundColor","itemCount","itemSize","initialScrollOffset","_ref","DropdownIndicator","chunk_5d200a41_browser_esm","ArrowDropDown","SingleValue","assign","Option","DataRetrievalForm","componentDidUpdate","prevProps","search","addDocuments","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","handleVisualizationSpeedDialClose","visualizationSpeedDialOpen","handleVisualizationSpeedDialOpen","handleVisualizationSpeedDialClick","getSelectOptionsFromCatalogItems","items","onAutoSuggestChange","searchString","searchField","estimateDataSize","_this$props2","dt1","dt2","lat1","lon1","selectedVizType","date1","Date","date2","res","dayDiff","checkStartDepth","surfaceOnly","depth1","depth2","replace","toFixed","checkEndDepth","checkStartDate","checkEndDate","checkStartLat","checkEndLat","checkStartLon","Lon_Max","checkEndLon","checkHeatmap","irregularSpatialResolution","checkContour","checkSection","checkHistogram","checkTimeSeries","checkDepthProfile","checkSparseMap","checkGeneralWarn","checkGeneralPrevent","JsSearch","searchIndex","addIndex","_this$state","_this$props3","_validations","fill","_validations2","startDepthMessage","endDepthMessage","startLatMessage","endLatMessage","startLonMessage","endLonMessage","heatmapMessage","contourMessage","sectionMapMessage","histogramMessage","timeSeriesMessage","depthProfileMessage","sparseMapMessage","generalWarnMessage","generalPreventMessage","parametersAreInvalid","some","showUI","displayNone","Components_TableStatsDialog","dataRetrievalFormPaper","shortenHeight","react_select_browser_esm","isLoading","components","IndicatorSeparator","isClearable","onInputChange","filterOption","variableSelect","escapeClearsValue","updateFields","styles","menu","provided","zIndex","input","fontFamily","control","border","&:hover","borderColor","&:focus-within","fontSize","noOptionsMessage","option","&:after","float","singleValue","paddingRight","primary25","primary","IconButton","LibraryBooks","datePickerGridSection","material_ui_pickers_esm","format","minDate","maxDate","autoOk","handleStartDateChange","inputVariant","handleEndDateChange","FormControl","InputLabel","htmlFor","OutlinedInput","aria-describedby","labelWidth","FormHelperText","handleLatLonChange","vizTypeSelectFormControl","Select","inputProps","MenuItem","onVisualize","generalMessage","dataRetrievalFormField","retrieveDataButton","visualizationSpeedDial","visualizeButton","borderRadius","palette","visualizeButtonText","dominantBaseline","textAnchor","paddingLeft","vizSelect","clearCharts","panelPaper","bottom","textDecoration","cursor","iconButton","direction","Tooltip","toggleShowUI","Web","showCharts","toggleChartView","Language","InsertChartOutlined","Delete","colorscaleOptions","colorscaleMenu","iconButtonWrapper","_useState","useState","_useState2","paletteAnchorElement","setPaletteAnchorElement","handleOpenPalette","Palette","currentTarget","Menu","anchorEl","keepMounted","handlePaletteChoice","popover","paddingBottom","zValues","handleZValueConfirm","SwapVert","_React$useState","React","_React$useState2","popoverAnchorElement","setPopoverAnchorElement","_React$useState3","_React$useState4","localZMin","setLocalZMin","_React$useState5","_React$useState6","localZMax","setLocalZMax","handleClose","validations","zMinMessage","zMaxMessage","undefined","Popover","anchorOrigin","vertical","horizontal","transformOrigin","chartWrapper","boxShadow","buttonBlock","onToggleSplitByDate","onToggleSplitByDepth","downloadCsv","DateRange","Waves","CloudDownload","ChartComponents_ZValueControls","ChartComponents_PaletteControls","plots","_props$chart","chart","setSplitByDate","_useState3","_useState4","setSplitByDepth","_useState5","_useState6","subTypeState","_useState7","_useState8","setPalette","_useState9","_useState10","setZValues","_zValues","subSets","generatePlotData","subsets","infoObject","variableName","react_plotly_default","zauto","zmin","zmax","x","y","z","connectgaps","autocolorscale","colorscale","contours","coloring","showlabels","labelfont","family","labelformat","colorbar","text","Unit","exponentformat","layout","font","xaxis","yaxis","paper_bgcolor","annotations","xref","yref","yshift","showarrow","handleContourMap","zsmooth","handleHeatmap","handleHistogram","ChartComponents_ChartControlPanel","setTimeout","requestAnimationFrame","values","csv","blob","Blob","url","URL","createObjectURL","document","setAttribute","appendChild","click","removeChild","error_y","array","opacity","visible","line","distinctMeridiansOrParallelsForSplitting","xAxisLabel","spaceTitle","handleSectionMap","plot","mapbox","center","config","mapboxAccessToken","handleSparseMap","Charts","chartsContainer","ChartComponents_SparseMap","ChartComponents_SpaceTimeChart","ChartComponents_TimeSeriesChart","ChartComponents_DepthProfileChart","ChartComponents_SectionMapChart","cruiseTrajectoryClear","esriFonts","CruiseSelector","getSelectOptionsFromCruiseList","list","Nickname","handleCruiseSelect","selection","ID","selectedCruise","e","outerDiv","getCruiseListState","cruiseSelect","menuList","cruiseInfo","cruiseInfoCell","Name","Start_Time","Chief_Name","Ship_Name","maxWidth","borderStyle","DrawButton","innerDiv","drawButton","helpText","cancelButton","showHelp","polygonSymbol","symbolLayers","material","outline","UiComponents","shouldComponentUpdate","nextProps","nextState","view","esriModules","regionLayer","setShowHelp","drawMode","sketchModel","SketchViewModel","layer","defaultUpdateOptions","toggleToolOnClick","tool","getElementById","updateDomainFromGraphicExtent","Utils","webMercatorToGeographic","graphic","geometry","graphics","addEventListener","removeAll","create","mode","cancel","ui","remove","TrajectoryController","memo","trajectoryLayer","cruiseTrajectoryGeometry","paths","Graphic","symbol","cap","xSize","xmax","xmin","ySize","ymax","ymin","graphicSize","zoom","goTo","maxDuration","speedFactor","MapContainer","_this3","_this3$props","regionRenderMode","spParams","polygon","rings","esm","mapProperties","basemap","viewProperties","MapContainer_UiComponents","updateDomainFromMap","measurementPositions","ref","globeUIRef","Components_CruiseSelector","GraphicsLayer","cleanSPParams","mapVizType","vizType","_mapping","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","parseDate","mm","getUTCMonth","dd","getUTCDate","getUTCFullYear","Visualization","createRef","filteredData","dateString","_this$state$spParams","mapping","Table_Name","coordinates","newCoordinates","min","max","esriModuleNames","loadModules","loadedModules","accumulator","currentValue","currentIndex","background","Components_DataRetrievalForm","Components_VizControlPanel","Components_MapContainer","Components_Charts","userLoginRequestSend","LoginDialog","handleLogin","aria-labelledby","onSubmit","preventDefault","DialogActions","snackbarClose","centerText","Snackbar","autoHideDuration","loader","right","loaderContent","flexDirection","alignItem","spinnerText","spinner","dist","fadeIn","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","Components_LoginDialog","Components_SnackbarWrapper","Components_LoadingOverlay","routes","react_router_dom","Components_GlobalUIComponentWrapper","react_router","exact","path","createMuiTheme","typography","useNextVariants","contrastText","main","secondary","default","grey","paper","overrides","MuiIconButton","MuiToolbar","MuiOutlinedInput","&$focused","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","App","componentDidCatch","info","utils","DateFnsUtils","MuiThemeProvider","hasError","LicenseManager","setLicenseKey","rootElement","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95c4b4ab.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    case interfaceActionTypes.SET_LOADING_MESSAGE: return {...state, loadingMessage: action.payload.message}\r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\n\r\nexport const GET_TABLE_STATS = 'GET_TABLE_STATS';\r\nexport const GET_TABLE_STATS_REQUEST_PROCESSING = 'GET_TABLE_STATS_REQUEST_PROCESSING';\r\nexport const STORE_TABLE_STATS = 'STORE_TABLE_STATS';\r\n\r\nexport const CRUISE_TRAJECTORY_REQUEST_SEND = 'CRUISE_TRAJECTORY_REQUEST_SEND';\r\nexport const CRUISE_TRAJECTORY_REQUEST_SUCCESS = 'CRUISE_TRAJECTORY_REQUEST_SUCCESS';\r\nexport const CRUISE_TRAJECTORY_REQUEST_FAILURE = 'CRUISE_TRAJECTORY_REQUEST_FAILURE';\r\nexport const CRUISE_TRAJECTORY_REQUEST_PROCESSING = 'CRUISE_TRAJECTORY_REQUEST_PROCESSING';\r\nexport const CRUISE_TRAJECTORY_CLEAR = 'CRUISE_TRAJECTORY_CLEAR';\r\n\r\nexport const CRUISE_LIST_REQUEST_SEND = 'CRUISE_LIST_REQUEST_SEND';\r\nexport const CRUISE_LIST_REQUEST_SUCCESS = 'CRUISE_LIST_REQUEST_SUCCESS';\r\nexport const CRUISE_LIST_REQUEST_FAILURE = 'CRUISE_LIST_REQUEST_FAILURE';\r\nexport const CRUISE_LIST_REQUEST_PROCESSING = 'CRUISE_LIST_REQUEST_PROCESSING';","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n    loadingMessage: '',\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    getCruiseTrajectoryRequestState: null,\r\n    cruiseTrajectory: null,\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    cruiseList: null,\r\n    getCruiseListRequestState: null\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';\r\n\r\nexport const SET_LOADING_MESSAGE = 'SET_LOADING_MESSAGE';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING: return {...state, getCruiseTrajectoryRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS: return {...state,\r\n            cruiseTrajectory: action.payload.trajectory,\r\n            getCruiseTrajectoryRequestState: states.succeeded\r\n        }\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR: return {...state, cruiseTrajectory: null}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE: return {...state, getCruiseTrajectoryRequestState: states.failed}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING: return {...state, getCruiseListRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS: return {\r\n            ...state,\r\n            getCruiseListRequestState: states.succeeded,\r\n            cruiseList: action.payload.cruiseList\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})\r\n\r\nexport const setLoadingMessage = (message) => ({\r\n    type:interfaceActionTypes.SET_LOADING_MESSAGE,\r\n    payload: {\r\n        message\r\n    }\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const getTableStats = (tableName) => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS,\r\n    payload: {\r\n        tableName\r\n    }\r\n})\r\n\r\nexport const getTableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storeTableStats = (tableStats) => ({\r\n    type: visualizationActionTypes.STORE_TABLE_STATS,\r\n    payload: {\r\n        tableStats\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSuccess = (trajectory) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS,\r\n    payload: {\r\n        trajectory\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseTrajectoryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const cruiseTrajectoryClear = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR\r\n})\r\n\r\nexport const cruiseListRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SEND,\r\n})\r\n\r\nexport const cruiseListRequestSuccess = (cruiseList) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS,\r\n    payload: {\r\n        cruiseList\r\n    }\r\n})\r\n\r\nexport const cruiseListRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseListRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING,\r\n})","// export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\nexport const apiUrl = 'https://simonscmap.dev';","const spatialResolutions = {\r\n    irregular: 'Irregular',\r\n    halfDegree: '1/2° X 1/2°' ,\r\n    quarterDegree: '1/4° X 1/4°' ,\r\n    twentyFifthDegree: '1/25° X 1/25°' ,\r\n    fourKm: '4km X 4km',\r\n    twelfthDegree: '1/12° X 1/12°',\r\n    seventyKm: '70km X 70km',\r\n    oneDegree: '1° X 1°'\r\n}\r\n\r\nexport default spatialResolutions;","import spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nconst mapSpatialResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [spatialResolutions.halfDegree] : .5,\r\n        [spatialResolutions.quarterDegree] : .25,\r\n        [spatialResolutions.twentyFifthDegree] : .04,\r\n        [spatialResolutions.fourKm] : .041672,\r\n        [spatialResolutions.twelfthDegree] : .083333,\r\n        [spatialResolutions.oneDegree] : 1,\r\n        [spatialResolutions.seventyKm] : .25\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapSpatialResolutionToNumber;","const generateSpatialArray = (start, resolution, end) => {\r\n    let arr = [];\r\n\r\n    for(let i = start; i <= end; i += resolution){\r\n        arr.push(i);\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nexport default generateSpatialArray;","// Flattens an array by 1 level\r\n// [[[],[]], [[],[]], [[],[]]] => [[], [], [], [], [], []]\r\n\r\nconst flattenArray = (arr) => {\r\n    let flattenedArray = [];\r\n\r\n    for(let i = 0; i < arr.length; i++){\r\n        for(let j = 0; j < arr[i].length; j++){\r\n            flattenedArray.push(arr[i][j]);\r\n        }\r\n    }\r\n\r\n    return flattenedArray;\r\n}\r\n\r\nexport default flattenArray;","// Interval number of indices between changes in this parameter, or in order words\r\n// how many times will we see the same value for this parameter in a row before it changes\r\n// as we iterate through the values array.\r\n// We use modulo for cases where data.length / interval is larger than the number of \r\n// distinct values for that parameter.\r\n\r\nconst splitData = (data, changeInterval, numDistinct) => {\r\n    var splitData = [];\r\n\r\n    for(let i = 0; i < numDistinct; i++){\r\n        splitData.push([]);\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        let index = Math.floor(i / changeInterval) % numDistinct;\r\n        splitData[index].push(data[i]);\r\n    }\r\n\r\n    return splitData;\r\n}\r\n\r\nexport default splitData;","// mergeTargetDistance - number of hops between arrays being merged\r\n// mergeTargetNumber - number of arrays being merged - implicit\r\n// nextStartDistance - once a merge is complete how many hops to next start\r\nconst mergeArraysAndComputeMeans = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n    \r\n    // Find each merging start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        // Iterate through each value in the first array of this merge. Count\r\n        // the number of values summed so we can ignore nulls and compute a mean.\r\n        for(let j = 0; j < data[i].length; j ++){\r\n            let sum = 0;\r\n            let count = 0;\r\n\r\n            // Aggregate values of all merge targets\r\n            for(let k = i; k < i + (mergeTargetDistance * numArraysPerMerge); k += mergeTargetDistance){\r\n                if(data[k][j] !== null) {\r\n                    sum += data[k][j];\r\n                    count ++;\r\n                };\r\n            }\r\n            subArray.push(count < 1 ? null : sum / (count));\r\n        }\r\n\r\n        mergedArrays.push(subArray)\r\n    }\r\n\r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArraysAndComputeMeans;","const mergeArrays = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n\r\n    // Find each merge start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        for(let j = i; j <= i + travelDistance; j += mergeTargetDistance){\r\n            subArray = [...subArray, ...data[j]];\r\n        }\r\n\r\n        mergedArrays.push(subArray);\r\n    }\r\n   \r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArrays;\r\n\r\n","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    heatmap: 'Heatmap',\r\n    contourMap: 'Contour Map',\r\n    sparse: 'Sparse'\r\n}\r\n\r\nexport default subTypes;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/mergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\n\r\nclass SpaceTimeData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = null;\r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n        this.lonStart = null;\r\n        this.latStart = null;\r\n        this.lonCount = null;\r\n        this.latCount = null;\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        // Only on first row\r\n        if(this.hasDepth === null) {\r\n            this.hasDepth = row.length === 5;\r\n            this.lonStart = parseFloat(row[2]);\r\n            this.latStart = parseFloat(row[1]);\r\n            this.depthIndexAdjust = this.hasDepth ? 1 : 0;\r\n        }\r\n\r\n        if(this.hasDepth){\r\n            this.depths.add(row[3]);\r\n        }\r\n\r\n        this.dates.add(row[0]);\r\n\r\n        this.variableValues.push(parseFloat(row[3 + this.depthIndexAdjust]));\r\n    }\r\n\r\n    finalize() {\r\n        const spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n\r\n        // Simple arrays of lats and lons\r\n        let lonsList = generateSpatialArray(this.lonStart, spatialResolution, this.parameters.lon2);\r\n        let latsList = generateSpatialArray(this.latStart, spatialResolution, this.parameters.lat2);\r\n\r\n        this.lonCount = lonsList.length;\r\n        this.latCount = latsList.length;\r\n\r\n        this.zMin = quantile(this.variableValues, .05);\r\n        this.zMax = quantile(this.variableValues, .95);\r\n        this.extent = extent(this.variableValues);\r\n\r\n        // Expanded arrays to be used in plots\r\n        let lats = [];\r\n        let lons = []\r\n\r\n        for(let i = 0; i < latsList.length; i ++){\r\n            for(let j = 0; j < lonsList.length; j++){\r\n                lats.push(latsList[i]);\r\n                lons.push(lonsList[j]);\r\n            }\r\n        }\r\n\r\n        this.lats = lats;\r\n        this.lons = lons;\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        if(this.depths.size === 0) this.depths.add('Surface');\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const latInterval = this.lonCount;\r\n        const depthInterval = latInterval * this.latCount;\r\n        const dateInterval = depthInterval * this.depths.size;\r\n\r\n        // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n        variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, depthInterval, this.depths.size));\r\n        variableValueSubsets = flattenArray(variableValueSubsets);\r\n\r\n        // Contour and heatmap compute mean variable values per lat and lon\r\n        // when not split by date and/or time\r\n        if(subType === vizSubTypes.contourMap || subType === vizSubTypes.heatmap) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    this.depths.size, \r\n                    this.depths.size\r\n                    );\r\n    \r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    this.depths.size, \r\n                    1, \r\n                    this.dates.size\r\n                    );\r\n    \r\n            } else {\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    variableValueSubsets.length, \r\n                    variableValueSubsets.length\r\n                    );            \r\n            }\r\n        } \r\n        \r\n        // Histograms split and aggregate without computing means\r\n        else if (subType === vizSubTypes.histogram) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets, \r\n                    1,\r\n                    this.depths.size,\r\n                    this.depths.size\r\n                    );\r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets,\r\n                    this.depths.size,\r\n                    1,\r\n                    this.dates.size\r\n                );\r\n            } else {\r\n                variableValueSubsets = [this.variableValues];\r\n            }\r\n        }\r\n\r\n        // Nothing here yet\r\n        else {}\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        console.log(dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i]},${depths[Math.floor(i / (this.variableValues.length / (dates.length * depths.length))) % depths.length]},${this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i]},${this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SpaceTimeData;","const storedProcedures = {\r\n    sectionMap: 'uspSectionMap',\r\n    timeSeries: 'uspTimeSeries',\r\n    spaceTime: 'uspSpaceTime',\r\n    depthProfile: 'uspDepthProfile'\r\n}\r\n\r\nexport default storedProcedures;","class TimeSeriesData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.dates = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depth = null;\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.depthIndexAdjust = row.length === 6 ? 1 : 0;\r\n            this.lat = row[1];\r\n            this.lon = row[2];\r\n            this.depth = row.length === 6 ? row[3] : false;\r\n        }\r\n\r\n        this.variableValues.push(row[3 + this.depthIndexAdjust]);\r\n        this.stds.push(row[4 + this.depthIndexAdjust]);\r\n        this.dates.push(row[0]);\r\n    }\r\n\r\n    finalize() {\r\n        if(this.depth === false) this.depth = 'Surface';\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }    \r\n\r\n    generateCsv() {\r\n        let csvString = `time,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.dates[i]},${this.variableValues[i]},${this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default TimeSeriesData;","class DepthProfileData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depths = [];\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.lat = parseFloat(row[0]);\r\n            this.lon = parseFloat(row[1]);\r\n        }\r\n\r\n        this.variableValues.push(parseFloat(row[2]));\r\n        this.stds.push(parseFloat(row[3]));\r\n        this.depths.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        // pass\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }\r\n    \r\n    generateCsv() {\r\n        let csvString = `depth,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.depths[i]},${this.variableValues[i]},${this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default DepthProfileData;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\n\r\nclass SectionMapData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        \r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n        \r\n        this.lonStart = null;\r\n        this.latStart = null;\r\n        this.lonCount = null;\r\n        this.latCount = null;\r\n        \r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.orientation = null;\r\n        \r\n        this.latsDistinct = null;\r\n        this.lonsDistinct = null;\r\n\r\n        this.lats = null;\r\n        this.lons = null;\r\n        this.zonalPlotDepths = null;\r\n        this.meridionalPlotDepths = null;\r\n    }\r\n\r\n    // time, lat, lon, depth, value\r\n    add(row) {\r\n        // Only on first row\r\n        if(this.latStart === null) {\r\n            this.latStart = parseFloat(row[1]);\r\n            this.lonStart = parseFloat(row[2]);\r\n        }\r\n\r\n        this.depths.add(row[3]);\r\n        this.dates.add(row[0]);\r\n\r\n        this.variableValues.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        const spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n\r\n        // Simple arrays of lats and lons\r\n        let lonsList = generateSpatialArray(this.lonStart, spatialResolution, this.parameters.lon2);\r\n        let latsList = generateSpatialArray(this.latStart, spatialResolution, this.parameters.lat2);\r\n\r\n        this.lonCount = lonsList.length;\r\n        this.latCount = latsList.length;\r\n\r\n        this.lonsDistinct = lonsList;\r\n        this.latsDistinct = latsList;\r\n\r\n        this.zMin = quantile(this.variableValues, .05);\r\n        this.zMax = quantile(this.variableValues, .95);\r\n        this.extent = extent(this.variableValues);\r\n\r\n        // Expanded arrays to be used in plots\r\n        let lats = [];\r\n        let lons = []\r\n\r\n        for(let i = 0; i < latsList.length; i ++){\r\n            for(let j = 0; j < this.depths.size; j++){\r\n                lats.push(latsList[i]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < lonsList.length; i ++){\r\n            for(let j = 0; j < this.depths.size; j++){\r\n                lons.push(lonsList[i]);\r\n            }\r\n        }\r\n\r\n        this.lats = lats;\r\n        this.lons = lons;\r\n\r\n        let zonalPlotDepths = [];\r\n        let meridionalPlotDepths = [];\r\n        let depthsList = Array.from(this.depths).map(depth => parseFloat(depth));\r\n\r\n        for(let i = 0; i < this.latsDistinct.length; i++){\r\n            for(let j = depthsList.length - 1; j > -1; j--){\r\n                meridionalPlotDepths.push(depthsList[j]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < this.lonsDistinct.length; i++){\r\n            for(let j = depthsList.length - 1; j > -1; j--){\r\n                zonalPlotDepths.push(depthsList[j]);\r\n            }\r\n        }\r\n\r\n        this.zonalPlotDepths = zonalPlotDepths;\r\n        this.meridionalPlotDepths = meridionalPlotDepths;\r\n        \r\n        this.orientation = this.lonCount > this.latCount ? 'zonal' : 'meridional';\r\n    }\r\n\r\n    // Direction is meridional or zonal\r\n    generatePlotData(orientation, splitByDate, splitBySpace) {\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const lonInterval = this.depths.size;\r\n        const latInterval = lonInterval * this.lonCount;\r\n        const dateInterval = latInterval * this.latCount;\r\n\r\n        // // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n\r\n        // either latCount or lonCount depending on orientation\r\n        let spaceCount;\r\n\r\n        if(orientation === 'zonal') {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, latInterval, this.latCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = this.latCount;\r\n        }\r\n\r\n        else {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, lonInterval, this.lonCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = this.lonCount;\r\n        }\r\n\r\n        if(splitByDate && splitBySpace){\r\n            // pass\r\n        } else if (splitByDate){\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                spaceCount,\r\n                spaceCount\r\n            )\r\n        } else if (splitBySpace) {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                spaceCount,\r\n                1,\r\n                this.dates.size\r\n            )\r\n        } else {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                variableValueSubsets.length,\r\n                variableValueSubsets.length\r\n            )\r\n        }\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i]},${depths[i % depths.length]},${this.variableValues[i]}`);\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SectionMapData;","import { quantile, extent } from 'd3-array';\r\n\r\nclass SparseData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = Boolean(payload.metadata.Depth_Min);\r\n        this.variableIndex = payload.metadata.Depth_Min ? 4 : 3;\r\n        this.depths = [];\r\n        this.times = [];\r\n        this.variableValues = [];\r\n        this.lats = [];\r\n        this.lons = [];\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n    }\r\n\r\n    add(row) {\r\n        if(row[this.variableIndex]){\r\n            this.times.push(row[0]);\r\n            this.lats.push(parseFloat(row[1]));\r\n            this.lons.push(parseFloat(row[2]));\r\n            if(this.hasDepth) this.depths.push(parseFloat(row[3]));\r\n            this.variableValues.push(parseFloat(row[this.variableIndex]));\r\n        }\r\n    }\r\n\r\n    finalize() {\r\n        this.zMin = quantile(this.variableValues, .05);\r\n        this.zMax = quantile(this.variableValues, .95);\r\n        this.extent = extent(this.variableValues);\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        return this.variableValues;\r\n    }\r\n\r\n    generateCsv(){\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${this.depths[i]},${this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SparseData;","import CSVParser from 'csv-parse';\r\n\r\nimport { apiUrl } from './config';\r\nimport SpaceTimeData from './Classes/SpaceTimeData';\r\n\r\nimport storedProcedures from './Enums/storedProcedures';\r\nimport TimeSeriesData from './Classes/TimeSeriesData';\r\nimport DepthProfileData from './Classes/DepthProfileData';\r\nimport SectionMapData from './Classes/SectionMapData';\r\nimport SparseData from './Classes/SparseData';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            catalog.push(record)\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/catalog/new', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(payload) => {\r\n    const decoder = new TextDecoder();\r\n    var vizData;\r\n\r\n    switch(payload.parameters.spName) {\r\n        case storedProcedures.spaceTime:\r\n            if(payload.subType === 'Sparse') vizData = new SparseData(payload);\r\n            else vizData = new SpaceTimeData(payload);\r\n            break;\r\n\r\n        case storedProcedures.timeSeries:\r\n            vizData = new TimeSeriesData(payload);\r\n            break;\r\n\r\n        case storedProcedures.depthProfile:\r\n            vizData = new DepthProfileData(payload);\r\n            break;\r\n\r\n        case storedProcedures.sectionMap:\r\n            vizData = new SectionMapData(payload);\r\n            break;\r\n\r\n        default:\r\n            console.log('Unknown sproc name');\r\n    }\r\n\r\n    let response = await fetch(apiUrl + '/api/data/sp?' + storedProcedureParametersToUri(payload.parameters), fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            vizData.add(record);\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;\r\n}\r\n\r\napi.visualization.cruiseTrajectoryRequest = async(payload) => {\r\n    const cruiseId = payload.id;\r\n    const decoder = new TextDecoder();\r\n    let trajectory = {lats: [], lons: []};\r\n\r\n    let response = await fetch(apiUrl + '/api/data/cruisetrajectory?' + `id=${payload.id}`, fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            trajectory.lats.push(parseFloat(record[1]));\r\n            trajectory.lons.push(parseFloat(record[2]));\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return trajectory;\r\n}\r\n\r\napi.visualization.cruiseList = async() => {\r\n    let response = await fetch(apiUrl + '/api/data/cruiselist', fetchOptions);\r\n\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;   \r\n}\r\n\r\nexport default api;\r\n\r\n// Test for splitData\r\n// let depthMap = {};\r\n//     let dateMap = {};\r\n\r\n//     let depthCount = 0;\r\n//     vizData.depths.forEach(depth => {\r\n//         depthMap[depth] = depthCount;\r\n//         depthCount ++;\r\n//     })\r\n\r\n//     let dateCount = 0;\r\n//     vizData.dates.forEach(date => {\r\n//         dateMap[date] = dateCount;\r\n//         dateCount ++;\r\n//     })\r\n    \r\n//     let splitData = vizData.generatePlotData(true,true);\r\n//     console.log(splitData);\r\n//     for(let i = 0; i < tempArr.length; i++){\r\n//         let theValue = tempArr[i].Fe\r\n//         let theIndex = dateMap[tempArr[i].time] * vizData.depths.size + depthMap[tempArr[i].depth];\r\n//         console.log(splitData[theIndex]);\r\n//         console.log(theValue);\r\n//         if(splitData[theIndex].includes(theValue)) console.log('correct');\r\n//         else {\r\n//             console.log('Incorrect'); \r\n//             return;\r\n//         }\r\n//     }\r\n\r\n//     console.log(depthMap);\r\n//     console.log(dateMap);","import { put, takeLatest, all, call, delay } from 'redux-saga/effects';\r\n// import { eventChannel } from 'redux-saga';\r\nimport Cookies from 'js-cookie';\r\n// import worker from '../worker';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    \r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){    \r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    \r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    \r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(action){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    \r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    \r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    \r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload);\r\n    yield delay(50);\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'));\r\n    yield delay(70);\r\n    \r\n    // Result will be an object containing variable values and describing date shape\r\n    if(!result){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen(\"Request failed\"));\r\n    } else {\r\n        if(result.variableValues.length > 0){\r\n            result.finalize();\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            yield put(visualizationActions.addChart({subType: action.payload.subType, data:result}));\r\n           \r\n        } else {\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges. Try selecting a different date or depth range.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* cruiseTrajectoryRequest(action) {\r\n    yield put(visualizationActions.cruiseTrajectoryRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Cruise Data'));\r\n    let result = yield call(api.visualization.cruiseTrajectoryRequest, action.payload);\r\n\r\n    if(!result || !result.lats.length){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(interfaceActions.snackbarOpen(`Unable to Fetch Cruise Data`));\r\n    } else {\r\n        yield put(visualizationActions.cruiseTrajectoryRequestSuccess(result));\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n    }\r\n}\r\n\r\nfunction* cruiseListRequest() {\r\n    yield put(visualizationActions.cruiseListRequestProcessing());\r\n    let cruiseList = yield call(api.visualization.cruiseList);\r\n\r\n    if(!cruiseList) {\r\n        yield put(visualizationActions.cruiseListRequestFailure());\r\n    } else{\r\n        yield put(visualizationActions.cruiseListRequestSuccess(cruiseList));\r\n    }\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\nfunction* watchCruiseTrajectoryRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND, cruiseTrajectoryRequest);\r\n}\r\n\r\nfunction* watchCruiseListRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_LIST_REQUEST_SEND, cruiseListRequest);\r\n}\r\n\r\n// function createWorkerChannel(worker) {\r\n//     return eventChannel(emit => {\r\n//         worker.onmessage = message => {\r\n//             emit(message);\r\n//         }\r\n\r\n//         const unsubscribe = () => {\r\n//             worker.teminate();\r\n//         }\r\n      \r\n//         return unsubscribe;\r\n//     })\r\n// }\r\n\r\n// function* watchWorkerChannel(){\r\n//     const workerChannel = yield call(createWorkerChannel, worker);\r\n\r\n//     while (true) {\r\n//         const message = yield take(workerChannel);\r\n//         yield put(message.data.type, message.data.payload);\r\n//         //   yield put({ type: INCOMING_PONG_PAYLOAD, payload })\r\n//         //   yield fork(pong, socket)\r\n//       }\r\n// }\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        watchCruiseTrajectoryRequest(),\r\n        watchCruiseListRequest()\r\n        // watchWorkerChannel(),\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>       \r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Keys\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n            </Paper>\r\n            </React.Fragment>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires a user account. Please <Link component={RouterLink} to={{pathname: '/apikeymanagement'}} onClick={() => props.showLoginDialog()}> log in\r\n            </Link> or <Link component={RouterLink} to={{pathname: '/register'}}> register\r\n            </Link>.\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return state;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    getCurrentPath = () => {\r\n        switch(this.props.location.pathname){\r\n            case '/apikeymanagement': return 0;\r\n            case '/': return 1;\r\n            case '/visualization': return 2;\r\n            case '/register': return 3;\r\n            default: return 0;\r\n        }\r\n    };\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <Tabs value={this.getCurrentPath() || 0} onChange={this.handleChange}>\r\n                        <Tab key='0' component={Link} to={{pathname: '/apikeymanagement'}} label='API Keys' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='1' component={Link} to={{pathname: '/'}} label='Catalog' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='2' component={Link} to={{pathname: '/visualization'}} label='Visualization' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        {this.props.user ? '' : <Tab key='3' component={Link} to={{pathname: '/register'}} label='Register' onClick={this.props.restoreInterfaceDefaults}/>}\r\n                        {this.props.user ? '' : <Tab key='4' label='Log In' onClick={this.props.showLoginDialog}/>}\r\n                        {this.props.user ? <Tab key='5' label={`Welcome ${this.props.user.firstName} ${this.props.user.lastName}!`}/> : ''}\r\n                        {this.props.user ? <Tab key='4' label='Log Out' onClick={this.handleLogOut}/> : ''}                        \r\n                    </Tabs>                    \r\n                </Toolbar>\r\n                {/* <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/> */}\r\n            </AppBar>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user ? <ApiKeyManagement/> : <LoginRequiredPrompt/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'Variable'],\r\n    ['Spatial Resolution', 'Spatial_Resolution'],\r\n    ['Temporal Resolution', 'Temporal_Resolution'],\r\n    ['Unit', 'Unit'],\r\n    ['Process Level', 'Process_Level'],\r\n    ['Study Domain', 'Study_Domain'],\r\n    ['SQL Table Name', 'Table_Name']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        margin: '-10px auto 0px auto',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(2),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing(2),\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        width: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={8} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={imageSource + 'viz_sample.png'} alt=\"Sample Visualization\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.Dataset_Description}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.Data_Source}\r\n                        </Typography> <br></br>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.Distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable} size='small'>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst detailCellRendererParams = {\r\n  template:\r\n    '<div style=\"height: 100%; box-sizing: border-box\" class=\"testClass\">' +\r\n      '  <div style=\"height: 10%;\">Call Details</div>' +\r\n      '  <div ref=\"eDetailGrid\" style=\"height: 90%;\"></div>' +\r\n    \"</div>\"\r\n}\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"Long_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"Variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"Table_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"Dataset_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"Make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"Sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"Study_Domain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"Process_Level\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"Spatial_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"Temporal_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"Unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'Keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '60vh', \r\n    width: '90%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '60px 5vw',\r\n    padding: '30px'\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n        <Paper elevation={12} className={classes.gridPaper}>\r\n          <TextField\r\n            className={classes.gridSearch}\r\n            autoFocus={true}\r\n            margin=\"normal\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            variant='outlined'\r\n            name='filterText'\r\n            value={this.state.filterText}\r\n            onChange={this.handleChange}\r\n            label=\"Variable Search\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n          />\r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              suppressDragLeaveHidesColumns= {true}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n              detailCellRendererParams={detailCellRendererParams}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog) return <AGGridWrapper catalog={this.props.catalog}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n        else if(this.props.catalogRequestState === states.failed) return <p>Failed to get catalog. Have you tried turning it off and then on again?</p>\r\n        else return <p>I don't know how we got here. Please debug the catalog retrieval process.</p>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const regionRenderModes = {\r\n    draw: 'draw',\r\n    form: 'form'\r\n}\r\n\r\nexport default regionRenderModes;","const colors = {\r\n    orange: '#FF8000',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9'\r\n}\r\n\r\nexport default colors;","const validation = {\r\n    depth: {\r\n        depthOneIsLower: 'Start cannot be larger than end',\r\n        depthOneOutOfBounds: 'Start must be smaller than $',\r\n        depthTwoOutOfBounds: 'End must be larger than $',\r\n        negative: 'Depth cannot be negative'\r\n    },\r\n\r\n    date: {\r\n        dateOneIsLater: 'Start cannot be later than end',\r\n        dateOneOutOfBounds: 'Start must be before $',\r\n        dateTwoOutOfBounds: 'End must be after $'\r\n    },\r\n\r\n    lat: {\r\n        latOneIsHigher: 'Start cannot be larger than end.',\r\n        latOneOutOfBounds: 'Start must be less than $',\r\n        latTwoOutOfBounds: 'End must be greater than $'\r\n    },\r\n\r\n    lon: {\r\n        lonOneIsHigher: 'Start cannot be larger than end.',\r\n        lonOneOutOfBounds: 'Start must be less than $',\r\n        lonTwoOutOfBounds: 'End must be greater than $'\r\n    },\r\n\r\n    type: {\r\n        dataIsIrregular: '$ is not available for sparse data',\r\n        dateRangeRequired: '$ requires a range of dates',\r\n        depthRangeRequired: '$ requires a range of depths',\r\n        surfaceOnlyDataset: '$ contains only surface data',\r\n        irregularOnly: 'Sparse map is only available for sparse data',\r\n        dataSizeTooLarge: 'Data set is too large for this visualization type.'\r\n    },\r\n\r\n    generic: {\r\n        invalid: 'Invalid input',\r\n        dataSizeWarning: 'Wait time and application performance may be poor due to size of data.',\r\n        dataSizePrevent: 'Data set is too large. Please reduce date range or area size.'\r\n    }\r\n}\r\n\r\nexport default validation;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    const { data } = props;\r\n\r\n    if(!data) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{data.Variable}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {data.Long_Name}\r\n                </DialogContentText>\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{data.Sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{data.Spatial_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{data.Temporal_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{data.Time_Min ? data.Time_Min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{data.Time_Max ? data.Time_Max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lat_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lat_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{data.Depth_Min ? `${data.Depth_Min}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{data.Depth_Max ? `${data.Depth_Max}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);","const temporalResolutions = {\r\n    threeMinutes: 'Three Minutes',\r\n    sixHourly: 'Six Hourly',\r\n    daily: 'Daily',\r\n    weekly: 'Weekly',\r\n    monthly: 'Monthly',\r\n    annual: 'Annual',\r\n    irregular: 'Irregular',\r\n    monthlyClimatology: 'Monthly Climatology',\r\n    threeDay: 'Three Days',\r\n    eightDayRunning: 'Eight Day Running',\r\n    eightDays: 'Eight Days '\r\n}\r\n\r\nexport default temporalResolutions;","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nconst mapTemporalResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [temporalResolutions.threeMinutes] : 1,\r\n        [temporalResolutions.sixHourly] : 1,\r\n        [temporalResolutions.daily] : 1,\r\n        [temporalResolutions.weekly] : 7,\r\n        [temporalResolutions.monthly] : 30,\r\n        [temporalResolutions.annual] : 365,\r\n        [temporalResolutions.irregular] : null,\r\n        [temporalResolutions.monthlyClimatology]: 30,\r\n        [temporalResolutions.threeDay]: 3,\r\n        [temporalResolutions.eightDayRunning]: 8,\r\n        [temporalResolutions.eightDays]: 8\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapTemporalResolutionToNumber;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as List } from \"react-window\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { ArrowDropDown, LibraryBooks } from '@material-ui/icons';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend } from '../Redux/actions/visualization';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    dataRetrievalFormPaper: {\r\n        width: '1000px',\r\n        height: '260px',\r\n        padding: theme.spacing(2.5),\r\n        position:'fixed',\r\n        top: '10px',\r\n        left: '50%',\r\n        marginLeft: '-600px',\r\n        zIndex: 2,\r\n        paddingTop: theme.spacing(1.5),\r\n    },\r\n\r\n    dataRetrievalFormField: {\r\n        padding:`0px ${theme.spacing(1)}`\r\n    },\r\n\r\n    retrieveDataButton: {\r\n        margin:'10px auto'\r\n    },\r\n\r\n    variableSelect: {\r\n        margin: '0 30px 20px 30px'\r\n    },\r\n\r\n    visualizationSpeedDial: {\r\n        position: 'relative',\r\n        top: '5px',\r\n        left: '30px'\r\n    },\r\n\r\n    visualizeButton: {\r\n        borderRadius:'10%',\r\n        width: '100px',\r\n        height:'40px',\r\n        margin: 'auto 0',\r\n        backgroundColor: theme.palette\r\n    },\r\n\r\n    visualizeButtonText: {\r\n        dominantBaseline: \"middle\",\r\n        textAnchor: \"middle\"\r\n    },\r\n\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    datePickerGridSection: {\r\n        paddingLeft: '40px !important',\r\n        paddingRight: '40px !important'\r\n    },\r\n\r\n    shortenHeight: {\r\n        height: '60px'\r\n    },\r\n\r\n    vizSelect: {\r\n        minWidth: 120\r\n    },\r\n\r\n    gridItem: {\r\n        height: '48px'\r\n    },\r\n\r\n    generalMessage: {\r\n        textAlign: 'left'\r\n    },\r\n\r\n    vizTypeSelectFormControl: {\r\n        width: 150\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend\r\n}\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nclass MenuList extends Component {\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <List\r\n                style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length === 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <ArrowDropDown />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nclass DataRetrievalForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('Variable');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            visualizationSpeedDialOpen: false,\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    // When we get the catalog add them to the search\r\n    // This is not reactive - it mutates the search piece of state in \r\n    // a way that is not visible to react and will not trigger a re-render.\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.Variable,\r\n            label: item.Variable === item.Long_Name ? (item.Variable.length > 48 ? item.Variable.slice(0,45) + '...' : item.Variable) : (item.Variable.length > 23 ? item.Variable.slice(0,23) : item.Variable) + ' : ' + (item.Long_Name.length > 38 ? item.Long_Name.slice(0,35) + '...' : item.Long_Name),\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Histogram');\r\n        return '';\r\n    }\r\n\r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Depth Profile');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = () => {\r\n        if(this.estimateDataSize() > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = () => {\r\n        if(this.estimateDataSize() > 50000000) return validation.generic.dataSizePrevent;\r\n        return ''\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartDate(),\r\n                this.checkEndDate(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(),\r\n                this.checkGeneralPrevent()\r\n            ];\r\n        } else validations = Array(17).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startDateMessage,\r\n            endDateMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage\r\n        ] = validations;\r\n\r\n        const parametersAreInvalid = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage\r\n        ].some(message => message.length);\r\n\r\n        //     if(isNaN(Date.parse(dt1))){\r\n        //         this.props.snackbarOpen('Please enter a valid starting date.');\r\n        //         return true;\r\n        //     }\r\n    \r\n        //     if(isNaN(Date.parse(dt2))){\r\n        //         this.props.snackbarOpen('Please enter a valid ending date.');\r\n        //         return true;\r\n        //     }\r\n    \r\n        //     return false;\r\n        // }\r\n\r\n        return (\r\n            <div className={this.props.showUI ? '' : classes.displayNone} id='drf'>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n                <Paper className={classes.dataRetrievalFormPaper}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={11} className={classes.shortenHeight}>\r\n                            <Select\r\n                                isLoading = {catalogRequestState === states.inProgress}\r\n                                components={{\r\n                                    IndicatorSeparator:'',\r\n                                    DropdownIndicator,\r\n                                    Option,\r\n                                    MenuList,\r\n                                    SingleValue,\r\n                                }}\r\n                                isClearable\r\n                                onInputChange={this.onAutoSuggestChange}\r\n                                filterOption={null}\r\n                                className={classes.variableSelect}\r\n                                autoFocus\r\n                                escapeClearsValue\r\n                                name=\"fields\"\r\n                                label=\"Variables\"\r\n                                options={options}\r\n                                onChange={this.props.updateFields}\r\n                                value={fields}\r\n                                placeholder=\"Variable Search\"\r\n                                styles={{\r\n                                    menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                                    input: provided => ({...provided,\r\n                                        color: 'white',\r\n                                        fontFamily: '\"Lato\", sans-serif'\r\n                                    }),\r\n\r\n                                    control: provided => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        border: '1px solid #333333',\r\n                                        '&:hover': { borderColor: 'white' },\r\n                                        '&:focus-within': { borderColor: colors.orange },\r\n                                    }),\r\n\r\n                                    placeholder: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        fontSize: '14px'\r\n                                    }),\r\n\r\n                                    noOptionsMessage: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        backgroundColor: colors.backgroundGray\r\n                                    }),\r\n\r\n                                    option: (provided, state) => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        color: state.data.data.Sensor === 'Satellite' ? '#1acf02' : state.data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        '&:hover': { backgroundColor: '#383838' },\r\n                                        '&:after': { \r\n                                            content: state.data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            float: 'left'\r\n                                        },\r\n                                    }),\r\n\r\n                                    singleValue: (provided, state) => ({...provided,\r\n                                        fontFamily: state.data.data.Sensor === 'Satellite' ? 'Font Awesome 5 Free': '\"Lato\", sans-serif',\r\n                                        color: state.data.data.Sensor === 'Satellite' ? '#1acf02' : state.data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        paddingRight: '20px',\r\n                                        '&:after': { \r\n                                            content: state.data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            fontSize: '18px',\r\n                                            position: 'relative',\r\n                                            left: '8px',\r\n                                            top: '3px'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n                                    colors: {\r\n                                    ...theme.colors,\r\n                                    // Background color of hovered options\r\n                                    primary25: '#e0e0e0',\r\n                                    primary: '#212121',\r\n                                    },\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={1}>\r\n                            <IconButton\r\n                                disabled={!fields}\r\n                                onClick={this.handleTableStatsDialogOpen}\r\n                            >\r\n                                <LibraryBooks/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel htmlFor=\"depth1-input\" >Start Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth1-input\"\r\n                                        value={depth1}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth1-error\"\r\n                                        labelWidth={105}\r\n                                        name='depth1'\r\n                                    />\r\n                                    <FormHelperText id=\"depth1-error\">{startDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"depth2-input\" >End Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth2-input\"\r\n                                        value={depth2}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth2-error\"\r\n                                        labelWidth={95}\r\n                                        name='depth2'\r\n                                    />\r\n                                    <FormHelperText id=\"depth2-error\">{endDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat1-input\" >{'Start Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat1-input\"\r\n                                        value={lat1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lat1'\r\n                                    />\r\n                                    <FormHelperText id=\"lat1-error\">{startLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat2-input\" >{'End Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat2-input\"\r\n                                        value={lat2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lat2'\r\n                                    />\r\n                                    <FormHelperText id=\"lat2-error\">{endLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon1-input\" >{'Start Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon1-input\"\r\n                                        value={lon1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lon1'\r\n                                    />\r\n                                    <FormHelperText id=\"lon1-error\">{startLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon2-input\" >{'End Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon2-input\"\r\n                                        value={lon2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lon2'\r\n                                    />\r\n                                    <FormHelperText id=\"lon2-error\">{endLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={2}>\r\n                                <FormControl variant='outlined' className={classes.vizTypeSelectFormControl}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        labelWidth={35}\r\n                                        value={selectedVizType}\r\n                                        variant='outlined'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'outlined'\r\n                                        }}\r\n                                        >\r\n                                        <MenuItem disabled={Boolean(heatmapMessage)} value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>\r\n                                        <MenuItem disabled={Boolean(contourMessage)} value={vizSubTypes.contourMap}>Contour</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sectionMapMessage)} value={vizSubTypes.sectionMap}>Section Map</MenuItem>\r\n                                        <MenuItem disabled={Boolean(histogramMessage)} value={vizSubTypes.histogram}>Histogram</MenuItem>                                    \r\n                                        <MenuItem disabled={Boolean(timeSeriesMessage)} value={vizSubTypes.timeSeries}>Time Series</MenuItem>\r\n                                        <MenuItem disabled={Boolean(depthProfileMessage)} value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sparseMapMessage)} value={vizSubTypes.sparse}>Sparse Map</MenuItem>\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2}>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={() => this.props.onVisualize()}\r\n                                    disabled={!selectedVizType || parametersAreInvalid || !fields}\r\n                                >\r\n                                    Visualize\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <Typography variant='caption' color='error' className={classes.generalMessage}>\r\n                                    {generalPreventMessage || generalWarnMessage}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataRetrievalForm));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { InsertChartOutlined, Delete, Web, Language } from '@material-ui/icons';\r\n\r\nimport { clearCharts } from '../Redux/actions/visualization';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    clearCharts\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n    panelPaper: {\r\n        width: '27px',\r\n        // height: '240px',\r\n        padding: theme.spacing(0.3),\r\n        position:'fixed',\r\n        left: '15px',\r\n        bottom: '40vh',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer',\r\n        borderRadius: '5%',\r\n        backgroundColor: 'transparent'\r\n    },\r\n\r\n    iconButton: {\r\n        padding: theme.spacing(0.4),\r\n        marginLeft: '-2px',\r\n        marginTop: '-1px'\r\n    }\r\n})\r\n\r\nconst VizControlPanel = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.panelPaper}>\r\n                <Grid container direction='column'>\r\n\r\n                    <Tooltip title={props.showUI ? 'Hide UI' : 'Show UI'}>\r\n                        <IconButton color='secondary' onClick={props.toggleShowUI} className={classes.iconButton}>\r\n                            <Web/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    {props.showCharts? \r\n                        <Tooltip title='Show Globe'>\r\n                            <IconButton color='secondary' onClick={props.toggleChartView} className={classes.iconButton}>\r\n                                <Language/>\r\n                            </IconButton>\r\n                        </Tooltip>                \r\n                    :\r\n                        <Tooltip title='Show Charts'>\r\n                            <IconButton color={props.charts.length ? 'primary' : 'secondary'} onClick={props.toggleChartView} className={classes.iconButton}>\r\n                                <InsertChartOutlined/>\r\n                            </IconButton>\r\n                        </Tooltip>            \r\n                    }\r\n\r\n                    <Tooltip title='Clear Visualizations'>\r\n                        <IconButton color='secondary' onClick={props.clearCharts} className={classes.iconButton}>\r\n                            <Delete/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));\r\n","import React, { useState } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Palette } from '@material-ui/icons';\r\n\r\nconst styles = theme => ({\r\n    colorscaleMenu: {\r\n        maxHeight: '400px'\r\n    },\r\n\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst colorscaleOptions = [\r\n    'Greys', \r\n    'YlGnBu', \r\n    'Greens', \r\n    'YlOrRd',\r\n    'Bluered',\r\n    'RdBu',\r\n    'Reds',\r\n    'Blues',\r\n    'Picnic',\r\n    'Rainbow',\r\n    'Portland',\r\n    'Jet',\r\n    'Hot',\r\n    'Blackbody',\r\n    'Earth',\r\n    'Electric',\r\n    'Viridis',\r\n    'Cividis'];\r\n\r\nconst PaletteControls = (props) => {\r\n\r\n    const { classes, disabled } = props;\r\n\r\n    const [paletteAnchorElement, setPaletteAnchorElement] = useState(null);\r\n\r\n    if(disabled){\r\n        return (\r\n            <Tooltip title='Change Palette'>\r\n                <div className={classes.iconButtonWrapper}>\r\n                <IconButton disabled={disabled} color='secondary' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                    <Palette/>\r\n                </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    let handleOpenPalette = (event) => {\r\n        setPaletteAnchorElement(event.currentTarget);\r\n    }\r\n\r\n    let handlePaletteChoice = (option) => {\r\n        setPaletteAnchorElement(null);\r\n        props.handlePaletteChoice(option);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title='Change Palette'>\r\n                <IconButton disabled={disabled} color='secondary' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                    <Palette/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={paletteAnchorElement}\r\n                keepMounted\r\n                open={Boolean(paletteAnchorElement)}\r\n                onClose={() => setPaletteAnchorElement(null)}\r\n                className={classes.colorscaleMenu}\r\n            >\r\n                {colorscaleOptions.map((option, index) => (\r\n                    <MenuItem onClick={() => handlePaletteChoice(option)} key={index}>{option}</MenuItem>\r\n                ))}\r\n                \r\n            </Menu>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PaletteControls);","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { SwapVert } from '@material-ui/icons';\r\n\r\nconst styles = theme => ({\r\n    popover: {\r\n        width: '470px',\r\n        height: '110px',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5)\r\n    },\r\n\r\n        iconButtonWrapper: {\r\n            display: 'inline-block'\r\n        }\r\n\r\n})\r\n\r\nconst ZValueControls = (props) => {\r\n\r\n    const { classes, extent, zValues, handleZValueConfirm, disabled } = props;\r\n\r\n    if(disabled){\r\n        return (\r\n            <Tooltip title='Change Colorscale Range'>\r\n                <div className={classes.iconButtonWrapper}>\r\n                <IconButton disabled>\r\n                    <SwapVert/>\r\n                </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    const [popoverAnchorElement, setPopoverAnchorElement] = React.useState(null);\r\n    const [localZMin, setLocalZMin] = React.useState(zValues[0]);\r\n    const [localZMax, setLocalZMax] = React.useState(zValues[1]);\r\n\r\n    const handleClose = () => {\r\n        setPopoverAnchorElement(null);\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        handleZValueConfirm([localZMin, localZMax]);\r\n        handleClose();\r\n    }\r\n\r\n    const checkLocalZMin = () => {\r\n        if(localZMin < extent[0]) return `Minimum value is ${extent[0]}`;\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMin)) return 'Invalid value';\r\n    }\r\n\r\n    const checkLocalZMax = () => {\r\n        if(localZMax > extent[1]) return `Maximum value is ${extent[1]}`;\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMax)) return 'Invalid value';\r\n    }\r\n\r\n    const validations = [\r\n        checkLocalZMin(),\r\n        checkLocalZMax()\r\n    ];\r\n\r\n    const [\r\n        zMinMessage,\r\n        zMaxMessage\r\n    ] = validations;\r\n\r\n    const open = Boolean(popoverAnchorElement);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title='Change Colorscale Range'>\r\n                <IconButton disabled={disabled} color='secondary' onClick={(event) => setPopoverAnchorElement(event.currentTarget)}>\r\n                    <SwapVert/>\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={popoverAnchorElement}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMinMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-min-input' >Min</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-min-input'\r\n                                    value={localZMin}\r\n                                    onChange={(event) => setLocalZMin(event.target.value)}\r\n                                    aria-describedby='local-zmin-error'\r\n                                    labelWidth={50}\r\n                                    name='local-zmin'\r\n                                />\r\n                                <FormHelperText id='local-zmin-error'>{zMinMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-max-input' >Max</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-max-input'\r\n                                    value={localZMax}\r\n                                    onChange={(event) => setLocalZMax(event.target.value)}\r\n                                    aria-describedby=\"local-zmax-error\"\r\n                                    labelWidth={50}\r\n                                    name='local-zmax'\r\n                                />\r\n                                <FormHelperText id=\"local-zmax-error\">{zMaxMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={7}>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleConfirm}\r\n                                disabled={Boolean(zMinMessage || zMaxMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ZValueControls);","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { DateRange, Waves, CloudDownload } from '@material-ui/icons';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport PaletteControls from './PaletteControls';\r\nimport ZValueControls from './ZValueControls';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst ChartControlPanel = (props) => {\r\n\r\n    const { \r\n        classes, \r\n        handlePaletteChoice, \r\n        onToggleSplitByDate, \r\n        onToggleSplitByDepth, \r\n        downloadCsv, \r\n        splitByDepth, \r\n        splitByDate,\r\n        handleZValueConfirm,\r\n        zValues,\r\n        extent\r\n    } = props;\r\n\r\n    console.log(downloadCsv)\r\n    return (\r\n        <div className={classes.buttonBlock}>\r\n\r\n            <Tooltip title={splitByDate ? 'Merge Dates' : 'Split By Date'}>\r\n                <div className={classes.iconButtonWrapper}>\r\n                    <IconButton color='secondary' className={classes.iconButton} \r\n                        disabled={!Boolean(onToggleSplitByDate)} \r\n                        onClick={onToggleSplitByDate}\r\n                    >\r\n                        <DateRange/>\r\n                    </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n\r\n            <Tooltip title={splitByDepth ? 'Merge Depths' : 'Split By Depth'}>\r\n                <div className={classes.iconButtonWrapper}>\r\n                    <IconButton color='secondary' className={classes.iconButton} \r\n                        disabled={!Boolean(onToggleSplitByDepth)} \r\n                        onClick={onToggleSplitByDepth}\r\n                    >\r\n                        <Waves/>\r\n                    </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n\r\n            <Tooltip title='Download CSV'>\r\n                <div className={classes.iconButtonWrapper}>\r\n                    <IconButton color='secondary' onClick={downloadCsv} className={classes.iconButton} >\r\n                        <CloudDownload/>\r\n                    </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n\r\n            <ZValueControls\r\n                disabled={!Boolean(handleZValueConfirm)}\r\n                zValues={zValues}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                extent={extent}\r\n            />\r\n            \r\n            <PaletteControls\r\n                disabled={!Boolean(handlePaletteChoice)}\r\n                handlePaletteChoice={handlePaletteChoice}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ChartControlPanel);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nconst handleContourMap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        \r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Merged Depths' : \r\n            depths[index % depths.length].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'contour',\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: '.2e'\r\n                    },\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    }\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {title: 'Longitude', color: '#ffffff'},\r\n                yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = !splitByDate ? 'Aggregated Time' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Aggregated Depth' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHeatmap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    zsmooth: subset.length < 20000 ? 'fast' : 'false',\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    colorscale: palette,\r\n                    autocolorscale: false,\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n                    \r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}   ${date}`,\r\n                xaxis: {\r\n                    title: 'Longitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: 'Latitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SpaceTimeChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitByDepth, setSplitByDepth] = useState(false);\r\n    const [subTypeState, setSubTypeState] = useState(subType);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const subSets = data.generatePlotData(subTypeState, splitByDate, splitByDepth);\r\n    var plots;\r\n\r\n    switch(subTypeState){\r\n        case vizSubTypes.contourMap:\r\n            plots = handleContourMap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.heatmap:\r\n            plots = handleHeatmap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.histogram:\r\n            plots = handleHistogram(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        default:\r\n            plots = '';\r\n            break;        \r\n\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDepth = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDepth(!splitByDepth);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                onToggleSplitByDepth={depths.size===1 ? null : onToggleSplitByDepth}\r\n                onToggleSplitByDate={dates.size===1 ? null : onToggleSplitByDate}\r\n                splitByDepth={splitByDepth}\r\n                splitByDate={splitByDate}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SpaceTimeChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst TimeSeriesChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, dates, parameters, metadata } = data;\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }  \r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                  x: dates,\r\n                  y: variableValues,\r\n                  error_y: {\r\n                    type: 'data',\r\n                    array: stds,\r\n                    opacity: 0.2,\r\n                    color: 'gray',\r\n                    visible: true\r\n                  },\r\n                  name: parameters.fields,\r\n                  type: 'scatter',\r\n                  line: {color: '#e377c2'},\r\n                  },\r\n                ]}\r\n\r\n                layout= {{\r\n                    title: `${parameters.fields}[${metadata.Unit}]  ${parameters.dt1} to ${parameters.dt2}`,\r\n\r\n                    paper_bgcolor: colors.backgroundGray,\r\n                    font: {\r\n                        color: '#ffffff'\r\n                    },\r\n                  xaxis: {\r\n                      title: 'Time',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: parameters.fields,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: [\r\n                    {\r\n                        text: `Source: ${metadata.Distributor.length < 30 ? \r\n                                metadata.Distributor : \r\n                                metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(TimeSeriesChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst DepthProfileChart = (props) => {\r\n\r\n    const { classes, setLoadingMessage } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, depths, parameters, metadata } = data;\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }    \r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                  x: depths,\r\n                  y: variableValues,\r\n                  error_y: {\r\n                    type: 'data',\r\n                    array: stds,\r\n                    opacity: 0.2,\r\n                    color: 'gray',\r\n                    visible: true\r\n                  },\r\n                  name: parameters.fields,\r\n                  type: 'scatter',\r\n                  line: {color: '#e377c2'},\r\n                  },\r\n                ]}\r\n\r\n                layout= {{\r\n                    title: `${parameters.fields}[${metadata.Unit}]  ${parameters.depth1} to ${parameters.depth2} meters`,\r\n\r\n                    paper_bgcolor: colors.backgroundGray,\r\n                    font: {\r\n                        color: '#ffffff'\r\n                    },\r\n                  xaxis: {\r\n                      title: 'Depth[m]',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: [\r\n                    {\r\n                        text: `Source: ${metadata.Distributor.length < 30 ? \r\n                                metadata.Distributor : \r\n                                metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(DepthProfileChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nconst handleSectionMap = (subsets, infoObject, splitByDate, splitBySpace, orientation) => {\r\n\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    const distinctMeridiansOrParallelsForSplitting = \r\n        orientation === 'zonal' ?\r\n        infoObject.latsDistinct : \r\n        infoObject.lonsDistinct;\r\n\r\n    const xAxisLabel = \r\n        orientation === 'zonal' ?\r\n        'Longitude' : \r\n        'Latitude';\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length < 2 ?\r\n            dates[0] :\r\n            !splitByDate ? \r\n                'Merged Dates' : \r\n                splitBySpace ? \r\n                    dates[Math.floor(index/distinctMeridiansOrParallelsForSplitting.length)].slice(0, 10) : \r\n                    dates[index];\r\n                \r\n        const spaceTitle = distinctMeridiansOrParallelsForSplitting.length <= 1 ? distinctMeridiansOrParallelsForSplitting[0] : \r\n            !splitBySpace ? `Merged ${xAxisLabel}s` : \r\n            `${distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length]} ${orientation === 'zonal' ? \r\n            'Parallel' :\r\n            'Meridian'}`\r\n \r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: infoObject.zMin,\r\n                    zmax: infoObject.zMax,\r\n                    zsmooth: subset.length < 20000 ? 'best' : 'fast',\r\n                    x: orientation === 'zonal' ? infoObject.lons : infoObject.lats,\r\n                    y: orientation === 'zonal' ? infoObject.zonalPlotDepths : infoObject.meridionalPlotDepths,\r\n                    z: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    connectgaps: true,\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    }\r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${spaceTitle}   ${date}`,\r\n                xaxis: {\r\n                    title: `${xAxisLabel}[\\xB0]`, \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: 'Depth[m]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />\r\n        )\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SectionMapChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { dates, extent, latsDistinct, lonsDistinct } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitBySpace, setSplitBySpace] = useState(false);\r\n    const [orientation, setOrientation] = useState(data.orientation);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const numSpaceSplits = \r\n        orientation === 'zonal' ?\r\n        latsDistinct.length : \r\n        lonsDistinct.length\r\n\r\n    const splitOrientation = orientation === 'zonal' ?\r\n        'Longitudes' : \r\n        'Latitudes'\r\n\r\n    const alternateOrientation = orientation === 'zonal' ? 'meridional' : 'zonal';\r\n\r\n    const subsets = data.generatePlotData(orientation, splitByDate, splitBySpace);\r\n    var plots = handleSectionMap(subsets, data, splitByDate, splitBySpace, orientation);\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n                {/* <Button {...buttonProps} disabled={dates.size === 1} onClick={() => setSplitByDate(!splitByDate)}>{splitByDate ? 'Merge Dates' : 'Split By Date'}</Button>\r\n                <Button {...buttonProps} disabled={numSpaceSplits === 1} onClick={() => setSplitBySpace(!splitBySpace)}>{splitBySpace ? `Merge ${splitOrientation}` : `Split By ${splitOrientation}`}</Button>\r\n                <Button {...buttonProps} disabled={numSpaceSplits === 1} onClick={() => setOrientation(alternateOrientation)}>Switch to {alternateOrientation}</Button> */}\r\n            <ChartControlPanel\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                downloadCsv={downloadCsv}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SectionMapChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\n\r\nconst handleSparseMap = (infoObject, palette, zValues) => {\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zValues[0],\r\n                    zmax: zValues[1],\r\n                    lon: infoObject.lons,\r\n                    lat: infoObject.lats,\r\n                    z: infoObject.variableValues,\r\n                    zmin:'',\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    radius: 6,                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'densitymapbox',\r\n                    \r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    },\r\n                }\r\n            ]}\r\n\r\n            layout= {{\r\n                width: 600,\r\n                height: 400,\r\n                font: {color: '#ffffff'},\r\n                title: `${infoObject.parameters.fields}[${infoObject.metadata.Unit}]`,\r\n                // xaxis: {title: 'Longitude', color: '#ffffff'},\r\n                // yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                paper_bgcolor: colors.backgroundGray,\r\n\r\n                mapbox: {\r\n                    style: 'basic',\r\n                    center: {\r\n                        lon: (infoObject.parameters.lon1 + infoObject.parameters.lon2) / 2,\r\n                        lat: (infoObject.parameters.lat1 + infoObject.parameters.lat2) / 2\r\n                    }\r\n                },\r\n\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}\r\n            \r\n            config={{\r\n                mapboxAccessToken:\r\n                  \"pk.eyJ1IjoiZGVuaG9sdHoiLCJhIjoiY2p1ZW9obTNhMDVxZjQzcDRvMmdlcDN2aiJ9.HvLaX2bcradeE5T-lpTc8w\"\r\n              }}\r\n        />)\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst buttonProps = {\r\n    size: 'small',\r\n    color: 'primary',\r\n    variant: 'contained'\r\n}\r\n\r\nconst SparseMap = (props) => {\r\n\r\n    const { classes } = props;\r\n\r\n    const { data } = props.chart;\r\n    const [palette, setPalette] = useState('Heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n\r\n    const plot = handleSparseMap(data, palette, zValues)\r\n\r\n    let handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    let handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={data.extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plot}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseMap));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport colors from '../Enums/colors';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nimport SpaceTimeChart from './ChartComponents/SpaceTimeChart';\r\nimport TimeSeriesChart from './ChartComponents/TimeSeriesChart';\r\nimport DepthProfileChart from './ChartComponents/DepthProfileChart';\r\nimport SectionMapChart from './ChartComponents/SectionMapChart';\r\nimport SparseMap from './ChartComponents/SparseMap';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsContainer: {\r\n        margin: '300px 0 0 100px'\r\n    },\r\n\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n    }\r\n})\r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n        const { classes, charts } = this.props;\r\n\r\n        return (\r\n            <div className={classes.chartsContainer}>\r\n                {charts.map((chart, index) => {\r\n                    switch(chart.data.parameters.spName){\r\n                        case storedProcedures.spaceTime:\r\n                          if(chart.subType === vizSubTypes.sparse) return <SparseMap chart={chart} key={index}/>\r\n                          else return <SpaceTimeChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.timeSeries:\r\n                          return <TimeSeriesChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.depthProfile:\r\n                          return <DepthProfileChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.sectionMap:\r\n                          return <SectionMapChart chart={chart} key={index}/>\r\n                        \r\n                        default:\r\n                          return '';\r\n                  }\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { cruiseListRequestSend, cruiseTrajectoryRequestSend, cruiseTrajectoryClear } from '../Redux/actions/visualization';\r\n\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    cruiseList: state.cruiseList,\r\n    getCruiseListState: state.getCruiseListState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseListRequestSend,\r\n    cruiseTrajectoryRequestSend,\r\n    cruiseTrajectoryClear\r\n}\r\n\r\nconst esriFonts = '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif';\r\nconst esriFontColor = '#adadad';\r\nconst esriBackgroundColor = '#242424';\r\nconst esriHoverFontColor = '#242424';\r\nconst esriHoverBackgroundColor = '#949393';\r\n\r\nconst styles = theme => ({\r\n    outerDiv: {\r\n        padding:'12px',\r\n        maxWidth: '260px',\r\n        backgroundColor: esriBackgroundColor,\r\n        color: esriFontColor,\r\n    },\r\n\r\n    cruiseSelect: {\r\n        width: '260px'\r\n    },\r\n\r\n    cruiseInfo: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        margin: '12px auto 0 auto'\r\n    },\r\n\r\n    cruiseInfoCell: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        borderStyle: 'none'\r\n    }\r\n})\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\nclass CruiseSelector extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Nickname');\r\n        search.addIndex('Name');\r\n        search.addIndex('Chief_Name');\r\n        search.addIndex('Keywords');\r\n        try{\r\n            if(props.cruiseList) search.addDocuments(props.cruiseList);\r\n        } catch(e) {\r\n            console.log(e);\r\n            console.log(props.cruiseList);\r\n        }\r\n\r\n        this.state = {\r\n            search,\r\n            searchField: '',\r\n            selectedCruise: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.cruiseList) this.props.cruiseListRequestSend();\r\n    }\r\n\r\n    getSelectOptionsFromCruiseList = (list) => {\r\n        return list.map(item => ({\r\n            value: item.Nickname,\r\n            label: item.Nickname,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    handleCruiseSelect = (selection) => {\r\n        if(selection && selection.data){\r\n            const id = selection.data.ID;\r\n            this.props.cruiseTrajectoryRequestSend(id);\r\n        } else {this.props.cruiseTrajectoryClear()}\r\n\r\n        this.setState({...this.state, selectedCruise: selection});\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.cruiseList && prevProps.cruiseList.length) && (this.props.cruiseList && this.props.cruiseList.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    render(){\r\n\r\n        const { search, searchField, selectedCruise } = this.state;\r\n\r\n        const { classes, cruiseList} = this.props;\r\n\r\n        const options = searchField && cruiseList ? this.getSelectOptionsFromCruiseList(search.search(searchField)) \r\n            : cruiseList ? this.getSelectOptionsFromCruiseList(cruiseList) \r\n            : []\r\n\r\n        return (\r\n            <div id='cruise-selector' className={classes.outerDiv}>\r\n                <Select\r\n                    isLoading={this.props.getCruiseListState === states.inProgress}\r\n                    components={{\r\n                        IndicatorSeparator:'',\r\n                        Option,\r\n                        SingleValue,\r\n                    }}\r\n                    isClearable\r\n                    onInputChange={this.onAutoSuggestChange}\r\n                    filterOption={null}\r\n                    className={classes.cruiseSelect}\r\n                    escapeClearsValue\r\n                    label=\"Cruise\"\r\n                    options={options}\r\n                    onChange={this.handleCruiseSelect}\r\n                    value={this.state.selectedCruise}\r\n                    placeholder=\"Search Cruises\"\r\n                    styles={{\r\n                        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                        menuList: provided => ({...provided, backgroundColor: esriBackgroundColor}),\r\n\r\n                        input: provided => ({...provided,\r\n                            color: 'inherit',\r\n                            fontFamily: esriFonts\r\n                        }),\r\n\r\n                        control: provided => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            border: `1px solid ${esriFontColor}`,\r\n                            color: esriFontColor,\r\n                            borderRadius: 0,\r\n                            '&:hover': { \r\n                                color: '#242424',\r\n                                backgroundColor: '#949393'\r\n                            }\r\n                        }),\r\n\r\n                        placeholder: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: 'inherit',\r\n                            fontSize: '14px'\r\n                        }),\r\n\r\n                        noOptionsMessage: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: esriFontColor,\r\n                            backgroundColor: esriBackgroundColor\r\n                        }),\r\n\r\n                        option: (provided, state) => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            color: esriFontColor,\r\n                            '&:hover': { \r\n                                color: '#242424',\r\n                                backgroundColor: '#949393'\r\n                            },\r\n                        }),\r\n\r\n                        singleValue: (provided, state) => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: 'inherit',\r\n                            paddingRight: '20px',\r\n                        })\r\n                    }}\r\n                    theme={theme => ({\r\n                        ...theme,\r\n                        colors: {\r\n                            ...theme.colors,\r\n                            // Background color of hovered options\r\n                            primary25: '#e0e0e0',\r\n                            primary: '#212121',\r\n                        },\r\n                    })}\r\n                />\r\n                {selectedCruise &&\r\n                    <Table size='small' className={classes.cruiseInfo}>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Cruise:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Name}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Nickname:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Nickname}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            {\r\n                                selectedCruise.data.Start_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Start Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Start_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Chief_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Chief Scientist:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Chief_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Ship_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Ship:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Ship_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                    // <div>                    \r\n                    //     <p>Cruise {selectedCruise.data.Name}</p>\r\n                    //     <p>Disembarked {selectedCruise.data.Start_Time.slice(0,10)}</p>\r\n                    //     <p>Chief Scientist {selectedCruise.data.Chief_Name}</p>    \r\n                    // </div>            \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CruiseSelector));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\nimport regionRenderModes from '../Enums/regionRenderModes';\r\n\r\nimport CruiseSelector from './CruiseSelector';\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nconst drawButtonStyles = (theme) => ({\r\n    outerDiv: {\r\n        padding:'12px 0 12px 0',\r\n        backgroundColor: '#242424',\r\n        width: '180px'\r\n    },\r\n\r\n    innerDiv: {\r\n        padding: '0 15px 0 15px'\r\n    },\r\n\r\n    drawButton: {\r\n        border: '1px solid #adadad',\r\n        color: '#adadad',\r\n        cursor: 'pointer',\r\n        padding: '6px 30px',\r\n        fontSize:'14px',\r\n        backgroundColor: 'transparent',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif',\r\n        '&:hover': { \r\n            color: '#242424',\r\n            backgroundColor: '#949393'\r\n        },\r\n    },\r\n\r\n    helpText: {\r\n        marginTop: 0,\r\n        color: '#ADADAD',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif'\r\n    },\r\n\r\n    cancelButton: {\r\n        display: 'none'\r\n    }\r\n})\r\n\r\nconst DrawButtonRaw = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    return (\r\n        <div className={classes.outerDiv} id='draw-region-div'>\r\n            <div className={classes.innerDiv}>\r\n                {showHelp && <p className={classes.helpText}>Click once to draw <br/>and again to finish</p>}\r\n                <button id='draw-button' className={classes.drawButton}>\r\n                    Select Region\r\n                </button>\r\n                <button id='cancel-button' className={`${classes.drawButton} ${classes.cancelButton}`}>\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DrawButton = withStyles(drawButtonStyles)(DrawButtonRaw);\r\n\r\nconst polygonSymbol = {\r\n    type: \"polygon-3d\",\r\n    symbolLayers: [\r\n        {\r\n            type: \"fill\",\r\n            material: {\r\n            color: [255, 128, 0, .3]\r\n            },\r\n            outline: {\r\n                color: [255, 128, 0, 1],\r\n                size: '2px'\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { view, esriModules, regionLayer, setShowHelp, drawMode } = this.props;\r\n\r\n        const updateOptions = {\r\n            toggleToolOnClick: false,\r\n            tool: \"transform\"\r\n        }\r\n\r\n        var sketchModel = new esriModules.SketchViewModel({\r\n            layer: regionLayer,\r\n            view,\r\n            polygonSymbol,\r\n            defaultUpdateOptions: updateOptions\r\n        })\r\n\r\n        var drawButton = document.getElementById('draw-button');\r\n        var cancelButton = document.getElementById('cancel-button');\r\n\r\n        sketchModel.on(\"create\", (event) => {\r\n            if (event.state === \"complete\") {\r\n                setShowHelp(false);\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });        \r\n\r\n        sketchModel.on('update', (event) => {\r\n            this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphics[0].geometry.extent));\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })       \r\n        \r\n        drawButton.addEventListener(\"click\", (event) => {\r\n                drawMode();\r\n                regionLayer.removeAll();\r\n                setShowHelp(true);\r\n                sketchModel.create('rectangle', {\r\n                    mode:'click'            \r\n                });\r\n                drawButton.style.display = 'none';\r\n                cancelButton.style.display = 'inline-block';\r\n        });\r\n\r\n        cancelButton.addEventListener('click', (event) => {\r\n            sketchModel.cancel();\r\n            setShowHelp(false);\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })\r\n\r\n        view.ui.add('draw-region-div', 'bottom-right');\r\n        view.ui.add('cruise-selector', 'top-right');\r\n\r\n        view.ui.remove('zoom');\r\n        view.ui.remove('navigation-toggle');\r\n        view.ui.remove('compass');\r\n        view.ui.remove('attribution');\r\n        return null;\r\n    }\r\n}\r\n\r\nconst TrajectoryController = React.memo((props) => {\r\n    const { cruiseTrajectory, trajectoryLayer, esriModules } = props;\r\n\r\n    if(cruiseTrajectory){\r\n        trajectoryLayer.removeAll();\r\n\r\n        const paths = cruiseTrajectory.lons.map((lon, i) => [lon, cruiseTrajectory.lats[i]]);\r\n\r\n        var cruiseTrajectoryGeometry = {\r\n            type: 'polyline',\r\n            paths\r\n        }\r\n\r\n        var cruiseTrajectorySymbol = {\r\n            type: 'line-3d',\r\n            symbolLayers: [{\r\n                type: 'line',\r\n                material: { color: [255, 128, 0, 1] },\r\n                cap:  'round',\r\n                join: 'round',\r\n                size: 2\r\n            }]\r\n        }\r\n\r\n        let graphic = new esriModules.Graphic({\r\n            geometry: cruiseTrajectoryGeometry,\r\n            symbol: cruiseTrajectorySymbol\r\n        });\r\n\r\n        trajectoryLayer.add(graphic);\r\n\r\n        try {\r\n            const { extent } = graphic.geometry;\r\n            const center = [extent.center.x,extent.center.y];\r\n\r\n            const xSize = extent.xmax - extent.xmin;\r\n            const ySize = extent.ymax - extent.ymin;\r\n            var graphicSize = xSize > ySize ? xSize : ySize;\r\n            graphicSize = graphicSize > 60 ? 60 : graphicSize;\r\n\r\n            var zoom = 7 - Math.floor(graphicSize / 10);            \r\n    \r\n            props.view.goTo({\r\n                target: center,\r\n                zoom\r\n            }, {\r\n                maxDuration: 2500,\r\n                speedFactor: .5\r\n            });    \r\n\r\n        } catch(e) {console.log(e)}\r\n\r\n    } else {\r\n        trajectoryLayer.removeAll();\r\n\r\n        props.view.goTo({\r\n            target: [-140, 30],\r\n            zoom: 3\r\n        }, {\r\n            maxDuration: 2500,\r\n            speedFactor: .5\r\n        }); \r\n    }\r\n    return '';\r\n})\r\n\r\nclass MapContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showHelp: false\r\n        }\r\n        this.regionLayer = new props.esriModules.GraphicsLayer();\r\n        this.trajectoryLayer = new props.esriModules.GraphicsLayer();\r\n    }\r\n\r\n    render = () => {\r\n        const { classes, esriModules, regionRenderMode, spParams, cruiseTrajectory } = this.props;\r\n        const lat1 = parseFloat(spParams.lat1);\r\n        const lat2 = parseFloat(spParams.lat2);\r\n        const lon1 = parseFloat(spParams.lon1);\r\n        const lon2 = parseFloat(spParams.lon2);\r\n\r\n        if(regionRenderMode === regionRenderModes.form){\r\n            this.regionLayer.removeAll();\r\n\r\n            var polygon = {\r\n                type: 'polygon', \r\n                rings: [\r\n                    [lon1, lat1],\r\n                    [lon2, lat1],\r\n                    [lon2, lat2],\r\n                    [lon1, lat2],\r\n                    [lon1, lat1]\r\n                ]\r\n            };\r\n\r\n            this.regionLayer.add(new esriModules.Graphic({\r\n                geometry: polygon,\r\n                symbol: polygonSymbol\r\n            }))\r\n        }\r\n        \r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ \r\n                        basemap: 'satellite',\r\n                        layers: [\r\n                            this.regionLayer,\r\n                            this.trajectoryLayer\r\n                        ]\r\n                    }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3\r\n                    }}\r\n                >\r\n                    <TrajectoryController \r\n                        cruiseTrajectory={cruiseTrajectory}\r\n                        trajectoryLayer={this.trajectoryLayer}\r\n                        esriModules={esriModules}\r\n                    />\r\n                    <UiComponents\r\n                        updateDomainFromMap={this.props.updateDomainFromMap}\r\n                        updateDomainFromGraphicExtent = {this.props.updateDomainFromGraphicExtent}\r\n                        esriModules={esriModules}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                        regionLayer={this.regionLayer}\r\n                        setShowHelp={(showHelp) => this.setState({...this.state, showHelp})}\r\n                        ref={this.props.globeUIRef}\r\n                        drawMode={this.props.drawMode}\r\n                    />\r\n                </Scene>\r\n                <DrawButton showHelp={this.state.showHelp}/>\r\n                <CruiseSelector/>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MapContainer);","const cleanSPParams = ({depth1, depth2, dt1, dt2, fields, lat1, lat2, lon1, lon2, spName, tableName}) => ({\r\n    depth1: parseFloat(depth1),\r\n    depth2: parseFloat(depth2),\r\n    dt1: dt1,\r\n    dt2: dt2,\r\n    fields,\r\n    lat1: parseFloat(lat1),\r\n    lat2: parseFloat(lat2),\r\n    lon1: parseFloat(lon1),\r\n    lon2: parseFloat(lon2),\r\n    spName,\r\n    tableName,\r\n})\r\n\r\nexport default cleanSPParams;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport regionRenderModes from '../Enums/regionRenderModes';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport DataRetrievalForm from './DataRetrievalForm';\r\nimport VizControlPanel from './VizControlPanel';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend, cruiseListRequestSend } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { loadModules } from 'esri-loader';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport Charts from './Charts';\r\nimport MapContainer from './MapContainer';\r\nimport colors from '../Enums/colors'\r\nimport cleanSPParams from '../Utility/cleanSPParams';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.sectionMap\r\n        }, \r\n        [vizSubTypes.timeSeries]: {\r\n            sp: storedProcedures.timeSeries,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: storedProcedures.depthProfile,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.heatmap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.heatmap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.contourMap\r\n        },\r\n        [vizSubTypes.sparse]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.sparse\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    loadingMessage: state.loadingMessage,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    cruiseList: state.cruiseList\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n    cruiseListRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    background: {\r\n        backgroundColor: colors.backgroundGray\r\n    }\r\n})\r\n\r\nconst parseDate = (date) => {\r\n    var mm = date.getUTCMonth() + 1; // getMonth() is zero-based\r\n    var dd = date.getUTCDate();\r\n\r\n    return [date.getUTCFullYear(),\r\n        (mm>9 ? '' : '0') + mm,\r\n        (dd>9 ? '' : '0') + dd\r\n        ]\r\n        .join('-');    \r\n}\r\n\r\nclass Visualization extends Component {\r\n    globeUIRef = React.createRef();\r\n\r\n    state = {\r\n        filteredData: [],\r\n        opacity: 1,\r\n        showCharts: false,\r\n        showUI: true,\r\n        surfaceOnly: false,\r\n        irregularSpatialResolution: false,\r\n\r\n        regionRenderMode: regionRenderModes.draw,\r\n        \r\n        spParams: {\r\n            tableName: '',\r\n            fields: null,\r\n            depth1: 0,\r\n            depth2: 3,\r\n            dt1: '2010-01-01',\r\n            dt2: '2010-01-01',\r\n            lat1: 0,\r\n            lat2: 0,\r\n            lon1: 0,\r\n            lon2: 0,\r\n            selectedVizType: ''\r\n        }\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.cruiseList) this.props.cruiseListRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'GraphicsLayer',\r\n            'SketchViewModel',\r\n            'Utils',\r\n            'Graphic'\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/layers/GraphicsLayer',\r\n            'esri/widgets/Sketch/SketchViewModel',\r\n            'esri/geometry/support/webMercatorUtils',\r\n            'esri/Graphic'\r\n        ]);\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleLatLonChange = (event) => {\r\n        this.setState({\r\n            ...this.state, \r\n            spParams: {...this.state.spParams, [event.target.name]: event.target.value},\r\n            regionRenderMode: regionRenderModes.form\r\n        })\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        let dateString = date instanceof Date ? parseDate(date) : date;\r\n        this.setState({...this.state, spParams: {...this.state.spParams, dt1:dateString}});\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        let dateString = date instanceof Date ? parseDate(date) : date;\r\n        this.setState({...this.state, spParams: {...this.state.spParams, dt2:dateString}});\r\n    }\r\n\r\n    onVisualize = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, selectedVizType } = this.state.spParams;\r\n    \r\n        let mapping = mapVizType(selectedVizType);\r\n        let parameters = cleanSPParams({\r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        });\r\n\r\n        let payload = {\r\n            parameters,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        if(fields) {\r\n            let surfaceOnly = !fields.data.Depth_Min;\r\n            let irregularSpatialResolution = fields.data.Spatial_Resolution === 'Irregular';\r\n\r\n            let selectedVizType = irregularSpatialResolution ? vizSubTypes.sparse : '';\r\n\r\n            let tableName = fields.data.Table_Name;\r\n            \r\n            this.setState({...this.state,\r\n                surfaceOnly,\r\n                irregularSpatialResolution,\r\n                spParams: {...this.state.spParams, \r\n                    fields, \r\n                    selectedVizType,\r\n                    tableName\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    toggleChartView = () => {\r\n        this.setState({...this.state, showCharts: !this.state.showCharts});\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromMap = (coordinates) => {\r\n        if(!coordinates || !coordinates.length) return null;\r\n        \r\n        var lons = coordinates.map(a => a[0]);\r\n        var lats = coordinates.map(a => a[1]);\r\n\r\n        var newCoordinates = {\r\n            lat1: Math.min(...lats).toFixed(3),\r\n            lat2: Math.max(...lats).toFixed(3),\r\n            lon1: Math.min(...lons).toFixed(3),\r\n            lon2: Math.max(...lons).toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    updateDomainFromGraphicExtent = (extent) => {\r\n        var newCoordinates = {\r\n            lat1: extent.ymin.toFixed(3),\r\n            lat2: extent.ymax.toFixed(3),\r\n            lon1: extent.xmin.toFixed(3),\r\n            lon2: extent.xmax.toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        return (\r\n            <div className={classes.background}>\r\n                <DataRetrievalForm \r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                   {...this.state.spParams}\r\n                   surfaceOnly={this.state.surfaceOnly}\r\n                   irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                />\r\n                <VizControlPanel\r\n                    toggleChartView={this.toggleChartView}\r\n                    toggleShowUI={this.toggleShowUI}\r\n                    showCharts={this.state.showCharts}\r\n                    showUI={this.state.showUI}\r\n                />\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer\r\n                            globeUIRef={this.globeUIRef}\r\n                            updateDomainFromMap={this.updateDomainFromMap}\r\n                            updateDomainFromGraphicExtent={this.updateDomainFromGraphicExtent}\r\n                            drawMode={() => this.setState({...this.state, regionRenderMode: regionRenderModes.draw})}\r\n                            esriModules={this.state.esriModules}\r\n                            regionRenderMode={this.state.regionRenderMode}\r\n                            spParams={this.state.spParams}\r\n                            cruiseTrajectory={this.props.cruiseTrajectory}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                {this.props.storedProcedureRequestState === states.inProgress && <LoadingSpinner customVariant='centered' size='36'/>}\r\n\r\n                <div className={this.state.showCharts ? '' : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password, or <Link onClick={this.handleClose} component={RouterLink} to={{pathname: '/register'}}>Register.</Link>\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Spinner from 'react-spinkit';\r\n\r\nconst styles = theme => ({\r\n    loader: {\r\n        backgroundColor: '#000000',\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        opacity: 0.5,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        zIndex: 9998\r\n    },\r\n\r\n    loaderContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItem: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 9999,\r\n        opacity: 1\r\n    },\r\n\r\n    spinnerText: {\r\n        zIndex: 10000,\r\n        color: '#FF8000',\r\n        marginTop: '25px',\r\n        opacity: 1\r\n    },\r\n\r\n    spinner: {\r\n        opacity: 1\r\n    }\r\n})\r\n\r\nconst LoadingOverlay = (props) => {\r\n    const { classes, loadingMessage } = props;\r\n\r\n    if(loadingMessage && loadingMessage.length){\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div className={classes.loaderContent}>\r\n                    <Spinner className={classes.spinner} color='#FF8000' name=\"ball-pulse-rise\" fadeIn='quarter'/>\r\n                    <Typography variant='h6' className={classes.spinnerText}>{loadingMessage}</Typography>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return '';\r\n\r\n}\r\n\r\nexport default withStyles(styles)(LoadingOverlay);","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper';\r\nimport LoadingOverlay from './LoadingOverlay';\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog,\r\n    loadingMessage: state.loadingMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n                <LoadingOverlay loadingMessage={this.props.loadingMessage}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React from 'react'\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\r\n\r\nimport Home from './Components/Home';\r\nimport Catalog from './Components/Catalog';\r\nimport Register from './Components/Register';\r\nimport Visualization from './Components/Visualization';\r\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\r\n\r\nexport default props => (\r\n    <BrowserRouter>\r\n      <GlobalUIComponentWrapper/>\r\n      <Switch>          \r\n        <Route exact path='/apikeymanagement' component={ Home } />\r\n        <Route exact path='/' component={ Catalog } />\r\n        <Route exact path='/register' component={ Register } />\r\n        <Route exact path='/visualization' component={ Visualization } />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport grey from '@material-ui/core/colors/grey';\n\nimport './App.scss';\nimport Routes from './routes';\n\nimport colors from './Enums/colors';\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: grey[800],\n      paper: grey[800]\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: grey[800],\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },    \n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    }\n  }\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  loadingMessage: state.loadingMessage\n})\n\nclass App extends Component {\n\n  componentDidCatch = (error, info) => {\n    console.log('Error:');\n    console.log(error);\n    console.log('Info');\n    console.log(info);\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <div className=\"App\">\n          <MuiThemeProvider theme={theme}>\n            <Routes />\n          </MuiThemeProvider>\n        </div>\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, null)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\n\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}