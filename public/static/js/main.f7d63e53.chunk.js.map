{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","Enums/spatialResolutions.js","Utility/mapSpatialResolutionToNumber.js","Utility/GenerateSpatialArray.js","Utility/flattenArray.js","Utility/splitData.js","Utility/mergeArraysAndComputeMeans.js","Utility/mergeArrays.js","Enums/visualizationSubTypes.js","Classes/SpaceTimeData.js","Enums/storedProcedures.js","Classes/TimeSeriesData.js","Classes/DepthProfileData.js","Classes/SectionMapData.js","Classes/SparseData.js","api.js","Redux/sagas.js","Redux/store.js","Enums/colors.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/TopNavBar.js","Components/Home.js","Components/GridDetail.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/regionRenderModes.js","Enums/validation.js","Components/TableStatsDialog.js","Enums/temporalResolutions.js","Utility/mapTemporalResolutionToNumber.js","Components/DataRetrievalForm.js","Utility/utcDateStringToLocal.js","Components/VizControlPanel.js","Components/ChartComponents/PaletteControls.js","Components/ChartComponents/ZValueControls.js","Components/ChartComponents/ChartControlPanel.js","Components/ChartComponents/SpaceTimeChart.js","Components/ChartComponents/TimeSeriesChart.js","Components/ChartComponents/DepthProfileChart.js","Components/ChartComponents/SectionMapChart.js","Components/ChartComponents/SparseMap.js","Components/Charts.js","Components/CruiseSelector.js","Components/MapContainer.js","Utility/cleanSPParams.js","Utility/localDateToString.js","Components/Visualization.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/LoadingOverlay.js","Components/GlobalUIComponentWrapper.js","Components/LandingPage.js","Components/NavDrawer.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","CRUISE_TRAJECTORY_REQUEST_SEND","CRUISE_LIST_REQUEST_SEND","initialState","catalog","snackbarIsOpen","snackbarMessage","loadingMessage","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","getCruiseTrajectoryRequestState","cruiseTrajectory","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","cruiseList","getCruiseListRequestState","showChartsOnce","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","trajectory","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","setLoadingMessage","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addChart","cruiseTrajectoryRequestSend","id","visualizationActionTypes","cruiseTrajectoryRequestSuccess","cruiseTrajectoryRequestProcessing","cruiseListRequestSend","cruiseListRequestSuccess","cruiseListRequestFailure","cruiseListRequestProcessing","triggerShowCharts","apiUrl","spatialResolutions","irregular","halfDegree","quarterDegree","twentyFifthDegree","fourKm","twelfthDegree","seventyKm","oneDegree","mapSpatialResolutionToNumber","resolution","_map","defineProperty","generateSpatialArray","start","end","arr","i","push","flattenArray","flattenedArray","length","j","splitData","changeInterval","numDistinct","Math","floor","mergeArraysAndComputeMeans","mergeTargetDistance","nextMergeStartDistance","numArraysPerMerge","mergedArrays","travelDistance","subArray","sum","count","k","mergeArrays","subTypes","sectionMap","timeSeries","histogram","depthProfile","heatmap","contourMap","sparse","SpaceTimeData","_this","this","classCallCheck","generateCsv","dates","Array","from","depths","hasDepth","csvArray","parameters","fields","variableValues","lats","lons","isNaN","join","metadata","Set","lonStart","latStart","lonCount","latCount","zMin","zMax","extent","depthIndexAdjust","next","row","parseFloat","add","spatialResolution","Spatial_Resolution","lonsList","lon2","latsList","lat2","quantile1","quantile","quantile2","undefined","toPrecision","subType","splitByDate","splitByDepth","_this2","size","variableValueSubsets","depthInterval","dateInterval","map","subset","vizSubTypes","storedProcedures","spaceTime","TimeSeriesData","stds","lat","lon","depth","csvString","DepthProfileData","SectionMapData","orientation","latsDistinct","lonsDistinct","zonalPlotDepths","meridionalPlotDepths","depthsList","splitBySpace","spaceCount","lonInterval","latInterval","SparseData","Depth_Min","variableIndex","times","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","reduce","queryString","key","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","csvParser","response","reader","readerIsDone","chunk","wrap","_context","prev","TextDecoder","CSVParser","columns","on","record","read","sent","ok","abrupt","getReader","done","write","decode","value","stop","keyRetrieval","_callee2","_context2","json","keyCreation","_ref3","_callee3","description","_context3","trim","_x","apply","arguments","visualization","storedProcedureRequest","_ref4","_callee4","vizData","_context4","t0","spName","console","log","_x2","getTableStats","_ref5","_callee5","tableName","_context5","_x3","cruiseTrajectoryRequest","_ref6","_callee6","_context6","_x4","_callee7","_context7","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","queryRequest","cruiseListRequest","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","watchCruiseTrajectoryRequest","watchCruiseListRequest","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_marked6","_marked7","_context8","visualizationActions","query","_marked8","_context9","delay","finalize","_marked9","_context10","_marked10","_context11","_marked11","_context12","takeLatest","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","_context22","_marked22","_context23","all","_marked23","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","colors","orange","backgroundGray","aqua","withStyles","theme","centered","position","top","props","classes","react_default","createElement","CircularProgress","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleClick","handleChange","event","setState","target","wrapper","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","warningCaption","Grid","container","alignItems","justify","spacing","item","TextField","margin","name","onChange","placeholder","descriptionField","Button","disabled","color","onClick","Components_LoadingSpinner","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","fontSize","useEffect","Link","component","RouterLink","to","pathname","TopNavBar","handleLogOut","clearState","username","password","handleNavigate","route","history","handleOutsideNavigate","url","open","_this$props","navWrapper","navLink","rightNavLink","withRouter","appBar","backgroundColor","boxShadow","toolBar","zIndex","paddingLeft","textAlign","boxSizing","cursor","marginRight","&:hover","textDecoration","fontWeight","display","float","rightLinkWrapper","Home","Fragment","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","height","infoCard","padding","gridClass","gridItem","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","variableDetailTable","marginLeft","variableDetailTableRow","variableDetailTableCell","borderBottomColor","xs","src","imageSource","alt","Dataset_Description","Data_Source","Distributor","detailCellRendererParams","template","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","handleColumnRowGroupChanged","forEach","column","setColumnVisible","colId","render","gridPaper","gridSearch","autoFocus","label","InputLabelProps","shrink","gridWrapper","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","firstName","optional","lastName","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","regionRenderModes","draw","form","validation","depthOneIsLower","depthOneOutOfBounds","depthTwoOutOfBounds","negative","date","dateOneIsLater","dateOneOutOfBounds","dateTwoOutOfBounds","latOneIsHigher","latOneOutOfBounds","latTwoOutOfBounds","lonOneIsHigher","lonOneOutOfBounds","lonTwoOutOfBounds","dataIsIrregular","dateRangeRequired","depthRangeRequired","surfaceOnlyDataset","irregularOnly","dataSizeTooLarge","generic","invalid","dataSizeWarning","dataSizePrevent","Dialog","onClose","DialogTitle","Variable","DialogContent","DialogContentText","Long_Name","Sensor","Temporal_Resolution","Time_Min","slice","Time_Max","Lat_Min","Lat_Max","Lon_Min","Depth_Max","temporalResolutions","threeMinutes","sixHourly","daily","weekly","monthly","annual","monthlyClimatology","threeDay","eightDayRunning","eightDays","mapTemporalResolutionToNumber","reactWindowListRef","React","createRef","MenuList","componentDidUpdate","prevProps","prevState","children","findIndex","child","isFocused","current","scrollToItem","options","maxHeight","_getValue","getValue","slicedToArray","initialOffset","indexOf","dist_index_esm","style","itemCount","itemSize","initialScrollOffset","ref","_ref","DropdownIndicator","chunk_5d200a41_browser_esm","ArrowDropDown","SingleValue","assign","Option","DataRetrievalForm","search","addDocuments","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","handleVisualizationSpeedDialClose","visualizationSpeedDialOpen","handleVisualizationSpeedDialOpen","handleVisualizationSpeedDialClick","getSelectOptionsFromCatalogItems","items","onAutoSuggestChange","searchString","searchField","estimateDataSize","_this2$props","dt1","dt2","lat1","lon1","selectedVizType","date1","Date","date2","res","dayDiff","checkStartDepth","surfaceOnly","depth1","depth2","replace","toFixed","checkEndDepth","checkStartDate","checkEndDate","checkStartLat","checkEndLat","checkStartLon","Lon_Max","checkEndLon","checkHeatmap","irregularSpatialResolution","checkContour","checkSection","checkHistogram","checkTimeSeries","checkDepthProfile","checkSparseMap","checkGeneralWarn","checkGeneralPrevent","JsSearch","searchIndex","addIndex","_this3","_this$state","_this$props2","_validations","fill","_validations2","startDepthMessage","endDepthMessage","startLatMessage","endLatMessage","startLonMessage","endLonMessage","heatmapMessage","contourMessage","sectionMapMessage","histogramMessage","timeSeriesMessage","depthProfileMessage","sparseMapMessage","generalWarnMessage","generalPreventMessage","parametersAreInvalid","some","showUI","displayNone","Components_TableStatsDialog","dataRetrievalFormPaper","shortenHeight","react_select_browser_esm","isLoading","components","IndicatorSeparator","isClearable","onInputChange","filterOption","variableSelect","escapeClearsValue","updateFields","styles","menu","provided","input","fontFamily","control","border","borderColor","&:focus-within","noOptionsMessage","option","_ref2",":active","&:after","singleValue","paddingRight","primary25","primary","IconButton","LibraryBooks","datePickerGridSection","material_ui_pickers_esm","format","minDate","maxDate","autoOk","handleStartDateChange","inputVariant","handleEndDateChange","FormControl","InputLabel","htmlFor","OutlinedInput","aria-describedby","labelWidth","FormHelperText","handleLatLonChange","vizTypeSelectFormControl","Select","inputProps","MenuItem","onVisualize","generalMessage","dataRetrievalFormField","retrieveDataButton","visualizationSpeedDial","visualizeButton","borderRadius","palette","visualizeButtonText","dominantBaseline","textAnchor","vizSelect","utcDateStringToLocal","utcString","utcYear","getUTCFullYear","utcMonth","getUTCMonth","utcDate","getUTCDate","newDate","setFullYear","clearCharts","ArrowRight","formatOptionLabel","meta","context","VizControlPanel","handleOpenControlPanel","showControlPanel","handleCloseControlPanel","stopPropagation","showCharts","handleShowCharts","handleShowGlobe","closePanelChevron","aria-label","ChevronLeft","openPanelChevron","ChevronRight","Drawer","drawer","paper","drawerPaper","anchor","ButtonGroup","Tooltip","placement","groupedButtons","depressed","Language","InsertChartOutlined","clearChartsButton","Delete","valueContainer","borderBottom","tableStatsButton","KeyboardButtonProps","datePickerInputAdornment","formGridItem","InputProps","padLeft","fullWidth","bottom","navDrawerWidth","controlPanelForm","borderLeft","main","fontVariant","colorscaleOptions","colorscaleMenu","iconButtonWrapper","_useState","useState","_useState2","paletteAnchorElement","setPaletteAnchorElement","handleOpenPalette","iconButton","Palette","currentTarget","Menu","anchorEl","keepMounted","handlePaletteChoice","popover","paddingBottom","zValues","handleZValueConfirm","SwapVert","_React$useState","_React$useState2","popoverAnchorElement","setPopoverAnchorElement","_React$useState3","_React$useState4","localZMin","setLocalZMin","_React$useState5","_React$useState6","localZMax","setLocalZMax","handleClose","validations","zMinMessage","zMaxMessage","Popover","anchorOrigin","vertical","horizontal","transformOrigin","chartWrapper","buttonBlock","onToggleSplitByDate","onToggleSplitByDepth","downloadCsv","DateRange","Waves","CloudDownload","ChartComponents_ZValueControls","ChartComponents_PaletteControls","plots","_props$chart","chart","setSplitByDate","_useState3","_useState4","setSplitByDepth","_useState5","_useState6","subTypeState","_useState7","_useState8","setPalette","_useState9","_useState10","setZValues","_zValues","subSets","generatePlotData","subsets","infoObject","variableName","react_plotly_default","zauto","zmin","zmax","x","y","z","connectgaps","autocolorscale","colorscale","contours","coloring","showlabels","labelfont","family","labelformat","colorbar","text","Unit","exponentformat","layout","font","xaxis","yaxis","paper_bgcolor","annotations","xref","yref","yshift","showarrow","handleContourMap","zsmooth","handleHeatmap","handleHistogram","ChartComponents_ChartControlPanel","setTimeout","requestAnimationFrame","values","csv","blob","Blob","URL","createObjectURL","document","setAttribute","appendChild","click","removeChild","error_y","array","opacity","visible","line","distinctMeridiansOrParallelsForSplitting","xAxisLabel","spaceTitle","handleSectionMap","plot","mapbox","center","config","mapboxAccessToken","handleSparseMap","Charts","chartsContainer","ChartComponents_SparseMap","ChartComponents_SpaceTimeChart","ChartComponents_TimeSeriesChart","ChartComponents_DepthProfileChart","ChartComponents_SectionMapChart","cruiseTrajectoryClear","esriFonts","CruiseSelector","getSelectOptionsFromCruiseList","list","Nickname","handleCruiseSelect","selection","ID","selectedCruise","e","outerDiv","getCruiseListState","cruiseSelect","menuList","cruiseInfo","cruiseInfoCell","Name","Start_Time","Chief_Name","Ship_Name","maxWidth","borderStyle","DrawButton","drawButton","helpText","cancelButton","showHelp","polygonSymbol","symbolLayers","material","outline","UiComponents","shouldComponentUpdate","nextProps","nextState","view","esriModules","regionLayer","setShowHelp","drawMode","sketchModel","SketchViewModel","layer","defaultUpdateOptions","toggleToolOnClick","tool","getElementById","updateDomainFromGraphicExtent","Utils","webMercatorToGeographic","graphic","geometry","graphics","addEventListener","removeAll","create","mode","cancel","ui","remove","TrajectoryController","memo","trajectoryLayer","cruiseTrajectoryGeometry","paths","Graphic","symbol","cap","xSize","xmax","xmin","ySize","ymax","ymin","graphicSize","zoom","goTo","maxDuration","speedFactor","MapContainer","_this3$props","regionRenderMode","spParams","polygon","rings","esm","mapProperties","basemap","viewProperties","MapContainer_UiComponents","updateDomainFromMap","measurementPositions","globeUIRef","Components_CruiseSelector","GraphicsLayer","cleanSPParams","localDateToString","year","getFullYear","month","getMonth","day","getDate","toString","mapVizType","vizType","_mapping","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","completedShowCharts","Visualization","filteredData","_this$state$spParams","mapping","Number","Table_Name","toggleShowUI","coordinates","newCoordinates","min","max","esriModuleNames","loadModules","loadedModules","accumulator","currentValue","currentIndex","background","Components_DataRetrievalForm","Components_VizControlPanel","toggleChartView","Components_MapContainer","Components_Charts","userLoginRequestSend","LoginDialog","handleLogin","aria-labelledby","onSubmit","preventDefault","DialogActions","snackbarClose","centerText","Snackbar","autoHideDuration","loader","right","loaderContent","flexDirection","alignItem","spinnerText","spinner","dist","fadeIn","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","Components_LoginDialog","Components_SnackbarWrapper","Components_LoadingOverlay","inlineBlock","LandingPage","landingWrapper","welcomeMessage","primaryTypographyProps","nestedPrimaryTypographyProps","PermanentDrawerLeft","handleOpenDRForm","showDataRetrievalForm","handleCloseDRForm","List","ListItem","ListItemIcon","esm_Home","ListItemText","AccountCircle","CollectionsBookmark","Collapse","in","timeout","unmountOnExit","disablePadding","dense","nestedListItem","inset","drForm","drFormPaper","drFormHead","flexShrink","logo","moveRight","createMuiTheme","typography","useNextVariants","contrastText","secondary","default","overrides","MuiIconButton","MuiListItemIcon","MuiListItem","gutters","MuiToolbar","MuiOutlinedInput","&$focused","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","MuiFilledInput","inputSelect","adornedEnd","App","vizRef","utils","DateFnsUtils","MuiThemeProvider","react_router_dom","Components_GlobalUIComponentWrapper","react_router","exact","path","LicenseManager","setLicenseKey","rootElement","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7d63e53.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    case interfaceActionTypes.SET_LOADING_MESSAGE: return {...state, loadingMessage: action.payload.message}\r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\n\r\nexport const GET_TABLE_STATS = 'GET_TABLE_STATS';\r\nexport const GET_TABLE_STATS_REQUEST_PROCESSING = 'GET_TABLE_STATS_REQUEST_PROCESSING';\r\nexport const STORE_TABLE_STATS = 'STORE_TABLE_STATS';\r\n\r\nexport const CRUISE_TRAJECTORY_REQUEST_SEND = 'CRUISE_TRAJECTORY_REQUEST_SEND';\r\nexport const CRUISE_TRAJECTORY_REQUEST_SUCCESS = 'CRUISE_TRAJECTORY_REQUEST_SUCCESS';\r\nexport const CRUISE_TRAJECTORY_REQUEST_FAILURE = 'CRUISE_TRAJECTORY_REQUEST_FAILURE';\r\nexport const CRUISE_TRAJECTORY_REQUEST_PROCESSING = 'CRUISE_TRAJECTORY_REQUEST_PROCESSING';\r\nexport const CRUISE_TRAJECTORY_CLEAR = 'CRUISE_TRAJECTORY_CLEAR';\r\n\r\nexport const CRUISE_LIST_REQUEST_SEND = 'CRUISE_LIST_REQUEST_SEND';\r\nexport const CRUISE_LIST_REQUEST_SUCCESS = 'CRUISE_LIST_REQUEST_SUCCESS';\r\nexport const CRUISE_LIST_REQUEST_FAILURE = 'CRUISE_LIST_REQUEST_FAILURE';\r\nexport const CRUISE_LIST_REQUEST_PROCESSING = 'CRUISE_LIST_REQUEST_PROCESSING';\r\n\r\nexport const TRIGGER_SHOW_CHARTS = 'TRIGGER_SHOW_CHARTS';\r\nexport const COMPLETED_SHOW_CHARTS = 'COMPLETED_SHOW_CHARTS';","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n    loadingMessage: '',\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    getCruiseTrajectoryRequestState: null,\r\n    cruiseTrajectory: null,\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    cruiseList: [],\r\n    getCruiseListRequestState: null,\r\n    showChartsOnce: null\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';\r\n\r\nexport const SET_LOADING_MESSAGE = 'SET_LOADING_MESSAGE';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING: return {...state, getCruiseTrajectoryRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS: return {...state,\r\n            cruiseTrajectory: action.payload.trajectory,\r\n            getCruiseTrajectoryRequestState: states.succeeded\r\n        }\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR: return {...state, cruiseTrajectory: null}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE: return {...state, getCruiseTrajectoryRequestState: states.failed}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING: return {...state, getCruiseListRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS: return {\r\n            ...state,\r\n            getCruiseListRequestState: states.succeeded,\r\n            cruiseList: action.payload.cruiseList\r\n        }\r\n\r\n        case visualizationActionTypes.TRIGGER_SHOW_CHARTS: return {...state, showChartsOnce: true}\r\n        case visualizationActionTypes.COMPLETED_SHOW_CHARTS: return {...state, showChartsOnce: false}\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})\r\n\r\nexport const setLoadingMessage = (message) => ({\r\n    type:interfaceActionTypes.SET_LOADING_MESSAGE,\r\n    payload: {\r\n        message\r\n    }\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const getTableStats = (tableName) => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS,\r\n    payload: {\r\n        tableName\r\n    }\r\n})\r\n\r\nexport const getTableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storeTableStats = (tableStats) => ({\r\n    type: visualizationActionTypes.STORE_TABLE_STATS,\r\n    payload: {\r\n        tableStats\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSuccess = (trajectory) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS,\r\n    payload: {\r\n        trajectory\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseTrajectoryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const cruiseTrajectoryClear = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR\r\n})\r\n\r\nexport const cruiseListRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SEND,\r\n})\r\n\r\nexport const cruiseListRequestSuccess = (cruiseList) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS,\r\n    payload: {\r\n        cruiseList\r\n    }\r\n})\r\n\r\nexport const cruiseListRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseListRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const triggerShowCharts = () => ({\r\n    type: visualizationActionTypes.TRIGGER_SHOW_CHARTS\r\n})\r\n\r\nexport const completedShowCharts = () => ({\r\n    type: visualizationActionTypes.COMPLETED_SHOW_CHARTS\r\n})","export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\n// export const apiUrl = 'https://simonscmap.dev';","const spatialResolutions = {\r\n    irregular: 'Irregular',\r\n    halfDegree: '1/2° X 1/2°' ,\r\n    quarterDegree: '1/4° X 1/4°' ,\r\n    twentyFifthDegree: '1/25° X 1/25°' ,\r\n    fourKm: '4km X 4km',\r\n    twelfthDegree: '1/12° X 1/12°',\r\n    seventyKm: '70km X 70km',\r\n    oneDegree: '1° X 1°'\r\n}\r\n\r\nexport default spatialResolutions;","import spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nconst mapSpatialResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [spatialResolutions.halfDegree] : .5,\r\n        [spatialResolutions.quarterDegree] : .25,\r\n        [spatialResolutions.twentyFifthDegree] : .04,\r\n        [spatialResolutions.fourKm] : .041672,\r\n        [spatialResolutions.twelfthDegree] : .083333,\r\n        [spatialResolutions.oneDegree] : 1,\r\n        [spatialResolutions.seventyKm] : .25\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapSpatialResolutionToNumber;","const generateSpatialArray = (start, resolution, end) => {\r\n    let arr = [];\r\n\r\n    for(let i = start; i <= end; i += resolution){\r\n        arr.push(i);\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nexport default generateSpatialArray;","// Flattens an array by 1 level\r\n// [[[],[]], [[],[]], [[],[]]] => [[], [], [], [], [], []]\r\n\r\nconst flattenArray = (arr) => {\r\n    let flattenedArray = [];\r\n\r\n    for(let i = 0; i < arr.length; i++){\r\n        for(let j = 0; j < arr[i].length; j++){\r\n            flattenedArray.push(arr[i][j]);\r\n        }\r\n    }\r\n\r\n    return flattenedArray;\r\n}\r\n\r\nexport default flattenArray;","// Interval number of indices between changes in this parameter, or in order words\r\n// how many times will we see the same value for this parameter in a row before it changes\r\n// as we iterate through the values array.\r\n// We use modulo for cases where data.length / interval is larger than the number of \r\n// distinct values for that parameter.\r\n\r\nconst splitData = (data, changeInterval, numDistinct) => {\r\n    var splitData = [];\r\n\r\n    for(let i = 0; i < numDistinct; i++){\r\n        splitData.push([]);\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        let index = Math.floor(i / changeInterval) % numDistinct;\r\n        splitData[index].push(data[i]);\r\n    }\r\n\r\n    return splitData;\r\n}\r\n\r\nexport default splitData;","// mergeTargetDistance - number of hops between arrays being merged\r\n// mergeTargetNumber - number of arrays being merged - implicit\r\n// nextStartDistance - once a merge is complete how many hops to next start\r\nconst mergeArraysAndComputeMeans = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n    \r\n    // Find each merging start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        // Iterate through each value in the first array of this merge. Count\r\n        // the number of values summed so we can ignore nulls and compute a mean.\r\n        for(let j = 0; j < data[i].length; j ++){\r\n            let sum = 0;\r\n            let count = 0;\r\n\r\n            // Aggregate values of all merge targets\r\n            for(let k = i; k < i + (mergeTargetDistance * numArraysPerMerge); k += mergeTargetDistance){\r\n                if(data[k][j] !== null) {\r\n                    sum += data[k][j];\r\n                    count ++;\r\n                };\r\n            }\r\n            subArray.push(count < 1 ? null : sum / (count));\r\n        }\r\n\r\n        mergedArrays.push(subArray)\r\n    }\r\n\r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArraysAndComputeMeans;","const mergeArrays = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n\r\n    // Find each merge start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        for(let j = i; j <= i + travelDistance; j += mergeTargetDistance){\r\n            subArray = [...subArray, ...data[j]];\r\n        }\r\n\r\n        mergedArrays.push(subArray);\r\n    }\r\n   \r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArrays;\r\n\r\n","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    heatmap: 'Heatmap',\r\n    contourMap: 'Contour Map',\r\n    sparse: 'Sparse'\r\n}\r\n\r\nexport default subTypes;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/mergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\n\r\nclass SpaceTimeData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = null;\r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n        this.lonStart = null;\r\n        this.latStart = null;\r\n        this.lonCount = null;\r\n        this.latCount = null;\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n        this.depthIndexAdjust = null;\r\n        this.next = null;\r\n    }\r\n\r\n    add(row) {\r\n        // Only on first row\r\n        if(this.hasDepth === null) {\r\n            this.hasDepth = row.length === 5;\r\n            this.lonStart = parseFloat(row[2]);\r\n            this.latStart = parseFloat(row[1]);\r\n            this.depthIndexAdjust = this.hasDepth ? 1 : 0;\r\n        }\r\n\r\n        if(this.hasDepth){\r\n            this.depths.add(row[3]);\r\n        }\r\n\r\n        this.dates.add(row[0]);\r\n\r\n        this.variableValues.push(parseFloat(row[3 + this.depthIndexAdjust]));\r\n    }\r\n\r\n    finalize() {\r\n        const spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n\r\n        // Simple arrays of lats and lons\r\n        let lonsList = generateSpatialArray(this.lonStart, spatialResolution, this.parameters.lon2);\r\n        let latsList = generateSpatialArray(this.latStart, spatialResolution, this.parameters.lat2);\r\n\r\n        this.lonCount = lonsList.length;\r\n        this.latCount = latsList.length;\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n        this.extent = extent(this.variableValues);\r\n\r\n        // Expanded arrays to be used in plots\r\n        let lats = [];\r\n        let lons = []\r\n\r\n        for(let i = 0; i < latsList.length; i ++){\r\n            for(let j = 0; j < lonsList.length; j++){\r\n                lats.push(latsList[i]);\r\n                lons.push(lonsList[j]);\r\n            }\r\n        }\r\n\r\n        this.lats = lats;\r\n        this.lons = lons;\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        if(this.depths.size === 0) this.depths.add('Surface');\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const latInterval = this.lonCount;\r\n        const depthInterval = latInterval * this.latCount;\r\n        const dateInterval = depthInterval * this.depths.size;\r\n\r\n        // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n        variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, depthInterval, this.depths.size));\r\n        variableValueSubsets = flattenArray(variableValueSubsets);\r\n\r\n        // Contour and heatmap compute mean variable values per lat and lon\r\n        // when not split by date and/or time\r\n        if(subType === vizSubTypes.contourMap || subType === vizSubTypes.heatmap) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    this.depths.size, \r\n                    this.depths.size\r\n                    );\r\n    \r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    this.depths.size, \r\n                    1, \r\n                    this.dates.size\r\n                    );\r\n    \r\n            } else {\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    variableValueSubsets.length, \r\n                    variableValueSubsets.length\r\n                    );            \r\n            }\r\n        } \r\n        \r\n        // Histograms split and aggregate without computing means\r\n        else if (subType === vizSubTypes.histogram) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets, \r\n                    1,\r\n                    this.depths.size,\r\n                    this.depths.size\r\n                    );\r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets,\r\n                    this.depths.size,\r\n                    1,\r\n                    this.dates.size\r\n                );\r\n            } else {\r\n                variableValueSubsets = [this.variableValues];\r\n            }\r\n        }\r\n\r\n        // Nothing here yet\r\n        else {}\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i]},${depths[Math.floor(i / (this.variableValues.length / (dates.length * depths.length))) % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SpaceTimeData;","const storedProcedures = {\r\n    sectionMap: 'uspSectionMap',\r\n    timeSeries: 'uspTimeSeries',\r\n    spaceTime: 'uspSpaceTime',\r\n    depthProfile: 'uspDepthProfile'\r\n}\r\n\r\nexport default storedProcedures;","class TimeSeriesData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.dates = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depth = null;\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.depthIndexAdjust = row.length === 6 ? 1 : 0;\r\n            this.lat = row[1];\r\n            this.lon = row[2];\r\n            this.depth = row.length === 6 ? row[3] : false;\r\n        }\r\n\r\n        this.variableValues.push(row[3 + this.depthIndexAdjust]);\r\n        this.stds.push(row[4 + this.depthIndexAdjust]);\r\n        this.dates.push(row[0]);\r\n    }\r\n\r\n    finalize() {\r\n        if(this.depth === false) this.depth = 'Surface';\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }    \r\n\r\n    generateCsv() {\r\n        let csvString = `time,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.dates[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default TimeSeriesData;","class DepthProfileData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depths = [];\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.lat = parseFloat(row[0]);\r\n            this.lon = parseFloat(row[1]);\r\n        }\r\n\r\n        this.variableValues.push(parseFloat(row[2]));\r\n        this.stds.push(parseFloat(row[3]));\r\n        this.depths.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        // pass\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }\r\n    \r\n    generateCsv() {\r\n        let csvString = `depth,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default DepthProfileData;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\n\r\nclass SectionMapData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        \r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n        \r\n        this.lonStart = null;\r\n        this.latStart = null;\r\n        this.lonCount = null;\r\n        this.latCount = null;\r\n        \r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.orientation = null;\r\n        \r\n        this.latsDistinct = null;\r\n        this.lonsDistinct = null;\r\n\r\n        this.lats = null;\r\n        this.lons = null;\r\n        this.zonalPlotDepths = null;\r\n        this.meridionalPlotDepths = null;\r\n    }\r\n\r\n    // time, lat, lon, depth, value\r\n    add(row) {\r\n        // Only on first row\r\n        if(this.latStart === null) {\r\n            this.latStart = parseFloat(row[1]);\r\n            this.lonStart = parseFloat(row[2]);\r\n        }\r\n\r\n        this.depths.add(row[3]);\r\n        this.dates.add(row[0]);\r\n\r\n        this.variableValues.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        const spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n\r\n        // Simple arrays of lats and lons\r\n        let lonsList = generateSpatialArray(this.lonStart, spatialResolution, this.parameters.lon2);\r\n        let latsList = generateSpatialArray(this.latStart, spatialResolution, this.parameters.lat2);\r\n\r\n        this.lonCount = lonsList.length;\r\n        this.latCount = latsList.length;\r\n\r\n        this.lonsDistinct = lonsList;\r\n        this.latsDistinct = latsList;\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        // Expanded arrays to be used in plots\r\n        let lats = [];\r\n        let lons = []\r\n\r\n        for(let i = 0; i < latsList.length; i ++){\r\n            for(let j = 0; j < this.depths.size; j++){\r\n                lats.push(latsList[i]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < lonsList.length; i ++){\r\n            for(let j = 0; j < this.depths.size; j++){\r\n                lons.push(lonsList[i]);\r\n            }\r\n        }\r\n\r\n        this.lats = lats;\r\n        this.lons = lons;\r\n\r\n        let zonalPlotDepths = [];\r\n        let meridionalPlotDepths = [];\r\n        let depthsList = Array.from(this.depths).map(depth => parseFloat(depth));\r\n\r\n        for(let i = 0; i < this.latsDistinct.length; i++){\r\n            for(let j = depthsList.length - 1; j > -1; j--){\r\n                meridionalPlotDepths.push(depthsList[j]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < this.lonsDistinct.length; i++){\r\n            for(let j = depthsList.length - 1; j > -1; j--){\r\n                zonalPlotDepths.push(depthsList[j]);\r\n            }\r\n        }\r\n\r\n        this.zonalPlotDepths = zonalPlotDepths;\r\n        this.meridionalPlotDepths = meridionalPlotDepths;\r\n        \r\n        this.orientation = this.lonCount > this.latCount ? 'zonal' : 'meridional';\r\n    }\r\n\r\n    // Direction is meridional or zonal\r\n    generatePlotData(orientation, splitByDate, splitBySpace) {\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const lonInterval = this.depths.size;\r\n        const latInterval = lonInterval * this.lonCount;\r\n        const dateInterval = latInterval * this.latCount;\r\n\r\n        // // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n\r\n        // either latCount or lonCount depending on orientation\r\n        let spaceCount;\r\n\r\n        if(orientation === 'zonal') {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, latInterval, this.latCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = this.latCount;\r\n        }\r\n\r\n        else {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, lonInterval, this.lonCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = this.lonCount;\r\n        }\r\n\r\n        if(splitByDate && splitBySpace){\r\n            // pass\r\n        } else if (splitByDate){\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                spaceCount,\r\n                spaceCount\r\n            )\r\n        } else if (splitBySpace) {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                spaceCount,\r\n                1,\r\n                this.dates.size\r\n            )\r\n        } else {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                variableValueSubsets.length,\r\n                variableValueSubsets.length\r\n            )\r\n        }\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i]},${depths[i % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SectionMapData;","import { quantile, extent } from 'd3-array';\r\n\r\nclass SparseData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = Boolean(payload.metadata.Depth_Min);\r\n        this.variableIndex = payload.metadata.Depth_Min ? 4 : 3;\r\n        this.depths = [];\r\n        this.times = [];\r\n        this.variableValues = [];\r\n        this.lats = [];\r\n        this.lons = [];\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n    }\r\n\r\n    add(row) {\r\n        if(row[this.variableIndex]){\r\n            this.times.push(row[0]);\r\n            this.lats.push(parseFloat(row[1]));\r\n            this.lons.push(parseFloat(row[2]));\r\n            if(this.hasDepth) this.depths.push(parseFloat(row[3]));\r\n            this.variableValues.push(parseFloat(row[this.variableIndex]));\r\n        }\r\n    }\r\n\r\n    finalize() {\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n\r\n        this.extent = extent(this.variableValues);\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        return this.variableValues;\r\n    }\r\n\r\n    generateCsv(){\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SparseData;","import CSVParser from 'csv-parse';\r\n\r\nimport { apiUrl } from './config';\r\nimport SpaceTimeData from './Classes/SpaceTimeData';\r\n\r\nimport storedProcedures from './Enums/storedProcedures';\r\nimport TimeSeriesData from './Classes/TimeSeriesData';\r\nimport DepthProfileData from './Classes/DepthProfileData';\r\nimport SectionMapData from './Classes/SectionMapData';\r\nimport SparseData from './Classes/SparseData';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            catalog.push(record)\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(payload) => {\r\n    const decoder = new TextDecoder();\r\n    var vizData;\r\n\r\n    switch(payload.parameters.spName) {\r\n        case storedProcedures.spaceTime:\r\n            if(payload.subType === 'Sparse') vizData = new SparseData(payload);\r\n            else vizData = new SpaceTimeData(payload);\r\n            break;\r\n\r\n        case storedProcedures.timeSeries:\r\n            vizData = new TimeSeriesData(payload);\r\n            break;\r\n\r\n        case storedProcedures.depthProfile:\r\n            vizData = new DepthProfileData(payload);\r\n            break;\r\n\r\n        case storedProcedures.sectionMap:\r\n            vizData = new SectionMapData(payload);\r\n            break;\r\n\r\n        default:\r\n            console.log('Unknown sproc name');\r\n    }\r\n\r\n    let response = await fetch(apiUrl + '/api/data/sp?' + storedProcedureParametersToUri(payload.parameters), fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            vizData.add(record);\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;\r\n}\r\n\r\napi.visualization.cruiseTrajectoryRequest = async(payload) => {\r\n    const cruiseId = payload.id;\r\n    const decoder = new TextDecoder();\r\n    let trajectory = {lats: [], lons: []};\r\n\r\n    let response = await fetch(apiUrl + '/api/data/cruisetrajectory?' + `id=${payload.id}`, fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            trajectory.lats.push(parseFloat(record[1]));\r\n            trajectory.lons.push(parseFloat(record[2]));\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return trajectory;\r\n}\r\n\r\napi.visualization.cruiseList = async() => {\r\n    let response = await fetch(apiUrl + '/api/data/cruiselist', fetchOptions);\r\n\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;   \r\n}\r\n\r\nexport default api;\r\n\r\n// Test for splitData\r\n// let depthMap = {};\r\n//     let dateMap = {};\r\n\r\n//     let depthCount = 0;\r\n//     vizData.depths.forEach(depth => {\r\n//         depthMap[depth] = depthCount;\r\n//         depthCount ++;\r\n//     })\r\n\r\n//     let dateCount = 0;\r\n//     vizData.dates.forEach(date => {\r\n//         dateMap[date] = dateCount;\r\n//         dateCount ++;\r\n//     })\r\n    \r\n//     let splitData = vizData.generatePlotData(true,true);\r\n//     console.log(splitData);\r\n//     for(let i = 0; i < tempArr.length; i++){\r\n//         let theValue = tempArr[i].Fe\r\n//         let theIndex = dateMap[tempArr[i].time] * vizData.depths.size + depthMap[tempArr[i].depth];\r\n//         console.log(splitData[theIndex]);\r\n//         console.log(theValue);\r\n//         if(splitData[theIndex].includes(theValue)) console.log('correct');\r\n//         else {\r\n//             console.log('Incorrect'); \r\n//             return;\r\n//         }\r\n//     }\r\n\r\n//     console.log(depthMap);\r\n//     console.log(dateMap);","import { put, takeLatest, all, call, delay } from 'redux-saga/effects';\r\n// import { eventChannel } from 'redux-saga';\r\nimport Cookies from 'js-cookie';\r\n// import worker from '../worker';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    \r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){    \r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    \r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    \r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(action){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    \r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    \r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    \r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload);\r\n    yield delay(50);\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'));\r\n    yield delay(70);\r\n    \r\n    // Result will be an object containing variable values and describing date shape\r\n    if(!result){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen(\"Request failed\"));\r\n    } else {\r\n        if(result.variableValues.length > 0){\r\n            result.finalize();\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            // yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            yield put(visualizationActions.triggerShowCharts());\r\n            yield put(visualizationActions.addChart({subType: action.payload.subType, data:result}));\r\n           \r\n        } else {\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges. Try selecting a different date or depth range.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* cruiseTrajectoryRequest(action) {\r\n    yield put(visualizationActions.cruiseTrajectoryRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Cruise Data'));\r\n    let result = yield call(api.visualization.cruiseTrajectoryRequest, action.payload);\r\n\r\n    if(!result || !result.lats.length){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(interfaceActions.snackbarOpen(`Unable to Fetch Cruise Data`));\r\n    } else {\r\n        yield put(visualizationActions.cruiseTrajectoryRequestSuccess(result));\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n    }\r\n}\r\n\r\nfunction* cruiseListRequest() {\r\n    yield put(visualizationActions.cruiseListRequestProcessing());\r\n    let cruiseList = yield call(api.visualization.cruiseList);\r\n\r\n    if(!cruiseList) {\r\n        yield put(visualizationActions.cruiseListRequestFailure());\r\n    } else{\r\n        yield put(visualizationActions.cruiseListRequestSuccess(cruiseList));\r\n    }\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\nfunction* watchCruiseTrajectoryRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND, cruiseTrajectoryRequest);\r\n}\r\n\r\nfunction* watchCruiseListRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_LIST_REQUEST_SEND, cruiseListRequest);\r\n}\r\n\r\n// function createWorkerChannel(worker) {\r\n//     return eventChannel(emit => {\r\n//         worker.onmessage = message => {\r\n//             emit(message);\r\n//         }\r\n\r\n//         const unsubscribe = () => {\r\n//             worker.teminate();\r\n//         }\r\n      \r\n//         return unsubscribe;\r\n//     })\r\n// }\r\n\r\n// function* watchWorkerChannel(){\r\n//     const workerChannel = yield call(createWorkerChannel, worker);\r\n\r\n//     while (true) {\r\n//         const message = yield take(workerChannel);\r\n//         yield put(message.data.type, message.data.payload);\r\n//         //   yield put({ type: INCOMING_PONG_PAYLOAD, payload })\r\n//         //   yield fork(pong, socket)\r\n//       }\r\n// }\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        watchCruiseTrajectoryRequest(),\r\n        watchCruiseListRequest()\r\n        // watchWorkerChannel(),\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","const colors = {\r\n    orange: '#FF8000',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9'\r\n}\r\n\r\nexport default colors;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    },\r\n    warningCaption: {\r\n        color: colors.orange,\r\n        fontSize: '11px',\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    wrapper: {\r\n        marginTop: theme.spacing(16)\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            \r\n            <div className={classes.wrapper}>\r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Key\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                        <Typography variant='caption' className={classes.warningCaption}>\r\n                            This API key is a unique identifier, and should not be shared.\r\n                        </Typography>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"body2\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n                </Paper>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires a user account. Please <Link component={RouterLink} to={{pathname: '/apikeymanagement'}} onClick={() => props.showLoginDialog()}> log in\r\n            </Link> or <Link component={RouterLink} to={{pathname: '/register'}}> register\r\n            </Link>.\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    appBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    toolBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    navWrapper: {\r\n        position: 'fixed',\r\n        width: '100vw',\r\n        top: '0px',\r\n        backgroundColor: 'transparent',\r\n        zIndex: 50,\r\n        paddingTop: '10px',\r\n        paddingLeft: '20px',\r\n        textAlign: 'left',\r\n        boxSizing: 'border-box'\r\n    },\r\n\r\n    navLink: {\r\n        cursor: 'pointer',\r\n        marginRight: 20,\r\n        color: 'white',\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        },\r\n        fontSize: '13px',\r\n        fontWeight: 100,\r\n        display: 'inline-block'     \r\n    },\r\n\r\n    rightNavLink: {\r\n        float: 'right'\r\n    },\r\n\r\n    rightLinkWrapper: {\r\n        display:'inline-block',\r\n        textAlign: 'right'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    handleNavigate = (route) => {\r\n        this.props.restoreInterfaceDefaults()\r\n        this.props.history.push(route);\r\n    }\r\n\r\n    handleOutsideNavigate = (url) => {\r\n        window.open(url, '_blank')\r\n    }\r\n\r\n    render(){\r\n        const { classes, history } = this.props;\r\n        const { pathname } = history.location;\r\n\r\n        return (\r\n            <div className={classes.navWrapper}>\r\n                <Typography variant='caption' onClick={() => this.handleNavigate('/')} className={classes.navLink}>Home</Typography>\r\n                <Typography variant='caption' onClick={() => this.handleNavigate('/catalog')} className={classes.navLink}>Catalog</Typography>\r\n                {pathname !== '/visualization' && <Typography variant='caption' onClick={() => this.handleNavigate('/apikeymanagement')} className={classes.navLink}>API Keys</Typography>}\r\n                {pathname !== '/visualization' && <Typography variant='caption' onClick={() => this.handleNavigate('/visualization')} className={classes.navLink}>Visualization</Typography>}\r\n                {this.props.user && <Typography variant='caption' onClick={() => this.handleLogOut()} className={`${classes.navLink} ${pathname === '/visualization' ? '' : classes.rightNavLink}`}>Log Out</Typography>}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' onClick={() => this.props.showLoginDialog()} className={`${classes.navLink} ${classes.rightNavLink}`}>Log In</Typography>}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' onClick={() => this.handleNavigate('/register')} className={`${classes.navLink} ${classes.rightNavLink}`}>Register</Typography>}\r\n            </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user ? <ApiKeyManagement/> : <LoginRequiredPrompt/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'Variable'],\r\n    ['Spatial Resolution', 'Spatial_Resolution'],\r\n    ['Temporal Resolution', 'Temporal_Resolution'],\r\n    ['Unit', 'Unit'],\r\n    ['Process Level', 'Process_Level'],\r\n    ['Study Domain', 'Study_Domain'],\r\n    ['SQL Table Name', 'Table_Name']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        margin: '-10px auto 0px auto',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(2),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing(2),\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        width: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={8} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={imageSource + 'viz_sample.png'} alt=\"Sample Visualization\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.Dataset_Description}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.Data_Source}\r\n                        </Typography> <br></br>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.Distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable} size='small'>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst detailCellRendererParams = {\r\n  template:\r\n    '<div style=\"height: 100%; box-sizing: border-box\" class=\"testClass\">' +\r\n      '  <div style=\"height: 10%;\">Call Details</div>' +\r\n      '  <div ref=\"eDetailGrid\" style=\"height: 90%;\"></div>' +\r\n    \"</div>\"\r\n}\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"Long_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"Variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"Table_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"Dataset_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"Make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"Sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"Study_Domain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"Process_Level\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"Spatial_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"Temporal_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"Unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'Keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '60vh', \r\n    width: '90%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '60px 5vw',\r\n    padding: '30px'\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n        <Paper elevation={12} className={classes.gridPaper}>\r\n          <TextField\r\n            className={classes.gridSearch}\r\n            autoFocus={true}\r\n            margin=\"normal\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            variant='outlined'\r\n            name='filterText'\r\n            value={this.state.filterText}\r\n            onChange={this.handleChange}\r\n            label=\"Variable Search\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n          />\r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              suppressDragLeaveHidesColumns= {true}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n              detailCellRendererParams={detailCellRendererParams}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog) return <AGGridWrapper catalog={this.props.catalog}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n        else if(this.props.catalogRequestState === states.failed) return <p>Failed to get catalog. Have you tried turning it off and then on again?</p>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const regionRenderModes = {\r\n    draw: 'draw',\r\n    form: 'form'\r\n}\r\n\r\nexport default regionRenderModes;","const validation = {\r\n    depth: {\r\n        depthOneIsLower: 'Start cannot be larger than end',\r\n        depthOneOutOfBounds: 'Start must be smaller than $',\r\n        depthTwoOutOfBounds: 'End must be larger than $',\r\n        negative: 'Depth cannot be negative'\r\n    },\r\n\r\n    date: {\r\n        dateOneIsLater: 'Start cannot be later than end',\r\n        dateOneOutOfBounds: 'Start must be before $',\r\n        dateTwoOutOfBounds: 'End must be after $'\r\n    },\r\n\r\n    lat: {\r\n        latOneIsHigher: 'Start cannot be larger than end.',\r\n        latOneOutOfBounds: 'Start must be less than $',\r\n        latTwoOutOfBounds: 'End must be greater than $'\r\n    },\r\n\r\n    lon: {\r\n        lonOneIsHigher: 'Start cannot be larger than end.',\r\n        lonOneOutOfBounds: 'Start must be less than $',\r\n        lonTwoOutOfBounds: 'End must be greater than $'\r\n    },\r\n\r\n    type: {\r\n        dataIsIrregular: '$ is not available for sparse data',\r\n        dateRangeRequired: '$ requires a range of dates',\r\n        depthRangeRequired: '$ requires a range of depths',\r\n        surfaceOnlyDataset: '$ contains only surface data',\r\n        irregularOnly: 'Sparse map is only available for sparse data',\r\n        dataSizeTooLarge: 'Data set is too large for this visualization type.'\r\n    },\r\n\r\n    generic: {\r\n        invalid: 'Invalid input',\r\n        dataSizeWarning: 'Wait time and application performance may be poor due to size of data.',\r\n        dataSizePrevent: 'Data set is too large. Please reduce date range or area size.'\r\n    }\r\n}\r\n\r\nexport default validation;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    const { data } = props;\r\n\r\n    if(!data) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{data.Variable}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {data.Long_Name}\r\n                </DialogContentText>\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{data.Sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{data.Spatial_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{data.Temporal_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{data.Time_Min ? data.Time_Min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{data.Time_Max ? data.Time_Max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lat_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lat_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{data.Depth_Min ? `${data.Depth_Min}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{data.Depth_Max ? `${data.Depth_Max}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);","const temporalResolutions = {\r\n    threeMinutes: 'Three Minutes',\r\n    sixHourly: 'Six Hourly',\r\n    daily: 'Daily',\r\n    weekly: 'Weekly',\r\n    monthly: 'Monthly',\r\n    annual: 'Annual',\r\n    irregular: 'Irregular',\r\n    monthlyClimatology: 'Monthly Climatology',\r\n    threeDay: 'Three Days',\r\n    eightDayRunning: 'Eight Day Running',\r\n    eightDays: 'Eight Days '\r\n}\r\n\r\nexport default temporalResolutions;","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nconst mapTemporalResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [temporalResolutions.threeMinutes] : 1,\r\n        [temporalResolutions.sixHourly] : 1,\r\n        [temporalResolutions.daily] : 1,\r\n        [temporalResolutions.weekly] : 7,\r\n        [temporalResolutions.monthly] : 30,\r\n        [temporalResolutions.annual] : 365,\r\n        [temporalResolutions.irregular] : null,\r\n        [temporalResolutions.monthlyClimatology]: 30,\r\n        [temporalResolutions.threeDay]: 3,\r\n        [temporalResolutions.eightDayRunning]: 8,\r\n        [temporalResolutions.eightDays]: 8\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapTemporalResolutionToNumber;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { ArrowDropDown, LibraryBooks } from '@material-ui/icons';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend } from '../Redux/actions/visualization';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    dataRetrievalFormPaper: {\r\n        width: '1000px',\r\n        height: '260px',\r\n        padding: theme.spacing(2.5),\r\n        position:'fixed',\r\n        top: '10px',\r\n        left: '50%',\r\n        marginLeft: '-600px',\r\n        zIndex: 2,\r\n        paddingTop: theme.spacing(1.5),\r\n    },\r\n\r\n    dataRetrievalFormField: {\r\n        padding:`0px ${theme.spacing(1)}`\r\n    },\r\n\r\n    retrieveDataButton: {\r\n        margin:'10px auto'\r\n    },\r\n\r\n    variableSelect: {\r\n        margin: '0 30px 20px 30px'\r\n    },\r\n\r\n    visualizationSpeedDial: {\r\n        position: 'relative',\r\n        top: '5px',\r\n        left: '30px'\r\n    },\r\n\r\n    visualizeButton: {\r\n        borderRadius:'10%',\r\n        width: '100px',\r\n        height:'40px',\r\n        margin: 'auto 0',\r\n        backgroundColor: theme.palette\r\n    },\r\n\r\n    visualizeButtonText: {\r\n        dominantBaseline: \"middle\",\r\n        textAnchor: \"middle\"\r\n    },\r\n\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    datePickerGridSection: {\r\n        paddingLeft: '40px !important',\r\n        paddingRight: '40px !important'\r\n    },\r\n\r\n    shortenHeight: {\r\n        height: '60px'\r\n    },\r\n\r\n    vizSelect: {\r\n        minWidth: 120\r\n    },\r\n\r\n    gridItem: {\r\n        height: '48px'\r\n    },\r\n\r\n    generalMessage: {\r\n        textAlign: 'left'\r\n    },\r\n\r\n    vizTypeSelectFormControl: {\r\n        width: 150\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend\r\n}\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nconst reactWindowListRef = React.createRef();\r\nclass MenuList extends Component {\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if(!(this.props.children && this.props.children.length)) return;\r\n        let index = this.props.children.findIndex(child => child.props && child.props.isFocused);\r\n        reactWindowListRef.current.scrollToItem(index);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <ReactWindowList\r\n                style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length === 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <ArrowDropDown />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nclass DataRetrievalForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('Variable');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            visualizationSpeedDialOpen: false,\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.Variable,\r\n            label: item.Variable === item.Long_Name ? (item.Variable.length > 48 ? item.Variable.slice(0,45) + '...' : item.Variable) : (item.Variable.length > 23 ? item.Variable.slice(0,23) : item.Variable) + ' : ' + (item.Long_Name.length > 38 ? item.Long_Name.slice(0,35) + '...' : item.Long_Name),\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Histogram');\r\n        return '';\r\n    }\r\n\r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Depth Profile');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = () => {\r\n        if(this.estimateDataSize() > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = () => {\r\n        if(this.estimateDataSize() > 50000000) return validation.generic.dataSizePrevent;\r\n        return ''\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartDate(),\r\n                this.checkEndDate(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(),\r\n                this.checkGeneralPrevent()\r\n            ];\r\n        } else validations = Array(17).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startDateMessage,\r\n            endDateMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage\r\n        ] = validations;\r\n\r\n        const parametersAreInvalid = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage\r\n        ].some(message => message.length);\r\n\r\n        return (\r\n            <div className={this.props.showUI ? '' : classes.displayNone} id='drf'>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n                <Paper className={classes.dataRetrievalFormPaper}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={11} className={classes.shortenHeight}>\r\n                            <Select\r\n                                isLoading = {catalogRequestState === states.inProgress}\r\n                                components={{\r\n                                    IndicatorSeparator:'',\r\n                                    DropdownIndicator,\r\n                                    Option,\r\n                                    MenuList,\r\n                                    SingleValue,\r\n                                }}\r\n                                isClearable\r\n                                onInputChange={this.onAutoSuggestChange}\r\n                                filterOption={null}\r\n                                className={classes.variableSelect}\r\n                                autoFocus\r\n                                escapeClearsValue\r\n                                name=\"fields\"\r\n                                label=\"Variables\"\r\n                                options={options}\r\n                                onChange={this.props.updateFields}\r\n                                value={fields}\r\n                                placeholder=\"Variable Search\"\r\n                                styles={{\r\n                                    menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                                    input: provided => ({...provided,\r\n                                        color: 'white',\r\n                                        fontFamily: '\"Lato\", sans-serif'\r\n                                    }),\r\n\r\n                                    control: provided => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        border: '1px solid #333333',\r\n                                        '&:hover': { borderColor: 'white' },\r\n                                        '&:focus-within': { borderColor: colors.orange },\r\n                                    }),\r\n\r\n                                    placeholder: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        fontSize: '14px'\r\n                                    }),\r\n\r\n                                    noOptionsMessage: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        backgroundColor: colors.backgroundGray\r\n                                    }),\r\n\r\n                                    option: (provided, { data, isFocused }) => {\r\n                                        return ({...provided,\r\n                                        backgroundColor: isFocused ? '#383838' : '#424242',\r\n                                        color: data.data.Sensor === 'Satellite' ? '#1acf02' : data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        '&:hover': { backgroundColor: '#383838' },\r\n                                        ':active': { backgroundColor: '#383838' },\r\n                                        '&:after': { \r\n                                            content: data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            float: 'left'\r\n                                        },\r\n                                    })},\r\n\r\n                                    singleValue: (provided, state) => ({...provided,\r\n                                        fontFamily: state.data.data.Sensor === 'Satellite' ? 'Font Awesome 5 Free': '\"Lato\", sans-serif',\r\n                                        color: state.data.data.Sensor === 'Satellite' ? '#1acf02' : state.data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        paddingRight: '20px',\r\n                                        '&:after': { \r\n                                            content: state.data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            fontSize: '18px',\r\n                                            position: 'relative',\r\n                                            left: '8px',\r\n                                            top: '3px'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n                                    colors: {\r\n                                    ...theme.colors,\r\n                                    // Background color of hovered options\r\n                                    primary25: '#e0e0e0',\r\n                                    primary: '#212121',\r\n                                    },\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={1}>\r\n                            <IconButton\r\n                                disabled={!fields}\r\n                                onClick={this.handleTableStatsDialogOpen}\r\n                            >\r\n                                <LibraryBooks/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel htmlFor=\"depth1-input\" >Start Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth1-input\"\r\n                                        value={depth1}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth1-error\"\r\n                                        labelWidth={105}\r\n                                        name='depth1'\r\n                                    />\r\n                                    <FormHelperText id=\"depth1-error\">{startDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"depth2-input\" >End Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth2-input\"\r\n                                        value={depth2}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth2-error\"\r\n                                        labelWidth={95}\r\n                                        name='depth2'\r\n                                    />\r\n                                    <FormHelperText id=\"depth2-error\">{endDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat1-input\" >{'Start Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat1-input\"\r\n                                        value={lat1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lat1'\r\n                                    />\r\n                                    <FormHelperText id=\"lat1-error\">{startLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat2-input\" >{'End Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat2-input\"\r\n                                        value={lat2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lat2'\r\n                                    />\r\n                                    <FormHelperText id=\"lat2-error\">{endLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon1-input\" >{'Start Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon1-input\"\r\n                                        value={lon1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lon1'\r\n                                    />\r\n                                    <FormHelperText id=\"lon1-error\">{startLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon2-input\" >{'End Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon2-input\"\r\n                                        value={lon2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lon2'\r\n                                    />\r\n                                    <FormHelperText id=\"lon2-error\">{endLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={2}>\r\n                                <FormControl variant='outlined' className={classes.vizTypeSelectFormControl}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        labelWidth={35}\r\n                                        value={selectedVizType}\r\n                                        variant='outlined'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'outlined'\r\n                                        }}\r\n                                        >\r\n                                        <MenuItem disabled={Boolean(heatmapMessage)} value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>\r\n                                        <MenuItem disabled={Boolean(contourMessage)} value={vizSubTypes.contourMap}>Contour</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sectionMapMessage)} value={vizSubTypes.sectionMap}>Section Map</MenuItem>\r\n                                        <MenuItem disabled={Boolean(histogramMessage)} value={vizSubTypes.histogram}>Histogram</MenuItem>                                    \r\n                                        <MenuItem disabled={Boolean(timeSeriesMessage)} value={vizSubTypes.timeSeries}>Time Series</MenuItem>\r\n                                        <MenuItem disabled={Boolean(depthProfileMessage)} value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sparseMapMessage)} value={vizSubTypes.sparse}>Sparse Map</MenuItem>\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2}>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={() => this.props.onVisualize()}\r\n                                    disabled={!selectedVizType || parametersAreInvalid || !fields}\r\n                                >\r\n                                    Visualize\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <Typography variant='caption' color='error' className={classes.generalMessage}>\r\n                                    {generalPreventMessage || generalWarnMessage}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataRetrievalForm));","const utcDateStringToLocal = (utcString) => {\r\n    let date = new Date(utcString);\r\n    let utcYear = date.getUTCFullYear();\r\n    let utcMonth = date.getUTCMonth();\r\n    let utcDate = date.getUTCDate();\r\n\r\n    let newDate = new Date();\r\n    newDate.setFullYear(utcYear, utcMonth, utcDate);\r\n    return newDate;\r\n}\r\n\r\nexport default utcDateStringToLocal;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { LibraryBooks, ArrowRight, ChevronLeft, ChevronRight, InsertChartOutlined, Language, Delete } from '@material-ui/icons';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend, clearCharts } from '../Redux/actions/visualization';\r\n\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\n\r\nconst navDrawerWidth = 230;\r\n\r\nconst styles = theme => ({\r\n  drawer: {\r\n    width: navDrawerWidth,\r\n    // height: 'calc(100% - 120px)',\r\n    top: 32,\r\n    bottom: 'auto',\r\n    overflow: 'visible'\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: navDrawerWidth,\r\n    height: '540px',\r\n    top: 'calc(50% - 270px)',\r\n    borderRadius: '0 4px 4px 0',\r\n    boxShadow: '2px 2px  2px 2px #242424',\r\n    border: 'none',\r\n    overflow: 'visible'\r\n  },\r\n\r\n  openPanelChevron: {\r\n    position: 'fixed',\r\n    left: '5px',\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  closePanelChevron: {\r\n    position: 'fixed',\r\n    left: navDrawerWidth + 5,\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  groupedButtons: {\r\n      width: '50%',\r\n      border: '1px solid #313131',\r\n      borderRadius: 0\r\n  },\r\n\r\n  controlPanelForm: {\r\n      marginTop: theme.spacing(1)\r\n  },\r\n\r\n  tableStatsButton: {\r\n      borderRadius: 0,\r\n      paddingTop: '11px',\r\n      backgroundColor: '#3C3C3C'\r\n  },\r\n\r\n    formGridItem: {\r\n        borderLeft: '1px solid #313131',\r\n        backgroundColor: '#3C3C3C'\r\n    },\r\n\r\n  vizTypeSelectFormControl: {\r\n      width: '100%'\r\n  },\r\n\r\n  depressed: {\r\n      boxShadow: 'inset 1px 1px 5px #1c1c1c'\r\n  },\r\n\r\n  padLeft: {\r\n      padding: '6px 0 2px 7px'\r\n  },\r\n\r\n  visualizeButton: {\r\n      height: '56px',\r\n      borderRadius: 0,\r\n      backgroundColor: '#3C3C3C',\r\n      color: theme.palette.primary.main,\r\n      fontVariant: 'normal',\r\n      '&:hover': {backgroundColor: '#874400'}\r\n  },\r\n\r\n  datePickerInputAdornment: {\r\n      padding: 0\r\n  },\r\n\r\n  clearChartsButton: {\r\n      borderRadius: 0\r\n  }\r\n\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend,\r\n    clearCharts\r\n}\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nconst reactWindowListRef = React.createRef();\r\nclass MenuList extends Component {\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if(!(this.props.children && this.props.children.length)) return;\r\n        let index = this.props.children.findIndex(child => child.props && child.props.isFocused);\r\n        reactWindowListRef.current.scrollToItem(index);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <ReactWindowList\r\n                style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length == 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n    <components.DropdownIndicator {...props}>\r\n        <ArrowRight/>\r\n    </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}></components.SingleValue>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nconst formatOptionLabel = (option, meta) => {\r\n    return meta.context === 'value' ? option.value : option.label;\r\n}\r\n\r\nclass VizControlPanel extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: '',\r\n            showControlPanel: true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search});\r\n        }\r\n    }\r\n\r\n    handleOpenControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: true})\r\n    }\r\n\r\n    handleCloseControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: false})\r\n    }      \r\n    \r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.Variable,\r\n            label: item.Variable === item.Long_Name ? (item.Variable.length > 48 ? item.Variable.slice(0,45) + '...' : item.Variable) : (item.Variable.length > 23 ? item.Variable.slice(0,23) : item.Variable) + ' : ' + (item.Long_Name.length > 38 ? item.Long_Name.slice(0,35) + '...' : item.Long_Name),\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Histogram');\r\n        return '';\r\n    }\r\n\r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Depth Profile');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = () => {\r\n        if(this.estimateDataSize() > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = () => {\r\n        if(this.estimateDataSize() > 50000000) return validation.generic.dataSizePrevent;\r\n        return ''\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField, showControlPanel } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly,\r\n            showCharts,\r\n            handleShowCharts,\r\n            handleShowGlobe,\r\n            handleChange,\r\n            handleLatLonChange\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartDate(),\r\n                this.checkEndDate(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(),\r\n                this.checkGeneralPrevent()\r\n            ];\r\n        } else validations = Array(17).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startDateMessage,\r\n            endDateMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage\r\n        ] = validations;\r\n\r\n        const parametersAreInvalid = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage\r\n        ].some(message => message.length);\r\n\r\n        return (\r\n            <div>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n\r\n                { showControlPanel ? \r\n\r\n                        <IconButton \r\n                            className={classes.closePanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleCloseControlPanel}>\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                :\r\n                    \r\n                        <IconButton \r\n                            className={classes.openPanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleOpenControlPanel}>\r\n                            <ChevronRight />\r\n                        </IconButton>\r\n                }\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={showControlPanel}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >\r\n                    <ButtonGroup>\r\n                        <Tooltip title='Show Globe' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${!showCharts && classes.depressed}`} \r\n                                onClick={handleShowGlobe}\r\n                                color='inherit'\r\n                            >\r\n                                <Language/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        \r\n                        <Tooltip title='Show Charts' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${showCharts && classes.depressed}`}\r\n                                onClick={handleShowCharts}\r\n                                color='inherit'\r\n                            >\r\n                                <InsertChartOutlined/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ButtonGroup>\r\n\r\n                    <Tooltip title='Clear Charts' placement='right'>\r\n                        <IconButton color='inherit' onClick={this.props.clearCharts} className={classes.clearChartsButton}>\r\n                            <Delete/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <form>\r\n                        <Grid container>\r\n                            <Grid item xs={10}>\r\n                                <Select\r\n                                    formatOptionLabel={formatOptionLabel}\r\n                                    handleTableStatsDialogOpen={this.handleTableStatsDialogOpen}\r\n                                    isLoading = {catalogRequestState === states.inProgress}\r\n                                    components={{\r\n                                        IndicatorSeparator:'',\r\n                                        DropdownIndicator,\r\n                                        Option,\r\n                                        MenuList,\r\n                                        SingleValue,\r\n                                    }}\r\n                                    onInputChange={this.onAutoSuggestChange}\r\n                                    filterOption={null}\r\n                                    className={classes.variableSelect}\r\n                                    escapeClearsValue\r\n                                    name=\"fields\"\r\n                                    label=\"Variables\"\r\n                                    options={options}\r\n                                    onChange={this.props.updateFields}\r\n                                    value={fields}\r\n                                    placeholder=\"Variable Search\"\r\n                                    styles={{\r\n                                        menu: provided => ({\r\n                                            ...provided, \r\n                                            zIndex: 1300, \r\n                                            top: '-8px',\r\n                                            left: '230px',\r\n                                            width: '580px',\r\n                                            borderRadius: '4px',\r\n                                            boxShadow: '2px 2px  2px 2px #242424',\r\n                                            overflow: 'hidden'                                \r\n                                        }),\r\n\r\n                                        valueContainer: provided => ({\r\n                                            ...provided,\r\n                                            padding: '0 0 0 6px',\r\n                                            fontWeight: 100\r\n                                        }),\r\n\r\n                                        input: provided => ({...provided,\r\n                                            color: 'white',\r\n                                            fontFamily: '\"Lato\", sans-serif'\r\n                                        }),\r\n\r\n                                        control: provided => ({...provided,\r\n                                            backgroundColor: '#3C3C3C',\r\n                                            border: 'none',\r\n                                            borderBottom: '1px solid #333333',\r\n                                            borderRadius: 0,\r\n                                            '&:hover': { borderColor: 'white' },\r\n                                            '&:focus-within': { borderColor: colors.orange },\r\n                                            height: '56px'\r\n                                        }),\r\n\r\n                                        placeholder: provided => ({...provided,\r\n                                            fontFamily: '\"Lato\", sans-serif',\r\n                                            color: colors.orange,\r\n                                            fontSize: '14px',\r\n                                            fontWeight: 300\r\n                                        }),\r\n\r\n                                        noOptionsMessage: provided => ({...provided,\r\n                                            fontFamily: '\"Lato\", sans-serif',\r\n                                            color: colors.orange,\r\n                                            backgroundColor: colors.backgroundGray\r\n                                        }),\r\n\r\n                                        option: (provided, { data, isFocused }) => {\r\n                                            return ({...provided,\r\n                                                fontWeight: 400,\r\n                                                fontSize: '16px',\r\n                                                backgroundColor: isFocused ? '#383838' : '#424242',\r\n                                                // color: data.data.Sensor === 'Satellite' ? '#1acf02' : data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                                '&:hover': { backgroundColor: '#383838' },\r\n                                                ':active': { backgroundColor: '#383838' },\r\n                                                '&:after': { \r\n                                                    content: data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                                    float: 'left'\r\n                                                },\r\n                                        })},\r\n\r\n                                        singleValue: (provided, state) => ({...provided,\r\n                                            color: 'white',\r\n                                            fontWeight: 400\r\n                                        })\r\n                                    }}\r\n                                    theme={theme => ({\r\n                                        ...theme,\r\n                                        colors: {\r\n                                        ...theme.colors,\r\n                                        // Background color of hovered options\r\n                                        primary25: '#e0e0e0',\r\n                                        primary: '#212121',\r\n                                        },\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={2} className={classes.tableStatsButton}>\r\n                                <IconButton \r\n                                    size='small' \r\n                                    onClick={this.handleTableStatsDialogOpen}                                     \r\n                                    disabled={!fields}\r\n                                >\r\n                                    <LibraryBooks/>\r\n                                </IconButton>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? utcDateStringToLocal(fields.data.Time_Min) : ''}\r\n                                    maxDate={fields ? utcDateStringToLocal(fields.data.Time_Max) : ''}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? utcDateStringToLocal(fields.data.Time_Min) : ''}\r\n                                    maxDate={fields ? utcDateStringToLocal(fields.data.Time_Max) : ''}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat1-input\"\r\n                                    error={Boolean(startLatMessage)}\r\n                                    label={\"Start Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat1}\r\n                                    onChange={handleLatLonChange}\r\n                                    helperText={startLatMessage}\r\n                                    name='lat1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat2-input\"\r\n                                    error={Boolean(endLatMessage)}\r\n                                    label={\"End Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat2}\r\n                                    onChange={handleLatLonChange}\r\n                                    helperText={endLatMessage}\r\n                                    name='lat2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon1-input\"\r\n                                    error={Boolean(startLonMessage)}\r\n                                    label={\"Start Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon1}\r\n                                    onChange={handleLatLonChange}\r\n                                    helperText={startLonMessage}\r\n                                    name='lon1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon2-input\"\r\n                                    error={Boolean(endLonMessage)}\r\n                                    label={\"End Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon2}\r\n                                    onChange={handleLatLonChange}\r\n                                    helperText={endLonMessage}\r\n                                    name='lon2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    disabled={!fields || surfaceOnly}\r\n                                    id=\"depth1-input\"\r\n                                    error={Boolean(startDepthMessage)}\r\n                                    label=\"Start Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth1}\r\n                                    onChange={handleChange}\r\n                                    helperText={startDepthMessage}\r\n                                    name='depth1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    disabled={!fields || surfaceOnly}\r\n                                    id=\"depth2-input\"\r\n                                    error={Boolean(endDepthMessage)}\r\n                                    label=\"End Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth2}\r\n                                    onChange={handleChange}\r\n                                    helperText={endDepthMessage}\r\n                                    name='depth2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <FormControl variant='filled' className={classes.vizTypeSelectFormControl} disabled={!fields}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        value={selectedVizType}\r\n                                        variant='filled'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'filled'\r\n                                        }}\r\n                                        >\r\n                                        <MenuItem disabled={Boolean(heatmapMessage)} value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>\r\n                                        <MenuItem disabled={Boolean(contourMessage)} value={vizSubTypes.contourMap}>Contour</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sectionMapMessage)} value={vizSubTypes.sectionMap}>Section Map</MenuItem>\r\n                                        <MenuItem disabled={Boolean(histogramMessage)} value={vizSubTypes.histogram}>Histogram</MenuItem>                                    \r\n                                        <MenuItem disabled={Boolean(timeSeriesMessage)} value={vizSubTypes.timeSeries}>Time Series</MenuItem>\r\n                                        <MenuItem disabled={Boolean(depthProfileMessage)} value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sparseMapMessage)} value={vizSubTypes.sparse}>Sparse Map</MenuItem>\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Button\r\n                                    className={classes.visualizeButton}\r\n                                    variant='contained'\r\n                                    onClick={() => this.props.onVisualize()}\r\n                                    disabled={!selectedVizType || parametersAreInvalid || !fields}\r\n                                    fullWidth\r\n                                >\r\n                                    Visualize\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>                    \r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));\r\n\r\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\r\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   root: {\r\n//     display: 'flex',\r\n//   },\r\n//   appBar: {\r\n//     transition: theme.transitions.create(['margin', 'width'], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//   },\r\n//   appBarShift: {\r\n//     width: `calc(100% - ${drawerWidth}px)`,\r\n//     marginLeft: drawerWidth,\r\n//     transition: theme.transitions.create(['margin', 'width'], {\r\n//       easing: theme.transitions.easing.easeOut,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//   },\r\n//   menuButton: {\r\n//     marginRight: theme.spacing(2),\r\n//   },\r\n//   hide: {\r\n//     display: 'none',\r\n//   },\r\n//   drawer: {\r\n//     width: drawerWidth,\r\n//     flexShrink: 0,\r\n//   },\r\n//   drawerPaper: {\r\n//     width: drawerWidth,\r\n//   },\r\n//   drawerHeader: {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     padding: theme.spacing(0, 1),\r\n//     ...theme.mixins.toolbar,\r\n//     justifyContent: 'flex-end',\r\n//   },\r\n//   content: {\r\n//     flexGrow: 1,\r\n//     padding: theme.spacing(3),\r\n//     transition: theme.transitions.create('margin', {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//     marginLeft: -drawerWidth,\r\n//   },\r\n//   contentShift: {\r\n//     transition: theme.transitions.create('margin', {\r\n//       easing: theme.transitions.easing.easeOut,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//     marginLeft: 0,\r\n//   },\r\n// }));\r\n\r\n// export default function PersistentDrawerLeft() {\r\n//   const classes = useStyles();\r\n//   const theme = useTheme();\r\n//   const [open, setOpen] = React.useState(false);\r\n\r\n//   const handleDrawerOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleDrawerClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Drawer\r\n//         className={classes.drawer}\r\n//         variant=\"persistent\"\r\n//         anchor=\"left\"\r\n//         open={open}\r\n//         classes={{\r\n//           paper: classes.drawerPaper,\r\n//         }}\r\n//       >\r\n//         <div className={classes.drawerHeader}>\r\n//           <IconButton onClick={handleDrawerClose}>\r\n//             {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n//           </IconButton>\r\n//         </div>\r\n//         <Divider />\r\n//         <List>\r\n//           {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n//             <ListItem button key={text}>\r\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n//               <ListItemText primary={text} />\r\n//             </ListItem>\r\n//           ))}\r\n//         </List>\r\n//         <Divider />\r\n//         <List>\r\n//           {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n//             <ListItem button key={text}>\r\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n//               <ListItemText primary={text} />\r\n//             </ListItem>\r\n//           ))}\r\n//         </List>\r\n//       </Drawer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// import React from 'react';\r\n// import { connect } from 'react-redux';\r\n\r\n// import { withStyles } from '@material-ui/core/styles';\r\n\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Tooltip from '@material-ui/core/Tooltip';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import { InsertChartOutlined, Delete, Web, Language } from '@material-ui/icons';\r\n\r\n// import { clearCharts } from '../Redux/actions/visualization';\r\n\r\n// const mapStateToProps = (state, ownProps) => ({\r\n//     charts: state.charts\r\n// })\r\n\r\n// const mapDispatchToProps = {\r\n//     clearCharts\r\n// }\r\n\r\n// const styles = (theme) => ({\r\n\r\n//     panelPaper: {\r\n//         width: '27px',\r\n//         // height: '240px',\r\n//         padding: theme.spacing(0.3),\r\n//         position:'fixed',\r\n//         left: '80vw',\r\n//         bottom: '15px',\r\n//         zIndex: 2,\r\n//         textDecoration:'none',\r\n//         cursor: 'pointer',\r\n//         borderRadius: '5%',\r\n//         backgroundColor: 'transparent'\r\n//     },\r\n\r\n//     iconButton: {\r\n//         padding: theme.spacing(0.4),\r\n//         marginLeft: '-2px',\r\n//         marginTop: '-1px'\r\n//     }\r\n// })\r\n\r\n// const VizControlPanel = (props) => {\r\n//     const { classes } = props;\r\n\r\n//     return (\r\n//         <div>\r\n//             <Paper className={classes.panelPaper}>\r\n//                 <Grid container direction='column'>\r\n\r\n//                     <Tooltip title={props.showUI ? 'Hide UI' : 'Show UI'}>\r\n//                         <IconButton color='secondary' onClick={props.toggleShowUI} className={classes.iconButton}>\r\n//                             <Web/>\r\n//                         </IconButton>\r\n//                     </Tooltip>\r\n\r\n//                     {props.showCharts? \r\n//                         <Tooltip title='Show Globe'>\r\n//                             <IconButton color='secondary' onClick={props.toggleChartView} className={classes.iconButton}>\r\n//                                 <Language/>\r\n//                             </IconButton>\r\n//                         </Tooltip>                \r\n//                     :\r\n//                         <Tooltip title='Show Charts'>\r\n//                             <IconButton color={props.charts.length ? 'primary' : 'secondary'} onClick={props.toggleChartView} className={classes.iconButton}>\r\n//                                 <InsertChartOutlined/>\r\n//                             </IconButton>\r\n//                         </Tooltip>            \r\n//                     }\r\n\r\n//                     <Tooltip title='Clear Visualizations'>\r\n//                         <IconButton color='secondary' onClick={props.clearCharts} className={classes.iconButton}>\r\n//                             <Delete/>\r\n//                         </IconButton>\r\n//                     </Tooltip>\r\n\r\n//                 </Grid>\r\n//             </Paper>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));\r\n","import React, { useState } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Palette } from '@material-ui/icons';\r\n\r\nconst styles = theme => ({\r\n    colorscaleMenu: {\r\n        maxHeight: '400px'\r\n    },\r\n\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst colorscaleOptions = [\r\n    'Greys', \r\n    'YlGnBu', \r\n    'Greens', \r\n    'YlOrRd',\r\n    'Bluered',\r\n    'RdBu',\r\n    'Reds',\r\n    'Blues',\r\n    'Picnic',\r\n    'Rainbow',\r\n    'Portland',\r\n    'Jet',\r\n    'Hot',\r\n    'Blackbody',\r\n    'Earth',\r\n    'Electric',\r\n    'Viridis',\r\n    'Cividis'];\r\n\r\nconst PaletteControls = (props) => {\r\n\r\n    const { classes, disabled } = props;\r\n\r\n    const [paletteAnchorElement, setPaletteAnchorElement] = useState(null);\r\n\r\n    if(disabled){\r\n        return (\r\n            <Tooltip title='Change Palette'>\r\n                <div className={classes.iconButtonWrapper}>\r\n                <IconButton disabled={disabled} color='secondary' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                    <Palette/>\r\n                </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    let handleOpenPalette = (event) => {\r\n        setPaletteAnchorElement(event.currentTarget);\r\n    }\r\n\r\n    let handlePaletteChoice = (option) => {\r\n        setPaletteAnchorElement(null);\r\n        props.handlePaletteChoice(option);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title='Change Palette'>\r\n                <IconButton disabled={disabled} color='secondary' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                    <Palette/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={paletteAnchorElement}\r\n                keepMounted\r\n                open={Boolean(paletteAnchorElement)}\r\n                onClose={() => setPaletteAnchorElement(null)}\r\n                className={classes.colorscaleMenu}\r\n            >\r\n                {colorscaleOptions.map((option, index) => (\r\n                    <MenuItem onClick={() => handlePaletteChoice(option)} key={index}>{option}</MenuItem>\r\n                ))}\r\n                \r\n            </Menu>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PaletteControls);","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { SwapVert } from '@material-ui/icons';\r\n\r\nconst styles = theme => ({\r\n    popover: {\r\n        width: '470px',\r\n        height: '110px',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5)\r\n    },\r\n\r\n        iconButtonWrapper: {\r\n            display: 'inline-block'\r\n        }\r\n\r\n})\r\n\r\nconst ZValueControls = (props) => {\r\n\r\n    const { classes, extent, zValues, handleZValueConfirm, disabled } = props;\r\n\r\n    if(disabled){\r\n        return (\r\n            <Tooltip title='Change Colorscale Range'>\r\n                <div className={classes.iconButtonWrapper}>\r\n                <IconButton disabled>\r\n                    <SwapVert/>\r\n                </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    const [popoverAnchorElement, setPopoverAnchorElement] = React.useState(null);\r\n    const [localZMin, setLocalZMin] = React.useState(zValues[0]);\r\n    const [localZMax, setLocalZMax] = React.useState(zValues[1]);\r\n\r\n    const handleClose = () => {\r\n        setPopoverAnchorElement(null);\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        handleZValueConfirm([localZMin, localZMax]);\r\n        handleClose();\r\n    }\r\n\r\n    const checkLocalZMin = () => {\r\n        if(localZMin < extent[0]) return `Minimum value is ${extent[0]}`;\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMin)) return 'Invalid value';\r\n    }\r\n\r\n    const checkLocalZMax = () => {\r\n        if(localZMax > extent[1]) return `Maximum value is ${extent[1]}`;\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMax)) return 'Invalid value';\r\n    }\r\n\r\n    const validations = [\r\n        checkLocalZMin(),\r\n        checkLocalZMax()\r\n    ];\r\n\r\n    const [\r\n        zMinMessage,\r\n        zMaxMessage\r\n    ] = validations;\r\n\r\n    const open = Boolean(popoverAnchorElement);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title='Change Colorscale Range'>\r\n                <IconButton disabled={disabled} color='secondary' onClick={(event) => setPopoverAnchorElement(event.currentTarget)}>\r\n                    <SwapVert/>\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={popoverAnchorElement}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMinMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-min-input' >Min</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-min-input'\r\n                                    value={localZMin}\r\n                                    onChange={(event) => setLocalZMin(event.target.value)}\r\n                                    aria-describedby='local-zmin-error'\r\n                                    labelWidth={50}\r\n                                    name='local-zmin'\r\n                                />\r\n                                <FormHelperText id='local-zmin-error'>{zMinMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-max-input' >Max</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-max-input'\r\n                                    value={localZMax}\r\n                                    onChange={(event) => setLocalZMax(event.target.value)}\r\n                                    aria-describedby=\"local-zmax-error\"\r\n                                    labelWidth={50}\r\n                                    name='local-zmax'\r\n                                />\r\n                                <FormHelperText id=\"local-zmax-error\">{zMaxMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={7}>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleConfirm}\r\n                                disabled={Boolean(zMinMessage || zMaxMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ZValueControls);","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { DateRange, Waves, CloudDownload } from '@material-ui/icons';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport PaletteControls from './PaletteControls';\r\nimport ZValueControls from './ZValueControls';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst ChartControlPanel = (props) => {\r\n\r\n    const { \r\n        classes, \r\n        handlePaletteChoice, \r\n        onToggleSplitByDate, \r\n        onToggleSplitByDepth, \r\n        downloadCsv, \r\n        splitByDepth, \r\n        splitByDate,\r\n        handleZValueConfirm,\r\n        zValues,\r\n        extent\r\n    } = props;\r\n\r\n    return (\r\n        <div className={classes.buttonBlock}>\r\n\r\n            <Tooltip title={splitByDate ? 'Merge Dates' : 'Split By Date'}>\r\n                <div className={classes.iconButtonWrapper}>\r\n                    <IconButton color='secondary' className={classes.iconButton} \r\n                        disabled={!Boolean(onToggleSplitByDate)} \r\n                        onClick={onToggleSplitByDate}\r\n                    >\r\n                        <DateRange/>\r\n                    </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n\r\n            <Tooltip title={splitByDepth ? 'Merge Depths' : 'Split By Depth'}>\r\n                <div className={classes.iconButtonWrapper}>\r\n                    <IconButton color='secondary' className={classes.iconButton} \r\n                        disabled={!Boolean(onToggleSplitByDepth)} \r\n                        onClick={onToggleSplitByDepth}\r\n                    >\r\n                        <Waves/>\r\n                    </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n\r\n            <Tooltip title='Download CSV'>\r\n                <div className={classes.iconButtonWrapper}>\r\n                    <IconButton color='secondary' onClick={downloadCsv} className={classes.iconButton} >\r\n                        <CloudDownload/>\r\n                    </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n\r\n            <ZValueControls\r\n                disabled={!Boolean(handleZValueConfirm)}\r\n                zValues={zValues}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                extent={extent}\r\n            />\r\n            \r\n            <PaletteControls\r\n                disabled={!Boolean(handlePaletteChoice)}\r\n                handlePaletteChoice={handlePaletteChoice}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ChartControlPanel);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nconst handleContourMap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length <=1 ? dates[0].slice(0,10) :\r\n            !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        \r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Merged Depths' : \r\n            depths[index % depths.length].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'contour',\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: '.2e'\r\n                    },\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    }\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {title: 'Longitude', color: '#ffffff'},\r\n                yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length <=1 ? dates[0].slice(0,10) :\r\n            !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Aggregated Depth' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHeatmap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length <=1 ? dates[0].slice(0,10) :\r\n            !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    zsmooth: subset.length < 20000 ? 'fast' : 'false',\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    colorscale: palette,\r\n                    autocolorscale: false,\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n                    \r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}   ${date}`,\r\n                xaxis: {\r\n                    title: 'Longitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: 'Latitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SpaceTimeChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitByDepth, setSplitByDepth] = useState(false);\r\n    const [subTypeState, setSubTypeState] = useState(subType);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const subSets = data.generatePlotData(subTypeState, splitByDate, splitByDepth);\r\n    var plots;\r\n\r\n    switch(subTypeState){\r\n        case vizSubTypes.contourMap:\r\n            plots = handleContourMap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.heatmap:\r\n            plots = handleHeatmap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.histogram:\r\n            plots = handleHistogram(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        default:\r\n            plots = '';\r\n            break;        \r\n\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDepth = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDepth(!splitByDepth);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                onToggleSplitByDepth={depths.size===1 ? null : onToggleSplitByDepth}\r\n                onToggleSplitByDate={dates.size===1 ? null : onToggleSplitByDate}\r\n                splitByDepth={splitByDepth}\r\n                splitByDate={splitByDate}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SpaceTimeChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst TimeSeriesChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, dates, parameters, metadata } = data;\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }  \r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                  x: dates,\r\n                  y: variableValues,\r\n                  error_y: {\r\n                    type: 'data',\r\n                    array: stds,\r\n                    opacity: 0.2,\r\n                    color: 'gray',\r\n                    visible: true\r\n                  },\r\n                  name: parameters.fields,\r\n                  type: 'scatter',\r\n                  line: {color: '#e377c2'},\r\n                  },\r\n                ]}\r\n\r\n                layout= {{\r\n                    title: `${parameters.fields}[${metadata.Unit}]  ${parameters.dt1} to ${parameters.dt2}`,\r\n\r\n                    paper_bgcolor: colors.backgroundGray,\r\n                    font: {\r\n                        color: '#ffffff'\r\n                    },\r\n                  xaxis: {\r\n                      title: 'Time',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: parameters.fields,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: [\r\n                    {\r\n                        text: `Source: ${metadata.Distributor.length < 30 ? \r\n                                metadata.Distributor : \r\n                                metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(TimeSeriesChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst DepthProfileChart = (props) => {\r\n\r\n    const { classes, setLoadingMessage } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, depths, parameters, metadata } = data;\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }    \r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                  x: depths,\r\n                  y: variableValues,\r\n                  error_y: {\r\n                    type: 'data',\r\n                    array: stds,\r\n                    opacity: 0.2,\r\n                    color: 'gray',\r\n                    visible: true\r\n                  },\r\n                  name: parameters.fields,\r\n                  type: 'scatter',\r\n                  line: {color: '#e377c2'},\r\n                  },\r\n                ]}\r\n\r\n                layout= {{\r\n                    title: `${parameters.fields}[${metadata.Unit}]  ${parameters.depth1} to ${parameters.depth2} meters`,\r\n\r\n                    paper_bgcolor: colors.backgroundGray,\r\n                    font: {\r\n                        color: '#ffffff'\r\n                    },\r\n                  xaxis: {\r\n                      title: 'Depth[m]',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: [\r\n                    {\r\n                        text: `Source: ${metadata.Distributor.length < 30 ? \r\n                                metadata.Distributor : \r\n                                metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(DepthProfileChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nconst handleSectionMap = (subsets, infoObject, splitByDate, splitBySpace, orientation) => {\r\n\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    const distinctMeridiansOrParallelsForSplitting = \r\n        orientation === 'zonal' ?\r\n        infoObject.latsDistinct : \r\n        infoObject.lonsDistinct;\r\n\r\n    const xAxisLabel = \r\n        orientation === 'zonal' ?\r\n        'Longitude' : \r\n        'Latitude';\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length < 2 ?\r\n            dates[0] :\r\n            !splitByDate ? \r\n                'Merged Dates' : \r\n                splitBySpace ? \r\n                    dates[Math.floor(index/distinctMeridiansOrParallelsForSplitting.length)].slice(0, 10) : \r\n                    dates[index];\r\n                \r\n        const spaceTitle = distinctMeridiansOrParallelsForSplitting.length <= 1 ? distinctMeridiansOrParallelsForSplitting[0] : \r\n            !splitBySpace ? `Merged ${xAxisLabel}s` : \r\n            `${distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length]} ${orientation === 'zonal' ? \r\n            'Parallel' :\r\n            'Meridian'}`\r\n \r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: infoObject.zMin,\r\n                    zmax: infoObject.zMax,\r\n                    zsmooth: subset.length < 20000 ? 'best' : 'fast',\r\n                    x: orientation === 'zonal' ? infoObject.lons : infoObject.lats,\r\n                    y: orientation === 'zonal' ? infoObject.zonalPlotDepths : infoObject.meridionalPlotDepths,\r\n                    z: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    connectgaps: true,\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    }\r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${spaceTitle}   ${date}`,\r\n                xaxis: {\r\n                    title: `${xAxisLabel}[\\xB0]`, \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: 'Depth[m]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />\r\n        )\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SectionMapChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { dates, extent, latsDistinct, lonsDistinct } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitBySpace, setSplitBySpace] = useState(false);\r\n    const [orientation, setOrientation] = useState(data.orientation);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const numSpaceSplits = \r\n        orientation === 'zonal' ?\r\n        latsDistinct.length : \r\n        lonsDistinct.length\r\n\r\n    const splitOrientation = orientation === 'zonal' ?\r\n        'Longitudes' : \r\n        'Latitudes'\r\n\r\n    const alternateOrientation = orientation === 'zonal' ? 'meridional' : 'zonal';\r\n\r\n    const subsets = data.generatePlotData(orientation, splitByDate, splitBySpace);\r\n    var plots = handleSectionMap(subsets, data, splitByDate, splitBySpace, orientation);\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n                {/* <Button {...buttonProps} disabled={dates.size === 1} onClick={() => setSplitByDate(!splitByDate)}>{splitByDate ? 'Merge Dates' : 'Split By Date'}</Button>\r\n                <Button {...buttonProps} disabled={numSpaceSplits === 1} onClick={() => setSplitBySpace(!splitBySpace)}>{splitBySpace ? `Merge ${splitOrientation}` : `Split By ${splitOrientation}`}</Button>\r\n                <Button {...buttonProps} disabled={numSpaceSplits === 1} onClick={() => setOrientation(alternateOrientation)}>Switch to {alternateOrientation}</Button> */}\r\n            <ChartControlPanel\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                downloadCsv={downloadCsv}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SectionMapChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\n\r\nconst handleSparseMap = (infoObject, palette, zValues) => {\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zValues[0],\r\n                    zmax: zValues[1],\r\n                    lon: infoObject.lons,\r\n                    lat: infoObject.lats,\r\n                    z: infoObject.variableValues,\r\n                    zmin:'',\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    radius: 6,                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'densitymapbox',\r\n                    \r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    },\r\n                }\r\n            ]}\r\n\r\n            layout= {{\r\n                width: 600,\r\n                height: 400,\r\n                font: {color: '#ffffff'},\r\n                title: `${infoObject.parameters.fields}[${infoObject.metadata.Unit}]`,\r\n                // xaxis: {title: 'Longitude', color: '#ffffff'},\r\n                // yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                paper_bgcolor: colors.backgroundGray,\r\n\r\n                mapbox: {\r\n                    style: 'basic',\r\n                    center: {\r\n                        lon: (infoObject.parameters.lon1 + infoObject.parameters.lon2) / 2,\r\n                        lat: (infoObject.parameters.lat1 + infoObject.parameters.lat2) / 2\r\n                    }\r\n                },\r\n\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}\r\n            \r\n            config={{\r\n                mapboxAccessToken:\r\n                  \"pk.eyJ1IjoiZGVuaG9sdHoiLCJhIjoiY2p1ZW9obTNhMDVxZjQzcDRvMmdlcDN2aiJ9.HvLaX2bcradeE5T-lpTc8w\"\r\n              }}\r\n        />)\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst buttonProps = {\r\n    size: 'small',\r\n    color: 'primary',\r\n    variant: 'contained'\r\n}\r\n\r\nconst SparseMap = (props) => {\r\n\r\n    const { classes } = props;\r\n\r\n    const { data } = props.chart;\r\n    const [palette, setPalette] = useState('Heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n\r\n    const plot = handleSparseMap(data, palette, zValues)\r\n\r\n    let handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    let handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={data.extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plot}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseMap));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport colors from '../Enums/colors';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nimport SpaceTimeChart from './ChartComponents/SpaceTimeChart';\r\nimport TimeSeriesChart from './ChartComponents/TimeSeriesChart';\r\nimport DepthProfileChart from './ChartComponents/DepthProfileChart';\r\nimport SectionMapChart from './ChartComponents/SectionMapChart';\r\nimport SparseMap from './ChartComponents/SparseMap';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsContainer: {\r\n        margin: '300px 0 0 100px'\r\n    },\r\n\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n    }\r\n})\r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n        const { classes, charts } = this.props;\r\n\r\n        return (\r\n            <div className={classes.chartsContainer}>\r\n                {charts.map((chart, index) => {\r\n                    switch(chart.data.parameters.spName){\r\n                        case storedProcedures.spaceTime:\r\n                          if(chart.subType === vizSubTypes.sparse) return <SparseMap chart={chart} key={index}/>\r\n                          else return <SpaceTimeChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.timeSeries:\r\n                          return <TimeSeriesChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.depthProfile:\r\n                          return <DepthProfileChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.sectionMap:\r\n                          return <SectionMapChart chart={chart} key={index}/>\r\n                        \r\n                        default:\r\n                          return '';\r\n                  }\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { cruiseListRequestSend, cruiseTrajectoryRequestSend, cruiseTrajectoryClear } from '../Redux/actions/visualization';\r\n\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    cruiseList: state.cruiseList,\r\n    getCruiseListState: state.getCruiseListState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseListRequestSend,\r\n    cruiseTrajectoryRequestSend,\r\n    cruiseTrajectoryClear\r\n}\r\n\r\nconst esriFonts = '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif';\r\nconst esriFontColor = 'white';\r\nconst esriBackgroundColor = '#424242';\r\nconst esriHoverFontColor = '#242424';\r\nconst esriHoverBackgroundColor = '#949393';\r\n\r\nconst styles = theme => ({\r\n    outerDiv: {\r\n        padding:'12px',\r\n        maxWidth: '260px',\r\n        // backgroundColor: esriBackgroundColor,\r\n        backgroundColor: 'transparent',\r\n        color: esriFontColor,\r\n        borderRadius: '4px',\r\n        boxShadow: '2px'\r\n    },\r\n\r\n    cruiseSelect: {\r\n        width: '260px',\r\n        borderRadius: '4px'\r\n    },\r\n\r\n    cruiseInfo: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        margin: '12px auto 0 auto'\r\n    },\r\n\r\n    cruiseInfoCell: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        borderStyle: 'none'\r\n    }\r\n})\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\nclass CruiseSelector extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Nickname');\r\n        search.addIndex('Name');\r\n        search.addIndex('Chief_Name');\r\n        search.addIndex('Keywords');\r\n        try{\r\n            if(props.cruiseList && props.cruiseList.length) search.addDocuments(props.cruiseList);\r\n        } catch(e) {\r\n            console.log(e);\r\n            console.log(props.cruiseList);\r\n        }\r\n\r\n        this.state = {\r\n            search,\r\n            searchField: '',\r\n            selectedCruise: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.cruiseList || !this.props.cruiseList.length) this.props.cruiseListRequestSend();\r\n    }\r\n\r\n    getSelectOptionsFromCruiseList = (list) => {\r\n        return list.map(item => ({\r\n            value: item.Nickname,\r\n            label: item.Nickname,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    handleCruiseSelect = (selection) => {\r\n        if(selection && selection.data){\r\n            const id = selection.data.ID;\r\n            this.props.cruiseTrajectoryRequestSend(id);\r\n        } else {this.props.cruiseTrajectoryClear()}\r\n\r\n        this.setState({...this.state, selectedCruise: selection});\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.cruiseList && prevProps.cruiseList.length) && (this.props.cruiseList && this.props.cruiseList.length)){\r\n            this.state.search.addDocuments(this.props.cruiseList);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    render(){\r\n\r\n        const { search, searchField, selectedCruise } = this.state;\r\n\r\n        const { classes, cruiseList} = this.props;\r\n\r\n        const options = searchField && cruiseList ? this.getSelectOptionsFromCruiseList(search.search(searchField)) \r\n            : cruiseList ? this.getSelectOptionsFromCruiseList(cruiseList) \r\n            : []\r\n\r\n        return (\r\n            <div id='cruise-selector' className={classes.outerDiv}>\r\n                <Select\r\n                    isLoading={this.props.getCruiseListState === states.inProgress}\r\n                    components={{\r\n                        IndicatorSeparator:'',\r\n                        Option,\r\n                        SingleValue,\r\n                    }}\r\n                    isClearable\r\n                    onInputChange={this.onAutoSuggestChange}\r\n                    filterOption={null}\r\n                    className={classes.cruiseSelect}\r\n                    escapeClearsValue\r\n                    label=\"Cruise\"\r\n                    options={options}\r\n                    onChange={this.handleCruiseSelect}\r\n                    value={this.state.selectedCruise}\r\n                    placeholder=\"Search Cruises\"\r\n                    styles={{\r\n                        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                        menuList: provided => ({...provided, backgroundColor: esriBackgroundColor}),\r\n\r\n                        input: provided => ({...provided,\r\n                            color: 'inherit',\r\n                            fontFamily: esriFonts\r\n                        }),\r\n\r\n                        control: provided => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            border: 'none',\r\n                            boxShadow: '1px 1px 1px 1px #242424',\r\n                            color: esriFontColor,\r\n                            borderRadius: 4,\r\n                            '&:hover': { \r\n                                border: `1px solid white`,\r\n                            },\r\n                            '&:focus-within': {\r\n                                borderColor: colors.orange\r\n                            }\r\n                        }),\r\n\r\n                        placeholder: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: colors.orange,\r\n                            fontSize: '14px'\r\n                        }),\r\n\r\n                        noOptionsMessage: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: esriFontColor,\r\n                            backgroundColor: esriBackgroundColor\r\n                        }),\r\n\r\n                        option: (provided, state) => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            color: esriFontColor,\r\n                            '&:hover': { \r\n                                color: '#242424',\r\n                                backgroundColor: '#949393'\r\n                            },\r\n                        }),\r\n\r\n                        singleValue: (provided, state) => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: 'inherit',\r\n                            paddingRight: '20px',\r\n                        })\r\n                    }}\r\n                    theme={theme => ({\r\n                        ...theme,\r\n                        colors: {\r\n                            ...theme.colors,\r\n                            // Background color of hovered options\r\n                            primary25: '#e0e0e0',\r\n                            primary: '#212121',\r\n                        },\r\n                    })}\r\n                />\r\n                {selectedCruise &&\r\n                    <Table size='small' className={classes.cruiseInfo}>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Cruise:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Name}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Nickname:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Nickname}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            {\r\n                                selectedCruise.data.Start_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Start Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Start_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Chief_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Chief Scientist:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Chief_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Ship_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Ship:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Ship_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                    // <div>                    \r\n                    //     <p>Cruise {selectedCruise.data.Name}</p>\r\n                    //     <p>Disembarked {selectedCruise.data.Start_Time.slice(0,10)}</p>\r\n                    //     <p>Chief Scientist {selectedCruise.data.Chief_Name}</p>    \r\n                    // </div>            \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CruiseSelector));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\nimport regionRenderModes from '../Enums/regionRenderModes';\r\n\r\nimport CruiseSelector from './CruiseSelector';\r\nimport colors from '../Enums/colors';\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nconst drawButtonStyles = (theme) => ({\r\n    outerDiv: {\r\n        // padding:'12px 0 12px 0',\r\n        backgroundColor: 'transparent',\r\n        // width: '180px',\r\n        borderRadius: '4px',\r\n        marginRight: '20px'\r\n    },\r\n\r\n    drawButton: {\r\n        // border: '1px solid #333333',\r\n        border: `1px solid #333333`,\r\n        borderRadius: '4px',\r\n        color: colors.orange,\r\n        cursor: 'pointer',\r\n        padding: '6px',\r\n        width: '160px',\r\n        fontSize:'14px',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        // backgroundColor: 'rgba(255, 128, 0, .8)',\r\n        // backgroundColor: 'transparent',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif',\r\n        '&:hover': { \r\n            borderColor: 'white'\r\n        },\r\n    },\r\n\r\n    helpText: {\r\n        marginTop: 0,\r\n        color: 'white',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif'\r\n    },\r\n\r\n    cancelButton: {\r\n        display: 'none',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nconst DrawButtonRaw = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    return (\r\n        <div className={classes.outerDiv} id='draw-region-div'>\r\n            {showHelp && <p className={classes.helpText}>Click once to draw <br/>and again to finish</p>}\r\n            <button id='draw-button' className={classes.drawButton}>\r\n                Select Region\r\n            </button>\r\n            <button id='cancel-button' className={`${classes.drawButton} ${classes.cancelButton}`}>\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DrawButton = withStyles(drawButtonStyles)(DrawButtonRaw);\r\n\r\nconst polygonSymbol = {\r\n    type: \"polygon-3d\",\r\n    symbolLayers: [\r\n        {\r\n            type: \"fill\",\r\n            material: {\r\n            color: [255, 128, 0, .3]\r\n            },\r\n            outline: {\r\n                color: [255, 128, 0, 1],\r\n                size: '2px'\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { view, esriModules, regionLayer, setShowHelp, drawMode } = this.props;\r\n\r\n        const updateOptions = {\r\n            toggleToolOnClick: false,\r\n            tool: \"transform\"\r\n        }\r\n\r\n        var sketchModel = new esriModules.SketchViewModel({\r\n            layer: regionLayer,\r\n            view,\r\n            polygonSymbol,\r\n            defaultUpdateOptions: updateOptions\r\n        })\r\n\r\n        var drawButton = document.getElementById('draw-button');\r\n        var cancelButton = document.getElementById('cancel-button');\r\n\r\n        sketchModel.on(\"create\", (event) => {\r\n            if (event.state === \"complete\") {\r\n                setShowHelp(false);\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });        \r\n\r\n        sketchModel.on('update', (event) => {\r\n            this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphics[0].geometry.extent));\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })       \r\n        \r\n        drawButton.addEventListener(\"click\", (event) => {\r\n                drawMode();\r\n                regionLayer.removeAll();\r\n                setShowHelp(true);\r\n                sketchModel.create('rectangle', {\r\n                    mode:'click'            \r\n                });\r\n                drawButton.style.display = 'none';\r\n                cancelButton.style.display = 'inline-block';\r\n        });\r\n\r\n        cancelButton.addEventListener('click', (event) => {\r\n            sketchModel.cancel();\r\n            setShowHelp(false);\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })\r\n\r\n        view.ui.add('draw-region-div', 'bottom-right');\r\n        view.ui.add('cruise-selector', 'top-right');\r\n\r\n        view.ui.remove('zoom');\r\n        view.ui.remove('navigation-toggle');\r\n        view.ui.remove('compass');\r\n        view.ui.remove('attribution');\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst TrajectoryController = React.memo((props) => {\r\n    const { cruiseTrajectory, trajectoryLayer, esriModules } = props;\r\n\r\n    if(cruiseTrajectory){\r\n        trajectoryLayer.removeAll();\r\n\r\n        const paths = cruiseTrajectory.lons.map((lon, i) => [lon, cruiseTrajectory.lats[i]]);\r\n\r\n        var cruiseTrajectoryGeometry = {\r\n            type: 'polyline',\r\n            paths\r\n        }\r\n\r\n        var cruiseTrajectorySymbol = {\r\n            type: 'line-3d',\r\n            symbolLayers: [{\r\n                type: 'line',\r\n                material: { color: [255, 128, 0, 1] },\r\n                cap:  'round',\r\n                join: 'round',\r\n                size: 2\r\n            }]\r\n        }\r\n\r\n        let graphic = new esriModules.Graphic({\r\n            geometry: cruiseTrajectoryGeometry,\r\n            symbol: cruiseTrajectorySymbol\r\n        });\r\n\r\n        trajectoryLayer.add(graphic);\r\n\r\n        try {\r\n            const { extent } = graphic.geometry;\r\n            const center = [extent.center.x,extent.center.y];\r\n\r\n            const xSize = extent.xmax - extent.xmin;\r\n            const ySize = extent.ymax - extent.ymin;\r\n            var graphicSize = xSize > ySize ? xSize : ySize;\r\n            graphicSize = graphicSize > 60 ? 60 : graphicSize;\r\n\r\n            var zoom = 7 - Math.floor(graphicSize / 10);            \r\n    \r\n            props.view.goTo({\r\n                target: center,\r\n                zoom\r\n            }, {\r\n                maxDuration: 2500,\r\n                speedFactor: .5\r\n            });    \r\n\r\n        } catch(e) {console.log(e)}\r\n\r\n    } else {\r\n        trajectoryLayer.removeAll();\r\n\r\n        props.view.goTo({\r\n            target: [-140, 30],\r\n            zoom: 3\r\n        }, {\r\n            maxDuration: 2500,\r\n            speedFactor: .5\r\n        }); \r\n    }\r\n    return '';\r\n})\r\n\r\nclass MapContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showHelp: false\r\n        }\r\n        this.regionLayer = new props.esriModules.GraphicsLayer();\r\n        this.trajectoryLayer = new props.esriModules.GraphicsLayer();\r\n    }\r\n\r\n    render = () => {\r\n        const { classes, esriModules, regionRenderMode, spParams, cruiseTrajectory } = this.props;\r\n        const lat1 = parseFloat(spParams.lat1);\r\n        const lat2 = parseFloat(spParams.lat2);\r\n        const lon1 = parseFloat(spParams.lon1);\r\n        const lon2 = parseFloat(spParams.lon2);\r\n\r\n        if(regionRenderMode === regionRenderModes.form){\r\n            this.regionLayer.removeAll();\r\n\r\n            var polygon = {\r\n                type: 'polygon', \r\n                rings: [\r\n                    [lon1, lat1],\r\n                    [lon2, lat1],\r\n                    [lon2, lat2],\r\n                    [lon1, lat2],\r\n                    [lon1, lat1]\r\n                ]\r\n            };\r\n\r\n            this.regionLayer.add(new esriModules.Graphic({\r\n                geometry: polygon,\r\n                symbol: polygonSymbol\r\n            }))\r\n        }\r\n        \r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ \r\n                        basemap: 'satellite',\r\n                        layers: [\r\n                            this.regionLayer,\r\n                            this.trajectoryLayer\r\n                        ]\r\n                    }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3\r\n                    }}\r\n                >\r\n                    <TrajectoryController \r\n                        cruiseTrajectory={cruiseTrajectory}\r\n                        trajectoryLayer={this.trajectoryLayer}\r\n                        esriModules={esriModules}\r\n                    />\r\n                    <UiComponents\r\n                        updateDomainFromMap={this.props.updateDomainFromMap}\r\n                        updateDomainFromGraphicExtent = {this.props.updateDomainFromGraphicExtent}\r\n                        esriModules={esriModules}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                        regionLayer={this.regionLayer}\r\n                        setShowHelp={(showHelp) => this.setState({...this.state, showHelp})}\r\n                        ref={this.props.globeUIRef}\r\n                        drawMode={this.props.drawMode}\r\n                    />\r\n                </Scene>\r\n                <DrawButton showHelp={this.state.showHelp}/>\r\n                <CruiseSelector/>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MapContainer);","const cleanSPParams = ({depth1, depth2, dt1, dt2, fields, lat1, lat2, lon1, lon2, spName, tableName}) => ({\r\n    depth1: parseFloat(depth1),\r\n    depth2: parseFloat(depth2),\r\n    dt1,\r\n    dt2,\r\n    fields,\r\n    lat1: parseFloat(lat1),\r\n    lat2: parseFloat(lat2),\r\n    lon1: parseFloat(lon1),\r\n    lon2: parseFloat(lon2),\r\n    spName,\r\n    tableName,\r\n})\r\n\r\nexport default cleanSPParams;","const localDateToString = (date) => {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate()\r\n\r\n    let nYear = year.toString();\r\n    let nMonth = month < 10 ? '0' + month.toString() : month.toString();\r\n    let nDay = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return nYear + '-' + nMonth + '-' + nDay;\r\n}\r\n\r\nexport default localDateToString;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport regionRenderModes from '../Enums/regionRenderModes';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport DataRetrievalForm from './DataRetrievalForm';\r\nimport VizControlPanel from './VizControlPanel';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend, cruiseListRequestSend, triggerShowCharts, completedShowCharts } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { loadModules } from 'esri-loader';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport Charts from './Charts';\r\nimport MapContainer from './MapContainer';\r\nimport colors from '../Enums/colors'\r\nimport cleanSPParams from '../Utility/cleanSPParams';\r\nimport localDateToString from '../Utility/localDateToString';\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport TopNavBar from './TopNavBar';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.sectionMap\r\n        }, \r\n        [vizSubTypes.timeSeries]: {\r\n            sp: storedProcedures.timeSeries,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: storedProcedures.depthProfile,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.heatmap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.heatmap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.contourMap\r\n        },\r\n        [vizSubTypes.sparse]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.sparse\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    loadingMessage: state.loadingMessage,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    cruiseList: state.cruiseList,\r\n    showChartsOnce: state.showChartsOnce\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n    cruiseListRequestSend,\r\n    completedShowCharts\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    background: {\r\n        backgroundColor: colors.backgroundGray\r\n    }\r\n})\r\n\r\nclass Visualization extends Component {\r\n    globeUIRef = React.createRef();\r\n\r\n    state = {\r\n        filteredData: [],\r\n        opacity: 1,\r\n        showCharts: false,\r\n        showUI: false,\r\n        surfaceOnly: false,\r\n        irregularSpatialResolution: false,\r\n\r\n        regionRenderMode: regionRenderModes.draw,\r\n        \r\n        spParams: {\r\n            tableName: '',\r\n            fields: null,\r\n            depth1: 0,\r\n            depth2: 0,\r\n            dt1: new Date(),\r\n            dt2: new Date(),\r\n            lat1: 0,\r\n            lat2: 0,\r\n            lon1: 0,\r\n            lon2: 0,\r\n            selectedVizType: ''\r\n        }\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.cruiseList) this.props.cruiseListRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'GraphicsLayer',\r\n            'SketchViewModel',\r\n            'Utils',\r\n            'Graphic',\r\n            'Sketch'\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/layers/GraphicsLayer',\r\n            'esri/widgets/Sketch/SketchViewModel',\r\n            'esri/geometry/support/webMercatorUtils',\r\n            'esri/Graphic',\r\n            \"esri/widgets/Sketch\",\r\n        ]);\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.showChartsOnce) {\r\n            this.props.completedShowCharts();\r\n            this.setState({...this.state, showCharts: true})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleLatLonChange = (event) => {\r\n        this.setState({\r\n            ...this.state, \r\n            spParams: {...this.state.spParams, [event.target.name]: event.target.value},\r\n            regionRenderMode: regionRenderModes.form\r\n        })\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt1:newDate}});\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt2:newDate}});\r\n        }\r\n    }\r\n\r\n    onVisualize = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, selectedVizType } = this.state.spParams;\r\n\r\n        let mapping = mapVizType(selectedVizType);\r\n        let parameters = cleanSPParams({\r\n            depth1,\r\n            depth2,\r\n            dt1: localDateToString(dt1),\r\n            dt2: localDateToString(dt2),\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        });\r\n\r\n        let payload = {\r\n            parameters,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        if(fields) {\r\n            let surfaceOnly = !fields.data.Depth_Min;\r\n            let irregularSpatialResolution = fields.data.Spatial_Resolution === 'Irregular';\r\n\r\n            let selectedVizType = irregularSpatialResolution ? vizSubTypes.sparse : '';\r\n            let dt1 = utcDateStringToLocal(fields.data.Time_Min);\r\n            let dt2 = irregularSpatialResolution ? utcDateStringToLocal(fields.data.Time_Max) : utcDateStringToLocal(fields.data.Time_Min);\r\n            let lat1 = irregularSpatialResolution ? fields.data.Lat_Min : this.state.spParams.lat1;\r\n            let lat2 = irregularSpatialResolution ? fields.data.Lat_Max : this.state.spParams.lat2;\r\n            let lon1 = irregularSpatialResolution ? fields.data.Lon_Min : this.state.spParams.lon1;\r\n            let lon2 = irregularSpatialResolution ? fields.data.Lon_Max : this.state.spParams.lon2;\r\n            let depth1 = fields.data.Depth_Min && fields.data.Depth_Min > 0 ? (fields.data.Depth_Min - .001).toFixed(3) : 0;\r\n            let depth2 = irregularSpatialResolution ? (Number.parseFloat(fields.data.Depth_Max) + .001).toFixed(3) : \r\n                fields.data.Depth_Min ? (Number.parseFloat(fields.data.Depth_Min) + .001).toFixed(3) : 0;\r\n\r\n            let tableName = fields.data.Table_Name;\r\n            \r\n            this.setState({...this.state,\r\n                surfaceOnly,\r\n                irregularSpatialResolution,\r\n                spParams: {...this.state.spParams, \r\n                    fields,\r\n                    dt1,\r\n                    dt2,\r\n                    lat1,\r\n                    lat2,\r\n                    lon1,\r\n                    lon2,\r\n                    depth1,\r\n                    depth2,\r\n                    selectedVizType,\r\n                    tableName\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    handleShowCharts = () => {\r\n        this.setState({...this.state, showCharts: true})\r\n    }\r\n\r\n    handleShowGlobe = () => {\r\n        this.setState({...this.state, showCharts: false})\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromMap = (coordinates) => {\r\n        if(!coordinates || !coordinates.length) return null;\r\n        \r\n        var lons = coordinates.map(a => a[0]);\r\n        var lats = coordinates.map(a => a[1]);\r\n\r\n        var newCoordinates = {\r\n            lat1: Math.min(...lats).toFixed(3),\r\n            lat2: Math.max(...lats).toFixed(3),\r\n            lon1: Math.min(...lons).toFixed(3),\r\n            lon2: Math.max(...lons).toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    updateDomainFromGraphicExtent = (extent) => {\r\n        var newCoordinates = {\r\n            lat1: extent.ymin.toFixed(3),\r\n            lat2: extent.ymax.toFixed(3),\r\n            lon1: extent.xmin.toFixed(3),\r\n            lon2: extent.xmax.toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        return (\r\n            <div className={classes.background}>\r\n                <TopNavBar/>\r\n                <DataRetrievalForm \r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                   {...this.state.spParams}\r\n                   surfaceOnly={this.state.surfaceOnly}\r\n                   irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                />\r\n                <VizControlPanel\r\n                    toggleChartView={this.toggleChartView}\r\n                    toggleShowUI={this.toggleShowUI}\r\n                    showCharts={this.state.showCharts}\r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                    {...this.state.spParams}\r\n                    surfaceOnly={this.state.surfaceOnly}\r\n                    irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                    showCharts={this.state.showCharts}\r\n                    handleShowCharts={this.handleShowCharts}\r\n                    handleShowGlobe={this.handleShowGlobe}\r\n                />\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer\r\n                            globeUIRef={this.globeUIRef}\r\n                            updateDomainFromMap={this.updateDomainFromMap}\r\n                            updateDomainFromGraphicExtent={this.updateDomainFromGraphicExtent}\r\n                            drawMode={() => this.setState({...this.state, regionRenderMode: regionRenderModes.draw})}\r\n                            esriModules={this.state.esriModules}\r\n                            regionRenderMode={this.state.regionRenderMode}\r\n                            spParams={this.state.spParams}\r\n                            cruiseTrajectory={this.props.cruiseTrajectory}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                <div className={this.state.showCharts ? '' : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password, or <Link onClick={this.handleClose} component={RouterLink} to={{pathname: '/register'}}>Register.</Link>\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Spinner from 'react-spinkit';\r\n\r\nconst styles = theme => ({\r\n    loader: {\r\n        backgroundColor: '#000000',\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        opacity: 0.5,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        zIndex: 9998\r\n    },\r\n\r\n    loaderContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItem: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 9999,\r\n        opacity: 1\r\n    },\r\n\r\n    spinnerText: {\r\n        zIndex: 10000,\r\n        color: '#FF8000',\r\n        marginTop: '25px',\r\n        opacity: 1\r\n    },\r\n\r\n    spinner: {\r\n        opacity: 1\r\n    }\r\n})\r\n\r\nconst LoadingOverlay = (props) => {\r\n    const { classes, loadingMessage } = props;\r\n\r\n    if(loadingMessage && loadingMessage.length){\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div className={classes.loaderContent}>\r\n                    <Spinner className={classes.spinner} color='#FF8000' name=\"ball-pulse-rise\" fadeIn='quarter'/>\r\n                    <Typography variant='h6' className={classes.spinnerText}>{loadingMessage}</Typography>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return '';\r\n\r\n}\r\n\r\nexport default withStyles(styles)(LoadingOverlay);","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper';\r\nimport LoadingOverlay from './LoadingOverlay';\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog,\r\n    loadingMessage: state.loadingMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n                <LoadingOverlay loadingMessage={this.props.loadingMessage}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nconst styles = theme => ({\r\n    landingWrapper: {\r\n        margin: '15vh auto'\r\n    },\r\n\r\n    welcomeMessage: {\r\n        color: '#ffffff',\r\n        maxWidth: '500px',\r\n        margin: `${theme.spacing(2)}px auto`\r\n    }\r\n})\r\n\r\nclass LandingPage extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.landingWrapper}>\r\n                <img \r\n                    src='/images/large_cmap_logo.png'\r\n                    height='290'\r\n                    width='600'\r\n                />\r\n                <Typography variant=\"body2\" component=\"p\" className={classes.welcomeMessage}>\r\n                    Welcome to Simons CMAP. This application is currently under heavy development, and some features may be incomplete.\r\n                </Typography>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingPage));","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { Home, CollectionsBookmark, AccountCircle, InsertChartOutlined, ChevronLeft } from '@material-ui/icons';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst navDrawerWidth = 150;\r\n\r\nconst styles = theme => ({\r\n  drawer: {\r\n    width: navDrawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: navDrawerWidth,\r\n  },\r\n\r\n  drForm: {\r\n      width: 180,\r\n      boxShadow: '0px 0px 0px 2px rgba(0,0,0,0.2)'\r\n  },\r\n\r\n  drFormPaper: {\r\n      width: 180,\r\n      left: navDrawerWidth,\r\n      boxShadow: '0px 0px 0px 2px rgba(0,0,0,0.2)'\r\n    //   boxShadow: theme.sha\r\n  },\r\n\r\n  drFormHead: {\r\n    alignItems: 'center',\r\n  },\r\n\r\n  nestedListItem: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingTop: 0,\r\n      marginTop: '-10px',\r\n  },\r\n\r\n  logo: {\r\n    margin: '10px auto 20px auto',\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n\r\n  moveRight: {\r\n      position: 'relative',\r\n      left: '160px'\r\n  }\r\n});\r\n\r\nconst primaryTypographyProps = {\r\n    variant: 'subtitle2'\r\n}\r\n\r\nconst nestedPrimaryTypographyProps = {\r\n    variant: 'caption'\r\n}\r\n\r\nclass PermanentDrawerLeft extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showDataRetrievalForm: false\r\n        }\r\n    }\r\n\r\n    handleOpenDRForm = () => {\r\n        this.setState({...this.state, showDataRetrievalForm: true})\r\n    }\r\n\r\n    handleCloseDRForm = () => {\r\n        this.setState({...this.state, showDataRetrievalForm: false})\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { pathname } = this.props.location;\r\n\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >\r\n                    <List>\r\n                        <ListItem button>\r\n                            <ListItemIcon><Home/></ListItemIcon>\r\n                            <ListItemText primary='Home' primaryTypographyProps={primaryTypographyProps}/>\r\n                        </ListItem>\r\n\r\n                        <ListItem button>\r\n                            <ListItemIcon><AccountCircle/></ListItemIcon>\r\n                            <ListItemText primary='Account' primaryTypographyProps={primaryTypographyProps}/>\r\n                        </ListItem>\r\n\r\n                        <ListItem button>\r\n                            <ListItemIcon><CollectionsBookmark/></ListItemIcon>\r\n                            <ListItemText primary='Catalog' primaryTypographyProps={primaryTypographyProps}/>\r\n                        </ListItem>\r\n\r\n                        <ListItem button>\r\n                            <ListItemIcon><InsertChartOutlined/></ListItemIcon>\r\n                            <ListItemText primary='Visualization' primaryTypographyProps={primaryTypographyProps}/>\r\n                        </ListItem>\r\n\r\n                        <Collapse \r\n                            in={pathname==='/visualization'}\r\n                            timeout=\"auto\" \r\n                            unmountOnExit\r\n                        >\r\n                            <List component=\"div\" disablePadding dense>\r\n                                <ListItem \r\n                                    button \r\n                                    className={classes.nestedListItem}\r\n                                    onClick={this.handleOpenDRForm}\r\n                                >\r\n                                    <ListItemText inset primary=\"New\" primaryTypographyProps={nestedPrimaryTypographyProps}/>\r\n                                </ListItem>\r\n                            </List>\r\n\r\n                            <List component=\"div\" disablePadding>\r\n                                <ListItem button className={classes.nestedListItem}>\r\n                                    <ListItemText inset primary=\"Charts\" primaryTypographyProps={nestedPrimaryTypographyProps}/>\r\n                                </ListItem>\r\n                            </List>\r\n                        </Collapse>\r\n                    </List>\r\n                </Drawer>\r\n\r\n                <Drawer\r\n                    className={classes.drForm}\r\n                    open={this.state.showDataRetrievalForm}\r\n                    variant=\"persistent\"\r\n                    classes={{\r\n                        paper: classes.drFormPaper,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >             \r\n\r\n                    <div className={classes.drFormHead}>\r\n                        <IconButton onClick={this.handleCloseDRForm}>\r\n                            <ChevronLeft color='action'/>\r\n                        </IconButton>\r\n                    </div>     \r\n                </Drawer>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(PermanentDrawerLeft));\r\n\r\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\r\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   root: {\r\n//     display: 'flex',\r\n//   },\r\n//   appBar: {\r\n//     transition: theme.transitions.create(['margin', 'width'], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//   },\r\n//   appBarShift: {\r\n//     width: `calc(100% - ${drawerWidth}px)`,\r\n//     marginLeft: drawerWidth,\r\n//     transition: theme.transitions.create(['margin', 'width'], {\r\n//       easing: theme.transitions.easing.easeOut,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//   },\r\n//   menuButton: {\r\n//     marginRight: theme.spacing(2),\r\n//   },\r\n//   hide: {\r\n//     display: 'none',\r\n//   },\r\n//   drawer: {\r\n//     width: drawerWidth,\r\n//     flexShrink: 0,\r\n//   },\r\n//   drawerPaper: {\r\n//     width: drawerWidth,\r\n//   },\r\n//   drawerHeader: {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     padding: theme.spacing(0, 1),\r\n//     ...theme.mixins.toolbar,\r\n//     justifyContent: 'flex-end',\r\n//   },\r\n//   content: {\r\n//     flexGrow: 1,\r\n//     padding: theme.spacing(3),\r\n//     transition: theme.transitions.create('margin', {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//     marginLeft: -drawerWidth,\r\n//   },\r\n//   contentShift: {\r\n//     transition: theme.transitions.create('margin', {\r\n//       easing: theme.transitions.easing.easeOut,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//     marginLeft: 0,\r\n//   },\r\n// }));\r\n\r\n// export default function PersistentDrawerLeft() {\r\n//   const classes = useStyles();\r\n//   const theme = useTheme();\r\n//   const [open, setOpen] = React.useState(false);\r\n\r\n//   const handleDrawerOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleDrawerClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Drawer\r\n//         className={classes.drawer}\r\n//         variant=\"persistent\"\r\n//         anchor=\"left\"\r\n//         open={open}\r\n//         classes={{\r\n//           paper: classes.drawerPaper,\r\n//         }}\r\n//       >\r\n//         <div className={classes.drawerHeader}>\r\n//           <IconButton onClick={handleDrawerClose}>\r\n//             {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n//           </IconButton>\r\n//         </div>\r\n//         <Divider />\r\n//         <List>\r\n//           {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n//             <ListItem button key={text}>\r\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n//               <ListItemText primary={text} />\r\n//             </ListItem>\r\n//           ))}\r\n//         </List>\r\n//         <Divider />\r\n//         <List>\r\n//           {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n//             <ListItem button key={text}>\r\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n//               <ListItemText primary={text} />\r\n//             </ListItem>\r\n//           ))}\r\n//         </List>\r\n//       </Drawer>\r\n//     </div>\r\n//   );\r\n// }","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport './App.scss';\n\nimport colors from './Enums/colors';\n\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\n\nimport Home from './Components/Home';\nimport Catalog from './Components/Catalog';\nimport Register from './Components/Register';\nimport Visualization from './Components/Visualization';\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\nimport LandingPage from './Components/LandingPage';\nimport NavDrawer from './Components/NavDrawer';\nimport TopNavBar from './Components/TopNavBar';\n\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: colors.backgroundGray,\n      paper: colors.backgroundGray\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiListItemIcon: {\n      root: {\n        minWidth: '40px'\n      }\n    },\n\n    MuiListItem: {\n      gutters: {\n        paddingLeft: '6px',\n        paddingRight: '10px'\n      },\n\n      root: {\n        paddingTop: '4px',\n        paddingBottom: '4px'\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: 'transparent',\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },    \n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiFilledInput: {\n      input: {\n        paddingLeft: '6px',\n      },\n\n      inputSelect: {\n        paddingBottom: '6px'\n      },\n\n      adornedEnd: {\n        paddingRight: '6px'\n      }\n    }\n  }\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  loadingMessage: state.loadingMessage\n})\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.vizRef = React.createRef();\n  }\n\nrender() {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n        <BrowserRouter>\n          <GlobalUIComponentWrapper/>\n          <TopNavBar/>\n          <Switch>          \n            <Route exact path='/apikeymanagement' component={ Home } />\n            <Route exact path='/' component={ LandingPage } />\n            <Route exact path='/catalog' component={ Catalog } />\n            <Route exact path='/register' component={ Register } />\n            <Route exact path='/visualization' component={Visualization} />\n          </Switch>\n        </BrowserRouter>\n        </MuiThemeProvider>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n}\n\nexport default connect(mapStateToProps, null)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\n\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}