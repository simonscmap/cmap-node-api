{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","Enums/spatialResolutions.js","Utility/mapSpatialResolutionToNumber.js","Utility/flattenArray.js","Utility/splitData.js","Utility/mergeArraysAndComputeMeans.js","Utility/mergeArrays.js","Enums/visualizationSubTypes.js","Enums/temporalResolutions.js","Classes/SpaceTimeData.js","Enums/storedProcedures.js","Classes/TimeSeriesData.js","Classes/DepthProfileData.js","Enums/months.js","Classes/SectionMapData.js","Classes/SparseData.js","api.js","Redux/sagas.js","Redux/store.js","Enums/colors.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/TopNavBar.js","Components/Home.js","Components/GridDetail.js","Components/ConnectedTooltip.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/validation.js","Components/TableStatsDialog.js","Utility/mapTemporalResolutionToNumber.js","Components/DataRetrievalForm.js","Utility/utcDateStringToLocal.js","Utility/depthCounter.js","Components/VizControlPanel.js","Utility/handleXTicks.js","Utility/handleChartDatestring.js","Utility/chartBase.js","Components/ChartComponents/ChartControlPanel.js","Components/ChartComponents/SpaceTimeChart.js","Components/ChartComponents/TimeSeriesChart.js","Components/ChartComponents/DepthProfileChart.js","Components/ChartComponents/SectionMapChart.js","Components/ChartComponents/SparseScatter.js","Components/ChartComponents/SparseMap.js","Components/ChartComponents/SparseHistogram.js","Components/Charts.js","Components/CruiseSelector.js","Components/MapContainer.js","Utility/cleanSPParams.js","Utility/localDateToString.js","Components/Visualization.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/LoadingOverlay.js","Components/GlobalUIComponentWrapper.js","Components/LandingPage.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","CRUISE_TRAJECTORY_REQUEST_SEND","CRUISE_LIST_REQUEST_SEND","initialState","catalog","snackbarIsOpen","snackbarMessage","loadingMessage","showHelp","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","getCruiseTrajectoryRequestState","cruiseTrajectory","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","cruiseList","getCruiseListRequestState","showChartsOnce","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","trajectory","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","setLoadingMessage","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addChart","cruiseTrajectoryRequestSend","id","visualizationActionTypes","cruiseTrajectoryRequestSuccess","cruiseTrajectoryRequestProcessing","cruiseListRequestSend","cruiseListRequestSuccess","cruiseListRequestFailure","cruiseListRequestProcessing","triggerShowCharts","apiUrl","spatialResolutions","irregular","halfDegree","quarterDegree","twentyFifthDegree","fourKm","twelfthDegree","seventyKm","oneDegree","mapSpatialResolutionToNumber","resolution","_map","defineProperty","flattenArray","arr","flattenedArray","i","length","j","push","splitData","changeInterval","numDistinct","Math","floor","mergeArraysAndComputeMeans","mergeTargetDistance","nextMergeStartDistance","numArraysPerMerge","mergedArrays","travelDistance","subArray","sum","count","k","mergeArrays","subTypes","sectionMap","contourSectionMap","timeSeries","histogram","depthProfile","heatmap","contourMap","sparse","temporalResolutions","threeMinutes","sixHourly","daily","weekly","monthly","annual","monthlyClimatology","threeDay","eightDayRunning","eightDays","SpaceTimeData","_this","this","classCallCheck","generateCsv","dates","Array","from","depths","hasDepth","csvArray","parameters","fields","variableValues","lats","lons","isNaN","join","metadata","hasHours","isMonthly","Set","zMin","zMax","extent","indexAdjust","lonMin","lonMax","latMin","latMax","distinctLatCount","distinctLonCount","row","lat","parseFloat","_lon","lon","lon1","hasHour","Table_Name","Temporal_Resolution","time","value","add","Date","setUTCHours","toISOString","size","lonCount","latCount","quantile1","quantile","quantile2","undefined","toPrecision","spatialResolution","Spatial_Resolution","round","subType","splitByDate","splitByDepth","variableValueSubsets","_this2","depthInterval","dateInterval","map","subset","vizSubTypes","storedProcedures","spaceTime","TimeSeriesData","stds","depth","depthIndexAdjust","csvString","DepthProfileData","months","SectionMapData","lonInterval","latInterval","orientation","lonArray","max","apply","min","splitBySpace","spaceCount","SparseData","variableIndex","Depth_Min","times","latDistance","abs","lonDistance","distance","sqrt","console","log","_zoom","zoom","lonCenter","latCenter","center","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","reduce","queryString","key","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","csvParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","CSVParser","columns","on","record","read","sent","ok","abrupt","getReader","done","write","decode","stop","keyRetrieval","_callee2","_context2","json","keyCreation","_ref3","_callee3","description","_context3","trim","_x","arguments","visualization","storedProcedureRequest","_ref4","_callee4","vizData","_context4","t0","spName","e","_x2","getTableStats","_ref5","_callee5","tableName","_context5","_x3","cruiseTrajectoryRequest","_ref6","_callee6","_context6","_x4","_callee7","_context7","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","queryRequest","cruiseListRequest","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","watchCruiseTrajectoryRequest","watchCruiseListRequest","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_marked6","_marked7","_context8","visualizationActions","query","_marked8","_context9","delay","finalize","_marked9","_context10","_marked10","_context11","_marked11","_context12","takeLatest","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","_context22","_marked22","_context23","all","_marked23","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","colors","orange","backgroundGray","aqua","errorYellow","withStyles","theme","centered","position","top","props","classes","react_default","createElement","CircularProgress","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleClick","handleChange","event","setState","target","wrapper","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","warningCaption","Grid","container","alignItems","justify","spacing","item","TextField","margin","name","onChange","placeholder","descriptionField","Button","disabled","color","onClick","Components_LoadingSpinner","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","fontSize","useEffect","Link","component","RouterLink","to","pathname","toggleShowHelp","TopNavBar","handleLogOut","clearState","username","password","handleNavigate","route","history","handleOutsideNavigate","url","open","_this$props","navWrapper","navLink","rightNavLink","withRouter","appBar","backgroundColor","boxShadow","toolBar","zIndex","paddingLeft","textAlign","boxSizing","cursor","marginRight","&:hover","textDecoration","fontWeight","display","float","rightLinkWrapper","Home","Fragment","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","height","infoCard","padding","gridClass","gridItem","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","variableDetailTable","marginLeft","variableDetailTableRow","variableDetailTableCell","borderBottomColor","xs","src","imageSource","alt","Dataset_Description","Data_Source","Distributor","tooltip","palette","secondary","main","opacity","Tooltip","placement","popper","children","detailCellRendererParams","template","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","handleColumnRowGroupChanged","forEach","column","setColumnVisible","colId","render","gridPaper","Components_ConnectedTooltip","gridSearch","autoFocus","label","InputLabelProps","shrink","gridWrapper","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","firstName","optional","lastName","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","validation","depthOneIsLower","depthOneOutOfBounds","depthTwoOutOfBounds","negative","date","dateOneIsLater","dateOneOutOfBounds","dateTwoOutOfBounds","latOneIsHigher","latOneOutOfBounds","latTwoOutOfBounds","lonOneIsHigher","lonOneOutOfBounds","lonTwoOutOfBounds","dataIsIrregular","dateRangeRequired","depthRangeRequired","surfaceOnlyDataset","irregularOnly","dataSizeTooLarge","generic","invalid","dataSizeWarning","dataSizePrevent","variableMissing","vizTypeMissing","Dialog","onClose","DialogTitle","Long_Name","DialogContent","Comment","DialogContentText","Dataset_Name","slice","Sensor","Time_Min","Time_Max","Lat_Min","Lat_Max","Lon_Min","Lon_Max","Depth_Max","Variable_Min","Unit","Variable_Max","Variable_Mean","Variable_Std","mapTemporalResolutionToNumber","reactWindowListRef","React","createRef","MenuList","componentDidUpdate","prevProps","prevState","findIndex","child","isFocused","current","scrollToItem","options","maxHeight","_getValue","getValue","slicedToArray","initialOffset","indexOf","dist_index_esm","style","itemCount","itemSize","initialScrollOffset","ref","_ref","DropdownIndicator","chunk_5d200a41_browser_esm","ArrowDropDown","SingleValue","assign","Option","DataRetrievalForm","search","addDocuments","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","handleVisualizationSpeedDialClose","visualizationSpeedDialOpen","handleVisualizationSpeedDialOpen","handleVisualizationSpeedDialClick","getSelectOptionsFromCatalogItems","items","Variable","onAutoSuggestChange","searchString","searchField","estimateDataSize","_this2$props","dt1","dt2","lat1","lat2","lon2","selectedVizType","date1","date2","res","dayDiff","checkStartDepth","surfaceOnly","depth1","depth2","replace","toFixed","checkEndDepth","checkStartDate","checkEndDate","checkStartLat","checkEndLat","checkStartLon","checkEndLon","checkHeatmap","irregularSpatialResolution","checkContour","checkSection","checkHistogram","checkTimeSeries","checkDepthProfile","checkSparseMap","checkGeneralWarn","checkGeneralPrevent","JsSearch","searchIndex","addIndex","_this3","_this$state","_this$props2","_validations","fill","_validations2","startDepthMessage","endDepthMessage","startLatMessage","endLatMessage","startLonMessage","endLonMessage","heatmapMessage","contourMessage","sectionMapMessage","histogramMessage","timeSeriesMessage","depthProfileMessage","sparseMapMessage","generalWarnMessage","generalPreventMessage","parametersAreInvalid","some","showUI","displayNone","Components_TableStatsDialog","dataRetrievalFormPaper","shortenHeight","react_select_browser_esm","isLoading","components","IndicatorSeparator","isClearable","onInputChange","filterOption","variableSelect","escapeClearsValue","updateFields","styles","menu","provided","input","fontFamily","control","border","borderColor","&:focus-within","noOptionsMessage","option","_ref2",":active","&:after","singleValue","paddingRight","primary25","primary","IconButton","LibraryBooks","datePickerGridSection","material_ui_pickers_esm","format","minDate","maxDate","autoOk","handleStartDateChange","inputVariant","handleEndDateChange","FormControl","InputLabel","htmlFor","OutlinedInput","aria-describedby","labelWidth","FormHelperText","handleLatLonChange","vizTypeSelectFormControl","Select","inputProps","MenuItem","onVisualize","generalMessage","dataRetrievalFormField","retrieveDataButton","visualizationSpeedDial","visualizeButton","borderRadius","visualizeButtonText","dominantBaseline","textAnchor","vizSelect","utcDateStringToLocal","utcString","utcYear","getUTCFullYear","utcMonth","getUTCMonth","utcDate","getUTCDate","newDate","setFullYear","darwinDepths","piscesDepths","piscesTable","darwinTable","depthCounter","has","overrideDisabledStyle","clearCharts","ArrowRight","formatOptionLabel","meta","context","VizControlPanel","handleOpenControlPanel","showControlPanel","handleCloseControlPanel","stopPropagation","dateCount","checkDatesValid","valueOf","dataSize","handleShowChartsAndResize","setTimeout","dispatchEvent","Event","handleShowCharts","maxDateMessage","showCharts","handleShowGlobe","catalogMinDate","setHours","catalogMaxDate","zeroedDT1","zeroedDT2","minDateMessage","checkDisableVisualizeList","disableVisualizeMessage","checkDisableVisualize","visualizeButtonTooltip","closePanelChevron","aria-label","ChevronLeft","openPanelChevron","ChevronRight","Drawer","drawer","paper","drawerPaper","anchor","ButtonGroup","groupedButtons","depressed","Language","InsertChartOutlined","clearChartsButton","Delete","backdropFilter","valueContainer","borderBottom","&:active","tableStatsButton","datePicker","KeyboardButtonProps","datePickerInputAdornment","formGridItem","FormHelperTextProps","InputProps","padLeft","vizButtonTooltip","fullWidth","bottom","navDrawerWidth","controlPanelForm","borderLeft","&:disabled","fontVariant","handleXTicks","infoObject","sectionSize","lonRange","tickvals","ceil","ticktext","tickmode","handleChartDatestring","dateString","parseInt","chartBase","layout","font","paper_bgcolor","config","displaylogo","annotations","distributor","text","xref","yref","yshift","showarrow","colorscaleOptions","chartWrapper","popover","paddingBottom","iconButton","colorForm","lastIcon","borderTopRightRadius","borderBottomRightRadius","buttonGroup","maxWidth","colorscaleMenu","onToggleSplitByDate","onToggleSplitByDepth","onToggleSplitBySpace","switchOrientation","downloadCsv","handleZValueConfirm","zValues","markerOptions","handleMarkerOptionsConfirm","_useState","useState","_useState2","paletteAnchorElement","setPaletteAnchorElement","_React$useState","_React$useState2","zScalePopoverAnchorElement","setZScalePopoverAnchorElement","_React$useState3","_React$useState4","localZMin","setLocalZMin","_React$useState5","_React$useState6","localZMax","setLocalZMax","zScalePopoverOpen","zScalePopoverID","handleZScalePopoverClose","zScaleValidations","zMinMessage","zMaxMessage","_React$useState7","_React$useState8","markerOptionsAnchorElement","setMarkerOptionsAnchorElement","_React$useState9","_React$useState10","localMarkerOpacity","setLocalMarkerOpacity","_React$useState11","_React$useState12","localMarkerColor","setLocalMarkerColor","_React$useState13","_React$useState14","localMarkerSize","setLocalMarkerSize","previousOpacity","useRef","usePreviousOpacity","previousColor","usePreviousColor","previousSize","usePreviousSize","markerPopoverOpen","markerPopoverID","handleMarkerOptionsClose","markerOptionsValidations","checkLocalMarkerOpacity","checkLocalMarkerSize","localMarkerOpacityMessage","localMarkerSizeMessage","DateRange","Waves","LineWeight","Rotate90DegreesCcw","CloudDownload","currentTarget","SwapVert","handlePaletteChoice","Palette","Gamepad","Info","Menu","anchorEl","keepMounted","Popover","anchorOrigin","vertical","horizontal","transformOrigin","buttonBlock","iconButtonWrapper","plots","_props$chart","chart","setSplitByDate","_useState3","_useState4","setSplitByDepth","_useState5","_useState6","subTypeState","_useState7","_useState8","setPalette","_useState9","_useState10","setZValues","_zValues","subSets","generatePlotData","subsets","xTicks","variableName","handleDateString","hovertext","formatter","react_plotly_default","zauto","zmin","zmax","x","y","z","connectgaps","autocolorscale","colorscale","hoverinfo","contours","coloring","showlabels","labelfont","family","labelformat","colorbar","exponentformat","xaxis","yaxis","handleContourMap","zsmooth","handleHeatmap","handleHistogram","ChartComponents_ChartControlPanel","requestAnimationFrame","values","csv","blob","Blob","URL","createObjectURL","document","setAttribute","appendChild","click","removeChild","setMarkerOptions","mode","error_y","array","visible","line","marker","plot_bgcolor","error_x","autorange","setSplitBySpace","setOrientation","spaces","distinctMeridiansOrParallelsForSplitting","mergedOrSplitAxis","xAxis","spaceTitle","visualizationSubTypes","handleSectionMap","SparseScatter","xValues","yValues","xTitle","yTitle","tabProps","aria-controls","SparseTabPanel","selectedTab","controlPanelProps","hidden","tabs","tab","textTransform","setTab","plot","mapbox","sourcetype","source","below","mapboxAccessToken","handleSparseMap","scatter","Tabs","indicatorColor","Tab","SparseMap_SparseTabPanel","ChartComponents_SparseScatter","Charts","chartPaper","ChartComponents_SparseMap","ChartComponents_SparseHistogram","ChartComponents_SpaceTimeChart","ChartComponents_TimeSeriesChart","ChartComponents_DepthProfileChart","ChartComponents_SectionMapChart","chartsContainer","cruiseTrajectoryClear","esriFonts","cruiseSort","b","Name","CruiseSelector","getSelectOptionsFromCruiseList","list","handleCruiseSelect","selection","ID","selectedCruise","sort","outerDiv","blurEffectDiv","getCruiseListState","cruiseSelect","menuList","cruiseInfo","cruiseInfoCell","Nickname","Start_Time","End_Time","Chief_Name","Ship_Name","borderStyle","DrawButton","drawButton","helpText","cancelButton","polygonSymbol","symbolLayers","material","outline","UiComponents","shouldComponentUpdate","nextProps","nextState","sketchModel","esriModules","SketchViewModel","layer","regionLayer","view","defaultUpdateOptions","toggleToolOnClick","tool","setShowHelp","getElementById","updateDomainFromGraphicExtent","Utils","webMercatorToGeographic","graphic","geometry","toolEventInfo","graphics","addEventListener","removeAll","create","cancel","ui","remove","TrajectoryController","memo","trajectoryLayer","polyLines","lineIndex","lonStart","latStart","maxDistance","_lonDistance","cruiseTrajectorySymbol","cap","cruiseTrajectoryGeometry","paths","Graphic","symbol","goTo","maxDuration","speedFactor","MapContainer","_this3$props","spParams","globeUIRef","_lon2","polygon","rings","regionGraphic","esm","mapProperties","basemap","viewProperties","MapContainer_UiComponents","measurementPositions","Components_CruiseSelector","GraphicsLayer","cleanSPParams","localDateToString","year","getFullYear","month","getMonth","day","getDate","toString","mapVizType","vizType","_mapping","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","completedShowCharts","Visualization","filteredData","_this$state$spParams","mapping","toggleShowUI","_lon1","xmin","xmax","newCoordinates","ymin","ymax","esriModuleNames","loadModules","version","loadedModules","accumulator","currentValue","currentIndex","Components_DataRetrievalForm","Components_VizControlPanel","toggleChartView","Components_MapContainer","Components_Charts","background","userLoginRequestSend","LoginDialog","handleLogin","handleClose","aria-labelledby","onSubmit","preventDefault","DialogActions","snackbarClose","centerText","Snackbar","autoHideDuration","loader","right","loaderContent","flexDirection","alignItem","spinnerText","spinner","dist","fadeIn","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","Components_LoginDialog","Components_SnackbarWrapper","Components_LoadingOverlay","inlineBlock","LandingPage","landingWrapper","welcomeMessage","createMuiTheme","typography","useNextVariants","contrastText","default","overrides","MuiIconButton","MuiListItemIcon","MuiFormHelperText","filled","MuiListItem","gutters","MuiToolbar","MuiOutlinedInput","&$focused","MuiButtonGroup","groupedOutlined","&:not(:first-child)","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","MuiFilledInput","inputSelect","adornedEnd","App","vizRef","utils","DateFnsUtils","MuiThemeProvider","react_router_dom","Components_GlobalUIComponentWrapper","react_router","exact","path","LicenseManager","setLicenseKey","rootElement","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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ACpBjW,QAAO,OAAArf,OAAQ6X,EAAMgD,QAAQ,KAGjC0a,mBAAoB,CAChBva,OAAO,aAGXwX,eAAgB,CACZxX,OAAQ,oBAGZwa,uBAAwB,CACpBzd,SAAU,WACVC,IAAK,MACL0P,KAAM,QAGV+N,gBAAiB,CACbC,aAAa,MACb7Z,MAAO,QACPsD,OAAO,OACPnE,OAAQ,SACR6C,gBAAiBhG,EAAM8I,SAG3BgV,oBAAqB,CACjBC,iBAAkB,SAClBC,WAAY,UAGhBhE,YAAa,CACTpT,QAAS,QAGbsV,sBAAuB,CACnB9V,YAAa,kBACbyV,aAAc,mBAGlB1B,cAAe,CACX7S,OAAQ,QAGZ2W,UAAW,CACP9Z,SAAU,KAGduD,SAAU,CACNJ,OAAQ,QAGZkW,eAAgB,CACZnX,UAAW,QAGf8W,yBAA0B,CACtBnZ,MAAO,OA6nB6CjE,CAAmBmV,qFC5tBhEgJ,GAXc,SAACC,GAC1B,IAAI9N,EAAO,IAAIve,KAAKqsB,GAChBC,EAAU/N,EAAKgO,iBACfC,EAAWjO,EAAKkO,cAChBC,EAAUnO,EAAKoO,aAEfC,EAAU,IAAI5sB,KAElB,OADA4sB,EAAQC,YAAYP,EAASE,EAAUE,GAChCE,GCPLE,GAAe,CACjB,EACA,GACA,GACA,GACA,GACA,GACA,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,OACA,OACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAGEC,GAAe,CACjB,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,eAkBEC,GAAc,IAAIvuB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","file":"static/js/main.7a00effd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    case interfaceActionTypes.SET_LOADING_MESSAGE: return {...state, loadingMessage: action.payload.message}\r\n    \r\n    case interfaceActionTypes.TOGGLE_SHOW_HELP: return {...state, showHelp: !state.showHelp}\r\n    \r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\n\r\nexport const GET_TABLE_STATS = 'GET_TABLE_STATS';\r\nexport const GET_TABLE_STATS_REQUEST_PROCESSING = 'GET_TABLE_STATS_REQUEST_PROCESSING';\r\nexport const STORE_TABLE_STATS = 'STORE_TABLE_STATS';\r\n\r\nexport const CRUISE_TRAJECTORY_REQUEST_SEND = 'CRUISE_TRAJECTORY_REQUEST_SEND';\r\nexport const CRUISE_TRAJECTORY_REQUEST_SUCCESS = 'CRUISE_TRAJECTORY_REQUEST_SUCCESS';\r\nexport const CRUISE_TRAJECTORY_REQUEST_FAILURE = 'CRUISE_TRAJECTORY_REQUEST_FAILURE';\r\nexport const CRUISE_TRAJECTORY_REQUEST_PROCESSING = 'CRUISE_TRAJECTORY_REQUEST_PROCESSING';\r\nexport const CRUISE_TRAJECTORY_CLEAR = 'CRUISE_TRAJECTORY_CLEAR';\r\n\r\nexport const CRUISE_LIST_REQUEST_SEND = 'CRUISE_LIST_REQUEST_SEND';\r\nexport const CRUISE_LIST_REQUEST_SUCCESS = 'CRUISE_LIST_REQUEST_SUCCESS';\r\nexport const CRUISE_LIST_REQUEST_FAILURE = 'CRUISE_LIST_REQUEST_FAILURE';\r\nexport const CRUISE_LIST_REQUEST_PROCESSING = 'CRUISE_LIST_REQUEST_PROCESSING';\r\n\r\nexport const TRIGGER_SHOW_CHARTS = 'TRIGGER_SHOW_CHARTS';\r\nexport const COMPLETED_SHOW_CHARTS = 'COMPLETED_SHOW_CHARTS';","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n    loadingMessage: '',\r\n    showHelp: false,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    getCruiseTrajectoryRequestState: null,\r\n    cruiseTrajectory: null,\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    cruiseList: [],\r\n    getCruiseListRequestState: null,\r\n    showChartsOnce: null\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';\r\n\r\nexport const SET_LOADING_MESSAGE = 'SET_LOADING_MESSAGE';\r\n\r\nexport const TOGGLE_SHOW_HELP = 'TOGGLE_SHOW_HELP';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING: return {...state, getCruiseTrajectoryRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS: return {...state,\r\n            cruiseTrajectory: action.payload.trajectory,\r\n            getCruiseTrajectoryRequestState: states.succeeded\r\n        }\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR: return {...state, cruiseTrajectory: null}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE: return {...state, getCruiseTrajectoryRequestState: states.failed}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING: return {...state, getCruiseListRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS: return {\r\n            ...state,\r\n            getCruiseListRequestState: states.succeeded,\r\n            cruiseList: action.payload.cruiseList\r\n        }\r\n\r\n        case visualizationActionTypes.TRIGGER_SHOW_CHARTS: return {...state, showChartsOnce: true}\r\n        case visualizationActionTypes.COMPLETED_SHOW_CHARTS: return {...state, showChartsOnce: false}\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})\r\n\r\nexport const setLoadingMessage = (message) => ({\r\n    type:interfaceActionTypes.SET_LOADING_MESSAGE,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const toggleShowHelp = () => ({\r\n    type: interfaceActionTypes.TOGGLE_SHOW_HELP\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const getTableStats = (tableName) => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS,\r\n    payload: {\r\n        tableName\r\n    }\r\n})\r\n\r\nexport const getTableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storeTableStats = (tableStats) => ({\r\n    type: visualizationActionTypes.STORE_TABLE_STATS,\r\n    payload: {\r\n        tableStats\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSuccess = (trajectory) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS,\r\n    payload: {\r\n        trajectory\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseTrajectoryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const cruiseTrajectoryClear = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR\r\n})\r\n\r\nexport const cruiseListRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SEND,\r\n})\r\n\r\nexport const cruiseListRequestSuccess = (cruiseList) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS,\r\n    payload: {\r\n        cruiseList\r\n    }\r\n})\r\n\r\nexport const cruiseListRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseListRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const triggerShowCharts = () => ({\r\n    type: visualizationActionTypes.TRIGGER_SHOW_CHARTS\r\n})\r\n\r\nexport const completedShowCharts = () => ({\r\n    type: visualizationActionTypes.COMPLETED_SHOW_CHARTS\r\n})","export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\n// export const apiUrl = 'https://simonscmap.dev';","const spatialResolutions = {\r\n    irregular: 'Irregular',\r\n    halfDegree: '1/2° X 1/2°' ,\r\n    quarterDegree: '1/4° X 1/4°' ,\r\n    twentyFifthDegree: '1/25° X 1/25°' ,\r\n    fourKm: '4km X 4km',\r\n    twelfthDegree: '1/12° X 1/12°',\r\n    seventyKm: '70km X 70km',\r\n    oneDegree: '1° X 1°'\r\n}\r\n\r\nexport default spatialResolutions;","import spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nconst mapSpatialResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [spatialResolutions.halfDegree] : .5,\r\n        [spatialResolutions.quarterDegree] : .25,\r\n        [spatialResolutions.twentyFifthDegree] : .04,\r\n        [spatialResolutions.fourKm] : .041672,\r\n        [spatialResolutions.twelfthDegree] : .083333,\r\n        [spatialResolutions.oneDegree] : 1,\r\n        [spatialResolutions.seventyKm] : .25\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapSpatialResolutionToNumber;","// Flattens an array by 1 level\r\n// [[[],[]], [[],[]], [[],[]]] => [[], [], [], [], [], []]\r\n\r\nconst flattenArray = (arr) => {\r\n    let flattenedArray = [];\r\n\r\n    for(let i = 0; i < arr.length; i++){\r\n        for(let j = 0; j < arr[i].length; j++){\r\n            flattenedArray.push(arr[i][j]);\r\n        }\r\n    }\r\n\r\n    return flattenedArray;\r\n}\r\n\r\nexport default flattenArray;","// Interval is number of indices between changes in this parameter, or in order words\r\n// how many times will we see the same value for this parameter in a row before it changes\r\n// as we iterate through the values array.\r\n// We use modulo for cases where data.length / interval is larger than the number of \r\n// distinct values for that parameter.\r\n\r\nconst splitData = (data, changeInterval, numDistinct) => {\r\n    var splitData = [];\r\n\r\n    for(let i = 0; i < numDistinct; i++){\r\n        splitData.push([]);\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        let index = Math.floor(i / changeInterval) % numDistinct;\r\n        splitData[index].push(data[i]);\r\n    }\r\n\r\n    return splitData;\r\n}\r\n\r\nexport default splitData;","// mergeTargetDistance - number of hops between arrays being merged\r\n// mergeTargetNumber - number of arrays being merged - implicit\r\n// nextStartDistance - once a merge is complete how many hops to next start\r\nconst mergeArraysAndComputeMeans = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n    \r\n    // Find each merging start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        // Iterate through each value in the first array of this merge. Count\r\n        // the number of values summed so we can ignore nulls and compute a mean.\r\n        for(let j = 0; j < data[i].length; j ++){\r\n            let sum = 0;\r\n            let count = 0;\r\n\r\n            // Aggregate values of all merge targets\r\n            for(let k = i; k < i + (mergeTargetDistance * numArraysPerMerge); k += mergeTargetDistance){\r\n                if(data[k][j] !== null) {\r\n                    sum += data[k][j];\r\n                    count ++;\r\n                };\r\n            }\r\n            subArray.push(count < 1 ? null : sum / (count));\r\n        }\r\n\r\n        mergedArrays.push(subArray)\r\n    }\r\n\r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArraysAndComputeMeans;","const mergeArrays = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n\r\n    // Find each merge start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        for(let j = i; j <= i + travelDistance; j += mergeTargetDistance){\r\n            subArray = [...subArray, ...data[j]];\r\n        }\r\n\r\n        mergedArrays.push(subArray);\r\n    }\r\n   \r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArrays;\r\n\r\n","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    contourSectionMap: 'Contour Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    heatmap: 'Heatmap',\r\n    contourMap: 'Contour Map',\r\n    sparse: 'Sparse'\r\n}\r\n\r\nexport default subTypes;","const temporalResolutions = {\r\n    threeMinutes: 'Three Minutes',\r\n    sixHourly: 'Six Hourly',\r\n    daily: 'Daily',\r\n    weekly: 'Weekly',\r\n    monthly: 'Monthly',\r\n    annual: 'Annual',\r\n    irregular: 'Irregular',\r\n    monthlyClimatology: 'Monthly Climatology',\r\n    threeDay: 'Three Days',\r\n    eightDayRunning: 'Eight Day Running',\r\n    eightDays: 'Eight Days '\r\n}\r\n\r\nexport default temporalResolutions;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/mergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nclass SpaceTimeData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n\r\n        this.hasDepth = null;\r\n        this.hasHours = null;\r\n        this.isMonthly = null;\r\n\r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n        this.indexAdjust = null;\r\n        this.payload = payload;\r\n        this.lats = [];\r\n        this.lons = [];\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n\r\n        this.distinctLatCount = null;\r\n        this.distinctLonCount = null;\r\n    }\r\n\r\n    add(row) {\r\n        \r\n        let lat = parseFloat(row[1]);\r\n        let _lon = parseFloat(row[2]);\r\n        let lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n\r\n        if(this.hasDepth === null) {\r\n            this.hasHour = this.metadata.Table_Name === 'tblWind_NRT';\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n            this.hasDepth = row.length === 5 && !this.hasHour;\r\n            this.indexAdjust = this.hasDepth || this.hasHour? 1 : 0;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n        }\r\n\r\n        let value = parseFloat(row[3 + this.indexAdjust]);\r\n\r\n        if(this.hasDepth){\r\n            this.depths.add(row[3]);\r\n        }\r\n\r\n        var time;\r\n        if(this.hasHour){\r\n            time = new Date(row[0]);\r\n            time.setUTCHours(row[3])\r\n            time = time.toISOString();\r\n        } else time = row[0];\r\n        this.dates.add(time);\r\n        this.lats.push(lat);\r\n\r\n        this.lons.push(lon);\r\n\r\n        if(lon < this.lonMin) this.lonMin = lon;\r\n        if(lon > this.lonMax) this.lonMax = lon;\r\n        if(lat < this.latMin) this.latMin = lat;\r\n        if(lat > this.latMax) this.latMax = lat;\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n\r\n        if(this.depths.size === 0) this.depths.add('Surface');\r\n\r\n        this.lonCount = this.lons.length / this.dates.size / this.depths.size;\r\n        this.latCount = this.lats.length / this.dates.size / this.depths.size;\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : parseFloat(quantile1.toPrecision(4));\r\n        this.zMax = quantile2 === undefined ? null : parseFloat(quantile2.toPrecision(4));\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n        \r\n        this.distinctLatCount = Math.round((this.latMax - this.latMin) / spatialResolution) + 1;\r\n        this.distinctLonCount = Math.round((this.lonMax - this.lonMin) / spatialResolution) + 1;\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {        \r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const latInterval = this.distinctLonCount;\r\n        const depthInterval = latInterval * this.distinctLatCount;\r\n        const dateInterval = depthInterval * this.depths.size;\r\n\r\n        // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n        variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, depthInterval, this.depths.size));\r\n        variableValueSubsets = flattenArray(variableValueSubsets);\r\n\r\n        // Contour and heatmap compute mean variable values per lat and lon\r\n        // when not split by date and/or time\r\n        if(subType === vizSubTypes.contourMap || subType === vizSubTypes.heatmap) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    this.depths.size, \r\n                    this.depths.size\r\n                    );\r\n    \r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    this.depths.size, \r\n                    1, \r\n                    this.dates.size\r\n                    );\r\n    \r\n            } else {\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    variableValueSubsets.length, \r\n                    variableValueSubsets.length\r\n                    );            \r\n            }\r\n        } \r\n        \r\n        // Histograms split and aggregate without computing means\r\n        else if (subType === vizSubTypes.histogram) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets, \r\n                    1,\r\n                    this.depths.size,\r\n                    this.depths.size\r\n                    );\r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets,\r\n                    this.depths.size,\r\n                    1,\r\n                    this.dates.size\r\n                );\r\n            } else {\r\n                variableValueSubsets = [this.variableValues];\r\n            }\r\n        }\r\n\r\n        // Nothing here yet\r\n        else {}\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${depths[Math.floor(i / (this.variableValues.length / (dates.length * depths.length))) % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SpaceTimeData;","const storedProcedures = {\r\n    sectionMap: 'uspSectionMap',\r\n    timeSeries: 'uspTimeSeries',\r\n    spaceTime: 'uspSpaceTime',\r\n    depthProfile: 'uspDepthProfile'\r\n}\r\n\r\nexport default storedProcedures;","class TimeSeriesData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.dates = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depth = null;\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.depthIndexAdjust = row.length === 6 ? 1 : 0;\r\n            this.lat = row[1];\r\n            this.lon = row[2];\r\n            this.depth = row.length === 6 ? row[3] : false;\r\n        }\r\n\r\n        this.variableValues.push(row[3 + this.depthIndexAdjust]);\r\n        this.stds.push(row[4 + this.depthIndexAdjust]);\r\n        this.dates.push(row[0]);\r\n    }\r\n\r\n    finalize() {\r\n        if(this.depth === false) this.depth = 'Surface';\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }    \r\n\r\n    generateCsv() {\r\n        let csvString = `time,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.dates[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default TimeSeriesData;","class DepthProfileData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depths = [];\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.lat = parseFloat(row[0]);\r\n            this.lon = parseFloat(row[1]);\r\n        }\r\n\r\n        this.variableValues.push(parseFloat(row[2]));\r\n        this.stds.push(parseFloat(row[3]));\r\n        this.depths.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        // pass\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }\r\n    \r\n    generateCsv() {\r\n        let csvString = `depth,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default DepthProfileData;","export default [\r\n    null,\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n]","import { quantile, extent } from 'd3-array';\r\n\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nimport months from '../Enums/months';\r\n\r\nclass SectionMapData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.subType = payload.subType\r\n        \r\n        this.dates = new Set();\r\n        this.depths = new Set();\r\n        this.lats = new Set();\r\n        this.lons = new Set();\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n\r\n        this.variableValues = [];\r\n        \r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.orientation = null;\r\n    }\r\n\r\n    // time, lat, lon, depth, value\r\n    add(row) {        \r\n        const time = row[0];\r\n        const lat = parseFloat(row[1]);\r\n        var _lon = parseFloat(row[2]);\r\n        const lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n        const depth = parseFloat(row[3]);\r\n        const value = parseFloat(row[4]);\r\n\r\n        if(this.variableValues.length === 0) {\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n        }        \r\n\r\n        this.depths.add(depth);\r\n        this.dates.add(this.isMonthly ? months[time] : time);\r\n        this.lats.add(lat);\r\n        this.lons.add(lon);\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : parseFloat(quantile1.toPrecision(4));\r\n        this.zMax = quantile2 === undefined ? null : parseFloat(quantile2.toPrecision(4));\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        this.orientation = this.lons.size > this.lats.size ? 'zonal' : 'meridional';\r\n\r\n        let lonArray = Array.from(this.lons);\r\n        this.lonMax = Math.max(...lonArray);\r\n        this.lonMin = Math.min(...lonArray);\r\n    }\r\n\r\n    // Direction is meridional or zonal\r\n    generatePlotData(orientation, splitByDate, splitBySpace) {\r\n        let latCount = this.lats.size;\r\n        let lonCount = this.lons.size;\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const lonInterval = this.depths.size;\r\n        const latInterval = lonInterval * lonCount;\r\n        const dateInterval = latInterval * latCount;\r\n\r\n        var variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n\r\n        var spaceCount;\r\n\r\n        if(orientation === 'zonal') {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, latInterval, latCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = latCount;\r\n        }\r\n\r\n        else {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, lonInterval, lonCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = lonCount;\r\n        }\r\n\r\n        // console.log('Split by space');\r\n        // console.log(variableValueSubsets);\r\n\r\n        if(splitByDate && splitBySpace){\r\n            // pass\r\n        } else if (splitByDate){\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                spaceCount,\r\n                spaceCount\r\n            )\r\n        } else if (splitBySpace) {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                spaceCount,\r\n                1,\r\n                this.dates.size\r\n            )\r\n        } else {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                variableValueSubsets.length,\r\n                variableValueSubsets.length\r\n            )\r\n        }\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n        let lons = Array.from(this.lons);\r\n        let lats = Array.from(this.lats);\r\n\r\n        const lonInterval = depths.length;\r\n        const latInterval = lonInterval * lons.length;\r\n\r\n        var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${lats[Math.floor(i / latInterval) % lats.length]},${lons[Math.floor(i / lonInterval) % lons.length]},${depths[i % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SectionMapData;","import { quantile, extent } from 'd3-array';\r\n\r\nclass SparseData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = null;\r\n        this.variableIndex = payload.metadata.Depth_Min ? 4 : 3;\r\n        this.depths = [];\r\n        this.times = [];\r\n        this.variableValues = [];\r\n        this.lats = [];\r\n        this.lons = [];\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n    }\r\n\r\n    add(row) {\r\n        let lat = parseFloat(row[1]);\r\n        let lon = parseFloat(row[2]);\r\n\r\n        if(this.hasDepth === null){\r\n            this.hasDepth = Boolean(this.metadata.Depth_Min);\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n        }\r\n\r\n        if(row[this.variableIndex]){\r\n\r\n            this.times.push(row[0]);\r\n            this.lats.push(lat);\r\n            this.lons.push(lon);\r\n            if(this.hasDepth) this.depths.push(parseFloat(row[3]));\r\n            this.variableValues.push(parseFloat(row[this.variableIndex]));\r\n\r\n            if(lat < this.latMin) this.latMin = lat;\r\n            if(lat > this.latMax) this.latMax = lat;\r\n            \r\n            if(lon < this.lonMin) this.lonMin = lon;\r\n            if(lon > this.lonMax) this.lonMax = lon;\r\n        }\r\n    }\r\n\r\n    finalize() {\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let latDistance = Math.abs(this.latMax - this.latMin);\r\n        let lonDistance = Math.abs(this.lonMax - this.lonMin);\r\n        let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n\r\n        console.log('Distance: ', distance);\r\n\r\n        let _zoom = 4 - Math.floor(distance / 12);\r\n        this.zoom = _zoom < 0 ? 0 : _zoom;\r\n\r\n        let lonCenter = (this.lonMax + this.lonMin) / 2;\r\n        let latCenter = (this.latMax + this.latMin) / 2;\r\n        this.center = { \r\n            lon: lonCenter, \r\n            lat: latCenter\r\n        }\r\n\r\n        console.log(this);\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        return this.variableValues;\r\n    }\r\n\r\n    generateCsv(){\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SparseData;","import CSVParser from 'csv-parse';\r\n\r\nimport { apiUrl } from './config';\r\nimport SpaceTimeData from './Classes/SpaceTimeData';\r\n\r\nimport storedProcedures from './Enums/storedProcedures';\r\nimport TimeSeriesData from './Classes/TimeSeriesData';\r\nimport DepthProfileData from './Classes/DepthProfileData';\r\nimport SectionMapData from './Classes/SectionMapData';\r\nimport SparseData from './Classes/SparseData';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            catalog.push(record)\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(payload) => {\r\n    const decoder = new TextDecoder();\r\n    var vizData;\r\n\r\n    switch(payload.parameters.spName) {\r\n        case storedProcedures.spaceTime:\r\n            if(payload.subType === 'Sparse') vizData = new SparseData(payload);\r\n            else vizData = new SpaceTimeData(payload);\r\n            break;\r\n\r\n        case storedProcedures.timeSeries:\r\n            vizData = new TimeSeriesData(payload);\r\n            break;\r\n\r\n        case storedProcedures.depthProfile:\r\n            vizData = new DepthProfileData(payload);\r\n            break;\r\n\r\n        case storedProcedures.sectionMap:\r\n            vizData = new SectionMapData(payload);\r\n            break;\r\n\r\n        default:\r\n            console.log('Unknown sproc name');\r\n    }\r\n\r\n    let response = await fetch(apiUrl + '/api/data/sp?' + storedProcedureParametersToUri(payload.parameters), fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            vizData.add(record);\r\n        }\r\n    })\r\n\r\n    csvParser.on('error', (e) => {\r\n        console.log(e);\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;\r\n}\r\n\r\napi.visualization.cruiseTrajectoryRequest = async(payload) => {\r\n    const cruiseId = payload.id;\r\n    const decoder = new TextDecoder();\r\n    let trajectory = {lats: [], lons: []};\r\n\r\n    let response = await fetch(apiUrl + '/api/data/cruisetrajectory?' + `id=${payload.id}`, fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            trajectory.lats.push(parseFloat(record[1]));\r\n            trajectory.lons.push(parseFloat(record[2]));\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return trajectory;\r\n}\r\n\r\napi.visualization.cruiseList = async() => {\r\n    let response = await fetch(apiUrl + '/api/data/cruiselist', fetchOptions);\r\n\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;   \r\n}\r\n\r\nexport default api;","import { put, takeLatest, all, call, delay } from 'redux-saga/effects';\r\n// import { eventChannel } from 'redux-saga';\r\nimport Cookies from 'js-cookie';\r\n// import worker from '../worker';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    \r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){    \r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    \r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    \r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(action){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    \r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    \r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    \r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload);\r\n    yield delay(50);\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'));\r\n    yield delay(70);\r\n    \r\n    // Result will be an object containing variable values and describing date shape\r\n    if(!result){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen(\"Request failed\"));\r\n    } else {\r\n        if(result.variableValues.length > 0){\r\n            result.finalize();\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            // yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            yield put(visualizationActions.triggerShowCharts());\r\n            yield put(visualizationActions.addChart({subType: action.payload.subType, data:result}));\r\n           \r\n        } else {\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges. Try selecting a different date or depth range.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* cruiseTrajectoryRequest(action) {\r\n    yield put(visualizationActions.cruiseTrajectoryRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Cruise Data'));\r\n    let result = yield call(api.visualization.cruiseTrajectoryRequest, action.payload);\r\n\r\n    if(!result || !result.lats.length){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(interfaceActions.snackbarOpen(`Unable to Fetch Cruise Data`));\r\n    } else {\r\n        yield put(visualizationActions.cruiseTrajectoryRequestSuccess(result));\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n    }\r\n}\r\n\r\nfunction* cruiseListRequest() {\r\n    yield put(visualizationActions.cruiseListRequestProcessing());\r\n    let cruiseList = yield call(api.visualization.cruiseList);\r\n\r\n    if(!cruiseList) {\r\n        yield put(visualizationActions.cruiseListRequestFailure());\r\n    } else{\r\n        yield put(visualizationActions.cruiseListRequestSuccess(cruiseList));\r\n    }\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\nfunction* watchCruiseTrajectoryRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND, cruiseTrajectoryRequest);\r\n}\r\n\r\nfunction* watchCruiseListRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_LIST_REQUEST_SEND, cruiseListRequest);\r\n}\r\n\r\n// function createWorkerChannel(worker) {\r\n//     return eventChannel(emit => {\r\n//         worker.onmessage = message => {\r\n//             emit(message);\r\n//         }\r\n\r\n//         const unsubscribe = () => {\r\n//             worker.teminate();\r\n//         }\r\n      \r\n//         return unsubscribe;\r\n//     })\r\n// }\r\n\r\n// function* watchWorkerChannel(){\r\n//     const workerChannel = yield call(createWorkerChannel, worker);\r\n\r\n//     while (true) {\r\n//         const message = yield take(workerChannel);\r\n//         yield put(message.data.type, message.data.payload);\r\n//         //   yield put({ type: INCOMING_PONG_PAYLOAD, payload })\r\n//         //   yield fork(pong, socket)\r\n//       }\r\n// }\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        watchCruiseTrajectoryRequest(),\r\n        watchCruiseListRequest()\r\n        // watchWorkerChannel(),\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","const colors = {\r\n    orange: '#FF8000',\r\n    // orange: '#ffa245',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9',\r\n    errorYellow: '#ffe336'\r\n}\r\n\r\nexport default colors;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    },\r\n    warningCaption: {\r\n        color: colors.orange,\r\n        fontSize: '11px',\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    wrapper: {\r\n        marginTop: theme.spacing(16)\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            \r\n            <div className={classes.wrapper}>\r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Key\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                        <Typography variant='caption' className={classes.warningCaption}>\r\n                            This API key is a unique identifier, and should not be shared.\r\n                        </Typography>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"body2\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n                </Paper>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires a user account. Please <Link component={RouterLink} to={{pathname: '/apikeymanagement'}} onClick={() => props.showLoginDialog()}> log in\r\n            </Link> or <Link component={RouterLink} to={{pathname: '/register'}}> register\r\n            </Link>.\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen, toggleShowHelp } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    appBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    toolBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    navWrapper: {\r\n        position: 'fixed',\r\n        width: '100vw',\r\n        top: '0px',\r\n        backgroundColor: 'transparent',\r\n        zIndex: 50,\r\n        paddingTop: '10px',\r\n        paddingLeft: '20px',\r\n        textAlign: 'left',\r\n        boxSizing: 'border-box'\r\n    },\r\n\r\n    navLink: {\r\n        cursor: 'pointer',\r\n        marginRight: 20,\r\n        color: 'white',\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        },\r\n        fontSize: '13px',\r\n        fontWeight: 100,\r\n        display: 'inline-block'     \r\n    },\r\n\r\n    rightNavLink: {\r\n        float: 'right'\r\n    },\r\n\r\n    rightLinkWrapper: {\r\n        display:'inline-block',\r\n        textAlign: 'right'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen,\r\n    toggleShowHelp\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    handleNavigate = (route) => {\r\n        this.props.restoreInterfaceDefaults()\r\n        this.props.history.push(route);\r\n    }\r\n\r\n    handleOutsideNavigate = (url) => {\r\n        window.open(url, '_blank')\r\n    }\r\n\r\n    render(){\r\n        const { classes, history, showHelp } = this.props;\r\n        const { pathname } = history.location;\r\n\r\n        return (\r\n            <div className={classes.navWrapper}>\r\n                <Typography variant='caption' onClick={() => this.handleNavigate('/')} className={classes.navLink}>Home</Typography>\r\n                <Typography variant='caption' onClick={() => this.handleNavigate('/catalog')} className={classes.navLink}>Catalog</Typography>\r\n                {pathname !== '/visualization' && <Typography variant='caption' onClick={() => this.handleNavigate('/apikeymanagement')} className={classes.navLink}>API Keys</Typography>}\r\n                {pathname !== '/visualization' && <Typography variant='caption' onClick={() => this.handleNavigate('/visualization')} className={classes.navLink}>Visualization</Typography>}\r\n                {this.props.user && <Typography variant='caption' onClick={() => this.handleLogOut()} className={`${classes.navLink} ${pathname === '/visualization' ? '' : classes.rightNavLink}`}>Log Out</Typography>}\r\n                {/* <Typography variant='caption' onClick={this.props.toggleShowHelp} className={classes.navLink}>{showHelp ? 'Hide Help' : 'Help(beta) '}</Typography> */}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' onClick={() => this.props.showLoginDialog()} className={`${classes.navLink} ${classes.rightNavLink}`}>Log In</Typography>}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' onClick={() => this.handleNavigate('/register')} className={`${classes.navLink} ${classes.rightNavLink}`}>Register</Typography>}\r\n            </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user ? <ApiKeyManagement/> : <LoginRequiredPrompt/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'Variable'],\r\n    ['Spatial Resolution', 'Spatial_Resolution'],\r\n    ['Temporal Resolution', 'Temporal_Resolution'],\r\n    ['Unit', 'Unit'],\r\n    ['Process Level', 'Process_Level'],\r\n    ['Study Domain', 'Study_Domain'],\r\n    ['SQL Table Name', 'Table_Name']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        margin: '-10px auto 0px auto',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(2),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing(2),\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        width: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={8} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={imageSource + 'viz_sample.png'} alt=\"Sample Visualization\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.Dataset_Description}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.Data_Source}\r\n                        </Typography> <br></br>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.Distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable} size='small'>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = theme => ({\r\n  tooltip: {\r\n      color: theme.palette.secondary.main,\r\n      opacity: 1\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst ConnectedTooltip = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    if(!showHelp) {\r\n        return (\r\n            <React.Fragment>\r\n                {props.children}\r\n            </React.Fragment>\r\n        )}\r\n    else {\r\n        return (\r\n            <Tooltip \r\n                placement={props.placement} \r\n                open={showHelp} \r\n                title={props.title} \r\n                className={classes.tooltip}\r\n                classes={{\r\n                    popper: classes.tooltip\r\n                }}\r\n            >\r\n                {props.children}\r\n            </Tooltip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(ConnectedTooltip));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst detailCellRendererParams = {\r\n  template:\r\n    '<div style=\"height: 100%; box-sizing: border-box\" class=\"testClass\">' +\r\n      '  <div style=\"height: 10%;\">Call Details</div>' +\r\n      '  <div ref=\"eDetailGrid\" style=\"height: 90%;\"></div>' +\r\n    \"</div>\"\r\n}\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"Long_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"Variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"Table_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"Dataset_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"Make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"Sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"Study_Domain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"Process_Level\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"Spatial_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"Temporal_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"Unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'Keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '60vh', \r\n    width: '90%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '60px 5vw',\r\n    padding: '30px'\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n        <Paper elevation={12} className={classes.gridPaper}>\r\n          <ConnectedTooltip placement title='Enter one or more search terms.' placement='top'>\r\n            <TextField\r\n              className={classes.gridSearch}\r\n              autoFocus={true}\r\n              margin=\"normal\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              variant='outlined'\r\n              name='filterText'\r\n              value={this.state.filterText}\r\n              onChange={this.handleChange}\r\n              label=\"Variable Search\"\r\n              InputLabelProps={{\r\n                  shrink: true,\r\n              }}\r\n            />\r\n          </ConnectedTooltip>\r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              suppressDragLeaveHidesColumns= {true}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n              detailCellRendererParams={detailCellRendererParams}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog) return <AGGridWrapper catalog={this.props.catalog}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n        else if(this.props.catalogRequestState === states.failed) return <p>Failed to get catalog. Have you tried turning it off and then on again?</p>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const validation = {\r\n    depth: {\r\n        depthOneIsLower: 'Start cannot be larger than end',\r\n        depthOneOutOfBounds: 'Start must be smaller than $',\r\n        depthTwoOutOfBounds: 'End must be larger than $',\r\n        negative: 'Depth cannot be negative'\r\n    },\r\n\r\n    date: {\r\n        dateOneIsLater: 'Start cannot be later than end',\r\n        dateOneOutOfBounds: 'Start must be before $',\r\n        dateTwoOutOfBounds: 'End must be after $'\r\n    },\r\n\r\n    lat: {\r\n        latOneIsHigher: 'Start cannot be larger than end.',\r\n        latOneOutOfBounds: 'Start must be less than $',\r\n        latTwoOutOfBounds: 'End must be greater than $'\r\n    },\r\n\r\n    lon: {\r\n        lonOneIsHigher: 'Start cannot be larger than end.',\r\n        lonOneOutOfBounds: 'Start must be less than $',\r\n        lonTwoOutOfBounds: 'End must be greater than $'\r\n    },\r\n\r\n    type: {\r\n        dataIsIrregular: '$ is not available for sparse data',\r\n        dateRangeRequired: '$ requires a range of dates',\r\n        depthRangeRequired: '$ requires a range of depths',\r\n        surfaceOnlyDataset: '$ contains only surface data',\r\n        irregularOnly: 'Sparse map is only available for sparse data',\r\n        dataSizeTooLarge: 'Data set is too large for this visualization type.'\r\n    },\r\n\r\n    generic: {\r\n        invalid: 'Invalid input',\r\n        dataSizeWarning: 'Wait time and application performance may be poor due to size of data.',\r\n        dataSizePrevent: 'Data set is too large. Please reduce date range or area size.',\r\n        variableMissing: 'Please select a variable',\r\n        vizTypeMissing: 'Please select a visualization type'\r\n    }\r\n}\r\n\r\nexport default validation;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    const { data } = props;\r\n\r\n    if(!data) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{data.Long_Name}</DialogTitle>\r\n            <DialogContent>\r\n                { data.Comment &&\r\n                    <DialogContentText>\r\n                        {data.Comment}\r\n                    </DialogContentText>\r\n                }\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Dataset</TableCell>\r\n                                <TableCell title={data.Dataset_Name}>{data.Dataset_Name.length > 25 ? data.Dataset_Name.slice(0,23) + '...' : data.Dataset_Name}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Source</TableCell>\r\n                                <TableCell title={data.Data_Source}>{data.Data_Source > 25 ? data.Data_Source.slice(0,23) + '...' : data.Data_Source}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Distributor</TableCell>\r\n                                <TableCell title={data.Distributor}>{data.Distributor.length > 25 ? data.Distributor.slice(0,23) + '...' : data.Distributor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{data.Sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{data.Spatial_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{data.Temporal_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{data.Time_Min ? data.Time_Min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{data.Time_Max ? data.Time_Max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lat_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lat_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lon_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{data.Depth_Min ? `${data.Depth_Min}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{data.Depth_Max ? `${data.Depth_Max}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            {data.Variable_Min &&\r\n                                <TableRow>\r\n                                    <TableCell>Minimum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Min}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Max &&\r\n                                <TableRow>\r\n                                    <TableCell>Maximum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Max}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Mean && \r\n                                <TableRow>\r\n                                    <TableCell>Mean Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Mean}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Std &&\r\n                                <TableRow>\r\n                                    <TableCell>Standard Deviation({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Std}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);\r\n\r\n// Variable_Max: \"4.999\"\r\n// Variable_Mean: \"-0.0000008547\"\r\n// Variable_Min: \"-4.9956\"\r\n// Variable_Std: \"0.1428013424\"","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nconst mapTemporalResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [temporalResolutions.threeMinutes] : 1,\r\n        [temporalResolutions.sixHourly] : 1,\r\n        [temporalResolutions.daily] : 1,\r\n        [temporalResolutions.weekly] : 7,\r\n        [temporalResolutions.monthly] : 30,\r\n        [temporalResolutions.annual] : 365,\r\n        [temporalResolutions.irregular] : null,\r\n        [temporalResolutions.monthlyClimatology]: 30,\r\n        [temporalResolutions.threeDay]: 3,\r\n        [temporalResolutions.eightDayRunning]: 8,\r\n        [temporalResolutions.eightDays]: 8\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapTemporalResolutionToNumber;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { ArrowDropDown, LibraryBooks } from '@material-ui/icons';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend } from '../Redux/actions/visualization';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    dataRetrievalFormPaper: {\r\n        width: '1000px',\r\n        height: '260px',\r\n        padding: theme.spacing(2.5),\r\n        position:'fixed',\r\n        top: '10px',\r\n        left: '50%',\r\n        marginLeft: '-600px',\r\n        zIndex: 2,\r\n        paddingTop: theme.spacing(1.5),\r\n    },\r\n\r\n    dataRetrievalFormField: {\r\n        padding:`0px ${theme.spacing(1)}`\r\n    },\r\n\r\n    retrieveDataButton: {\r\n        margin:'10px auto'\r\n    },\r\n\r\n    variableSelect: {\r\n        margin: '0 30px 20px 30px'\r\n    },\r\n\r\n    visualizationSpeedDial: {\r\n        position: 'relative',\r\n        top: '5px',\r\n        left: '30px'\r\n    },\r\n\r\n    visualizeButton: {\r\n        borderRadius:'10%',\r\n        width: '100px',\r\n        height:'40px',\r\n        margin: 'auto 0',\r\n        backgroundColor: theme.palette\r\n    },\r\n\r\n    visualizeButtonText: {\r\n        dominantBaseline: \"middle\",\r\n        textAnchor: \"middle\"\r\n    },\r\n\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    datePickerGridSection: {\r\n        paddingLeft: '40px !important',\r\n        paddingRight: '40px !important'\r\n    },\r\n\r\n    shortenHeight: {\r\n        height: '60px'\r\n    },\r\n\r\n    vizSelect: {\r\n        minWidth: 120\r\n    },\r\n\r\n    gridItem: {\r\n        height: '48px'\r\n    },\r\n\r\n    generalMessage: {\r\n        textAlign: 'left'\r\n    },\r\n\r\n    vizTypeSelectFormControl: {\r\n        width: 150\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend\r\n}\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nconst reactWindowListRef = React.createRef();\r\nclass MenuList extends Component {\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if(!(this.props.children && this.props.children.length)) return;\r\n        let index = this.props.children.findIndex(child => child.props && child.props.isFocused);\r\n        reactWindowListRef.current.scrollToItem(index);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <ReactWindowList\r\n                style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length === 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <ArrowDropDown />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nclass DataRetrievalForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('Variable');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            visualizationSpeedDialOpen: false,\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.Variable,\r\n            label: item.Variable === item.Long_Name ? (item.Variable.length > 48 ? item.Variable.slice(0,45) + '...' : item.Variable) : (item.Variable.length > 23 ? item.Variable.slice(0,23) : item.Variable) + ' : ' + (item.Long_Name.length > 38 ? item.Long_Name.slice(0,35) + '...' : item.Long_Name),\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Histogram');\r\n        return '';\r\n    }\r\n\r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Depth Profile');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = () => {\r\n        if(this.estimateDataSize() > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = () => {\r\n        if(this.estimateDataSize() > 50000000) return validation.generic.dataSizePrevent;\r\n        return ''\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartDate(),\r\n                this.checkEndDate(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(),\r\n                this.checkGeneralPrevent()\r\n            ];\r\n        } else validations = Array(17).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startDateMessage,\r\n            endDateMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage\r\n        ] = validations;\r\n\r\n        const parametersAreInvalid = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage\r\n        ].some(message => message.length);\r\n\r\n        return (\r\n            <div className={this.props.showUI ? '' : classes.displayNone} id='drf'>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n                <Paper className={classes.dataRetrievalFormPaper}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={11} className={classes.shortenHeight}>\r\n                            <Select\r\n                                isLoading = {catalogRequestState === states.inProgress}\r\n                                components={{\r\n                                    IndicatorSeparator:'',\r\n                                    DropdownIndicator,\r\n                                    Option,\r\n                                    MenuList,\r\n                                    SingleValue,\r\n                                }}\r\n                                isClearable\r\n                                onInputChange={this.onAutoSuggestChange}\r\n                                filterOption={null}\r\n                                className={classes.variableSelect}\r\n                                autoFocus\r\n                                escapeClearsValue\r\n                                name=\"fields\"\r\n                                label=\"Variables\"\r\n                                options={options}\r\n                                onChange={this.props.updateFields}\r\n                                value={fields}\r\n                                placeholder=\"Variable Search\"\r\n                                styles={{\r\n                                    menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                                    input: provided => ({...provided,\r\n                                        color: 'white',\r\n                                        fontFamily: '\"Lato\", sans-serif'\r\n                                    }),\r\n\r\n                                    control: provided => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        border: '1px solid #333333',\r\n                                        '&:hover': { borderColor: 'white' },\r\n                                        '&:focus-within': { borderColor: colors.orange },\r\n                                    }),\r\n\r\n                                    placeholder: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        fontSize: '14px'\r\n                                    }),\r\n\r\n                                    noOptionsMessage: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        backgroundColor: colors.backgroundGray\r\n                                    }),\r\n\r\n                                    option: (provided, { data, isFocused }) => {\r\n                                        return ({...provided,\r\n                                        backgroundColor: isFocused ? '#383838' : '#424242',\r\n                                        color: data.data.Sensor === 'Satellite' ? '#1acf02' : data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        '&:hover': { backgroundColor: '#383838' },\r\n                                        ':active': { backgroundColor: '#383838' },\r\n                                        '&:after': { \r\n                                            content: data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            float: 'left'\r\n                                        },\r\n                                    })},\r\n\r\n                                    singleValue: (provided, state) => ({...provided,\r\n                                        fontFamily: state.data.data.Sensor === 'Satellite' ? 'Font Awesome 5 Free': '\"Lato\", sans-serif',\r\n                                        color: state.data.data.Sensor === 'Satellite' ? '#1acf02' : state.data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        paddingRight: '20px',\r\n                                        '&:after': { \r\n                                            content: state.data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            fontSize: '18px',\r\n                                            position: 'relative',\r\n                                            left: '8px',\r\n                                            top: '3px'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n                                    colors: {\r\n                                    ...theme.colors,\r\n                                    // Background color of hovered options\r\n                                    primary25: '#e0e0e0',\r\n                                    primary: '#212121',\r\n                                    },\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={1}>\r\n                            <IconButton\r\n                                disabled={!fields}\r\n                                onClick={this.handleTableStatsDialogOpen}\r\n                            >\r\n                                <LibraryBooks/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel htmlFor=\"depth1-input\" >Start Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth1-input\"\r\n                                        value={depth1}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth1-error\"\r\n                                        labelWidth={105}\r\n                                        name='depth1'\r\n                                    />\r\n                                    <FormHelperText id=\"depth1-error\">{startDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"depth2-input\" >End Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth2-input\"\r\n                                        value={depth2}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth2-error\"\r\n                                        labelWidth={95}\r\n                                        name='depth2'\r\n                                    />\r\n                                    <FormHelperText id=\"depth2-error\">{endDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat1-input\" >{'Start Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat1-input\"\r\n                                        value={lat1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lat1'\r\n                                    />\r\n                                    <FormHelperText id=\"lat1-error\">{startLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat2-input\" >{'End Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat2-input\"\r\n                                        value={lat2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lat2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lat2'\r\n                                    />\r\n                                    <FormHelperText id=\"lat2-error\">{endLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon1-input\" >{'Start Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon1-input\"\r\n                                        value={lon1}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lon1'\r\n                                    />\r\n                                    <FormHelperText id=\"lon1-error\">{startLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon2-input\" >{'End Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon2-input\"\r\n                                        value={lon2}\r\n                                        onChange={this.props.handleLatLonChange}\r\n                                        aria-describedby=\"lon2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lon2'\r\n                                    />\r\n                                    <FormHelperText id=\"lon2-error\">{endLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={2}>\r\n                                <FormControl variant='outlined' className={classes.vizTypeSelectFormControl}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        labelWidth={35}\r\n                                        value={selectedVizType}\r\n                                        variant='outlined'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'outlined'\r\n                                        }}\r\n                                        >\r\n                                        <MenuItem disabled={Boolean(heatmapMessage)} value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>\r\n                                        <MenuItem disabled={Boolean(contourMessage)} value={vizSubTypes.contourMap}>Contour</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sectionMapMessage)} value={vizSubTypes.sectionMap}>Section Map</MenuItem>\r\n                                        <MenuItem disabled={Boolean(histogramMessage)} value={vizSubTypes.histogram}>Histogram</MenuItem>                                    \r\n                                        <MenuItem disabled={Boolean(timeSeriesMessage)} value={vizSubTypes.timeSeries}>Time Series</MenuItem>\r\n                                        <MenuItem disabled={Boolean(depthProfileMessage)} value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sparseMapMessage)} value={vizSubTypes.sparse}>Sparse Map</MenuItem>\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2}>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={() => this.props.onVisualize()}\r\n                                    disabled={!selectedVizType || parametersAreInvalid || !fields}\r\n                                >\r\n                                    Visualize\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <Typography variant='caption' color='error' className={classes.generalMessage}>\r\n                                    {generalPreventMessage || generalWarnMessage}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataRetrievalForm));","const utcDateStringToLocal = (utcString) => {\r\n    let date = new Date(utcString);\r\n    let utcYear = date.getUTCFullYear();\r\n    let utcMonth = date.getUTCMonth();\r\n    let utcDate = date.getUTCDate();\r\n\r\n    let newDate = new Date();\r\n    newDate.setFullYear(utcYear, utcMonth, utcDate);\r\n    return newDate;\r\n}\r\n\r\nexport default utcDateStringToLocal;","\r\nconst darwinDepths = [\r\n    5,\r\n    15,\r\n    25,\r\n    35,\r\n    45,\r\n    55,\r\n    65,\r\n    75.005,\r\n    85.025,\r\n    95.095,\r\n    105.31,\r\n    115.87,\r\n    127.15,\r\n    139.74,\r\n    154.47,\r\n    172.4,\r\n    194.735,\r\n    222.71,\r\n    257.47,\r\n    299.93,\r\n    350.68,\r\n    409.93,\r\n    477.47,\r\n    552.71,\r\n    634.735,\r\n    722.4,\r\n    814.47,\r\n    909.74,\r\n    1007.155,\r\n    1105.905,\r\n    1205.535,\r\n    1306.205,\r\n    1409.15,\r\n    1517.095,\r\n    1634.175,\r\n    1765.135,\r\n    1914.15,\r\n    2084.035,\r\n    2276.225,\r\n    2491.25,\r\n    2729.25,\r\n    2990.25,\r\n    3274.25,\r\n    3581.25,\r\n    3911.25,\r\n    4264.25,\r\n    4640.25,\r\n    5039.25,\r\n    5461.25,\r\n    5906.25\r\n]\r\n\r\nconst piscesDepths = [\r\n    0.494024991989,\r\n    1.54137504101,\r\n    2.64566898346,\r\n    3.81949496269,\r\n    5.07822418213,\r\n    6.44061422348,\r\n    7.92956018448,\r\n    9.5729970932,\r\n    11.404999733,\r\n    13.4671401978,\r\n    15.8100700378,\r\n    18.4955596924,\r\n    21.5988197327,\r\n    25.2114105225,\r\n    29.4447307587,\r\n    34.4341506958,\r\n    40.3440513611,\r\n    47.3736915588,\r\n    55.764289856,\r\n    65.8072662354,\r\n    77.8538513184,\r\n    92.3260726929,\r\n    109.729301453,\r\n    130.666000366,\r\n    155.850692749,\r\n    186.125595093,\r\n    222.475204468,\r\n    266.040313721,\r\n    318.127410889,\r\n    380.213012695,\r\n    453.937713623,\r\n    541.088928223,\r\n    643.566772461,\r\n    763.333129883,\r\n    902.339294434,\r\n    1062.43994141,\r\n    1245.29101562,\r\n    1452.25097656,\r\n    1684.28405762,\r\n    1941.89294434,\r\n    2225.07788086,\r\n    2533.3359375,\r\n    2865.70288086,\r\n    3220.82006836,\r\n    3597.03198242,\r\n    3992.48388672,\r\n    4405.22412109,\r\n    4833.29101562,\r\n    5274.78417969,\r\n    5727.91699219\r\n]\r\n\r\nconst _piscesTables = [\r\n    'tblPisces_NRT',\r\n    'tblPisces_NRT_Calendar'\r\n]\r\n\r\nconst _darwinTable = [\r\n    'tblDarwin_Chl_Climatology',\r\n    'tblDarwin_Ecosystem',\r\n    'tblDarwin_Nutrient',\r\n    'tblDarwin_Nutrient_Climatology',\r\n    'tblDarwin_Ocean_Color',\r\n    'tblDarwin_Phytoplankton',\r\n    'tblDarwin_Plankton_Climatology'\r\n]\r\n\r\nconst piscesTable = new Set(_piscesTables);\r\nconst darwinTable = new Set(_darwinTable);\r\n\r\nexport default (field, depth1, depth2) => {\r\n    const { Table_Name: table } = field.data;\r\n    var count = 0;\r\n\r\n    if(piscesTable.has(table)) {\r\n        for(let i = 0; i < piscesDepths.length; i++){\r\n            if(piscesDepths[i] > depth2) break;\r\n            if(piscesDepths[i] > depth1) count ++; \r\n        }\r\n    } else if (darwinTable.has(table)) {\r\n        for(let i = 0; i < darwinDepths.length; i++){\r\n            if(darwinDepths[i] > depth2) break;\r\n            if(darwinDepths[i] > depth1) count ++; \r\n        }\r\n    } else {}\r\n    return count;\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { LibraryBooks, ArrowRight, ChevronLeft, ChevronRight, InsertChartOutlined, Language, Delete } from '@material-ui/icons';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend, clearCharts } from '../Redux/actions/visualization';\r\n\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport depthCounter from '../Utility/depthCounter';\r\n\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst navDrawerWidth = 260;\r\n\r\nconst styles = theme => ({\r\n  drawer: {\r\n    width: navDrawerWidth,\r\n    top: 32,\r\n    bottom: 'auto',\r\n    overflow: 'visible'\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: navDrawerWidth,\r\n    height: '540px',\r\n    top: 'calc(50% - 270px)',\r\n    borderRadius: '0 4px 4px 0',\r\n    boxShadow: '2px 2px  2px 2px #242424',\r\n    border: 'none',\r\n    overflow: 'visible',\r\n    backgroundColor: '#424242'\r\n  },\r\n\r\n  openPanelChevron: {\r\n    position: 'fixed',\r\n    left: '5px',\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  closePanelChevron: {\r\n    position: 'fixed',\r\n    left: navDrawerWidth + 5,\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  groupedButtons: {\r\n      width: '50%',\r\n      border: '1px solid #313131',\r\n      borderRadius: 0,\r\n      backgroundColor: '#3c3c3c'\r\n  },\r\n\r\n  controlPanelForm: {\r\n      marginTop: theme.spacing(1)\r\n  },\r\n\r\n  tableStatsButton: {\r\n      borderRadius: 0,\r\n      paddingTop: '11px',\r\n      backgroundColor: '#424242'\r\n  },\r\n\r\n    formGridItem: {\r\n        borderLeft: '1px solid #313131',\r\n        backgroundColor: '#424242'\r\n    },\r\n\r\n  vizTypeSelectFormControl: {\r\n      width: '100%',\r\n      '&:disabled': {\r\n        backgroundColor: 'transparent'\r\n    }\r\n  },\r\n\r\n  depressed: {\r\n      boxShadow: 'inset 1px 1px 5px #1c1c1c'\r\n  },\r\n\r\n  padLeft: {\r\n      padding: '6px 0 2px 7px'\r\n  },\r\n\r\n  visualizeButton: {\r\n      height: '56px',\r\n      borderRadius: 0,\r\n      backgroundColor: '#424242',\r\n      color: theme.palette.primary.main,\r\n      fontVariant: 'normal',\r\n      '&:disabled': {\r\n        backgroundColor: 'transparent'\r\n    },\r\n      '&:hover': {backgroundColor: '#874400'}\r\n  },\r\n\r\n  helperText: {\r\n    color: 'yellow'\r\n  },\r\n\r\n  vizButtonTooltip: {\r\n    color: 'yellow'\r\n  },\r\n\r\n  datePickerInputAdornment: {\r\n      padding: 0\r\n  },\r\n\r\n  clearChartsButton: {\r\n      borderRadius: 0,\r\n      backgroundColor: '#3c3c3c'\r\n  },\r\n\r\n  datePicker: {\r\n      width: '100%'\r\n  }\r\n\r\n});\r\n\r\nconst overrideDisabledStyle = {\r\n    backgroundColor: 'transparent'\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend,\r\n    clearCharts\r\n}\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nconst reactWindowListRef = React.createRef();\r\nclass MenuList extends Component {\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if(!(this.props.children && this.props.children.length)) return;\r\n        let index = this.props.children.findIndex(child => child.props && child.props.isFocused);\r\n        reactWindowListRef.current.scrollToItem(index);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n\r\n        return (\r\n            <ReactWindowList\r\n                height={(options.length == 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n    <components.DropdownIndicator {...props}>\r\n        <ArrowRight/>\r\n    </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}></components.SingleValue>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nconst formatOptionLabel = (option, meta) => {\r\n    return meta.context === 'value' ? option.value : option.label;\r\n}\r\n\r\nclass VizControlPanel extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        search.addIndex('Table_Name');\r\n        search.addIndex('Dataset_Name');\r\n        search.addIndex('Study_Domain');\r\n        search.addIndex('Spatial_Resolution');\r\n        search.addIndex('Temporal_Resolution');\r\n\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: '',\r\n            showControlPanel: true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search});\r\n        }\r\n    }\r\n\r\n    handleOpenControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: true})\r\n    }\r\n\r\n    handleCloseControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: false})\r\n    }      \r\n    \r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        // var options = {};\r\n\r\n        // items.forEach(item => {\r\n        //     if(!options[item.Dataset_Name]){\r\n        //         options[item.Dataset_Name] = {\r\n        //             label: item.Dataset_Name,\r\n        //             options: []\r\n        //         }\r\n        //     }\r\n\r\n        //     options[item.Dataset_Name].options.push({\r\n        //         value: item.Variable,\r\n        //         label: item.Long_Name.length < 80 ? item.Long_Name : item.Long_Name.slice(0,78) + '...',\r\n        //         data: item\r\n        //     })\r\n        // });\r\n\r\n        // return Object.values(options) || [];\r\n        return items.map(item => ({\r\n            value: item.Variable,\r\n            label: item.Long_Name.length < 80 ? item.Long_Name : item.Long_Name.slice(0,78) + '...',\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, depth1, depth2, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const depthCount = depthCounter(fields, depth1, depth2) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * depthCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkDatesValid = () => {\r\n        if(isNaN(new Date(this.props.dt1)).valueOf()) return 'Start date is invalid';\r\n        if(isNaN(new Date(this.props.dt2)).valueOf()) return 'End date is invalid';\r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 > this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        return '';\r\n    }\r\n    \r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = (dataSize) => {\r\n        if(!this.props.selectedVizType) return '';\r\n        if(dataSize > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = (dataSize) => {\r\n        if(this.props.selectedVizType !== vizSubTypes.histogram && this.props.selectedVizType !== vizSubTypes.heatmap && dataSize > 1200000){\r\n            return validation.generic.dataSizePrevent;\r\n        }\r\n        if(dataSize > 6000000) return validation.generic.dataSizePrevent;\r\n        if(!this.props.fields) return validation.generic.variableMissing;\r\n        if(!this.props.selectedVizType) return validation.generic.vizTypeMissing;\r\n        return ''}\r\n\r\n    handleShowChartsAndResize = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 30);\r\n        this.props.handleShowCharts();     \r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField, showControlPanel } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly,\r\n            showCharts,\r\n            handleShowGlobe,\r\n            handleChange,\r\n            handleLatLonChange\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        const dataSize = this.estimateDataSize();\r\n\r\n        var catalogMinDate = fields && utcDateStringToLocal(fields.data.Time_Min).setHours(0,0,0,0);\r\n        var catalogMaxDate = fields && utcDateStringToLocal(fields.data.Time_Max).setHours(0,0,0,0);\r\n        var zeroedDT1 = dt1.setHours(0,0,0,0);\r\n        var zeroedDT2 = dt2.setHours(0,0,0,0);\r\n        \r\n        var minDate = fields ? catalogMinDate : '';\r\n\r\n        let minDateMessage = fields && zeroedDT2 < catalogMinDate ? 'End cannot be before dataset start date' : '';\r\n        var maxDateMessage;\r\n        var maxDate;\r\n\r\n        if(!fields){\r\n            maxDate = zeroedDT2;\r\n            maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after end' : '';\r\n        } else {\r\n            \r\n\r\n            if(catalogMaxDate < zeroedDT2){\r\n                maxDate = catalogMaxDate;\r\n                maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after dataset end date' : '';\r\n            } else {\r\n                maxDate = zeroedDT2;\r\n                maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after end' : '';\r\n            }\r\n        }\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(dataSize),\r\n                this.checkGeneralPrevent(dataSize),\r\n                this.checkDatesValid()\r\n            ];\r\n        } else validations = Array(15).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage,\r\n            datesValidMessage\r\n        ] = validations;\r\n\r\n        const checkDisableVisualizeList = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage,\r\n            minDateMessage,\r\n            maxDateMessage,\r\n            datesValidMessage\r\n        ];\r\n\r\n        const checkDisableVisualize = () => {\r\n            for(let i = 0; i < checkDisableVisualizeList.length; i++){\r\n                if(checkDisableVisualizeList[i]) return checkDisableVisualizeList[i];\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        const disableVisualizeMessage = checkDisableVisualize();\r\n\r\n        const visualizeButtonTooltip = disableVisualizeMessage ? disableVisualizeMessage : generalWarnMessage ? generalWarnMessage : '';\r\n\r\n        return (\r\n            <div>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n\r\n                { showControlPanel ? \r\n\r\n                        <IconButton \r\n                            className={classes.closePanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleCloseControlPanel}>\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                :\r\n                    \r\n                        <IconButton \r\n                            className={classes.openPanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleOpenControlPanel}>\r\n                            <ChevronRight />\r\n                        </IconButton>\r\n                }\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={showControlPanel}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >\r\n                    <ButtonGroup>\r\n                        <Tooltip title='Show Globe' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${!showCharts && classes.depressed}`} \r\n                                onClick={handleShowGlobe}\r\n                                color='inherit'\r\n                            >\r\n                                <Language/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        \r\n                        <Tooltip title='Show Charts' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${showCharts && classes.depressed}`}\r\n                                onClick={this.handleShowChartsAndResize}\r\n                                color='inherit'\r\n                            >\r\n                                <InsertChartOutlined/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ButtonGroup>\r\n\r\n                    <Tooltip title='Clear Charts' placement='right'>\r\n                        <IconButton color='inherit' onClick={this.props.clearCharts} className={classes.clearChartsButton}>\r\n                            <Delete/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <form>\r\n                        <Grid container>\r\n                            <Grid item xs={10}>\r\n                                <ConnectedTooltip placement='top' title='Enter one or more search terms.'>\r\n                                    <Select\r\n                                        formatOptionLabel={formatOptionLabel}\r\n                                        handleTableStatsDialogOpen={this.handleTableStatsDialogOpen}\r\n                                        isLoading = {catalogRequestState === states.inProgress}\r\n                                        components={{\r\n                                            IndicatorSeparator:'',\r\n                                            DropdownIndicator,\r\n                                            Option,\r\n                                            MenuList,\r\n                                            SingleValue,\r\n                                        }}\r\n                                        onInputChange={this.onAutoSuggestChange}\r\n                                        filterOption={null}\r\n                                        className={classes.variableSelect}\r\n                                        isClearable\r\n                                        name=\"fields\"\r\n                                        label=\"Variables\"\r\n                                        options={options}\r\n                                        onChange={this.props.updateFields}\r\n                                        value={fields}\r\n                                        placeholder=\"Variable Search\"\r\n                                        styles={{\r\n                                            menu: provided => ({\r\n                                                ...provided, \r\n                                                zIndex: 1300, \r\n                                                top: '-8px',\r\n                                                left: navDrawerWidth,\r\n                                                width: '980px',\r\n                                                borderRadius: '4px',\r\n                                                boxShadow: '2px 2px  2px 2px #242424',\r\n                                                overflow: 'hidden',\r\n                                                backgroundColor: 'rgba(0,0,0,.5)',\r\n                                                backdropFilter: 'blur(5px)',\r\n                                            }),\r\n\r\n                                            valueContainer: provided => ({\r\n                                                ...provided,\r\n                                                padding: '0 0 0 6px',\r\n                                                fontWeight: 100\r\n                                            }),\r\n\r\n                                            input: provided => ({...provided,\r\n                                                color: 'white',\r\n                                                fontFamily: '\"Lato\", sans-serif'\r\n                                            }),\r\n\r\n                                            control: provided => ({...provided,\r\n                                                backgroundColor: '#424242',\r\n                                                border: 'none',\r\n                                                borderBottom: '1px solid #333333',\r\n                                                borderRadius: 0,\r\n                                                '&:hover': { borderColor: 'white' },\r\n                                                '&:focus-within': { borderColor: colors.orange },\r\n                                                height: '56px'\r\n                                            }),\r\n\r\n                                            placeholder: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                fontSize: '14px',\r\n                                                fontWeight: 300\r\n                                            }),\r\n\r\n                                            noOptionsMessage: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                backgroundColor: colors.backgroundGray\r\n                                            }),\r\n\r\n                                            option: (provided, { data, isFocused }) => {\r\n                                                return ({...provided,\r\n                                                    fontWeight: 400,\r\n                                                    fontSize: '16px',\r\n                                                    backgroundColor: 'transparent',\r\n                                                    color: isFocused ? colors.orange : 'white',\r\n                                                    // color: data.data.Sensor === 'Satellite' ? '#1acf02' : data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                                    '&:hover': { color: colors.orange },\r\n                                                    '&:active': { backgroundColor: 'rgba(0,0,0,.5)', color: colors.orange},\r\n                                                    '&:after': { \r\n                                                        content: data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                                        float: 'left'\r\n                                                    },\r\n                                            })},\r\n\r\n                                            singleValue: (provided, state) => ({...provided,\r\n                                                color: 'white',\r\n                                                fontWeight: 400\r\n                                            })\r\n                                        }}\r\n                                        theme={theme => ({\r\n                                            ...theme,\r\n                                            colors: {\r\n                                            ...theme.colors,\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                </ConnectedTooltip>\r\n                            </Grid>\r\n                            <Grid item xs={2} className={classes.tableStatsButton}>\r\n                                <IconButton \r\n                                    size='small' \r\n                                    onClick={this.handleTableStatsDialogOpen}                                     \r\n                                    disabled={!fields}\r\n                                >\r\n                                    <LibraryBooks/>\r\n                                </IconButton>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    maxDate={maxDate}\r\n                                    maxDateMessage={maxDateMessage}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={minDate}\r\n                                    minDateMessage={minDateMessage}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat1-input\"\r\n                                    error={Boolean(startLatMessage)}\r\n                                    label={\"Start Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat1}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startLatMessage}\r\n                                    name='lat1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat2-input\"\r\n                                    error={Boolean(endLatMessage)}\r\n                                    label={\"End Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat2}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endLatMessage}\r\n                                    name='lat2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon1-input\"\r\n                                    error={Boolean(startLonMessage)}\r\n                                    label={\"Start Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon1}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startLonMessage}\r\n                                    name='lon1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon2-input\"\r\n                                    error={Boolean(endLonMessage)}\r\n                                    label={\"End Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon2}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endLonMessage}\r\n                                    name='lon2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    disabled={!fields || surfaceOnly}\r\n                                    id=\"depth1-input\"\r\n                                    error={Boolean(startDepthMessage)}\r\n                                    label=\"Start Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth1}\r\n                                    onChange={handleChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startDepthMessage}\r\n                                    name='depth1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    disabled={!fields || surfaceOnly}\r\n                                    id=\"depth2-input\"\r\n                                    error={Boolean(endDepthMessage)}\r\n                                    label=\"End Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth2}\r\n                                    onChange={handleChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endDepthMessage}\r\n                                    name='depth2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <FormControl variant='filled' className={classes.vizTypeSelectFormControl} disabled={!fields}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        className={classes.vizTypeSelectFormControl}\r\n                                        style={overrideDisabledStyle}\r\n                                        value={selectedVizType}\r\n                                        variant='filled'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'filled'\r\n                                        }}\r\n                                        >\r\n                                        {!heatmapMessage && <MenuItem value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>}\r\n                                        {!contourMessage && <MenuItem value={vizSubTypes.contourMap}>Contour Heatmap</MenuItem>}\r\n                                        {!sectionMapMessage && <MenuItem value={vizSubTypes.sectionMap}>Section Map</MenuItem>}\r\n                                        {!sectionMapMessage && <MenuItem value={vizSubTypes.contourSectionMap}>Contour Section Map</MenuItem>}\r\n                                        {!histogramMessage && <MenuItem value={vizSubTypes.histogram}>Histogram</MenuItem>}                      \r\n                                        {!timeSeriesMessage && <MenuItem value={vizSubTypes.timeSeries}>Time Series</MenuItem>}\r\n                                        {!depthProfileMessage && <MenuItem value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>}\r\n                                        {!sparseMapMessage && <MenuItem value={vizSubTypes.sparse}>Sparse Map</MenuItem>}\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Tooltip placement='right' title={visualizeButtonTooltip} className={classes.vizButtonTooltip}>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        className={classes.visualizeButton}\r\n                                        variant='contained'\r\n                                        onClick={() => this.props.onVisualize()}\r\n                                        disabled={Boolean(disableVisualizeMessage) || !fields || !selectedVizType}\r\n                                        fullWidth\r\n                                    >\r\n                                        Visualize\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </form>                    \r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));","export default (infoObject) => {\r\n\r\n    let lonRange = infoObject.lonMax - infoObject.lonMin;\r\n\r\n    let sectionSize;\r\n    if(lonRange < 2){\r\n        sectionSize = (lonRange / 6).toFixed(2);\r\n    } else {\r\n        sectionSize = Math.floor(lonRange / 6);\r\n    }\r\n\r\n    let tickvals = Array.from(Array(5), (e, i) => Math.ceil(infoObject.lonMin + ((i + 1) * sectionSize)));\r\n    let ticktext = tickvals.map(e => e > 180 ? e - 360 : e);\r\n\r\n    return {\r\n        tickmode: 'array',\r\n        tickvals,\r\n        ticktext\r\n    }\r\n}","import months from '../Enums/months';\r\n\r\nexport default (dateString, hasHour, isMonthly) => isMonthly ? months[parseInt(dateString)] : hasHour ? dateString.slice(0,10) + ' ' + dateString.slice(11,16): dateString.slice(0,10);","import colors from '../Enums/colors';\r\n\r\nexport default {\r\n    layout: {\r\n        font: {color: '#ffffff'},\r\n        paper_bgcolor: colors.backgroundGray,\r\n        // plot_bgcolor: 'transparent'\r\n    },\r\n\r\n    config: {\r\n        displaylogo: false\r\n    },\r\n\r\n    annotations: (distributor, height) => (\r\n        [\r\n            {\r\n                text: `Source: ${distributor.length < 30 ? \r\n                    distributor : \r\n                    distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                font: {\r\n                    color: 'white',\r\n                    size: 10\r\n                },\r\n                xref: 'paper',\r\n                yref: 'paper',\r\n                yshift: height ? 0 - height + 160 : -290,\r\n                showarrow: false,\r\n            }\r\n        ]\r\n    )\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DateRange, Waves, CloudDownload, Palette, SwapVert, Gamepad, LineWeight, Rotate90DegreesCcw, Info } from '@material-ui/icons';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { ButtonGroup } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    popover: {\r\n        width: '470px',\r\n        height: '120px',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5)\r\n    },\r\n\r\n    iconButton: {\r\n        boxShadow: '0px 1px 1px 1px #242424',\r\n    },\r\n\r\n    colorForm: {\r\n        width: '100%'\r\n    },\r\n\r\n    lastIcon: {\r\n        borderTopRightRadius: '10%',\r\n        borderBottomRightRadius: '10%'\r\n    },\r\n\r\n    buttonGroup: {\r\n        display: 'block',\r\n        margin: '0px auto 8px auto',\r\n        maxWidth: '700px'\r\n    },\r\n\r\n    depressed: {\r\n        boxShadow: 'inset 1px 1px 5px #262626'\r\n    },\r\n\r\n    colorscaleMenu: {\r\n        maxHeight: '400px'\r\n    },\r\n})\r\n\r\nconst colorscaleOptions = [\r\n    'Default',\r\n    'Greys', \r\n    'YlGnBu', \r\n    'Greens', \r\n    'YlOrRd',\r\n    'Bluered',\r\n    'RdBu',\r\n    'Reds',\r\n    'Blues',\r\n    'Picnic',\r\n    'Rainbow',\r\n    'Portland',\r\n    'Jet',\r\n    'Hot',\r\n    'Blackbody',\r\n    'Earth',\r\n    'Electric',\r\n    'Viridis',\r\n    'Cividis'];\r\n\r\nfunction usePreviousSize(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction usePreviousColor(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction usePreviousOpacity(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nconst ChartControlPanel = (props) => {\r\n\r\n    const { \r\n        classes, \r\n        onToggleSplitByDate,\r\n        splitByDate,\r\n        onToggleSplitByDepth,\r\n        splitByDepth,\r\n        onToggleSplitBySpace,\r\n        splitBySpace,\r\n        switchOrientation,\r\n        orientation, \r\n        downloadCsv, \r\n        handleZValueConfirm,\r\n        zValues,\r\n        markerOptions,\r\n        handleMarkerOptionsConfirm,\r\n    } = props;\r\n\r\n    const [paletteAnchorElement, setPaletteAnchorElement] = useState(null);\r\n\r\n    let handleOpenPalette = (event) => {\r\n        setPaletteAnchorElement(event.currentTarget);\r\n    }\r\n\r\n    // Local version, not from props\r\n    let handlePaletteChoice = (option) => {\r\n        setPaletteAnchorElement(null);\r\n        props.handlePaletteChoice(option);\r\n    }\r\n\r\n    const [zScalePopoverAnchorElement, setZScalePopoverAnchorElement] = React.useState(null);\r\n    const [localZMin, setLocalZMin] = React.useState(zValues && zValues[0]);\r\n    const [localZMax, setLocalZMax] = React.useState(zValues && zValues[1]);\r\n\r\n    const zScalePopoverOpen = Boolean(zScalePopoverAnchorElement);\r\n    const zScalePopoverID = zScalePopoverOpen ? 'zscale-popover' : undefined;\r\n\r\n    const handleZScalePopoverClose = () => {\r\n        setZScalePopoverAnchorElement(null);\r\n    };\r\n    \r\n    const checkLocalZMin = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMin)) return 'Invalid value';\r\n    }\r\n\r\n    const checkLocalZMax = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMax)) return 'Invalid value';\r\n    }\r\n\r\n    const zScaleValidations = [\r\n        checkLocalZMin(),\r\n        checkLocalZMax()\r\n    ];\r\n\r\n    const [\r\n        zMinMessage,\r\n        zMaxMessage\r\n    ] = zScaleValidations;\r\n\r\n    const handleLocalZConfirm = () => {\r\n        handleZValueConfirm([localZMin, localZMax]);\r\n        handleZScalePopoverClose();\r\n    }\r\n\r\n    const [markerOptionsAnchorElement, setMarkerOptionsAnchorElement] = React.useState(null);\r\n    const [localMarkerOpacity, setLocalMarkerOpacity] = React.useState(markerOptions && markerOptions.opacity);\r\n    const [localMarkerColor, setLocalMarkerColor] = React.useState(markerOptions && markerOptions.color);\r\n    const [localMarkerSize, setLocalMarkerSize] = React.useState(markerOptions && markerOptions.size);\r\n\r\n    if(markerOptions){\r\n        var previousOpacity = usePreviousOpacity(markerOptions.opacity);\r\n        var previousColor = usePreviousColor(markerOptions.color);\r\n        var previousSize = usePreviousSize(markerOptions.size);\r\n        \r\n        useEffect(() => {\r\n            if(markerOptions.opacity !== previousOpacity){\r\n                setLocalMarkerOpacity(markerOptions.opacity);\r\n            }\r\n    \r\n            if(markerOptions.color !== previousColor){\r\n                setLocalMarkerColor(markerOptions.color);\r\n            }\r\n    \r\n            if(markerOptions.size !== previousSize){\r\n                setLocalMarkerSize(markerOptions.size);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const markerPopoverOpen = Boolean(markerOptionsAnchorElement);\r\n    const markerPopoverID = markerPopoverOpen ? 'marker-popover' : undefined;\r\n\r\n    const handleMarkerOptionsClose = () => {\r\n        setMarkerOptionsAnchorElement(null);\r\n    }\r\n\r\n    const checkLocalMarkerOpacity = () => {\r\n        if(localMarkerOpacity < 0.1 || localMarkerOpacity > 1 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerOpacity)){\r\n            return 'Opacity should be 0.1 to 1'\r\n        }\r\n    }\r\n\r\n    const checkLocalMarkerSize = () => {\r\n        if(localMarkerSize < 1 || localMarkerSize > 18 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerSize)){\r\n            return 'Size should be 1 to 18'\r\n        }\r\n    }\r\n\r\n    const markerOptionsValidations = [\r\n        checkLocalMarkerOpacity(),\r\n        checkLocalMarkerSize()\r\n    ]\r\n\r\n    const [\r\n        localMarkerOpacityMessage,\r\n        localMarkerSizeMessage\r\n    ] = markerOptionsValidations;\r\n\r\n    const handleLocalMarkerOptionsConfirm = () => {\r\n        handleMarkerOptionsConfirm({opacity: localMarkerOpacity, color: localMarkerColor, size: localMarkerSize});\r\n        handleMarkerOptionsClose();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup className={classes.buttonGroup}>\r\n\r\n                {Boolean(onToggleSplitByDate) && \r\n                    <Tooltip placement='top' title='Split By Date'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDate && classes.depressed}`} \r\n                            onClick={onToggleSplitByDate}\r\n                        >\r\n                            <DateRange/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {Boolean(onToggleSplitByDepth) && \r\n                    <Tooltip placement='top' title='Split By Depth'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDepth && classes.depressed}`} \r\n                            onClick={onToggleSplitByDepth}\r\n                        >\r\n                            <Waves/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {Boolean(onToggleSplitBySpace) && \r\n                    <Tooltip placement='top' title={orientation === 'zonal' ? 'Split by Latitude' : 'Split by Longitude'}>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitBySpace && classes.depressed}`} \r\n                            onClick={onToggleSplitBySpace}\r\n                        >\r\n                            <LineWeight/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {Boolean(switchOrientation) && \r\n                    <Tooltip placement='top' title={orientation === 'zonal' ? 'Switch to Meridional' : 'Switch to Zonal'}>\r\n                        <IconButton color='inherit' className={classes.iconButton} \r\n                            onClick={switchOrientation}\r\n                        >\r\n                            <Rotate90DegreesCcw/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                <Tooltip placement='top' title='Download CSV'>\r\n                    <IconButton color='inherit' onClick={downloadCsv} className={classes.iconButton} >\r\n                        <CloudDownload/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n                {Boolean(handleZValueConfirm) &&\r\n                    <Tooltip title='Change Colorscale Range' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setZScalePopoverAnchorElement(event.currentTarget)} className={classes.iconButton}>\r\n                            <SwapVert/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {Boolean(props.handlePaletteChoice) &&\r\n                    <Tooltip title='Change Palette' placement='top'>\r\n                        <IconButton disabled={!Boolean(props.handlePaletteChoice)} color='inherit' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                            <Palette/>\r\n                        </IconButton>                \r\n                    </Tooltip>      \r\n                }\r\n\r\n                {Boolean(props.handleMarkerOptionsConfirm) &&\r\n                    <Tooltip title='Marker Options' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setMarkerOptionsAnchorElement(event.currentTarget)} className={`${classes.iconButton} ${classes.lastIcon}`} >\r\n                            <Gamepad/>\r\n                        </IconButton>                \r\n                    </Tooltip>\r\n                }\r\n\r\n                <Tooltip title='Plot Info' placement='top'>\r\n                    <IconButton color='inherit' onClick={() => console.log('Info!')} className={`${classes.iconButton}`} >\r\n                        <Info/>\r\n                    </IconButton>                \r\n                </Tooltip>\r\n                \r\n            </ButtonGroup>\r\n            \r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={paletteAnchorElement}\r\n                keepMounted\r\n                open={Boolean(paletteAnchorElement)}\r\n                onClose={() => setPaletteAnchorElement(null)}\r\n                className={classes.colorscaleMenu}\r\n            >\r\n                {colorscaleOptions.map((option, index) => (\r\n                    <MenuItem onClick={() => handlePaletteChoice(option === 'Default' ? 'heatmap' : option)} key={index}>{option}</MenuItem>\r\n                ))}\r\n                \r\n            </Menu>\r\n            \r\n            {/* zscale popover */}\r\n            <Popover\r\n                id={zScalePopoverID}\r\n                open={zScalePopoverOpen}\r\n                anchorEl={zScalePopoverAnchorElement}\r\n                onClose={handleZScalePopoverClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMinMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-min-input' >Min</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-min-input'\r\n                                    value={localZMin}\r\n                                    onChange={(event) => setLocalZMin(event.target.value)}\r\n                                    aria-describedby='local-zmin-error'\r\n                                    labelWidth={36}\r\n                                    name='local-zmin'\r\n                                />\r\n                                <FormHelperText id='local-zmin-error'>{zMinMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-max-input' >Max</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-max-input'\r\n                                    value={localZMax}\r\n                                    onChange={(event) => setLocalZMax(event.target.value)}\r\n                                    aria-describedby=\"local-zmax-error\"\r\n                                    labelWidth={36}\r\n                                    name='local-zmax'\r\n                                />\r\n                                <FormHelperText id=\"local-zmax-error\">{zMaxMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={7}>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleZScalePopoverClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalZConfirm}\r\n                                disabled={Boolean(zMinMessage || zMaxMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n                \r\n            {/* Marker popover */}\r\n            <Popover\r\n                id={markerPopoverID}\r\n                open={markerPopoverOpen}\r\n                anchorEl={markerOptionsAnchorElement}\r\n                onClose={handleMarkerOptionsClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(localMarkerOpacityMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-opacity' >Opacity</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='local-marker-opacity'\r\n                                    value={localMarkerOpacity}\r\n                                    onChange={(event) => setLocalMarkerOpacity(event.target.value)}\r\n                                    aria-describedby='local-marker-opacity'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-opacity'\r\n                                />\r\n                            <FormHelperText id=\"local-marker-opacity-error\">{localMarkerOpacityMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                // error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-size' >Size</InputLabel>\r\n                                <OutlinedInput\r\n                                    error={Boolean(localMarkerSizeMessage)}\r\n                                    id='local-marker-size'\r\n                                    value={localMarkerSize}\r\n                                    onChange={(event) => setLocalMarkerSize(event.target.value)}\r\n                                    aria-describedby=\"local-marker-size\"\r\n                                    labelWidth={36}\r\n                                    name='local-marker-size'\r\n                                />\r\n                                <FormHelperText id=\"local-marker-size-error\">{localMarkerSizeMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                className={classes.colorForm}\r\n                            >\r\n                                <InputLabel htmlFor='z-min-input'>Color</InputLabel>\r\n                                <OutlinedInput\r\n                                    type='color'\r\n                                    id='marker-color'\r\n                                    value={localMarkerColor}\r\n                                    onChange={(event) => setLocalMarkerColor(event.target.value)}\r\n                                    aria-describedby='local-marker-color'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-color'\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={1}></Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleMarkerOptionsClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalMarkerOptionsConfirm}\r\n                                disabled={Boolean(localMarkerOpacityMessage || localMarkerSizeMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ChartControlPanel);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport handleDateString from '../../Utility/handleChartDatestring';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\nimport subTypes from '../../Enums/visualizationSubTypes';\r\n\r\nconst determineHeight = (infoObject) => {\r\n    const latRange = infoObject.latMax - infoObject.latMin;\r\n    const lonRange = infoObject.lonMax - infoObject.lonMin;\r\n    return (((latRange / lonRange) * 800) * .83) + 60;\r\n}\r\n// equal 608 wide, 670 high\r\n// height half 608 / 267\r\n\r\nconst handleContourMap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n    \r\n    // Handle axis labels when crossing 180th meridian\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    // let height = determineHeight(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        var hovertext = subset.map((value, i) => {\r\n            let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n            if(isNaN(value)) return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n                `<br>` +\r\n                `Lon: ${infoObject.lons[i] > 180 ? format('.2f')(infoObject.lons[i] - 360) : format('.2f')(infoObject.lons[i])}\\xb0`\r\n\r\n            return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n            `<br>` +\r\n            `Lon: ${infoObject.lons[i] > 180 ? format('.2f')(infoObject.lons[i] - 360) : format('.2f')(infoObject.lons[i])}\\xb0` + \r\n            '<br>' +\r\n            `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n        });\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n\r\n                    hoverinfo: 'text',\r\n                    hovertext,\r\n                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'contour',\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: infoObject.zMin > 1 && infoObject.zMin < 1000 ? '.2f' : '.2e'\r\n                    },\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    }\r\n                }\r\n            ]}\r\n\r\n            config={{...chartBase.config}}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: {\r\n                    text: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                },\r\n                xaxis: {title: 'Longitude', color: '#ffffff', ...xTicks},\r\n                yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                // annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHeatmap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    // let height = determineHeight(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    zsmooth: subset.length < 20000 ? 'fast' : 'false',\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    colorscale: palette,\r\n                    autocolorscale: false,\r\n\r\n                    // hoverinfo: 'text',\r\n                    // hovertext,\r\n\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n                    \r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            config={{...chartBase.config}}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: {\r\n                    text: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                    font: {\r\n                        size: 16\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: 'Longitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Latitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n                // annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SpaceTimeChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitByDepth, setSplitByDepth] = useState(false);\r\n    const [subTypeState, setSubTypeState] = useState(subType);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const subSets = data.generatePlotData(subTypeState, splitByDate, splitByDepth);\r\n    var plots;\r\n\r\n    switch(subTypeState){\r\n        case vizSubTypes.contourMap:\r\n            plots = handleContourMap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.heatmap:\r\n            plots = handleHeatmap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.histogram:\r\n            plots = handleHistogram(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        default:\r\n            plots = '';\r\n            break;        \r\n\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDepth = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDepth(!splitByDepth);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={subTypeState !== subTypes.histogram && handlePaletteChoice}\r\n                onToggleSplitByDepth={depths.size===1 ? null : onToggleSplitByDepth}\r\n                onToggleSplitByDate={dates.size===1 ? null : onToggleSplitByDate}\r\n                splitByDepth={splitByDepth}\r\n                splitByDate={splitByDate}\r\n                handleZValueConfirm={subTypeState !== subTypes.histogram && handleZValueConfirm}\r\n                zValues={subTypeState !== subTypes.histogram && zValues}\r\n                extent={subTypeState !== subTypes.histogram && extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plots}     \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SpaceTimeChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst TimeSeriesChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, dates, parameters, metadata } = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#ff1493', size: 12})\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    let hovertext = variableValues.map((value, i) => {\r\n        return `Time: ${dates[i].slice(0,10)}<br>${parameters.fields}: ${format('.2e')(value)} \\xb1 ${format('.2e')(stds[i])} [${metadata.Unit}]`;\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                        mode: 'lines+markers',\r\n                    x: dates,\r\n                    y: variableValues,\r\n                    error_y: {\r\n                        type: 'data',\r\n                        array: stds,\r\n                        opacity: 0.3,\r\n                        color: '#f2f2f2',\r\n                        visible: true\r\n                    },\r\n                    name: parameters.fields,\r\n                    type: 'scatter',\r\n                    line: {color: markerOptions.color},\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    },\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                  },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    plot_bgcolor: 'transparent',\r\n                    width: 800,\r\n                    height: 570,\r\n                    title: `${parameters.fields} [${metadata.Unit}]  ${parameters.dt1} to ${parameters.dt2}`,\r\n                  xaxis: {\r\n                      title: 'Time',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: parameters.fields,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(TimeSeriesChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst DepthProfileChart = (props) => {\r\n\r\n    const { classes, setLoadingMessage } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, depths, parameters, metadata } = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#ff1493', size: 12})\r\n\r\n    let hovertext = variableValues.map((value, i) => {\r\n        return `Depth: ${format('.2f')(depths[i])} [m] <br>${parameters.fields}: ${format('.2e')(value)} \\xb1 ${format('.2e')(stds[i])} [${metadata.Unit}]`;\r\n    })\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }    \r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                    {   \r\n                        mode: 'lines+markers',\r\n                        y: depths,\r\n                        x: variableValues,\r\n                        error_x: {\r\n                            type: 'data',\r\n                            array: stds,\r\n                            opacity: 0.3,\r\n                            color: '#f2f2f2',\r\n                            visible: true\r\n                        },\r\n                        name: parameters.fields,\r\n                        type: 'scatter',\r\n\r\n                        marker: {\r\n                            line: {color: markerOptions.color},\r\n                            opacity: markerOptions.opacity,\r\n                            size: markerOptions.size,\r\n                            color: markerOptions.color\r\n                        },\r\n\r\n                        hoverinfo: 'text',\r\n                        hovertext\r\n                    },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    plot_bgcolor: 'transparent',\r\n                    width: 800,\r\n                    height: 570,\r\n                    title: `${parameters.fields} [${metadata.Unit}]  ${parameters.depth1} to ${parameters.depth2} meters`,\r\n                  yaxis: {\r\n                      title: 'Depth[m]',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power',\r\n                      autorange:'reversed'\r\n                    },\r\n                  xaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(DepthProfileChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport visualizationSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\n\r\nconst handleSectionMap = (subsets, infoObject, splitByDate, splitBySpace, orientation, palette, zMin, zMax) => {\r\n\r\n    const dates = Array.from(infoObject.dates);\r\n    const depths = Array.from(infoObject.depths);\r\n    const lats = Array.from(infoObject.lats);\r\n    const lons = Array.from(infoObject.lons);\r\n\r\n    const distinctMeridiansOrParallelsForSplitting = \r\n        orientation === 'zonal' ?\r\n        lats : \r\n        lons;\r\n\r\n    const mergedOrSplitAxis = \r\n        orientation === 'zonal' ?\r\n        'Latitude' :\r\n        'Longitude';\r\n\r\n    const xAxis = orientation === 'zonal' ?\r\n        'Longitude' :\r\n        'Latitude';\r\n\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 && orientation === 'zonal' ? handleXTicks(infoObject) : {};\r\n\r\n\r\n    return subsets.map((subset, index) => {\r\n        let z = subset;\r\n        let x = [];\r\n        let y = [];\r\n\r\n        if(orientation === 'zonal'){\r\n            for(let i = 0; i < subset.length; i++){\r\n                x.push(lons[Math.floor(i / depths.length)])\r\n            }\r\n        } else {\r\n            for(let i = 0; i < subset.length; i++){\r\n                x.push(lats[Math.floor(i / depths.length)])\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < subset.length; i++){\r\n            y.push(depths[i % depths.length]);\r\n        }\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length < 2 ?\r\n            dates[0].slice(0,10) :\r\n            !splitByDate ? \r\n                'Merged Dates' : \r\n                splitBySpace ? \r\n                    dates[Math.floor(index/distinctMeridiansOrParallelsForSplitting.length)].slice(0, 10) : \r\n                    dates[index].slice(0,10);\r\n                \r\n        const spaceTitle = distinctMeridiansOrParallelsForSplitting.length <= 1 ? `${orientation === 'zonal' ? 'Lat' : 'Lon'} ${distinctMeridiansOrParallelsForSplitting[0]}\\xb0` : \r\n            !splitBySpace ? `Merged ${mergedOrSplitAxis}s` : \r\n            `${orientation === 'zonal' ? 'Lat' : 'Lon'} ${distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length]}\\xb0`;\r\n\r\n        let hovertext = z.map((value, i) => {\r\n            \r\n            if(orientation === 'zonal'){\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                if(isNaN(value)) return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                    `<br>` +\r\n                    `Lon: ${format('.2f')(x[i] > 180 ? x[i] - 360 : x[i])}\\xb0`\r\n    \r\n                return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                `<br>` +\r\n                `Lon: ${format('.2f')(x[i] > 180 ? x[i] - 360 : x[i])}\\xb0` + \r\n                '<br>' +\r\n                `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n            } else {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                if(isNaN(value)) return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                    `<br>` +\r\n                    `Lat: ${format('.2f')(x[i])}\\xb0`\r\n    \r\n                return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                `<br>` +\r\n                `Lat: ${format('.2f')(x[i])}\\xb0` + \r\n                '<br>' +\r\n                `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n            }\r\n        });\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    zsmooth: subset.length < 20000 ? 'best' : 'fast',\r\n                    x,\r\n                    y,\r\n                    z,\r\n                    name: infoObject.parameters.fields,\r\n                    type: infoObject.subType === visualizationSubTypes.contourSectionMap ? 'contour' : 'heatmap',\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: '.2e'\r\n                    },\r\n\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName} [${infoObject.metadata.Unit}] ${spaceTitle} ${date}`,\r\n                xaxis: {\r\n                    title: `${xAxis}[\\xB0]`, \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Depth[m]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    autorange: 'reversed'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />\r\n        )\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SectionMapChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { dates, extent, lats, lons } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitBySpace, setSplitBySpace] = useState(false);\r\n    const [orientation, setOrientation] = useState(data.orientation);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    var spaces = orientation === 'zonal' ? lats : lons;\r\n\r\n    const subsets = data.generatePlotData(orientation, splitByDate, splitBySpace);\r\n    var plots = handleSectionMap(subsets, data, splitByDate, splitBySpace, orientation, palette, zMin, zMax);\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitBySpace = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitBySpace(!splitBySpace);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const switchOrientation = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setOrientation(orientation === 'zonal' ? 'meridional' : 'zonal');\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n            <ChartControlPanel\r\n                orientation={orientation}\r\n                switchOrientation={switchOrientation}\r\n                onToggleSplitBySpace={spaces.size === 1 ? null : onToggleSplitBySpace}\r\n                splitBySpace={splitBySpace}\r\n                onToggleSplitByDate={dates.size === 1 ? null : onToggleSplitByDate}\r\n                splitByDate={splitByDate}\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                downloadCsv={downloadCsv}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SectionMapChart));","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst SparseScatter = (props) => {\r\n    const {\r\n        xValues,\r\n        yValues,\r\n        markerOptions,\r\n        infoObject,\r\n        xTitle,\r\n        yTitle,\r\n        type\r\n    } = props;\r\n\r\n    const { parameters, metadata, hasDepth, variableValues, times, lats, lons, depths } = infoObject;\r\n\r\n    const title = `${parameters.fields} [${metadata.Unit}]`;\r\n    \r\n    var hovertext;\r\n\r\n    switch(type){\r\n        case 'time':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                let time= times[i].slice(0,20);\r\n                time = time.replace('T', ' ');\r\n                return `Time: ${time}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'latitude':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Lat: ${lats[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'longitude':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Lon: ${lons[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'depth':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Depth: ${depths[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        default:\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                let time= times[i].slice(0,20);\r\n                time = time.replace('T', ' ');\r\n                return `Time: ${time}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n        }\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n    \r\n            data={[\r\n                {\r\n                    x: xValues,\r\n                    y: yValues,\r\n                    mode: 'markers',\r\n                    name: parameters.fields,\r\n                    type: variableValues.length > 1000 ? 'scattergl' : 'scatter',\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    },\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                },\r\n            ]}\r\n            config={{...chartBase.config}}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                plot_bgcolor: 'transparent',\r\n                width: 800,\r\n                height: 570,\r\n                title,\r\n                xaxis: {\r\n                    title: xTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: yTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    autorange: type === 'depth' ? 'reversed' : true\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)\r\n            }}            \r\n        />\r\n    )\r\n}\r\n\r\nexport default SparseScatter;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport SparseScatter from './SparseScatter';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst handleSparseMap = (infoObject, palette, zValues) => {\r\n\r\n    var hovertext = infoObject.variableValues.map((value, i) => {\r\n        let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n\r\n        return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n        `<br>` +\r\n        `Lon: ${format('.2f')(infoObject.lons[i])}\\xb0` + \r\n        '<br>' +\r\n        `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n    });\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zValues[0],\r\n                    zmax: zValues[1],\r\n                    lon: infoObject.lons,\r\n                    lat: infoObject.lats,\r\n                    z: infoObject.variableValues,\r\n                    zmin:'',\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    radius: 6,                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'densitymapbox',\r\n                    \r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    },\r\n                }\r\n            ]}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                mapbox: {\r\n                    style: \"white-bg\",\r\n                    layers: [\r\n                        {\r\n                            sourcetype: \"raster\",\r\n                            source: [\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"],\r\n                            below: \"traces\"\r\n                        }\r\n                    ],\r\n                    center: infoObject.center,\r\n                    zoom: infoObject.zoom\r\n                },\r\n\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n            }}\r\n            \r\n            config={{\r\n                ...chartBase.config,\r\n                mapboxAccessToken:\r\n                  \"pk.eyJ1IjoiZGVuaG9sdHoiLCJhIjoiY2p1ZW9obTNhMDVxZjQzcDRvMmdlcDN2aiJ9.HvLaX2bcradeE5T-lpTc8w\",\r\n                \r\n              }}\r\n        />)\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n\r\n    tabs: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n\r\n    tab: {\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        fontSize: '15px',\r\n        textTransform: 'none'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nfunction tabProps(index) {\r\n    return {\r\n      id: `sparse-tab-${index}`,\r\n      'aria-controls': `sparse-tab-${index}`,\r\n    };\r\n  }\r\n\r\nconst SparseTabPanel = (props) => {\r\n    const { children, selectedTab, index, controlPanelProps, } = props;\r\n    console.log('A tab panel re-rendered');\r\n    console.log(controlPanelProps)\r\n\r\n    return (\r\n        <div hidden={selectedTab !== index}>\r\n            <ChartControlPanel\r\n                // handlePaletteChoice={handlePaletteChoice}\r\n                // handleZValueConfirm={handleZValueConfirm}\r\n                // zValues={zValues}\r\n                // extent={data.extent}\r\n                // downloadCsv={downloadCsv}\r\n                {...controlPanelProps}\r\n            />\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst SparseMap = (props) => {\r\n\r\n    const { classes } = props;\r\n\r\n    const { data } = props.chart;\r\n\r\n    const [palette, setPalette] = useState('Heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [markerOptions, setMarkerOptions] = useState({opacity: .7, color:'#ff1493', size: 12});\r\n    const [tab, setTab] = useState(0);\r\n\r\n    const plot = handleSparseMap(data, palette, zValues)\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setTab(newValue)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    const forceResize = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 30);        \r\n    }\r\n\r\n    const controlPanelProps = {\r\n        map: {\r\n            palette,\r\n            handlePaletteChoice,\r\n            zValues,\r\n            handleZValueConfirm,\r\n            downloadCsv\r\n        },\r\n\r\n        scatter: {\r\n            downloadCsv,\r\n            markerOptions,\r\n            setMarkerOptions,\r\n            handleMarkerOptionsConfirm\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Tabs \r\n                value={tab} \r\n                onChange={handleTabChange} \r\n                aria-label=\"Sparse tabs\" \r\n                centered\r\n                indicatorColor='primary'\r\n                className={classes.tabs}\r\n            >\r\n                <Tab label=\"Map\" {...tabProps(0)} className={classes.tab} onClick={forceResize}/>\r\n                <Tab label=\"By Time\" {...tabProps(1)} className={classes.tab}/>\r\n                <Tab label=\"By Lat\" {...tabProps(2)} className={classes.tab}/>\r\n                <Tab label=\"By Lon\" {...tabProps(3)} className={classes.tab}/>\r\n                {data.hasDepth && <Tab label=\"By Depth\" {...tabProps(4)} className={classes.tab}/>}\r\n            </Tabs>\r\n            <SparseTabPanel selectedTab={tab} index={0} controlPanelProps={controlPanelProps.map}>\r\n                {plot}\r\n            </SparseTabPanel>\r\n            \r\n            <SparseTabPanel selectedTab={tab} index={1} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.times}\r\n                    yValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Time'\r\n                    yTitle={data.parameters.fields}\r\n                    type='time'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={2} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.lats}\r\n                    yValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Latitude'\r\n                    yTitle={data.parameters.fields}\r\n                    type='latitude'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={3} controlPanelProps={controlPanelProps.scatter}>\r\n                <SparseScatter\r\n                    xValues={data.lons}\r\n                    yValues={data.variableValues}\r\n                    markerOptions={markerOptions}\r\n                    infoObject={data}\r\n                    xTitle='Longitude'\r\n                    yTitle={data.parameters.fields}\r\n                    type='longitude'\r\n                />\r\n            </SparseTabPanel>\r\n\r\n            {data.hasDepth &&\r\n                <SparseTabPanel selectedTab={tab} index={4} controlPanelProps={controlPanelProps.scatter}>\r\n                    <SparseScatter\r\n                        xValues={data.variableValues}\r\n                        yValues={data.depths}\r\n                        markerOptions={markerOptions}\r\n                        infoObject={data}\r\n                        xTitle={data.parameters.fields}\r\n                        yTitle='Depth'\r\n                        type='depth'\r\n                    />\r\n                </SparseTabPanel>            \r\n            }\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseMap));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport handleDateString from '../../Utility/handleChartDatestring';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SparseHistogram = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { metadata, parameters } = data;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: data.variableValues,\r\n                    name: data.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${parameters.fields} [${metadata.Unit}]`,\r\n                xaxis: {\r\n                    title: `${parameters.fields} [${metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseHistogram));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../Enums/colors';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nimport SpaceTimeChart from './ChartComponents/SpaceTimeChart';\r\nimport TimeSeriesChart from './ChartComponents/TimeSeriesChart';\r\nimport DepthProfileChart from './ChartComponents/DepthProfileChart';\r\nimport SectionMapChart from './ChartComponents/SectionMapChart';\r\nimport SparseMap from './ChartComponents/SparseMap';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\nimport SparseHistogram from './ChartComponents/SparseHistogram';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsContainer: {\r\n        margin: '300px 0 0 100px'\r\n    },\r\n\r\n    chartPaper: {\r\n      margin: '60px auto 0px auto',\r\n      width: '1000px',\r\n      paddingTop: '16px'\r\n  },\r\n\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n    }\r\n})\r\n\r\nconst SamplePlot = () => {\r\n  let x = [0,0,0,0,0,1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4];\r\n  let y = [0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,];\r\n  let z = [0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,1,2,3,4,5,6,7,8,9];\r\n  // z = z.map(() => Math.floor(Math.random() * 100));\r\n  return (\r\n\r\n      <Plot\r\n      style= {{\r\n          position: 'relative',\r\n          display:'inline-block',\r\n          marginTop: '50px'\r\n      }}\r\n      \r\n      data={[\r\n          {   \r\n              x,\r\n              y,\r\n              z,\r\n              connectgaps: false,\r\n              zsmooth: 'best',\r\n              \r\n              name: 'Test',\r\n              type: 'heatmap',\r\n              contours: {\r\n                  showlabels: true,\r\n                  labelfont: {\r\n                      family: 'Raleway',\r\n                      size: 12,\r\n                      color: 'white',\r\n                  },\r\n                  labelformat: '.2e'\r\n              },\r\n              colorbar: {\r\n                  title: {\r\n                      text: `test`\r\n                  },\r\n                  exponentformat: 'power'\r\n              }\r\n          }\r\n      ]}\r\n      \r\n      layout= {{\r\n          font: {color: '#ffffff'},\r\n          margin: {\r\n            t: 50\r\n          },\r\n          title: {\r\n              text: `A sample chart title`,\r\n              // yanchor: 'bottom',\r\n              // y: .9,\r\n              // yref: 'container',\r\n              font: {\r\n                size: 18\r\n              }\r\n          },\r\n          paper_bgcolor: colors.backgroundGray,\r\n          xaxis: {title: 'Longitude', color: '#ffffff'},\r\n          yaxis: {title: 'Latitude', color: '#ffffff'},\r\n          annotations: [\r\n              {\r\n                  text: `test`,\r\n                      font: {\r\n                          color: 'white',\r\n                          size: 10\r\n                      },\r\n                      xref: 'paper',\r\n                      yref: 'paper',\r\n                      yshift: -202,\r\n                      showarrow: false,\r\n                  }\r\n              ]\r\n              \r\n          }}   \r\n          />\r\n          )\r\n      }\r\n      \r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n        const { classes, charts } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n              {/* <SamplePlot/>  */}\r\n                {charts.map((chart, index) => {\r\n                    switch(chart.data.parameters.spName){\r\n\r\n                        case storedProcedures.spaceTime:\r\n                          if(chart.subType === vizSubTypes.sparse) {\r\n                            return (\r\n                              <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                                <SparseMap chart={chart}/>\r\n                              </Paper>\r\n                            )\r\n                          } else if(chart.data.metadata.Spatial_Resolution === spatialResolutions.irregular) {\r\n                            return (\r\n                              <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                                <SparseHistogram chart={chart}/>\r\n                              </Paper>\r\n                            )\r\n                          }\r\n                          else return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <SpaceTimeChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.timeSeries:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <TimeSeriesChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.depthProfile:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <DepthProfileChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.sectionMap:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <SectionMapChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n                        \r\n                        default:\r\n                          return '';\r\n                  }\r\n                })}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { cruiseListRequestSend, cruiseTrajectoryRequestSend, cruiseTrajectoryClear } from '../Redux/actions/visualization';\r\n\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    cruiseList: state.cruiseList,\r\n    getCruiseListState: state.getCruiseListState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseListRequestSend,\r\n    cruiseTrajectoryRequestSend,\r\n    cruiseTrajectoryClear\r\n}\r\n\r\nconst esriFonts = '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif';\r\nconst esriFontColor = 'white';\r\nconst esriBackgroundColor = '#424242';\r\nconst esriHoverFontColor = '#242424';\r\nconst esriHoverBackgroundColor = '#949393';\r\n\r\nconst styles = theme => ({\r\n    outerDiv: {\r\n        padding:'12px',\r\n        maxWidth: '260px',\r\n        backgroundColor: 'transparent',\r\n        color: esriFontColor,\r\n        borderRadius: '4px',\r\n        boxShadow: '2px',\r\n        position: 'relative',\r\n        backdropFilter: 'blur(2px)'\r\n    },\r\n\r\n    cruiseSelect: {\r\n        width: '260px',\r\n        borderRadius: '4px',\r\n    },\r\n\r\n    cruiseInfo: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        margin: '12px auto 0 auto',\r\n    },\r\n\r\n    cruiseInfoCell: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        borderStyle: 'none',\r\n    },\r\n\r\n    // blurEffectDiv: {\r\n    //     filter: 'blur(5px)',\r\n    //     position: 'absolute',\r\n    //     top: '0px',\r\n    //     left: '0px',\r\n    //     right: '0px',\r\n    //     bottom: '0px',\r\n    //     zIndex: 99999999\r\n    // }\r\n})\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\nconst cruiseSort =  (a,b) => a.Name < b.Name ? -1 : 1;\r\n\r\nclass CruiseSelector extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Nickname');\r\n        search.addIndex('Name');\r\n        search.addIndex('Chief_Name');\r\n        search.addIndex('Keywords');\r\n        try{\r\n            if(props.cruiseList && props.cruiseList.length) search.addDocuments(props.cruiseList);\r\n        } catch(e) {\r\n            console.log(e);\r\n            console.log(props.cruiseList);\r\n        }\r\n\r\n        this.state = {\r\n            search,\r\n            searchField: '',\r\n            selectedCruise: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.cruiseList || !this.props.cruiseList.length) this.props.cruiseListRequestSend();\r\n    }\r\n\r\n    getSelectOptionsFromCruiseList = (list) => {\r\n        return list.map(item => ({\r\n            value: item.Name,\r\n            label: item.Name,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    handleCruiseSelect = (selection) => {\r\n        if(selection && selection.data){\r\n            const id = selection.data.ID;\r\n            this.props.cruiseTrajectoryRequestSend(id);\r\n        } else {this.props.cruiseTrajectoryClear()}\r\n\r\n        this.setState({...this.state, selectedCruise: selection});\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.cruiseList && prevProps.cruiseList.length) && (this.props.cruiseList && this.props.cruiseList.length)){\r\n            this.state.search.addDocuments(this.props.cruiseList);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    render(){\r\n\r\n        const { search, searchField, selectedCruise } = this.state;\r\n\r\n        const { classes, cruiseList} = this.props;\r\n\r\n        const options = searchField && cruiseList ? this.getSelectOptionsFromCruiseList(search.search(searchField).sort(cruiseSort)) \r\n            : cruiseList ? this.getSelectOptionsFromCruiseList(cruiseList) \r\n            : []\r\n\r\n        return (\r\n            <div id='cruise-selector' className={classes.outerDiv}>\r\n                <div className={classes.blurEffectDiv}></div>\r\n                <Select\r\n                    isLoading={this.props.getCruiseListState === states.inProgress}\r\n                    components={{\r\n                        IndicatorSeparator:'',\r\n                        Option,\r\n                        SingleValue,\r\n                    }}\r\n                    isClearable\r\n                    onInputChange={this.onAutoSuggestChange}\r\n                    filterOption={null}\r\n                    className={classes.cruiseSelect}\r\n                    escapeClearsValue\r\n                    label=\"Cruise\"\r\n                    options={options}\r\n                    onChange={this.handleCruiseSelect}\r\n                    value={this.state.selectedCruise}\r\n                    placeholder=\"Search Cruises\"\r\n                    styles={{\r\n                        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                        menuList: provided => ({...provided, backgroundColor: esriBackgroundColor}),\r\n\r\n                        input: provided => ({...provided,\r\n                            color: 'inherit',\r\n                            fontFamily: esriFonts\r\n                        }),\r\n\r\n                        control: provided => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            border: 'none',\r\n                            boxShadow: '1px 1px 1px 1px #242424',\r\n                            color: esriFontColor,\r\n                            borderRadius: 4,\r\n                            '&:hover': { \r\n                                border: `1px solid white`,\r\n                            },\r\n                            '&:focus-within': {\r\n                                borderColor: colors.orange\r\n                            }\r\n                        }),\r\n\r\n                        placeholder: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: colors.orange,\r\n                            fontSize: '14px'\r\n                        }),\r\n\r\n                        noOptionsMessage: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: esriFontColor,\r\n                            backgroundColor: esriBackgroundColor\r\n                        }),\r\n\r\n                        option: (provided, state) => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            color: esriFontColor,\r\n                            '&:hover': { \r\n                                color: '#242424',\r\n                                backgroundColor: '#949393'\r\n                            },\r\n                        }),\r\n\r\n                        singleValue: (provided, state) => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: 'inherit',\r\n                            paddingRight: '20px',\r\n                        })\r\n                    }}\r\n                    theme={theme => ({\r\n                        ...theme,\r\n                        colors: {\r\n                            ...theme.colors,\r\n                            // Background color of hovered options\r\n                            primary25: '#e0e0e0',\r\n                            primary: '#212121',\r\n                        },\r\n                    })}\r\n                />\r\n                {selectedCruise &&\r\n                    <Table size='small' className={classes.cruiseInfo}>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Cruise:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Name}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Nickname:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Nickname}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            {\r\n                                selectedCruise.data.Start_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Start Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Start_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.End_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        End Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.End_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Chief_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Chief Scientist:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Chief_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Ship_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Ship:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Ship_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CruiseSelector));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\n\r\nimport CruiseSelector from './CruiseSelector';\r\nimport colors from '../Enums/colors';\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nconst drawButtonStyles = (theme) => ({\r\n    outerDiv: {\r\n        // padding:'12px 0 12px 0',\r\n        backgroundColor: 'transparent',\r\n        // width: '180px',\r\n        borderRadius: '4px',\r\n        marginRight: '20px'\r\n    },\r\n\r\n    drawButton: {\r\n        // border: '1px solid #333333',\r\n        border: `1px solid #333333`,\r\n        borderRadius: '4px',\r\n        color: colors.orange,\r\n        cursor: 'pointer',\r\n        padding: '6px',\r\n        width: '160px',\r\n        fontSize:'14px',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        // backgroundColor: 'rgba(255, 128, 0, .8)',\r\n        // backgroundColor: 'transparent',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif',\r\n        '&:hover': { \r\n            borderColor: 'white'\r\n        },\r\n    },\r\n\r\n    helpText: {\r\n        marginTop: 0,\r\n        color: 'white',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif'\r\n    },\r\n\r\n    cancelButton: {\r\n        display: 'none',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nconst DrawButtonRaw = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    return (\r\n        <div className={classes.outerDiv} id='draw-region-div'>\r\n            {showHelp && <p className={classes.helpText}>Click once to draw <br/>and again to finish</p>}\r\n            <button id='draw-button' className={classes.drawButton}>\r\n                Select Region\r\n            </button>\r\n            <button id='cancel-button' className={`${classes.drawButton} ${classes.cancelButton}`}>\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DrawButton = withStyles(drawButtonStyles)(DrawButtonRaw);\r\n\r\nconst polygonSymbol = {\r\n    type: \"polygon-3d\",\r\n    symbolLayers: [\r\n        {\r\n            type: \"fill\",\r\n            material: {\r\n            color: [255, 128, 0, .3]\r\n            },\r\n            outline: {\r\n                color: [255, 128, 0, 1],\r\n                size: '2px'\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.sketchModel = new props.esriModules.SketchViewModel({\r\n            layer: props.regionLayer,\r\n            view: props.view,\r\n            polygonSymbol,\r\n            defaultUpdateOptions: {\r\n                toggleToolOnClick: false,\r\n                tool: \"transform\"\r\n            }\r\n        })\r\n    }\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { view, esriModules, regionLayer, setShowHelp } = this.props;\r\n        var { sketchModel } = this;\r\n\r\n        // const updateOptions = {\r\n\r\n        // }\r\n\r\n        // var sketchModel = new esriModules.SketchViewModel({\r\n        //     layer: regionLayer,\r\n        //     view,\r\n        //     polygonSymbol,\r\n        //     defaultUpdateOptions: updateOptions\r\n        // })\r\n\r\n        var drawButton = document.getElementById('draw-button');\r\n        var cancelButton = document.getElementById('cancel-button');\r\n\r\n        sketchModel.on(\"create\", (event) => {\r\n            if(event.state === 'cancel'){\r\n                setShowHelp(false);\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n\r\n            if(event.state === \"complete\") {\r\n                setShowHelp(false);\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });        \r\n\r\n        sketchModel.on('update', (event) => {\r\n            if(event.toolEventInfo && event.toolEventInfo.type === 'move-stop'){\r\n                if(event.state === 'cancel') return;\r\n                // this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphics[0].geometry.extent));\r\n                this.props.updateDomainFromGraphicExtent(event.graphics[0].geometry.extent);\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });   \r\n        \r\n        drawButton.addEventListener(\"click\", (event) => {\r\n                regionLayer.removeAll();\r\n                setShowHelp(true);\r\n                sketchModel.create('rectangle', {\r\n                    mode:'click'            \r\n                });\r\n                drawButton.style.display = 'none';\r\n                cancelButton.style.display = 'inline-block';\r\n        });\r\n\r\n        cancelButton.addEventListener('click', (event) => {\r\n            sketchModel.cancel();\r\n            setShowHelp(false);\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })\r\n\r\n        view.ui.add('draw-region-div', 'bottom-right');\r\n        view.ui.add('cruise-selector', 'top-right');\r\n\r\n        view.ui.remove('zoom');\r\n        view.ui.remove('navigation-toggle');\r\n        view.ui.remove('compass');\r\n        view.ui.remove('attribution');\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst TrajectoryController = React.memo((props) => {\r\n    const { cruiseTrajectory, trajectoryLayer, esriModules } = props;\r\n    \r\n    if(cruiseTrajectory){\r\n        const { lons, lats } = cruiseTrajectory;\r\n\r\n        trajectoryLayer.removeAll();\r\n\r\n        var polyLines = [[]];\r\n        var lineIndex = 0;\r\n\r\n        let lonStart = lons[0];\r\n        let latStart = lats[0];\r\n        let maxDistance = 0;\r\n\r\n        // Create a new path array each time 180 lon is crossed\r\n        lons.forEach((lon, i) => {\r\n            let lat = lats[i];\r\n\r\n            let latDistance = Math.abs(lat - latStart);\r\n            let _lonDistance = Math.abs(lon - lonStart);\r\n            let lonDistance = _lonDistance > 180? 360 - _lonDistance : _lonDistance;\r\n\r\n            let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n            maxDistance = distance > maxDistance ? distance : maxDistance;\r\n\r\n            polyLines[lineIndex].push([lon, lat]);\r\n\r\n            if(i < lons.length - 1){\r\n                if((lon > 160 && lon < 180) && (lons[i + 1] > -180 && lons[i + 1] < -160)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n\r\n                if((lon > -180 && lon < -160) && (lon[i + 1] > 160 && lon[i + 1] < 180)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n            }\r\n        })\r\n\r\n        var cruiseTrajectorySymbol = {\r\n            type: 'line-3d',\r\n            symbolLayers: [{\r\n                type: 'line',\r\n                material: { color: [255, 128, 0, 1] },\r\n                cap:  'round',\r\n                join: 'round',\r\n                size: 2\r\n            }]\r\n        }\r\n\r\n        polyLines.forEach(line => {\r\n\r\n            let cruiseTrajectoryGeometry = {\r\n                type: 'polyline',\r\n                paths: line\r\n            }\r\n\r\n            let graphic = new esriModules.Graphic({\r\n                geometry: cruiseTrajectoryGeometry,\r\n                symbol: cruiseTrajectorySymbol\r\n            });\r\n\r\n            trajectoryLayer.add(graphic);\r\n        })\r\n\r\n        try {\r\n            const center = [lons[0], lats[0]];\r\n\r\n            var zoom = 7 - Math.floor(maxDistance / 10);            \r\n    \r\n            props.view.goTo({\r\n                target: center,\r\n                zoom\r\n            }, {\r\n                maxDuration: 2500,\r\n                speedFactor: .5\r\n            });    \r\n\r\n        } catch(e) {console.log(e)}\r\n\r\n    } else {\r\n        trajectoryLayer.removeAll();\r\n\r\n        props.view.goTo({\r\n            target: [-140, 30],\r\n            zoom: 3\r\n        }, {\r\n            maxDuration: 2500,\r\n            speedFactor: .5\r\n        }); \r\n    }\r\n    return '';\r\n})\r\n\r\nclass MapContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showHelp: false\r\n        }\r\n        this.regionLayer = new props.esriModules.GraphicsLayer();\r\n        this.trajectoryLayer = new props.esriModules.GraphicsLayer();\r\n    }\r\n\r\n    render = () => {\r\n        const { classes, esriModules, spParams, cruiseTrajectory, globeUIRef } = this.props;\r\n\r\n\r\n        const lat1 = parseFloat(spParams.lat1);\r\n        const lat2 = parseFloat(spParams.lat2);\r\n        const lon1 = parseFloat(spParams.lon1);\r\n        let _lon2 = parseFloat(spParams.lon2);\r\n        const lon2 = _lon2 < lon1 ? _lon2 + 360 : _lon2;\r\n\r\n        this.regionLayer.removeAll();\r\n\r\n        var polygon = {\r\n            type: 'polygon', \r\n            rings: [\r\n                [lon1, lat1],\r\n                [lon2, lat1],\r\n                [lon2, lat2],\r\n                [lon1, lat2],\r\n                [lon1, lat1]\r\n            ]\r\n        };\r\n\r\n        let regionGraphic = new esriModules.Graphic({\r\n            geometry: polygon,\r\n            symbol: polygonSymbol\r\n        })\r\n\r\n        this.regionLayer.add(regionGraphic);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ \r\n                        basemap: 'satellite',\r\n                        layers: [\r\n                            this.regionLayer,\r\n                            this.trajectoryLayer\r\n                        ]\r\n                    }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3\r\n                    }}\r\n                >\r\n                    <TrajectoryController \r\n                        cruiseTrajectory={cruiseTrajectory}\r\n                        trajectoryLayer={this.trajectoryLayer}\r\n                        esriModules={esriModules}\r\n                    />\r\n                    <UiComponents\r\n                        updateDomainFromGraphicExtent = {this.props.updateDomainFromGraphicExtent}\r\n                        esriModules={esriModules}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                        regionLayer={this.regionLayer}\r\n                        setShowHelp={(showHelp) => this.setState({...this.state, showHelp})}\r\n                        ref={this.props.globeUIRef}\r\n                    />\r\n                </Scene>\r\n                <DrawButton showHelp={this.state.showHelp}/>\r\n                <CruiseSelector/>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MapContainer);","const cleanSPParams = ({depth1, depth2, dt1, dt2, fields, lat1, lat2, lon1, lon2, spName, tableName}) => ({\r\n    depth1: parseFloat(depth1),\r\n    depth2: parseFloat(depth2),\r\n    dt1,\r\n    dt2,\r\n    fields,\r\n    lat1: parseFloat(lat1),\r\n    lat2: parseFloat(lat2),\r\n    lon1: parseFloat(lon1),\r\n    lon2: parseFloat(lon2),\r\n    spName,\r\n    tableName,\r\n})\r\n\r\nexport default cleanSPParams;","const localDateToString = (date) => {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate()\r\n\r\n    let nYear = year.toString();\r\n    let nMonth = month < 10 ? '0' + month.toString() : month.toString();\r\n    let nDay = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return nYear + '-' + nMonth + '-' + nDay;\r\n}\r\n\r\nexport default localDateToString;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport DataRetrievalForm from './DataRetrievalForm';\r\nimport VizControlPanel from './VizControlPanel';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend, cruiseListRequestSend, triggerShowCharts, completedShowCharts } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { loadModules } from 'esri-loader';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport Charts from './Charts';\r\nimport MapContainer from './MapContainer';\r\nimport colors from '../Enums/colors'\r\nimport cleanSPParams from '../Utility/cleanSPParams';\r\nimport localDateToString from '../Utility/localDateToString';\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport TopNavBar from './TopNavBar';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.sectionMap\r\n        },\r\n        [vizSubTypes.contourSectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.contourSectionMap\r\n        },\r\n        [vizSubTypes.timeSeries]: {\r\n            sp: storedProcedures.timeSeries,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: storedProcedures.depthProfile,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.heatmap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.heatmap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.contourMap\r\n        },\r\n        [vizSubTypes.sparse]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.sparse\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    loadingMessage: state.loadingMessage,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    cruiseList: state.cruiseList,\r\n    showChartsOnce: state.showChartsOnce\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n    cruiseListRequestSend,\r\n    completedShowCharts\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    background: {\r\n        backgroundColor: colors.backgroundGray\r\n    },\r\n\r\n    showCharts: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nclass Visualization extends Component {\r\n    globeUIRef = React.createRef();\r\n\r\n    state = {\r\n        filteredData: [],\r\n        opacity: 1,\r\n        showCharts: false,\r\n        showUI: false,\r\n        surfaceOnly: false,\r\n        irregularSpatialResolution: false,\r\n\r\n        spParams: {\r\n            tableName: '',\r\n            fields: null,\r\n            depth1: 0,\r\n            depth2: 0,\r\n            dt1: new Date(),\r\n            dt2: new Date(),\r\n            lat1: 0,\r\n            lat2: 0,\r\n            lon1: 0,\r\n            lon2: 0,\r\n            selectedVizType: ''\r\n        }\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.cruiseList) this.props.cruiseListRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'GraphicsLayer',\r\n            'SketchViewModel',\r\n            'Utils',\r\n            'Graphic',\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/layers/GraphicsLayer',\r\n            'esri/widgets/Sketch/SketchViewModel',\r\n            'esri/geometry/support/webMercatorUtils',\r\n            'esri/Graphic',\r\n        ], {version: 'next'});\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.showChartsOnce) {\r\n            this.props.completedShowCharts();\r\n            this.setState({...this.state, showCharts: true})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleLatLonChange = (event) => {\r\n        this.setState({\r\n            ...this.state, \r\n            spParams: {...this.state.spParams, [event.target.name]: event.target.value},\r\n        })\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt1:newDate}});\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt2:newDate}});\r\n        }\r\n    }\r\n\r\n    onVisualize = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, selectedVizType } = this.state.spParams;\r\n\r\n        let mapping = mapVizType(selectedVizType);\r\n        let parameters = cleanSPParams({\r\n            depth1,\r\n            depth2,\r\n            dt1: localDateToString(dt1),\r\n            dt2: localDateToString(dt2),\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        });\r\n\r\n        let payload = {\r\n            parameters,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        if(fields) {\r\n            let surfaceOnly = !fields.data.Depth_Min;\r\n            let irregularSpatialResolution = fields.data.Spatial_Resolution === 'Irregular';\r\n\r\n            let dt1 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt1 : utcDateStringToLocal(fields.data.Time_Min);\r\n            let dt2 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt2 : \r\n                irregularSpatialResolution ? utcDateStringToLocal(fields.data.Time_Max) :\r\n                utcDateStringToLocal(fields.data.Time_Min);\r\n\r\n            let lat1 = irregularSpatialResolution ? fields.data.Lat_Min : this.state.spParams.lat1;\r\n            let lat2 = irregularSpatialResolution ? fields.data.Lat_Max : this.state.spParams.lat2;\r\n            let lon1 = irregularSpatialResolution ? fields.data.Lon_Min : this.state.spParams.lon1;\r\n            let lon2 = irregularSpatialResolution ? fields.data.Lon_Max : this.state.spParams.lon2;\r\n            let depth1 = irregularSpatialResolution ? fields.data.Depth_Min : this.state.spParams.depth1;\r\n            let depth2 = irregularSpatialResolution ? fields.data.Depth_Max : this.state.spParams.depth2;\r\n\r\n            if(irregularSpatialResolution){\r\n                this.globeUIRef.current.props.view.goTo({\r\n                    target: [(parseFloat(lon1) + parseFloat(lon2)) / 2, (parseFloat(lat1) + parseFloat(lat2)) / 2],\r\n                    zoom: 3\r\n                }, {\r\n                    maxDuration: 2500,\r\n                    speedFactor: .5\r\n                }); \r\n            }\r\n\r\n            let tableName = fields.data.Table_Name;\r\n            \r\n            this.setState({...this.state,\r\n                surfaceOnly,\r\n                irregularSpatialResolution,\r\n                spParams: {...this.state.spParams, \r\n                    fields,\r\n                    dt1,\r\n                    dt2,\r\n                    lat1,\r\n                    lat2,\r\n                    lon1,\r\n                    lon2,\r\n                    depth1,\r\n                    depth2,\r\n                    tableName,\r\n                    selectedVizType: ''\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    handleShowCharts = () => {\r\n        this.setState({...this.state, showCharts: true})\r\n    }\r\n\r\n    handleShowGlobe = () => {\r\n        this.setState({...this.state, showCharts: false})\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromGraphicExtent = (extent) => {\r\n        var _lon1 = extent.xmin > -180 ? extent.xmin : extent.xmin + 360;\r\n        var _lon2 = extent.xmax < 180 ? extent.xmax : extent.xmax - 360;\r\n\r\n        var newCoordinates = {\r\n            lat1: extent.ymin.toFixed(3),\r\n            lat2: extent.ymax.toFixed(3),\r\n            lon1: _lon1.toFixed(3),\r\n            lon2: _lon2.toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        return (\r\n            <div>\r\n                <TopNavBar/>\r\n                <DataRetrievalForm \r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                   {...this.state.spParams}\r\n                   surfaceOnly={this.state.surfaceOnly}\r\n                   irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                />\r\n                <VizControlPanel\r\n                    toggleChartView={this.toggleChartView}\r\n                    toggleShowUI={this.toggleShowUI}\r\n                    showCharts={this.state.showCharts}\r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                    {...this.state.spParams}\r\n                    surfaceOnly={this.state.surfaceOnly}\r\n                    irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                    showCharts={this.state.showCharts}\r\n                    handleShowCharts={this.handleShowCharts}\r\n                    handleShowGlobe={this.handleShowGlobe}\r\n                />\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer\r\n                            globeUIRef={this.globeUIRef}\r\n                            updateDomainFromGraphicExtent={this.updateDomainFromGraphicExtent}\r\n                            esriModules={this.state.esriModules}\r\n                            spParams={this.state.spParams}\r\n                            cruiseTrajectory={this.props.cruiseTrajectory}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                <div className={this.state.showCharts ? classes.showCharts : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password, or <Link onClick={this.handleClose} component={RouterLink} to={{pathname: '/register'}}>Register.</Link>\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Spinner from 'react-spinkit';\r\n\r\nconst styles = theme => ({\r\n    loader: {\r\n        backgroundColor: '#000000',\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        opacity: 0.5,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        zIndex: 9998\r\n    },\r\n\r\n    loaderContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItem: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 9999,\r\n        opacity: 1\r\n    },\r\n\r\n    spinnerText: {\r\n        zIndex: 10000,\r\n        color: '#FF8000',\r\n        marginTop: '25px',\r\n        opacity: 1\r\n    },\r\n\r\n    spinner: {\r\n        opacity: 1\r\n    }\r\n})\r\n\r\nconst LoadingOverlay = (props) => {\r\n    const { classes, loadingMessage } = props;\r\n\r\n    if(loadingMessage && loadingMessage.length){\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div className={classes.loaderContent}>\r\n                    <Spinner className={classes.spinner} color='#FF8000' name=\"ball-pulse-rise\" fadeIn='quarter'/>\r\n                    <Typography variant='h6' className={classes.spinnerText}>{loadingMessage}</Typography>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return '';\r\n\r\n}\r\n\r\nexport default withStyles(styles)(LoadingOverlay);","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper';\r\nimport LoadingOverlay from './LoadingOverlay';\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog,\r\n    loadingMessage: state.loadingMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n                <LoadingOverlay loadingMessage={this.props.loadingMessage}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nconst styles = theme => ({\r\n    landingWrapper: {\r\n        margin: '15vh auto'\r\n    },\r\n\r\n    welcomeMessage: {\r\n        color: '#ffffff',\r\n        maxWidth: '500px',\r\n        margin: `${theme.spacing(2)}px auto`\r\n    }\r\n})\r\n\r\nclass LandingPage extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.landingWrapper}>\r\n                <img \r\n                    src='/images/large_cmap_logo.png'\r\n                    height='290'\r\n                    width='600'\r\n                />\r\n                <Typography variant=\"body2\" component=\"p\" className={classes.welcomeMessage}>\r\n                    Welcome to Simons CMAP. This application is currently under heavy development, and some features may be incomplete.\r\n                </Typography>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingPage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport './App.scss';\n\nimport colors from './Enums/colors';\n\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\n\nimport Home from './Components/Home';\nimport Catalog from './Components/Catalog';\nimport Register from './Components/Register';\nimport Visualization from './Components/Visualization';\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\nimport LandingPage from './Components/LandingPage';\nimport TopNavBar from './Components/TopNavBar';\n\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    error: {\n      main: colors.errorYellow\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: colors.backgroundGray,\n      paper: colors.backgroundGray\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange,\n        borderRadius: '10%'\n      }\n    },\n\n    MuiListItemIcon: {\n      root: {\n        minWidth: '40px'\n      }\n    },\n\n    MuiFormHelperText: {\n      filled: {\n        paddingLeft: '1px',\n        paddingRight: '1px',\n        fontSize: '13px'\n      }\n    },\n\n    MuiListItem: {\n      gutters: {\n        paddingLeft: '6px',\n        paddingRight: '10px'\n      },\n\n      root: {\n        paddingTop: '4px',\n        paddingBottom: '4px'\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: 'transparent',\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },\n\n    MuiButtonGroup: {\n      groupedOutlined: {\n        '&:not(:first-child)': {\n          marginLeft: 0\n        }\n      }\n    },\n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiFilledInput: {\n      input: {\n        paddingLeft: '6px',\n      },\n\n      inputSelect: {\n        paddingBottom: '6px'\n      },\n\n      adornedEnd: {\n        paddingRight: '6px'\n      },\n\n      root: {\n        backgroundColor: 'transparent',\n        '&:hover': {\n          backgroundColor: 'transparent',\n        },\n        '&:disabled': {\n          backgroundColor: 'transparent',\n        }\n      }\n    }\n  }\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  loadingMessage: state.loadingMessage\n})\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.vizRef = React.createRef();\n  }\n\nrender() {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n        <BrowserRouter>\n          <GlobalUIComponentWrapper/>\n          <TopNavBar/>\n          <Switch>          \n            <Route exact path='/apikeymanagement' component={ Home } />\n            <Route exact path='/' component={ LandingPage } />\n            <Route exact path='/catalog' component={ Catalog } />\n            <Route exact path='/register' component={ Register } />\n            <Route exact path='/visualization' component={Visualization} />\n          </Switch>\n        </BrowserRouter>\n        </MuiThemeProvider>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n}\n\nexport default connect(mapStateToProps, null)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\n\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}