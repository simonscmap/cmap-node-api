{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","api.js","Redux/sagas.js","Redux/store.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/Home.js","Components/GridDetail.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Components/VisualizationController.js","Components/VizTooltip.js","Components/Visualization.js","Components/LoginDialog.js","Components/TopNavBar.js","Components/SnackbarWrapper.js","Components/Charts.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","initialState","catalog","snackbarIsOpen","snackbarMessage","user","JSON","parse","Cookies","get","apiKeys","layers","sampleVizData","queryRequestState","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","keys","message","concat","toConsumableArray","newLayer","sampleData","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","queryRequestSuccess","queryRequestProcessing","storeSampleData","apiUrl","fetchOptions","credentials","postOptions","method","headers","Content-Type","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","ndjsonParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","ndjson","on","data","push","sent","ok","abrupt","getReader","read","done","write","decode","value","stop","keyRetrieval","_callee2","_context2","json","keyCreation","_ref3","_callee3","description","_context3","trim","_x","apply","this","arguments","visualization","queryRequest","_ref4","_callee4","query","vizData","_context4","_x2","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","_context5","catalogActions","_marked5","_context6","_marked6","_context7","_marked7","_context8","visualizationActions","_marked8","_context9","takeLatest","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","catalogActionTypes","_marked13","_context14","_marked14","_context15","_marked15","_context16","visualizationActionTypes","_marked16","_context17","all","_marked17","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","withStyles","theme","centered","position","top","props","classes","react_default","createElement","CircularProgress","size","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleClick","handleChange","event","setState","target","Fragment","Paper","root","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","map","apiKey","index","key","Description","showChildOnHover","keyTableCell","Api_Key","Grid","container","alignItems","justify","spacing","item","TextField","margin","id","name","onChange","placeholder","descriptionField","Button","disabled","length","color","onClick","Components_LoadingSpinner","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","LoginRequiredPrompt","Home","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","wrapper","height","infoCard","padding","gridClass","gridItem","display","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","variableDetailTable","marginLeft","marginRight","variableDetailTableRow","console","log","xs","src","imageSource","alt","dataSource","distributor","row","detailCellRendererParams","template","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","textAlign","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","handleColumnRowGroupChanged","columns","forEach","column","setColumnVisible","colId","render","gridWrapper","autoFocus","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","retrievalRequestSend","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","fields","inputFieldState","Card","inputFieldInfo","label","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","username","email","getCardInfo","firstName","optional","lastName","institute","department","country","password","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","controlPanel","zIndex","slider","FormControl","component","formControl","FormLabel","RadioGroup","aria-label","variable","handleVariableChange","FormControlLabel","control","Radio","Slider","dateSliderPosition","min","max","step","handleDateSliderChange","hasData","opacity","handleOpacitySliderChange","tooltip","lat","lon","info","INITIAL_VIEW_STATE","latitude","longitude","zoom","bearing","pitch","queryRequestSend","testQuery","Visualization","filteredData","pickedIndex","pickedLon","pickedLat","pickedInfo","datum","time","prevProps","_this2","deckWrapper","Components_VisualizationController","Components_VizTooltip","esm","controller","initialViewState","GeoJsonLayer","stroked","filled","lineWidthMinPixels","getLineDashArray","getLineColor","getFillColor","ColumnLayer","diskResolution","radius","extruded","pickable","autoHighlight","elevationScale","getPosition","d","getColor","getElevation","visible","SiO2_darwin_3day","toPrecision","object","DIN_darwin_3day","PO4_darwin_3day","userLoginRequestSend","LoginDialog","handleLogin","handleClose","clearState","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","withRouter","TopNavBar","defineProperty","handleLogOut","getCurrentPath","pathname","beepBoop","set","AppBar","Toolbar","Tabs","Tab","Link","to","Components_LoginDialog","inlineBlock","snackbarClose","Snackbar","autoHideDuration","Charts","react_vis_es","x","y","chart","routes","react_router_dom","Components_TopNavBar","Components_SnackbarWrapper","react_router","exact","path","createMuiTheme","palette","secondary","main","grey","primary","typography","useNextVariants","fontFamily","join","overrides","MuiOutlinedInput","input","MuiFormControl","marginNormal","App","MuiThemeProvider","LicenseManager","setLicenseKey","rootElement","document","getElementById","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9954a33d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    layers: null, //not currently in use\r\n    sampleVizData: null,\r\n    queryRequestState: null\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload:\r\n    {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = (sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n}))","// export const clientHost = 'http://localhost:3000'\r\nexport const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\n","import ndjson from 'ndjson';\r\n\r\nimport { apiUrl } from './config';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n    ndjsonParser.on('data', data => {\r\n        catalog.push(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/catalog/', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.queryRequest = async(query) => {\r\n    const decoder = new TextDecoder();\r\n    let vizData = [];\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n\r\n    ndjsonParser.on('data', data => {\r\n        vizData.push(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/dataretrieval/query?query=' + query, fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return vizData;\r\n}\r\n\r\nexport default api;","import { put, takeLatest, all, call } from 'redux-saga/effects';\r\nimport Cookies from 'js-cookie';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){\r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(action){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n  \r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest()\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>           \r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Keys\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root}>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n            </Paper>\r\n            </React.Fragment>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React from 'react';\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n    return (\r\n        <p>This feature requires login. Please log in.</p>\r\n    )\r\n}\r\n\r\nexport default LoginRequiredPrompt;","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.user) return <LoginRequiredPrompt/>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.user && <ApiKeyManagement/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'variable'],\r\n    ['Spatial Resolution', 'spatialResolution'],\r\n    ['Temporal Resolution', 'temporalResolution'],\r\n    ['Unit', 'unit'],\r\n    ['Process Level', 'processLevel'],\r\n    ['Study Domain', 'studyDomain'],\r\n    ['SQL Table Name', 'tableName']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        margin: '-10px auto 0px auto',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(2),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing(2),\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        width: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n    console.log(props.data);\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={8} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={imageSource + 'viz_sample.png'} alt=\"Sample Visualization\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.datasetDescription}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.dataSource}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable} size='small'>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell>{row[0]}</TableCell>\r\n                                    <TableCell>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst detailCellRendererParams = {\r\n  template:\r\n    '<div style=\"height: 100%; box-sizing: border-box\" class=\"testClass\">' +\r\n      '  <div style=\"height: 10%;\">Call Details</div>' +\r\n      '  <div ref=\"eDetailGrid\" style=\"height: 90%;\"></div>' +\r\n    \"</div>\"\r\n}\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"longName\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"tableName\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"datasetName\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"studyDomain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"processLevel\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"spatialResolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"temporalResolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '600px', \r\n    width: '80%',\r\n    margin: '30px auto',\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n    return (\r\n        <div \r\n        className={classes.gridWrapper + \" ag-theme-material\"}\r\n\r\n        >\r\n          <TextField\r\n            autoFocus={true}\r\n            margin=\"normal\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            variant='outlined'\r\n            name='filterText'\r\n            value={this.state.filterText}\r\n            onChange={this.handleChange}\r\n            placeholder='Filter Variables'\r\n          />\r\n  \r\n          <AgGridReact\r\n            // General settings\r\n            columnDefs={columnDefs}\r\n            defaultColDef={defaultColDef}\r\n            rowData={this.props.catalog}\r\n            onGridReady={this.onGridReady}\r\n            suppressDragLeaveHidesColumns= {true}\r\n\r\n            //Settings related to grouping functionality\r\n            rowGroupPanelShow='always'\r\n            groupMultiAutoColumn={true}\r\n            onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n            autoGroupColumnDef={autoGroupColumnDef}\r\n\r\n            enableBrowserTooltips={true}\r\n\r\n            // Settings related to master/detail\r\n            masterDetail={true}\r\n            frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n            detailCellRenderer=\"myDetailCellRenderer\"\r\n            detailRowHeight={280}\r\n            detailCellRendererParams={detailCellRendererParams}\r\n          />\r\n        </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog) return <AGGridWrapper catalog={this.props.catalog}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n        else if(this.props.catalogRequestState === states.failed) return <p>Failed to get catalog. Have you tried turning it off and then on again?</p>\r\n        else return <p>I don't know how we got here. Please debug the catalog retrieval process.</p>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={16}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n        <div className={classes.root}>\r\n            <Stepper activeStep={activeStep}>\r\n            {steps.map((label, index) => {\r\n                return (\r\n                <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n                );\r\n            })}\r\n            </Stepper>\r\n            <div>\r\n            {activeStep === steps.length ? (\r\n                <div>\r\n                <Typography className={classes.instructions}>\r\n                    Registration Completed!\r\n                </Typography>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <RegistrationCard \r\n                        inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                        inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div>\r\n                        <Button\r\n                        disabled={activeStep === 0}\r\n                        onClick={this.handleBack}\r\n                        className={classes.button}\r\n                        >\r\n                            Back\r\n                        </Button>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.handleNext}\r\n                            className={classes.button}\r\n                            disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                        >\r\n                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                        </Button>\r\n                        {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                        {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                        {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            </div>\r\n        </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = (theme) => ({\r\n    controlPanel: {\r\n        width: '180px',\r\n        height: '280px',\r\n        padding: theme.spacing(1.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '80px',\r\n        zIndex: 2\r\n    },\r\n    slider: {\r\n        marginTop: theme.spacing(1.5),\r\n        marginBottom: theme.spacing(1.5)\r\n    }\r\n})\r\n\r\nconst VisualizationController = (props) => {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.controlPanel}>\r\n\r\n                <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                    <FormLabel component=\"legend\">Variable</FormLabel>\r\n                    <RadioGroup\r\n                        aria-label=\"Variable\"\r\n                        name=\"variable\"\r\n                        value={props.variable}\r\n                        onChange={props.handleVariableChange}\r\n                        >\r\n                        <FormControlLabel value=\"SiO2_darwin_3day\" control={<Radio />} label=\"SiO2\" />\r\n                        <FormControlLabel value=\"PO4_darwin_3day\" control={<Radio />} label=\"PO4\" />\r\n                        <FormControlLabel value=\"DIN_darwin_3day\" control={<Radio />} label=\"DIN\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n                <Divider/>\r\n                <div className={classes.slider}>\r\n                    <Typography variant='h6'>Date</Typography>\r\n                    <Slider\r\n                        value={props.dateSliderPosition}\r\n                        min={3}\r\n                        max={24}\r\n                        step={3}\r\n                        onChange ={props.handleDateSliderChange}\r\n                        disabled={!props.hasData}\r\n                    />\r\n                    <Typography> {`1994-01-${props.dateSliderPosition}`}    </Typography>\r\n                </div>\r\n\r\n                <div className={classes.slider}>\r\n                    <Typography variant='h6'>Opacity</Typography>\r\n                    <Slider\r\n                        value={props.opacity}\r\n                        min={.1}\r\n                        max={1}\r\n                        step={.1}\r\n                        onChange ={props.handleOpacitySliderChange}\r\n                    />\r\n                    <Typography> {props.opacity}    </Typography>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(VisualizationController);","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = (theme) => ({\r\n    tooltip: {\r\n        width: '180px',\r\n        height: '100px',\r\n        padding: theme.spacing(1.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '400px',\r\n        zIndex: 2\r\n    }\r\n})\r\n\r\nconst VizTooltip = (props) => {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.tooltip}>\r\n                <Typography variant='subtitle1'>Lat: {props.lat}</Typography>\r\n                <Typography variant='subtitle1'>Lon: {props.lon}</Typography>\r\n                <Typography variant='subtitle1'>{props.info}</Typography>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(VizTooltip);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport VisualizationController from './VisualizationController';\r\nimport VizTooltip from './VizTooltip';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\nimport { queryRequestSend } from '../Redux/actions/visualization';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport DeckGL, {GeoJsonLayer, ColumnLayer} from 'deck.gl';\r\n\r\n// source: Natural Earth http://www.naturalearthdata.com/ via geojson.xyz\r\nconst COUNTRIES =\r\n  'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_50m_admin_0_scale_rank.geojson'; //eslint-disable-line\r\n\r\nconst INITIAL_VIEW_STATE = {\r\n  latitude: 14,\r\n  longitude: 50,\r\n  zoom: 3,\r\n  bearing: 0,\r\n  pitch: 30\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\n// darwin nutrient data\r\nconst testQuery = \"SELECT lat, lon, time, SiO2_darwin_3day, PO4_darwin_3day, DIN_darwin_3day from tblDarwin_Nutrient_3day WHERE time between '1994-01-02' and '1994-01-25' and depth = 5 and lat between 0 and 29 and lon between 33 and 73\";\r\n  \r\nclass Visualization extends Component {\r\n\r\n    state = {\r\n        filteredData: [],\r\n        dateSliderPosition: 3,\r\n        variable: 'SiO2_darwin_3day',\r\n        opacity: 1,\r\n        pickedIndex: null,\r\n        pickedLon: null,\r\n        pickedLat: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n        if(!this.props.sampleData && this.props.user) this.props.queryRequestSend(testQuery);\r\n\r\n        if(this.props.sampleData) this.handleDateSliderChange(null, 3);\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        // Filter data on starting date\r\n        if(!prevProps.sampleData && this.props.sampleData){\r\n            this.handleDateSliderChange(null, 3);\r\n        }\r\n\r\n        // Send query after user login\r\n        if(!prevProps.user && this.props.user && !this.props.sampleData){\r\n            this.props.queryRequestSend(testQuery);\r\n        }\r\n    }\r\n\r\n    handleDateSliderChange = (event, value) => {\r\n        this.setState({...this.state, \r\n            dateSliderPosition: value,\r\n            pickedInfo: null,\r\n            filteredData: this.props.sampleData.filter(datum => datum.time === `1994-01-${this.state.dateSliderPosition > 9 ? this.state.dateSliderPosition : \"0\" + this.state.dateSliderPosition}T00:00:00.000Z`)\r\n        });\r\n    }\r\n\r\n    handleOpacitySliderChange = (event, value) => {\r\n        this.setState({...this.state, opacity: value})\r\n    }\r\n\r\n    handleVariableChange = (event, value) => {\r\n        this.setState({...this.state, \r\n            variable: value,\r\n            pickedInfo: null,\r\n            filteredData: this.props.sampleData.filter(datum => datum.time === `1994-01-${this.state.dateSliderPosition > 9 ? this.state.dateSliderPosition : \"0\" + this.state.dateSliderPosition}T00:00:00.000Z`)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        const {filteredData} = this.state;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>;\r\n        return (\r\n            <div className={classes.deckWrapper}>\r\n                {this.props.queryRequestState === states.inProgress && <LoadingSpinner size={80} customVariant={'centered'}/>}\r\n                <VisualizationController\r\n                    handleDateSliderChange={this.handleDateSliderChange}\r\n                    dateSliderPosition={this.state.dateSliderPosition}\r\n                    opacity={this.state.opacity}\r\n                    handleOpacitySliderChange={this.handleOpacitySliderChange}\r\n                    variable={this.state.variable}\r\n                    handleVariableChange={this.handleVariableChange}\r\n                    hasData={Boolean(this.props.sampleData && this.props.sampleData.length)}\r\n                />\r\n                {this.state.pickedInfo && <VizTooltip\r\n                    lat={this.state.pickedLat}\r\n                    lon={this.state.pickedLon}\r\n                    info={this.state.pickedInfo}\r\n                />}\r\n                <DeckGL \r\n                    controller={true} \r\n                    initialViewState={INITIAL_VIEW_STATE}\r\n                    layers= {[\r\n                        new GeoJsonLayer({\r\n                            id:\"base-map\",\r\n                            data:COUNTRIES,\r\n                            stroked: true,\r\n                            filled: true,\r\n                            lineWidthMinPixels: 1,\r\n                            opacity: 1,\r\n                            getLineDashArray:[3, 3],\r\n                            getLineColor: [0,0,0],\r\n                            getFillColor: [60,60,60]\r\n                        }),\r\n\r\n                        new ColumnLayer({\r\n                            id: `SiO2-layer`,\r\n                            data: filteredData,\r\n                            diskResolution: 12,\r\n                            radius: 27000,\r\n                            extruded: true,\r\n                            pickable: true,\r\n                            autoHighlight: true,\r\n                            elevationScale: 520000,\r\n                            getPosition: d => [d.lon, d.lat],\r\n                            getColor: d => d[this.state.variable] != null ? [255,0,0] : [60,60,60],\r\n                            getElevation: d => d[this.state.variable],\r\n                            opacity: this.state.opacity,\r\n                            visible: this.state.variable === 'SiO2_darwin_3day',\r\n                            onClick: (info) => {\r\n                                let value = filteredData[info.index].SiO2_darwin_3day;\r\n                                if(value){\r\n                                    this.setState({...this.state,\r\n                                        pickedInfo:`SiO2: ${value.toPrecision(6)} mmol`,\r\n                                        pickedLon: info.object.lon,\r\n                                        pickedLat: info.object.lat\r\n                                    })\r\n                                }\r\n                            }\r\n                          }),\r\n\r\n                          new ColumnLayer({\r\n                            id: `DIN-layer`,\r\n                            data: filteredData,\r\n                            diskResolution: 12,\r\n                            radius: 27000,\r\n                            extruded: true,\r\n                            pickable: true,\r\n                            autoHighlight: true,\r\n                            elevationScale: 50000,\r\n                            getPosition: d => [d.lon, d.lat],\r\n                            getColor: d => d[this.state.variable] != null ? [0,255,0] : [60,60,60],\r\n                            getElevation: d => d['DIN_darwin_3day'],\r\n                            opacity: this.state.opacity,\r\n                            visible: this.state.variable === 'DIN_darwin_3day',\r\n                            onClick: (info) => {\r\n                                let value = filteredData[info.index].DIN_darwin_3day;\r\n                                if(value){\r\n                                    this.setState({...this.state,\r\n                                        pickedInfo:`DIN: ${value.toPrecision(6)} mmol`,\r\n                                        pickedLon: info.object.lon,\r\n                                        pickedLat: info.object.lat\r\n                                    })\r\n                                }\r\n                            }\r\n                        }),\r\n\r\n                        new ColumnLayer({\r\n                            id: `PO4-layer`,\r\n                            data: filteredData,\r\n                            diskResolution: 12,\r\n                            radius: 27000,\r\n                            extruded: true,\r\n                            pickable: true,\r\n                            autoHighlight: true,\r\n                            elevationScale: 2000000,\r\n                            getPosition: d => [d.lon, d.lat],\r\n                            getColor: d => d[this.state.variable] != null ? [43, 172, 219] : [60,60,60],\r\n                            getElevation: d => d['PO4_darwin_3day'],\r\n                            opacity: this.state.opacity,\r\n                            visible: this.state.variable === 'PO4_darwin_3day',\r\n                            onClick: (info) => {\r\n                                let value = filteredData[info.index].PO4_darwin_3day;\r\n                                if(value){\r\n                                    this.setState({...this.state,\r\n                                        pickedInfo:`PO4: ${value.toPrecision(6)} mmol`,\r\n                                        pickedLon: info.object.lon,\r\n                                        pickedLat: info.object.lat\r\n                                    })\r\n                                }\r\n                            }\r\n                        })\r\n                    ]}\r\n                >\r\n                </DeckGL>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        \r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password to log in.\r\n                    </DialogContentText>\r\n\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"normal\"\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        type=\"text\"\r\n                        variant='outlined'\r\n                        name='username'\r\n                        value={this.props.username}\r\n                        onChange={this.props.handleChange}\r\n                    />\r\n\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        id=\"name\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        variant='outlined'\r\n                        name='password'\r\n                        value={this.props.password}\r\n                        onChange={this.props.handleChange}\r\n                    />\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        <div className={classes.wrapper}>\r\n                            <Button color=\"primary\" onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                Log In\r\n                            </Button>\r\n                            {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(LoginDialog)));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport LoginDialog from './LoginDialog';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return state;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    getCurrentPath = () => {\r\n        switch(this.props.location.pathname){\r\n            case '/apikeymanagement': return 0;\r\n            case '/': return 1;\r\n            case '/visualization': return 2;\r\n            case '/register': return 3;\r\n            default: return 0;\r\n        }\r\n    };\r\n\r\n    // Debug button\r\n    beepBoop = () => {\r\n        console.log(this.props);\r\n        Cookies.set('hi','there');\r\n        Cookies.get();\r\n    };\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <Tabs value={this.getCurrentPath() || 0} onChange={this.handleChange}>\r\n                        <Tab key='0' component={Link} to={{pathname: '/apikeymanagement'}} label='API Keys' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='1' component={Link} to={{pathname: '/'}} label='Catalog' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='2' component={Link} to={{pathname: '/visualization'}} label='Visualization' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        {this.props.user ? '' : <Tab key='3' component={Link} to={{pathname: '/register'}} label='Register' onClick={this.props.restoreInterfaceDefaults}/>}\r\n                        {this.props.user ? '' : <Tab key='4' label='Log In' onClick={this.props.showLoginDialog}/>}\r\n                        {this.props.user ? <Tab key='5' label={`Welcome ${this.props.user.firstName} ${this.props.user.lastName}!`}/> : ''}\r\n                        {this.props.user ? <Tab key='4' label='Log Out' onClick={this.handleLogOut}/> : ''}                        \r\n                        <Tab key='6' label='Debug' onClick={this.beepBoop}/>\r\n                        <Tab key='7' label='Charts' component={Link} to={{pathname: '/visualization/charts'}}/>\r\n                    </Tabs>                    \r\n                </Toolbar>\r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n            </AppBar>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Snackbar \r\n                autoHideDuration={3500} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SnackbarWrapper);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {XYPlot, LineSeries, VerticalGridLines, HorizontalGridLines, XAxis, YAxis, VerticalBarSeries} from 'react-vis';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chart: {\r\n        margin: 'auto'\r\n    }\r\n})\r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n\r\n        const data = [\r\n            {x: 0, y: 8},\r\n            {x: 1, y: 5},\r\n            {x: 2, y: 4},\r\n            {x: 3, y: 9},\r\n            {x: 4, y: 1},\r\n            {x: 5, y: 7},\r\n            {x: 6, y: 6},\r\n            {x: 7, y: 3},\r\n            {x: 8, y: 2},\r\n            {x: 9, y: 0}\r\n          ];\r\n\r\n        return (\r\n            <div className=\"chart\">\r\n                <XYPlot height={300} width= {300}>\r\n                <VerticalGridLines />\r\n                <HorizontalGridLines />\r\n                <XAxis />\r\n                <YAxis />\r\n                <VerticalBarSeries data={data} />\r\n                </XYPlot>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React from 'react'\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\r\n\r\nimport Home from './Components/Home';\r\nimport Catalog from './Components/Catalog';\r\nimport Register from './Components/Register';\r\nimport Visualization from './Components/Visualization';\r\nimport TopNavBar from './Components/TopNavBar';\r\nimport SnackbarWrapper from './Components/SnackbarWrapper';\r\nimport Charts from './Components/Charts';\r\n\r\nexport default props => (\r\n    <BrowserRouter>\r\n        <TopNavBar/>\r\n        <SnackbarWrapper/>\r\n        <Switch>\r\n          <Route exact path='/apikeymanagement' component={ Home } />\r\n          <Route exact path='/' component={ Catalog } />\r\n          <Route exact path='/register' component={ Register } />\r\n          <Route exact path='/visualization' component={ Visualization } />\r\n          <Route exact path='/visualization/charts' component={ Charts } />\r\n        </Switch>\r\n    </BrowserRouter>\r\n  )","import React, { Component } from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\n\nimport './App.css';\nimport Routes from './routes';\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: grey[900]\n    },\n    primary: {\n      main: grey[600]\n    }\n  },\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n  overrides: {\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      }\n    },\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    }\n  }\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n          <Routes />\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\nLicenseManager.setLicenseKey(\"Evaluation_License-_Not_For_Production_Valid_Until_2_July_2019__MTU2MjAyMjAwMDAwMA==caa187fc06c8c340bcb9897b015a3cb5\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}