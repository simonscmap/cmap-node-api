{"version":3,"sources":["Components/User/RegistrationCard.js","Components/User/RegistrationStepper.js","Components/User/Register.js"],"names":["withStyles","theme","registrationCard","marginTop","spacing","marginBottom","height","textField","margin","width","props","classes","fields","Object","keys","inputFieldState","handleKeyPress","event","key","buttonRef","current","click","Card","className","Grid","container","map","field","index","item","xs","length","TextField","autoFocus","Boolean","name","inputFieldInfo","label","value","onChange","type","error","valid","helperText","requirement","onKeyPress","mapDispatchToProps","registrationNextActiveStep","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","React","createRef","RegistrationStepper","componentDidMount","userValidationState","states","failed","userValidationRequestSuccess","validateField","rawValue","trim","pattern","setState","previousState","newCardState","cards","confirmPassword","state","password","test","processStateToActionPayload","actionPayload","forEach","card","cardKey","currentCardIsValid","currentCard","registrationActiveStep","optional","handleNext","username","email","handleBack","handleChange","newValue","target","fieldName","firstName","lastName","institute","department","country","newCard","push","this","steps","activeStep","cardInfoArray","Fragment","root","Stepper","Step","StepLabel","Paper","instructionsPaper","Typography","instructions","Button","onClick","handleHideStepper","button","variant","color","disabled","inProgress","ref","CircularProgress","size","buttonProgress","bottomError","Link","handleClose","component","RouterLink","to","pathname","userRegistrationState","Component","connect","ownProps","marginRight","padding","position","top","left","marginLeft","snackbarOpen","googleLoginRequestSend","Register","showStepper","onGoogleSignup","user","token","getAuthResponse","id_token","registerGoogleClickHandler","_this","auth","window","gapi","auth2","getAuthInstance","attachClickHandler","setTimeout","handleShowStepper","paper","description","googleWrapper","GoogleSignInButton","clickHandlerTarget","text","emailSignUpWrapper","emailSignUpButton","textTransform","display","paddingTop"],"mappings":"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","file":"static/js/25.19fb9441.chunk.js","sourcesContent":["import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    const handleKeyPress = event => {\r\n        if (event.key === 'Enter') {\r\n            props.buttonRef.current.click();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key={index}\r\n                            autoFocus={Boolean(index === 0)}\r\n                            name={props.inputFieldInfo[field].name}\r\n                            label={props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            onKeyPress={handleKeyPress}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport { Stepper, Step, StepLabel, Button, Typography, CircularProgress, Paper, Link } from '@material-ui/core';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend, userValidationRequestSuccess } from '../../Redux/actions/user';\r\n\r\nimport states from '../../Enums/asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '10% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    instructionsPaper: {\r\n        width: '60%',\r\n        margin: '5% auto',\r\n        padding: '24px'\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n\r\n    bottomError: {\r\n        color: 'white',\r\n        marginTop: theme.spacing(2)\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\n// const getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    }\r\n])\r\n\r\nconst buttonRef = React.createRef();\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // Prevents validation failure message from appearing again if user navigates here to try again\r\n        if(this.props.userValidationState === states.failed) this.props.userValidationRequestSuccess();\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            // case 1:\r\n            //     this.props.registrationNextActiveStep();\r\n            //     break;\r\n            case 1:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <Paper className={classes.instructionsPaper}>\r\n                            <Typography className={classes.instructions}>\r\n                                We've sent you an email with a link for finalizing your registration and choosing a password. If you don't receive the email within the next few minute please check your spam folder.\r\n                            </Typography>\r\n                        </Paper>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                                buttonRef={buttonRef}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                onClick={activeStep === 0 ? this.props.handleHideStepper : this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                    ref={buttonRef}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <Typography className={classes.bottomError}>That username or email address is already in use. If you previously registered you can recover your password <Link onClick={this.handleClose} component={RouterLink} to={{pathname: '/forgotpass'}}>here</Link>.</Typography>}\r\n                                {this.props.userRegistrationState === states.failed && <Typography className={classes.bottomError}>Registration failed. Please try again.</Typography>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Paper, Button, Typography } from '@material-ui/core';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\nimport GoogleSignInButton from './GoogleSignInButton';\r\n\r\nimport { snackbarOpen } from '../../Redux/actions/ui';\r\nimport { googleLoginRequestSend } from '../../Redux/actions/user';\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        width: '60%',\r\n        margin: '10% auto',\r\n        padding: '24px'\r\n        // height: '40vh'\r\n    },\r\n\r\n    emailSignUpButton: {\r\n        textTransform: 'none',\r\n        height: '46px',\r\n        color: 'white'\r\n    },\r\n\r\n    googleWrapper: {\r\n        margin: '50px auto 0 0',\r\n        display: 'inline-block'\r\n    },\r\n\r\n    description: {\r\n        paddingTop: '50px'\r\n    },\r\n\r\n    emailSignUpWrapper: {\r\n        marginTop: '40px'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarOpen,\r\n    googleLoginRequestSend\r\n}\r\n\r\nconst registerClickHandlerTarget = 'g-signup';\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        showStepper: false\r\n    }\r\n\r\n    onGoogleSignup = (user) => {\r\n        let token = user.getAuthResponse(true).id_token;\r\n        this.props.googleLoginRequestSend(token);\r\n    }\r\n\r\n    registerGoogleClickHandler = () => {\r\n        let _this = this;\r\n        let auth = window.gapi.auth2\r\n        if(auth){\r\n            let authInstance = auth.getAuthInstance();\r\n            authInstance.attachClickHandler(\r\n                registerClickHandlerTarget, \r\n                null, \r\n                _this.onGoogleSignup,\r\n                () => _this.props.snackbarOpen('There was a problem accessing your google account')\r\n            );\r\n        } else {\r\n            setTimeout(_this.registerGoogleClickHandler, 20);\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.registerGoogleClickHandler();\r\n    }\r\n\r\n    handleShowStepper = () => {\r\n        this.setState({showStepper: true})\r\n    }\r\n\r\n    handleHideStepper = () => {\r\n        this.setState({showStepper: false});\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {!this.state.showStepper &&\r\n                    <Paper className={classes.paper}>\r\n                        <Typography className={classes.description}>\r\n                            Create an account to access your favorites list between sessions and devices, or submit data to CMAP.\r\n                        </Typography>\r\n\r\n                        <div className={classes.googleWrapper}>\r\n                            <GoogleSignInButton clickHandlerTarget={registerClickHandlerTarget} text='Sign up with Google'/>\r\n                        </div>\r\n\r\n                        <div className={classes.emailSignUpWrapper}>\r\n                            <Button variant='contained' color='primary' className={classes.emailSignUpButton} onClick={this.handleShowStepper}>\r\n                                Sign up with an Email Address\r\n                            </Button>\r\n                        </div>\r\n                    </Paper>                \r\n                }\r\n                {this.state.showStepper && <RegistrationStepper handleHideStepper={this.handleHideStepper}/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(Register));"],"sourceRoot":""}