{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","Enums/spatialResolutions.js","Utility/mapSpatialResolutionToNumber.js","Utility/flattenArray.js","Utility/splitData.js","Utility/mergeArraysAndComputeMeans.js","Utility/mergeArrays.js","Enums/visualizationSubTypes.js","Enums/temporalResolutions.js","Classes/SpaceTimeData.js","Enums/storedProcedures.js","Classes/TimeSeriesData.js","Classes/DepthProfileData.js","Enums/months.js","Classes/SectionMapData.js","Classes/SparseData.js","api.js","Redux/sagas.js","Redux/store.js","Enums/colors.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/TopNavBar.js","Components/Home.js","Components/GridDetail.js","Components/DatasetDescriptionDialog.js","Components/ConnectedTooltip.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/validation.js","Components/TableStatsDialog.js","Utility/mapTemporalResolutionToNumber.js","Utility/utcDateStringToLocal.js","Utility/depthCounter.js","Utility/countWebGLContexts.js","Components/VizControlPanel.js","Components/DownloadConfirmationDialog.js","Utility/handleXTicks.js","Utility/handleChartDatestring.js","Utility/chartBase.js","Components/ChartComponents/ChartControlPanel.js","Components/ChartComponents/SpaceTimeChart.js","Components/ChartComponents/TimeSeriesChart.js","Components/ChartComponents/DepthProfileChart.js","Components/ChartComponents/SectionMapChart.js","Components/ChartComponents/SparseScatter.js","Components/ChartComponents/SparseMap.js","Components/ChartComponents/SparseHistogram.js","Components/Charts.js","Components/CruiseSelector.js","Components/MapContainer.js","Utility/cleanSPParams.js","Utility/localDateToString.js","Components/Visualization.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/LoadingOverlay.js","Components/GlobalUIComponentWrapper.js","Components/LandingPage.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","DATASET_RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","REFRESH_LOGIN","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","TABLE_STATS_REQUEST_SEND","CRUISE_TRAJECTORY_REQUEST_SEND","CRUISE_LIST_REQUEST_SEND","CSV_DOWNLOAD_REQUEST_SEND","DOWNLOAD_TEXT_AS_CSV","initialState","catalog","datasetRequestState","datasets","snackbarIsOpen","snackbarMessage","loadingMessage","showHelp","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","getCruiseTrajectoryRequestState","cruiseTrajectory","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","cruiseList","getCruiseListRequestState","showChartsOnce","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","datasetsRequestState","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","slice","chartIndex","trajectory","defineProperty","datasetLongName","tableStats","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","refreshLogin","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","datasetRetrievalRequestSend","datasetRetrievalRequestProcessing","datasetRetrievalRequestSuccess","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","setLoadingMessage","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addChart","tableStatsRequestProcessing","tableStatsRequestSuccess","cruiseTrajectoryRequestSend","id","visualizationActionTypes","cruiseTrajectoryRequestSuccess","cruiseTrajectoryRequestProcessing","cruiseListRequestSend","cruiseListRequestSuccess","cruiseListRequestFailure","cruiseListRequestProcessing","triggerShowCharts","csvDownloadRequestSend","query","fileName","csvDownloadRequestProcessing","downloadTextAsCsv","text","datasetName","apiUrl","spatialResolutions","irregular","halfDegree","quarterDegree","twentyFifthDegree","fourKm","twelfthDegree","seventyKm","oneDegree","mapSpatialResolutionToNumber","resolution","_map","flattenArray","arr","flattenedArray","i","length","j","push","splitData","changeInterval","numDistinct","Math","floor","mergeArraysAndComputeMeans","mergeTargetDistance","nextMergeStartDistance","numArraysPerMerge","mergedArrays","travelDistance","subArray","sum","count","k","isNaN","mergeArrays","subTypes","sectionMap","contourSectionMap","timeSeries","histogram","depthProfile","heatmap","contourMap","sparse","temporalResolutions","threeMinutes","sixHourly","daily","weekly","monthly","annual","monthlyClimatology","threeDay","eightDayRunning","eightDays","SpaceTimeData","_this","this","classCallCheck","generateCsv","dates","Array","from","depths","hasDepth","csvArray","parameters","fields","variableValues","lats","lons","join","metadata","hasHours","isMonthly","Set","zMin","zMax","extent","indexAdjust","lonMin","lonMax","latMin","latMax","distinctLatCount","distinctLonCount","row","lat","parseFloat","_lon","lon","lon1","hasHour","Table_Name","Temporal_Resolution","time","value","add","Date","setUTCHours","toISOString","size","lonCount","latCount","quantile1","quantile","quantile2","undefined","toPrecision","spatialResolution","Spatial_Resolution","round","subType","splitByDate","splitByDepth","variableValueSubsets","_this2","depthInterval","dateInterval","map","subset","vizSubTypes","storedProcedures","spaceTime","TimeSeriesData","stds","depth","depthIndexAdjust","csvString","DepthProfileData","months","SectionMapData","lonInterval","latInterval","orientation","lonArray","max","apply","min","splitBySpace","spaceCount","SparseData","variableIndex","Depth_Min","times","latDistance","abs","lonDistance","distance","sqrt","console","log","_zoom","zoom","lonCenter","latCenter","center","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","reduce","queryString","key","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","csvParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","CSVParser","columns","on","record","read","sent","ok","abrupt","getReader","done","write","decode","stop","_callee2","_context2","Dataset_Long_Name","keyRetrieval","_callee3","_context3","json","keyCreation","_ref4","_callee4","description","_context4","trim","_x","arguments","visualization","storedProcedureRequest","_ref5","_callee5","vizData","_context5","t0","spName","status","e","_x2","getTableStats","_ref6","_callee6","tableName","_context6","_x3","cruiseTrajectoryRequest","_ref7","_callee7","_context7","_x4","_callee8","_context8","csvDownload","_ref9","_callee9","_context9","_x5","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","datasetRetrieval","queryRequest","cruiseListRequest","tableStatsRequest","csvDownloadRequest","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchDatasetRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","watchCruiseTrajectoryRequest","watchCruiseListRequest","watchTableStatsRequest","watchCsvDownloadRequest","watchDownloadTextAsCsv","watchRefreshLogin","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_marked6","_marked7","_marked8","visualizationActions","_marked9","_context10","delay","finalize","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","csv","blob","url","_context15","Blob","URL","createObjectURL","document","createElement","setAttribute","appendChild","click","removeChild","_marked15","_context16","_marked16","_context17","takeLatest","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","_context22","_marked22","_context23","_marked23","_context24","_marked24","_context25","_marked25","_context26","_marked26","_context27","_marked27","_context28","_marked28","_context29","_marked29","_context30","_marked30","_context31","_marked31","_context32","_marked32","_context33","all","_marked33","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","colors","orange","backgroundGray","aqua","errorYellow","withStyles","theme","centered","position","top","props","classes","react_default","CircularProgress","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleClick","handleChange","event","setState","target","wrapper","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","warningCaption","Grid","container","alignItems","justify","spacing","item","TextField","margin","name","onChange","placeholder","descriptionField","Button","disabled","color","onClick","Components_LoadingSpinner","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","fontSize","useEffect","Link","component","RouterLink","to","pathname","toggleShowHelp","TopNavBar","handleLogOut","clearState","username","password","handleNavigate","route","history","handleOutsideNavigate","open","_this$props","navWrapper","href","navLink","rightNavLink","withRouter","appBar","backgroundColor","boxShadow","toolBar","zIndex","paddingLeft","textAlign","boxSizing","textDecoration","marginRight","&:hover","fontWeight","display","cursor","float","rightLinkWrapper","Home","Fragment","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping1","tableMapping2","title","padding","height","infoCard","gridClass","maxHeight","gridItem","justifyContent","verticalAlign","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","maxWidth","variableDetailTable","marginLeft","tableLayout","variableDetailTableRow","variableDetailTableCell","borderBottomColor","textOverflow","paddingRight","gridDetailTypography","boldText","rightGridItem","datasetDescriptionButton","buttonTextWrapper","xs","src","context","Dataset_Name","Icon_URL","alt","Time_Min","Time_Max","Depth_Max","direction","alignContent","Data_Source","Distributor","handleDescribeDataset","markdown","& img","& a","palette","primary","main","Dialog","onClose","clearDescription","DialogTitle","DialogContent","react_markdown_default","source","tooltip","secondary","opacity","Tooltip","placement","popper","children","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","describedDataset","dataset","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","onGridSizeChanged","handleColumnRowGroupChanged","forEach","column","setColumnVisible","colId","handleDownloadCatalog","header","render","gridPaper","Components_DatasetDescriptionDialog","Components_ConnectedTooltip","gridSearch","autoFocus","label","InputLabelProps","shrink","downloadButton","gridWrapper","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","enableCellTextSelection","suppressContextMenu","getRowStyle","node","detail","background","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","detailGridOptions","textTransform","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","firstName","optional","lastName","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","validation","depthOneIsLower","depthOneOutOfBounds","depthTwoOutOfBounds","negative","date","dateOneIsLater","dateOneOutOfBounds","dateTwoOutOfBounds","latOneIsHigher","latOneOutOfBounds","latTwoOutOfBounds","lonOneIsHigher","lonOneOutOfBounds","lonTwoOutOfBounds","dataIsIrregular","dateRangeRequired","depthRangeRequired","surfaceOnlyDataset","irregularOnly","dataSizeTooLarge","webGLContextLimit","generic","invalid","dataSizeWarning","dataSizePrevent","variableMissing","vizTypeMissing","Long_Name","Comment","DialogContentText","Sensor","Lat_Min","Lat_Max","Lon_Min","Lon_Max","Variable_Min","Unit","Variable_Max","Variable_Mean","Variable_Std","mapTemporalResolutionToNumber","utcDateStringToLocal","utcString","utcYear","getUTCFullYear","utcMonth","getUTCMonth","utcDate","getUTCDate","newDate","setFullYear","darwinDepths","piscesDepths","piscesTable","darwinTable","exports","depth1","depth2","has","countWebGLContexts","chart","visualizationSubTypes","overrideDisabledStyle","clearCharts","getDatePlaceholder","valueOf","month","getMonth","day","getDate","getFullYear","groupHeaderHeight","reactWindowListRef","React","createRef","selectRef","MenuList","componentDidUpdate","prevProps","prevState","current","resetAfterIndex","scrollOffset","foundFocus","child","groupHasFocus","isFocused","scrollTo","options","getValue","_getValue","slicedToArray","initialOffset","indexOf","groupHeights","some","grandChild","totalHeight","acc","cur","estimatedItemSize","dist_index_esm","itemCount","itemSize","initialScrollOffset","ref","_ref","style","Group","hasFocus","element","sensor","CustomHeading","assign","headingProps","headingLabel","firstChild","selectProps","hidden","customHeading","icon","typography","iconClass","ListItem","select","focusedOption","Icon","IconButton","handleSetDownloadTarget","onAutoSuggestChange","stopPropagation","CloudDownload","Doc_URL","Info","DropdownIndicator","chunk_5d200a41_browser_esm","ArrowRight","Option","innerProps","onMouseMove","preventDefault","onMouseOver","GroupHeading","formatOptionLabel","option","meta","VizControlPanel","search","addDocuments","handleOpenControlPanel","showControlPanel","handleCloseControlPanel","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","getSelectOptionsFromCatalogItems","items","Variable","values","sort","opt1","opt2","estimateCsvSize","member","parseInt","Variable_Count","handleDownloadCsvClick","handleResetSPParams","resetSPParams","searchField","searchString","estimateDataSize","_this2$props","dt1","dt2","lat1","lat2","lon2","selectedVizType","date1","dayDiff","res","dateCount","depthUtils","checkStartDepth","surfaceOnly","replace","toFixed","checkEndDepth","checkStartDateValid","checkEndDateValid","checkStartDate","checkEndDate","checkStartLat","checkEndLat","checkStartLon","checkEndLon","checkHeatmap","irregularSpatialResolution","checkContour","checkSection","checkHistogram","checkTimeSeries","checkDepthProfile","checkSparseMap","checkGeneralWarn","dataSize","checkGeneralPrevent","webGLCount","handleShowChartsAndResize","setTimeout","dispatchEvent","Event","handleShowCharts","JsSearch","indexStrategy","searchIndex","addIndex","maxDateMessage","maxDate","_this3","_this$state","_this$props2","showCharts","handleShowGlobe","handleLatLonChange","catalogMinDate","setHours","catalogMaxDate","zeroedDT1","zeroedDT2","minDate","minDateMessage","_validations","fill","_validations2","startDepthMessage","endDepthMessage","startLatMessage","endLatMessage","startLonMessage","endLonMessage","heatmapMessage","contourMessage","sectionMapMessage","histogramMessage","timeSeriesMessage","depthProfileMessage","sparseMapMessage","generalWarnMessage","checkDisableVisualizeList","errorCount","errorSizeAdjust","disableVisualizeMessage","checkDisableVisualize","visualizeButtonTooltip","Components_TableStatsDialog","closePanelChevron","aria-label","ChevronLeft","openPanelChevron","ChevronRight","Drawer","drawer","paper","drawerPaper","anchor","ButtonGroup","groupedButtons","depressed","Language","InsertChartOutlined","clearChartsButton","Delete","resetSPParamsButton","Cached","react_select_browser_esm","isLoading","components","IndicatorSeparator","escapeClearsValue","onInputChange","filterOption","variableSelect","isClearable","inputValue","updateFields","styles","menu","provided","borderRadius","backdropFilter","valueContainer","input","fontFamily","control","border","borderBottom","borderColor","&:focus-within","noOptionsMessage","_ref2","singleValue","tableStatsButton","LibraryBooks","material_ui_pickers_esm","datePicker","format","autoOk","handleStartDateChange","inputVariant","KeyboardButtonProps","datePickerInputAdornment","handleEndDateChange","formGridItem","FormHelperTextProps","InputProps","padLeft","FormControl","vizTypeSelectFormControl","InputLabel","htmlFor","Select","inputProps","MenuItem","vizButtonTooltip","visualizeButton","onVisualize","fullWidth","bottom","drawerPaperError1","drawerPaperError2","drawerPaperError3","drawerPaperError4","drawerPaperError5","navDrawerWidth","controlPanelForm","borderLeft","&:disabled","fontVariant","borderRight","tableStatsRequestSend","DownloadConfirmationDialog","downloadTarget","find","handleFullDatasetDownload","variable","handleSubsetDownload","sampleMember","timeMin","timeMax","subsetLat1","subsetLat2","subsetLon1","subsetLon2","subsetTime1","subsetTime2","depthMin","depthMax","subsetDepth1","subsetDepth2","dateRatio","totalRows","totalColumns","Variables","split","totalDataPoints","fullDataAvailable","totalDays","subsetDays","totalLatSize","subsetLatSize","latRatio","totalLonSize","subsetLonSize","lonRatio","depthRatio","totalDepthSize","subsetDepthSize","subsetDataPoints","subsetAvailable","timeString1","timeString2","timeStringMin","timeStringMax","tableFooter","DialogActions","handleXTicks","infoObject","sectionSize","lonRange","tickvals","ceil","ticktext","tickmode","handleChartDatestring","dateString","chartBase","layout","font","paper_bgcolor","config","displaylogo","annotations","distributor","xref","yref","yshift","showarrow","colorscaleOptions","chartWrapper","popover","paddingBottom","iconButton","colorForm","lastIcon","borderTopRightRadius","borderBottomRightRadius","buttonGroup","colorscaleMenu","onToggleSplitByDate","onToggleSplitBySpace","onToggleSplitByDepth","switchOrientation","downloadCsv","handleZValueConfirm","zValues","markerOptions","handleMarkerOptionsConfirm","_useState","useState","_useState2","paletteAnchorElement","setPaletteAnchorElement","_React$useState","_React$useState2","zScalePopoverAnchorElement","setZScalePopoverAnchorElement","_React$useState3","_React$useState4","localZMin","setLocalZMin","_React$useState5","_React$useState6","localZMax","setLocalZMax","zScalePopoverOpen","zScalePopoverID","handleZScalePopoverClose","zScaleValidations","zMinMessage","zMaxMessage","_React$useState7","_React$useState8","markerOptionsAnchorElement","setMarkerOptionsAnchorElement","_React$useState9","_React$useState10","localMarkerOpacity","setLocalMarkerOpacity","_React$useState11","_React$useState12","localMarkerColor","setLocalMarkerColor","_React$useState13","_React$useState14","localMarkerSize","setLocalMarkerSize","previousOpacity","useRef","usePreviousOpacity","previousColor","usePreviousColor","previousSize","usePreviousSize","markerPopoverOpen","markerPopoverID","handleMarkerOptionsClose","markerOptionsValidations","checkLocalMarkerOpacity","checkLocalMarkerSize","localMarkerOpacityMessage","localMarkerSizeMessage","DateRange","LineWeight","currentTarget","SwapVert","handlePaletteChoice","Palette","Gamepad","Menu","anchorEl","keepMounted","Popover","anchorOrigin","vertical","horizontal","transformOrigin","OutlinedInput","aria-describedby","labelWidth","FormHelperText","buttonBlock","iconButtonWrapper","plots","_props$chart","setSplitByDate","_useState3","_useState4","setSplitByDepth","_useState5","_useState6","subTypeState","_useState7","_useState8","setPalette","_useState9","_useState10","setZValues","_zValues","subSets","generatePlotData","subsets","xTicks","variableName","handleDateString","hovertext","formatter","react_plotly_default","zauto","zmin","zmax","x","y","z","connectgaps","autocolorscale","colorscale","hoverinfo","contours","coloring","showlabels","labelfont","family","labelformat","colorbar","exponentformat","xaxis","yaxis","handleContourMap","zsmooth","handleHeatmap","handleHistogram","ChartComponents_ChartControlPanel","requestAnimationFrame","setMarkerOptions","mode","error_y","array","visible","line","marker","plot_bgcolor","error_x","autorange","setSplitBySpace","setOrientation","spaces","distinctMeridiansOrParallelsForSplitting","mergedOrSplitAxis","xAxis","spaceTitle","handleSectionMap","SparseScatter","xValues","yValues","xTitle","yTitle","tabProps","aria-controls","SparseTabPanel","selectedTab","controlPanelProps","tabs","tab","setTab","plot","mapbox","sourcetype","below","mapboxAccessToken","handleSparseMap","scatter","Tabs","indicatorColor","Tab","SparseMap_SparseTabPanel","ChartComponents_SparseScatter","deleteChart","CloseChartIcon","closeChartIcon","handleDeleteChart","disableFocusRipple","disableRipple","Close","Charts","chartPaper","ChartComponents_SparseMap","ChartComponents_SparseHistogram","ChartComponents_SpaceTimeChart","ChartComponents_TimeSeriesChart","ChartComponents_DepthProfileChart","ChartComponents_SectionMapChart","chartsContainer","cruiseTrajectoryClear","esriFonts","SingleValue","cruiseSort","b","Name","CruiseSelector","getSelectOptionsFromCruiseList","list","handleCruiseSelect","selection","ID","selectedCruise","updateParametersFromCruiseBoundary","outerDiv","blurEffectDiv","getCruiseListState","cruiseSelect","menuList","primary25","cruiseInfo","cruiseInfoCell","Nickname","Start_Time","End_Time","Chief_Name","Ship_Name","borderStyle","DrawButton","drawButton","helpText","cancelButton","polygonSymbol","symbolLayers","material","outline","polylineSymbol","r","g","UiComponents","shouldComponentUpdate","nextProps","nextState","sketchModel","esriModules","SketchViewModel","layer","regionLayer","view","defaultUpdateOptions","toggleToolOnClick","tool","setShowHelp","getElementById","throttledUpdate","throttle","updateDomainFromGraphicExtent","Utils","webMercatorToGeographic","graphic","geometry","toolEventInfo","graphics","addEventListener","removeAll","create","cancel","ui","remove","TrajectoryController","memo","trajectoryLayer","polyLines","lineIndex","lonStart","latStart","maxDistance","_lonDistance","cruiseTrajectorySymbol","cap","cruiseTrajectoryGeometry","paths","Graphic","symbol","goTo","maxDuration","speedFactor","MapContainer","_this3$props","spParams","globeUIRef","_lon2","polygon","rings","regionGraphic","esm","mapProperties","basemap","viewProperties","highlightOptions","haloOpacity","haloColor","fillOpacity","MapContainer_UiComponents","measurementPositions","Components_CruiseSelector","GraphicsLayer","cleanSPParams","localDateToString","year","toString","mapVizType","vizType","_mapping","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","completedShowCharts","baseSPParams","Visualization","filteredData","showUI","_this$state$spParams","mapping","cruise","toggleShowUI","_lon1","xmin","xmax","newCoordinates","ymin","ymax","esriModuleNames","loadModules","version","loadedModules","accumulator","currentValue","currentIndex","Components_DownloadConfirmationDialog","Components_VizControlPanel","toggleChartView","displayNone","Components_MapContainer","Components_Charts","userLoginRequestSend","LoginDialog","handleLogin","handleClose","aria-labelledby","onSubmit","snackbarClose","centerText","Snackbar","autoHideDuration","loader","right","loaderContent","flexDirection","alignItem","spinnerText","spinner","dist","fadeIn","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","Components_LoginDialog","Components_SnackbarWrapper","Components_LoadingOverlay","inlineBlock","LandingPage","landingWrapper","welcomeMessage","createMuiTheme","useNextVariants","contrastText","default","overrides","MuiIconButton","MuiListItemIcon","MuiFormHelperText","filled","MuiListItem","gutters","MuiToolbar","MuiOutlinedInput","&$focused","MuiButtonGroup","groupedOutlined","&:not(:first-child)","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","MuiFilledInput","inputSelect","adornedEnd","App","vizRef","utils","DateFnsUtils","MuiThemeProvider","react_router_dom","Components_GlobalUIComponentWrapper","react_router","exact","path","LicenseManager","setLicenseKey","rootElement","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9e4490b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';\r\n\r\nexport const DATASET_RETRIEVAL_REQUEST_SEND = 'DATASET_CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const DATASET_RETRIEVAL_REQUEST_SUCCESS = 'DATASET_CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const DATASET_RETRIEVAL_REQUEST_FAILURE = 'DATASET_CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const DATASET_RETRIEVAL_REQUEST_PROCESSING = 'DATASET_CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';\r\n\r\nexport const REFRESH_LOGIN = 'REFRESH_LOGIN';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    case interfaceActionTypes.SET_LOADING_MESSAGE: return {...state, loadingMessage: action.payload.message}\r\n    \r\n    case interfaceActionTypes.TOGGLE_SHOW_HELP: return {...state, showHelp: !state.showHelp}\r\n    \r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\nexport const DELETE_CHART = 'DELETE_CHART';\r\n\r\nexport const TABLE_STATS_REQUEST_SEND = 'ABLE_STATS_REQUEST_SEND';\r\nexport const TABLE_STATS_REQUEST_PROCESSING = 'TABLE_STATS_REQUEST_PROCESSING';\r\nexport const TABLE_STATS_REQUEST_SUCCESS = 'TABLE_STATS_REQUEST_SUCCESS';\r\nexport const TABLE_STATS_REQUEST_FAILURE = 'TABLE_STATS_REQUEST_FAILURE';\r\n\r\nexport const CRUISE_TRAJECTORY_REQUEST_SEND = 'CRUISE_TRAJECTORY_REQUEST_SEND';\r\nexport const CRUISE_TRAJECTORY_REQUEST_SUCCESS = 'CRUISE_TRAJECTORY_REQUEST_SUCCESS';\r\nexport const CRUISE_TRAJECTORY_REQUEST_FAILURE = 'CRUISE_TRAJECTORY_REQUEST_FAILURE';\r\nexport const CRUISE_TRAJECTORY_REQUEST_PROCESSING = 'CRUISE_TRAJECTORY_REQUEST_PROCESSING';\r\nexport const CRUISE_TRAJECTORY_CLEAR = 'CRUISE_TRAJECTORY_CLEAR';\r\n\r\nexport const CRUISE_LIST_REQUEST_SEND = 'CRUISE_LIST_REQUEST_SEND';\r\nexport const CRUISE_LIST_REQUEST_SUCCESS = 'CRUISE_LIST_REQUEST_SUCCESS';\r\nexport const CRUISE_LIST_REQUEST_FAILURE = 'CRUISE_LIST_REQUEST_FAILURE';\r\nexport const CRUISE_LIST_REQUEST_PROCESSING = 'CRUISE_LIST_REQUEST_PROCESSING';\r\n\r\nexport const TRIGGER_SHOW_CHARTS = 'TRIGGER_SHOW_CHARTS';\r\nexport const COMPLETED_SHOW_CHARTS = 'COMPLETED_SHOW_CHARTS';\r\n\r\nexport const CSV_DOWNLOAD_REQUEST_SEND = 'CSV_DOWNLOAD_REQUEST_SEND';\r\nexport const CSV_DOWNLOAD_REQUEST_SUCCESS = 'CSV_DOWNLOAD_REQUEST_SUCCESS';\r\nexport const CSV_DOWNLOAD_REQUEST_FAILURE = 'CSV_DOWNLOAD_REQUEST_FAILURE';\r\nexport const CSV_DOWNLOAD_REQUEST_PROCESSING = 'CSV_DOWNLOAD_REQUEST_PROCESSING';\r\n\r\nexport const DOWNLOAD_TEXT_AS_CSV = 'DOWNLOAD_TEXT_AS_CSV';","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n    datasetRequestState: null,\r\n    datasets: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n    loadingMessage: '',\r\n    showHelp: false,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    getCruiseTrajectoryRequestState: null,\r\n    cruiseTrajectory: null,\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    cruiseList: [],\r\n    getCruiseListRequestState: null,\r\n    showChartsOnce: null\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SUCCESS: return {...state,\r\n      datasetsRequestState: states.succeeded, \r\n      datasets: action.payload.datasets\r\n    }\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_FAILURE: return {...state, datasetsRequestState: states.failed}\r\n    case catalogActionTypes.DATASET_RETRIEVAL_REQUEST_PROCESSING: return {...state, datasetsRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';\r\n\r\nexport const SET_LOADING_MESSAGE = 'SET_LOADING_MESSAGE';\r\n\r\nexport const TOGGLE_SHOW_HELP = 'TOGGLE_SHOW_HELP';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.DELETE_CHART: return {...state, \r\n            charts: [\r\n                ...state.charts.slice(0, action.payload.chartIndex),\r\n                ...state.charts.slice(action.payload.chartIndex + 1)\r\n            ]\r\n        }\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING: return {...state, getCruiseTrajectoryRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS: return {...state,\r\n            cruiseTrajectory: action.payload.trajectory,\r\n            getCruiseTrajectoryRequestState: states.succeeded\r\n        }\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR: return {...state, cruiseTrajectory: null}\r\n\r\n        case visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE: return {...state, getCruiseTrajectoryRequestState: states.failed}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING: return {...state, getCruiseListRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS: return {\r\n            ...state,\r\n            getCruiseListRequestState: states.succeeded,\r\n            cruiseList: action.payload.cruiseList\r\n        }\r\n\r\n        case visualizationActionTypes.TRIGGER_SHOW_CHARTS: return {...state, showChartsOnce: true}\r\n        case visualizationActionTypes.COMPLETED_SHOW_CHARTS: return {...state, showChartsOnce: false}\r\n\r\n        case visualizationActionTypes.TABLE_STATS_REQUEST_SUCCESS: return {\r\n            ... state, \r\n            datasets: {\r\n                ...state.datasets,\r\n                [action.payload.datasetLongName]: {\r\n                    ...state.datasets[action.payload.datasetLongName],\r\n                    tableStats: action.payload.tableStats\r\n                }\r\n            }}\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n\r\nexport const refreshLogin = () => ({\r\n    type: userActionTypes.REFRESH_LOGIN\r\n})","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const datasetRetrievalRequestSend = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const datasetRetrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const datasetRetrievalRequestSuccess = (datasets) => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        datasets\r\n    }\r\n})\r\n\r\nexport const datasetRetrievalRequestFailure = () => ({\r\n    type: catalogActionTypes.DATASET_RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})\r\n\r\nexport const setLoadingMessage = (message) => ({\r\n    type:interfaceActionTypes.SET_LOADING_MESSAGE,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const toggleShowHelp = () => ({\r\n    type: interfaceActionTypes.TOGGLE_SHOW_HELP\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const deleteChart = (chartIndex) => ({\r\n    type: visualizationActionTypes.DELETE_CHART,\r\n    payload: {\r\n        chartIndex\r\n    }\r\n})\r\n\r\nexport const tableStatsRequestSend = (tableName, datasetLongName) => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_SEND,\r\n    payload: {\r\n        tableName,\r\n        datasetLongName\r\n    }\r\n})\r\n\r\nexport const tableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const tableStatsRequestSuccess = (tableStats, datasetLongName) => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_SUCCESS,\r\n    payload: {\r\n        tableStats,\r\n        datasetLongName\r\n    }\r\n})\r\n\r\nexport const tableStatsRequestFailure = () => ({\r\n    type: visualizationActionTypes.TABLE_STATS_REQUEST_FAILURE\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestSuccess = (trajectory) => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SUCCESS,\r\n    payload: {\r\n        trajectory\r\n    }\r\n})\r\n\r\nexport const cruiseTrajectoryRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseTrajectoryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const cruiseTrajectoryClear = () => ({\r\n    type: visualizationActionTypes.CRUISE_TRAJECTORY_CLEAR\r\n})\r\n\r\nexport const cruiseListRequestSend = (id) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SEND,\r\n})\r\n\r\nexport const cruiseListRequestSuccess = (cruiseList) => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_SUCCESS,\r\n    payload: {\r\n        cruiseList\r\n    }\r\n})\r\n\r\nexport const cruiseListRequestFailure = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_FAILURE,\r\n})\r\n\r\nexport const cruiseListRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CRUISE_LIST_REQUEST_PROCESSING,\r\n})\r\n\r\nexport const triggerShowCharts = () => ({\r\n    type: visualizationActionTypes.TRIGGER_SHOW_CHARTS\r\n})\r\n\r\nexport const completedShowCharts = () => ({\r\n    type: visualizationActionTypes.COMPLETED_SHOW_CHARTS\r\n})\r\n\r\nexport const csvDownloadRequestSend = (query, fileName) => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SEND,\r\n    payload: {\r\n        query,\r\n        fileName\r\n    }\r\n})\r\n\r\nexport const csvDownloadRequestFailure = () => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_FAILURE\r\n})\r\n\r\nexport const csvDownloadRequestProcessing = () => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_PROCESSING\r\n})\r\n\r\nexport const csvDownloadRequestSuccess = (text) => ({\r\n    type: visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SUCCESS,\r\n    payload: {\r\n        text\r\n    }\r\n})\r\n\r\n//dataset download\r\nexport const downloadTextAsCsv = (text, datasetName) => ({\r\n    type: visualizationActionTypes.DOWNLOAD_TEXT_AS_CSV,\r\n    payload: {\r\n        text,\r\n        datasetName\r\n    }\r\n})","// export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\nexport const apiUrl = 'https://simonscmap.dev';","const spatialResolutions = {\r\n    irregular: 'Irregular',\r\n    halfDegree: '1/2° X 1/2°' ,\r\n    quarterDegree: '1/4° X 1/4°' ,\r\n    twentyFifthDegree: '1/25° X 1/25°' ,\r\n    fourKm: '4km X 4km',\r\n    twelfthDegree: '1/12° X 1/12°',\r\n    seventyKm: '70km X 70km',\r\n    oneDegree: '1° X 1°'\r\n}\r\n\r\nexport default spatialResolutions;","import spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nconst mapSpatialResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [spatialResolutions.halfDegree] : .5,\r\n        [spatialResolutions.quarterDegree] : .25,\r\n        [spatialResolutions.twentyFifthDegree] : .04,\r\n        [spatialResolutions.fourKm] : .041672,\r\n        [spatialResolutions.twelfthDegree] : .083333,\r\n        [spatialResolutions.oneDegree] : 1,\r\n        [spatialResolutions.seventyKm] : .25\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapSpatialResolutionToNumber;","// Flattens an array by 1 level\r\n// [[[],[]], [[],[]], [[],[]]] => [[], [], [], [], [], []]\r\n\r\nconst flattenArray = (arr) => {\r\n    let flattenedArray = [];\r\n\r\n    for(let i = 0; i < arr.length; i++){\r\n        for(let j = 0; j < arr[i].length; j++){\r\n            flattenedArray.push(arr[i][j]);\r\n        }\r\n    }\r\n\r\n    return flattenedArray;\r\n}\r\n\r\nexport default flattenArray;","// Interval is number of indices between changes in this parameter, or in order words\r\n// how many times will we see the same value for this parameter in a row before it changes\r\n// as we iterate through the values array.\r\n// We use modulo for cases where data.length / interval is larger than the number of \r\n// distinct values for that parameter.\r\n\r\nconst splitData = (data, changeInterval, numDistinct) => {\r\n    var splitData = [];\r\n\r\n    for(let i = 0; i < numDistinct; i++){\r\n        splitData.push([]);\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        let index = Math.floor(i / changeInterval) % numDistinct;\r\n        splitData[index].push(data[i]);\r\n    }\r\n\r\n    return splitData;\r\n}\r\n\r\nexport default splitData;","// mergeTargetDistance - number of hops between arrays being merged\r\n// mergeTargetNumber - number of arrays being merged - implicit\r\n// nextStartDistance - once a merge is complete how many hops to next start\r\nconst mergeArraysAndComputeMeans = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n    \r\n    // Find each merging start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        // Iterate through each value in the first array of this merge. Count\r\n        // the number of values summed so we can ignore nulls and compute a mean.\r\n        for(let j = 0; j < data[i].length; j ++){\r\n            let sum = 0;\r\n            let count = 0;\r\n\r\n            // Aggregate values of all merge targets\r\n            for(let k = i; k < i + (mergeTargetDistance * numArraysPerMerge); k += mergeTargetDistance){\r\n                if(isNaN(data[k][j])) {\r\n                    continue;\r\n                } else {                    \r\n                    sum += data[k][j];\r\n                    count ++;\r\n                }\r\n            }\r\n            subArray.push(count < 1 ? null : sum / (count));\r\n        }\r\n\r\n        mergedArrays.push(subArray)\r\n    }\r\n\r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArraysAndComputeMeans;","const mergeArrays = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n\r\n    // Find each merge start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        for(let j = i; j <= i + travelDistance; j += mergeTargetDistance){\r\n            subArray = [...subArray, ...data[j]];\r\n        }\r\n\r\n        mergedArrays.push(subArray);\r\n    }\r\n   \r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArrays;\r\n\r\n","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    contourSectionMap: 'Contour Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    heatmap: 'Heatmap',\r\n    contourMap: 'Contour Map',\r\n    sparse: 'Sparse'\r\n}\r\n\r\nexport default subTypes;","const temporalResolutions = {\r\n    threeMinutes: 'Three Minutes',\r\n    sixHourly: 'Six Hourly',\r\n    daily: 'Daily',\r\n    weekly: 'Weekly',\r\n    monthly: 'Monthly',\r\n    annual: 'Annual',\r\n    irregular: 'Irregular',\r\n    monthlyClimatology: 'Monthly Climatology',\r\n    threeDay: 'Three Days',\r\n    eightDayRunning: 'Eight Day Running',\r\n    eightDays: 'Eight Days '\r\n}\r\n\r\nexport default temporalResolutions;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/mergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nclass SpaceTimeData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n\r\n        this.hasDepth = null;\r\n        this.hasHours = null;\r\n        this.isMonthly = null;\r\n\r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n        this.indexAdjust = null;\r\n        this.payload = payload;\r\n        this.lats = [];\r\n        this.lons = [];\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n\r\n        this.distinctLatCount = null;\r\n        this.distinctLonCount = null;\r\n    }\r\n\r\n    add(row) {\r\n        \r\n        let lat = parseFloat(row[1]);\r\n        let _lon = parseFloat(row[2]);\r\n        let lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n\r\n        if(this.hasDepth === null) {\r\n            this.hasHour = this.metadata.Table_Name === 'tblWind_NRT';\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n            this.hasDepth = row.length === 5 && !this.hasHour;\r\n            this.indexAdjust = this.hasDepth || this.hasHour? 1 : 0;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n        }\r\n\r\n        let value = parseFloat(row[3 + this.indexAdjust]);\r\n\r\n        if(this.hasDepth){\r\n            this.depths.add(row[3]);\r\n        }\r\n\r\n        var time;\r\n        if(this.hasHour){\r\n            time = new Date(row[0]);\r\n            time.setUTCHours(row[3])\r\n            time = time.toISOString();\r\n        } else time = row[0];\r\n        this.dates.add(time);\r\n        this.lats.push(lat);\r\n\r\n        this.lons.push(lon);\r\n\r\n        if(lon < this.lonMin) this.lonMin = lon;\r\n        if(lon > this.lonMax) this.lonMax = lon;\r\n        if(lat < this.latMin) this.latMin = lat;\r\n        if(lat > this.latMax) this.latMax = lat;\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n\r\n        if(this.depths.size === 0) this.depths.add('Surface');\r\n\r\n        this.lonCount = this.lons.length / this.dates.size / this.depths.size;\r\n        this.latCount = this.lats.length / this.dates.size / this.depths.size;\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : parseFloat(quantile1.toPrecision(4));\r\n        this.zMax = quantile2 === undefined ? null : parseFloat(quantile2.toPrecision(4));\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n        \r\n        this.distinctLatCount = Math.round((this.latMax - this.latMin) / spatialResolution) + 1;\r\n        this.distinctLonCount = Math.round((this.lonMax - this.lonMin) / spatialResolution) + 1;\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {        \r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const latInterval = this.distinctLonCount;\r\n        const depthInterval = latInterval * this.distinctLatCount;\r\n        const dateInterval = depthInterval * this.depths.size;\r\n\r\n        // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n        variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, depthInterval, this.depths.size));\r\n        variableValueSubsets = flattenArray(variableValueSubsets);\r\n\r\n        // Contour and heatmap compute mean variable values per lat and lon\r\n        // when not split by date and/or time\r\n        if(subType === vizSubTypes.contourMap || subType === vizSubTypes.heatmap) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    this.depths.size, \r\n                    this.depths.size\r\n                    );\r\n    \r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    this.depths.size, \r\n                    1, \r\n                    this.dates.size\r\n                    );\r\n    \r\n            } else {\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    variableValueSubsets.length, \r\n                    variableValueSubsets.length\r\n                    );            \r\n            }\r\n        } \r\n        \r\n        // Histograms split and aggregate without computing means\r\n        else if (subType === vizSubTypes.histogram) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets, \r\n                    1,\r\n                    this.depths.size,\r\n                    this.depths.size\r\n                    );\r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets,\r\n                    this.depths.size,\r\n                    1,\r\n                    this.dates.size\r\n                );\r\n            } else {\r\n                variableValueSubsets = [this.variableValues];\r\n            }\r\n        }\r\n\r\n        // Nothing here yet\r\n        else {}\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${depths[Math.floor(i / (this.variableValues.length / (dates.length * depths.length))) % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i] > 180 ? this.lons[i] - 360 : this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SpaceTimeData;","const storedProcedures = {\r\n    sectionMap: 'uspSectionMap',\r\n    timeSeries: 'uspTimeSeries',\r\n    spaceTime: 'uspSpaceTime',\r\n    depthProfile: 'uspDepthProfile'\r\n}\r\n\r\nexport default storedProcedures;","class TimeSeriesData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.dates = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depth = null;\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.depthIndexAdjust = row.length === 6 ? 1 : 0;\r\n            this.lat = row[1];\r\n            this.lon = row[2];\r\n            this.depth = row.length === 6 ? row[3] : false;\r\n        }\r\n\r\n        this.variableValues.push(row[3 + this.depthIndexAdjust]);\r\n        this.stds.push(row[4 + this.depthIndexAdjust]);\r\n        this.dates.push(row[0]);\r\n    }\r\n\r\n    finalize() {\r\n        if(this.depth === false) this.depth = 'Surface';\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }    \r\n\r\n    generateCsv() {\r\n        let csvString = `time,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.dates[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default TimeSeriesData;","class DepthProfileData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depths = [];\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.lat = parseFloat(row[0]);\r\n            this.lon = parseFloat(row[1]);\r\n        }\r\n\r\n        this.variableValues.push(parseFloat(row[2]));\r\n        this.stds.push(parseFloat(row[3]));\r\n        this.depths.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        // pass\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }\r\n    \r\n    generateCsv() {\r\n        let csvString = `depth,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]},${isNaN(this.stds[i]) ? '' : this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default DepthProfileData;","export default [\r\n    null,\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n]","import { quantile, extent } from 'd3-array';\r\n\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nimport months from '../Enums/months';\r\n\r\nclass SectionMapData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.subType = payload.subType\r\n        \r\n        this.dates = new Set();\r\n        this.depths = new Set();\r\n        this.lats = new Set();\r\n        this.lons = new Set();\r\n\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n\r\n        this.variableValues = [];\r\n        \r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.orientation = null;\r\n    }\r\n\r\n    // time, lat, lon, depth, value\r\n    add(row) {        \r\n        const time = row[0];\r\n        const lat = parseFloat(row[1]);\r\n        var _lon = parseFloat(row[2]);\r\n        const lon = _lon < this.parameters.lon1 ? _lon + 360 : _lon;\r\n        const depth = parseFloat(row[3]);\r\n        const value = parseFloat(row[4]);\r\n\r\n        if(this.variableValues.length === 0) {\r\n            this.isMonthly = this.metadata.Temporal_Resolution === temporalResolutions.monthlyClimatology;\r\n        }        \r\n\r\n        this.depths.add(depth);\r\n        this.dates.add(this.isMonthly ? months[time] : time);\r\n        this.lats.add(lat);\r\n        this.lons.add(lon);\r\n\r\n        this.variableValues.push(value);\r\n    }\r\n\r\n    finalize() {\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : parseFloat(quantile1.toPrecision(4));\r\n        this.zMax = quantile2 === undefined ? null : parseFloat(quantile2.toPrecision(4));\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        this.orientation = this.lons.size > this.lats.size ? 'zonal' : 'meridional';\r\n\r\n        let lonArray = Array.from(this.lons);\r\n        this.lonMax = Math.max(...lonArray);\r\n        this.lonMin = Math.min(...lonArray);\r\n        // console.log(this.variableValues);\r\n    }\r\n\r\n    // Direction is meridional or zonal\r\n    generatePlotData(orientation, splitByDate, splitBySpace) {\r\n        let latCount = this.lats.size;\r\n        let lonCount = this.lons.size;\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const lonInterval = this.depths.size;\r\n        const latInterval = lonInterval * lonCount;\r\n        const dateInterval = latInterval * latCount;\r\n\r\n        var variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n\r\n        var spaceCount;\r\n\r\n        if(orientation === 'zonal') {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, latInterval, latCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = latCount;\r\n        }\r\n\r\n        else {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, lonInterval, lonCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = lonCount;\r\n        }\r\n\r\n        // console.log('Split by space');\r\n        // console.log(variableValueSubsets);\r\n\r\n        if(splitByDate && splitBySpace){\r\n            // pass\r\n        } else if (splitByDate){\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                spaceCount,\r\n                spaceCount\r\n            )\r\n        } else if (splitBySpace) {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                spaceCount,\r\n                1,\r\n                this.dates.size\r\n            )\r\n        } else {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                variableValueSubsets.length,\r\n                variableValueSubsets.length\r\n            )\r\n        }\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n        let lons = Array.from(this.lons);\r\n        let lats = Array.from(this.lats);\r\n\r\n        const lonInterval = depths.length;\r\n        const latInterval = lonInterval * lons.length;\r\n\r\n        var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${lats[Math.floor(i / latInterval) % lats.length]},${lons[Math.floor(i / lonInterval) % lons.length]},${depths[i % depths.length]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SectionMapData;","import { quantile, extent } from 'd3-array';\r\n\r\nclass SparseData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = null;\r\n        this.variableIndex = payload.metadata.Depth_Min ? 4 : 3;\r\n        this.depths = [];\r\n        this.times = [];\r\n        this.variableValues = [];\r\n        this.lats = [];\r\n        this.lons = [];\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.latMin = null;\r\n        this.latMax = null;\r\n        this.lonMin = null;\r\n        this.lonMax = null;\r\n    }\r\n\r\n    add(row) {\r\n        let lat = parseFloat(row[1]);\r\n        let lon = parseFloat(row[2]);\r\n\r\n        if(this.hasDepth === null){\r\n            this.hasDepth = Boolean(this.metadata.Depth_Min);\r\n            this.latMin = lat;\r\n            this.latMax = lat;\r\n            this.lonMin = lon;\r\n            this.lonMax = lon;\r\n        }\r\n\r\n        if(row[this.variableIndex]){\r\n\r\n            this.times.push(row[0]);\r\n            this.lats.push(lat);\r\n            this.lons.push(lon);\r\n            if(this.hasDepth) this.depths.push(parseFloat(row[3]));\r\n            this.variableValues.push(parseFloat(row[this.variableIndex]));\r\n\r\n            if(lat < this.latMin) this.latMin = lat;\r\n            if(lat > this.latMax) this.latMax = lat;\r\n            \r\n            if(lon < this.lonMin) this.lonMin = lon;\r\n            if(lon > this.lonMax) this.lonMax = lon;\r\n        }\r\n    }\r\n\r\n    finalize() {\r\n\r\n        let quantile1 = quantile(this.variableValues, .05);\r\n        let quantile2 = quantile(this.variableValues, .95);\r\n        this.zMin = quantile1 === undefined ? null : quantile1.toPrecision(4);\r\n        this.zMax = quantile2 === undefined ? null : quantile2.toPrecision(4);\r\n\r\n        this.extent = extent(this.variableValues);\r\n\r\n        let latDistance = Math.abs(this.latMax - this.latMin);\r\n        let lonDistance = Math.abs(this.lonMax - this.lonMin);\r\n        let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n\r\n        console.log('Distance: ', distance);\r\n\r\n        let _zoom = 4 - Math.floor(distance / 12);\r\n        this.zoom = _zoom < 0 ? 0 : _zoom;\r\n\r\n        let lonCenter = (this.lonMax + this.lonMin) / 2;\r\n        let latCenter = (this.latMax + this.latMin) / 2;\r\n        this.center = { \r\n            lon: lonCenter, \r\n            lat: latCenter\r\n        }\r\n\r\n        console.log(this);\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        return this.variableValues;\r\n    }\r\n\r\n    generateCsv(){\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${this.depths[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${isNaN(this.variableValues[i]) ? '' : this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SparseData;","import CSVParser from 'csv-parse';\r\n\r\nimport { apiUrl } from './config';\r\nimport SpaceTimeData from './Classes/SpaceTimeData';\r\n\r\nimport storedProcedures from './Enums/storedProcedures';\r\nimport TimeSeriesData from './Classes/TimeSeriesData';\r\nimport DepthProfileData from './Classes/DepthProfileData';\r\nimport SectionMapData from './Classes/SectionMapData';\r\nimport SparseData from './Classes/SparseData';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            catalog.push(record)\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.catalog.datasets = async() => {\r\n    const decoder = new TextDecoder();\r\n    let datasets = {};\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            datasets[record.Dataset_Long_Name] = record;\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/api/catalog/datasets', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return datasets;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(payload) => {\r\n    const decoder = new TextDecoder();\r\n    var vizData;\r\n\r\n    switch(payload.parameters.spName) {\r\n        case storedProcedures.spaceTime:\r\n            if(payload.subType === 'Sparse') vizData = new SparseData(payload);\r\n            else vizData = new SpaceTimeData(payload);\r\n            break;\r\n\r\n        case storedProcedures.timeSeries:\r\n            vizData = new TimeSeriesData(payload);\r\n            break;\r\n\r\n        case storedProcedures.depthProfile:\r\n            vizData = new DepthProfileData(payload);\r\n            break;\r\n\r\n        case storedProcedures.sectionMap:\r\n            vizData = new SectionMapData(payload);\r\n            break;\r\n\r\n        default:\r\n            console.log('Unknown sproc name');\r\n    }\r\n\r\n    let response = await fetch(apiUrl + '/api/data/sp?' + storedProcedureParametersToUri(payload.parameters), fetchOptions);\r\n\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            vizData.add(record);\r\n        }\r\n    })\r\n\r\n    csvParser.on('error', (e) => {\r\n        console.log(e);\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n    return await response.json();\r\n}\r\n\r\napi.visualization.cruiseTrajectoryRequest = async(payload) => {\r\n    const cruiseId = payload.id;\r\n    const decoder = new TextDecoder();\r\n    let trajectory = {lats: [], lons: []};\r\n\r\n    let response = await fetch(apiUrl + '/api/data/cruisetrajectory?' + `id=${payload.id}`, fetchOptions);\r\n\r\n    if(!response.ok) return {failed: true, status: response.status};\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            trajectory.lats.push(parseFloat(record[1]));\r\n            trajectory.lons.push(parseFloat(record[2]));\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return trajectory;\r\n}\r\n\r\napi.visualization.cruiseList = async() => {\r\n    let response = await fetch(apiUrl + '/api/data/cruiselist', fetchOptions);\r\n\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;   \r\n}\r\n\r\napi.visualization.csvDownload = async(payload) => {\r\n    let response = await fetch(apiUrl + `/api/data/query?query=${payload.query}`, fetchOptions);\r\n    if(response.ok) return await response.text();\r\n    else return {failed: true, status: response.status}\r\n}\r\n\r\nexport default api;","import { put, takeLatest, all, call, delay } from 'redux-saga/effects';\r\n// import { eventChannel } from 'redux-saga';\r\nimport Cookies from 'js-cookie';\r\n// import worker from '../worker';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    \r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){    \r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    \r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    \r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    \r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* datasetRetrieval(){\r\n    yield put(catalogActions.datasetRetrievalRequestProcessing());\r\n    let datasets = yield call(api.catalog.datasets);\r\n\r\n    if(!datasets){\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else {\r\n        yield put(catalogActions.datasetRetrievalRequestSuccess(datasets));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    \r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    \r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload);\r\n    yield delay(50);\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'));\r\n    yield delay(70);\r\n    \r\n    // Result will be an object containing variable values and describing date shape\r\n    if(result.failed){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        if(result.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(\"An error occurred. Please try again.\"));\r\n        }\r\n    } else {\r\n        if(result.variableValues.length > 0){\r\n            result.finalize();\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            // yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            yield put(visualizationActions.triggerShowCharts());\r\n            yield put(visualizationActions.addChart({subType: action.payload.subType, data:result}));\r\n           \r\n        } else {\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges. Try selecting a different date or depth range.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* cruiseTrajectoryRequest(action) {\r\n    yield put(visualizationActions.cruiseTrajectoryRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Cruise Data'));\r\n    let result = yield call(api.visualization.cruiseTrajectoryRequest, action.payload);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n\r\n    if(result.failed){\r\n        if(result.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(`Unable to Fetch Cruise Data`));\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.cruiseTrajectoryRequestSuccess(result));\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n    }\r\n}\r\n\r\nfunction* cruiseListRequest() {\r\n    yield put(visualizationActions.cruiseListRequestProcessing());\r\n    let cruiseList = yield call(api.visualization.cruiseList);\r\n\r\n    if(!cruiseList) {\r\n        yield put(visualizationActions.cruiseListRequestFailure());\r\n    } else{\r\n        yield put(visualizationActions.cruiseListRequestSuccess(cruiseList));\r\n    }\r\n}\r\n\r\nfunction* tableStatsRequest(action){\r\n    yield put(visualizationActions.tableStatsRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Dataset Information'));\r\n    let result = yield call(api.visualization.getTableStats, action.payload.tableName);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n\r\n    if(result.failed){\r\n        if(result.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(`Unable to Fetch Dataset Information`));\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.tableStatsRequestSuccess(result, action.payload.datasetLongName));\r\n    }\r\n}\r\n\r\nfunction* csvDownloadRequest(action){\r\n    yield put(visualizationActions.csvDownloadRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let response = yield call(api.visualization.csvDownload, action.payload);\r\n    yield put(interfaceActions.setLoadingMessage(''))\r\n    if(response.failed) {\r\n        if(response.status == 401){\r\n            yield put(userActions.refreshLogin());\r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen('An error occurred. Please try again.'))\r\n        }\r\n    } else {\r\n        yield put(visualizationActions.downloadTextAsCsv(response, action.payload.fileName));\r\n    }\r\n}\r\n\r\nfunction* downloadTextAsCsv(action){\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'))\r\n    let csv = action.payload.text;\r\n    const blob = new Blob([csv], {type: 'text/csv'});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.setAttribute('hidden', '');\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `${action.payload.datasetName}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    yield put(interfaceActions.setLoadingMessage(''));\r\n}\r\n\r\nfunction* refreshLogin(){\r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.showLoginDialog());\r\n    yield put(interfaceActions.snackbarOpen(\"Your session has expired. Please log in again.\"));\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchDatasetRetrieval(){\r\n    yield takeLatest(catalogActionTypes.DATASET_RETRIEVAL_REQUEST_SEND, datasetRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\nfunction* watchCruiseTrajectoryRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_TRAJECTORY_REQUEST_SEND, cruiseTrajectoryRequest);\r\n}\r\n\r\nfunction* watchCruiseListRequest(){\r\n    yield takeLatest(visualizationActionTypes.CRUISE_LIST_REQUEST_SEND, cruiseListRequest);\r\n}\r\n\r\nfunction* watchTableStatsRequest(){\r\n    yield takeLatest(visualizationActionTypes.TABLE_STATS_REQUEST_SEND, tableStatsRequest)\r\n}\r\n\r\nfunction* watchCsvDownloadRequest(){\r\n    yield takeLatest(visualizationActionTypes.CSV_DOWNLOAD_REQUEST_SEND, csvDownloadRequest);\r\n}\r\n\r\nfunction* watchDownloadTextAsCsv(){\r\n    yield takeLatest(visualizationActionTypes.DOWNLOAD_TEXT_AS_CSV, downloadTextAsCsv);\r\n}\r\n\r\nfunction* watchRefreshLogin(){\r\n    yield takeLatest(userActionTypes.REFRESH_LOGIN, refreshLogin);\r\n}\r\n\r\n// function createWorkerChannel(worker) {\r\n//     return eventChannel(emit => {\r\n//         worker.onmessage = message => {\r\n//             emit(message);\r\n//         }\r\n\r\n//         const unsubscribe = () => {\r\n//             worker.teminate();\r\n//         }\r\n      \r\n//         return unsubscribe;\r\n//     })\r\n// }\r\n\r\n// function* watchWorkerChannel(){\r\n//     const workerChannel = yield call(createWorkerChannel, worker);\r\n\r\n//     while (true) {\r\n//         const message = yield take(workerChannel);\r\n//         yield put(message.data.type, message.data.payload);\r\n//         //   yield put({ type: INCOMING_PONG_PAYLOAD, payload })\r\n//         //   yield fork(pong, socket)\r\n//       }\r\n// }\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchDatasetRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        watchCruiseTrajectoryRequest(),\r\n        watchCruiseListRequest(),\r\n        watchTableStatsRequest(),\r\n        // watchWorkerChannel(),\r\n        watchCsvDownloadRequest(),\r\n        watchDownloadTextAsCsv(),\r\n        watchRefreshLogin()\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","const colors = {\r\n    orange: '#FF8000',\r\n    // orange: '#ffa245',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9',\r\n    errorYellow: '#ffe336'\r\n}\r\n\r\nexport default colors;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    },\r\n    warningCaption: {\r\n        color: colors.orange,\r\n        fontSize: '11px',\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    wrapper: {\r\n        marginTop: theme.spacing(16)\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            \r\n            <div className={classes.wrapper}>\r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Key\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                        <Typography variant='caption' className={classes.warningCaption}>\r\n                            This API key is a unique identifier, and should not be shared.\r\n                        </Typography>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"body2\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n                </Paper>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires a user account. Please <Link component={RouterLink} to={{pathname: '/apikeymanagement'}} onClick={() => props.showLoginDialog()}> log in\r\n            </Link> or <Link component={RouterLink} to={{pathname: '/register'}}> register\r\n            </Link>.\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen, toggleShowHelp } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    appBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    toolBar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n\r\n    navWrapper: {\r\n        position: 'fixed',\r\n        width: '100vw',\r\n        top: '0px',\r\n        backgroundColor: 'transparent',\r\n        zIndex: 50,\r\n        paddingTop: '10px',\r\n        paddingLeft: '20px',\r\n        textAlign: 'left',\r\n        boxSizing: 'border-box'\r\n    },\r\n\r\n    navLink: {\r\n        textDecoration: 'none',\r\n        marginRight: 20,\r\n        color: 'white',\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        },\r\n        fontSize: '13px',\r\n        fontWeight: 100,\r\n        display: 'inline-block',\r\n        cursor: 'pointer' \r\n    },\r\n\r\n    rightNavLink: {\r\n        float: 'right'\r\n    },\r\n\r\n    rightLinkWrapper: {\r\n        display:'inline-block',\r\n        textAlign: 'right'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen,\r\n    toggleShowHelp\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    handleNavigate = (route) => {\r\n        this.props.restoreInterfaceDefaults()\r\n        this.props.history.push(route);\r\n    }\r\n\r\n    handleOutsideNavigate = (url) => {\r\n        window.open(url, '_blank')\r\n    }\r\n\r\n    render(){\r\n        const { classes, history, showHelp } = this.props;\r\n        const { pathname } = history.location;\r\n\r\n        return (\r\n            <div className={classes.navWrapper}>\r\n                <Typography variant='caption' href='/' component='a' className={classes.navLink}>Home</Typography>\r\n                <Typography variant='caption' to='/catalog' component={Link} className={classes.navLink}>Catalog</Typography>\r\n                {pathname !== '/visualization' && <Typography variant='caption' to='/apikeymanagement' component={Link} className={classes.navLink}>API Keys</Typography>}\r\n                {pathname !== '/visualization' && <Typography variant='caption' to='/visualization' component={Link} className={classes.navLink}>Visualization</Typography>}\r\n                {this.props.user && <Typography variant='caption' onClick={() => this.handleLogOut()} className={`${classes.navLink} ${pathname === '/visualization' ? '' : classes.rightNavLink}`}>Log Out</Typography>}\r\n                {/* <Typography variant='caption' onClick={this.props.toggleShowHelp} className={classes.navLink}>{showHelp ? 'Hide Help' : 'Help(beta) '}</Typography> */}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' onClick={() => this.props.showLoginDialog()} className={`${classes.navLink} ${classes.rightNavLink}`}>Log In</Typography>}\r\n                {(!this.props.user && pathname !== '/visualization') && <Typography variant='caption' to='/register' component={Link} className={classes.navLink}>Register</Typography>}\r\n            </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user ? <ApiKeyManagement/> : <LoginRequiredPrompt/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport { Typography, Grid, Table, TableBody, TableCell, TableRow, Button } from '@material-ui/core';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst tableMapping1 = [\r\n    ['Long Name', 'Long_Name'],\r\n    ['Short Name', 'Variable'],\r\n    ['Dataset Name', 'Dataset_Name'],\r\n    ['Study Domain', 'Study_Domain'],\r\n    ['Process Level', 'Process_Level'],\r\n    ['SQL Table Name', 'Table_Name'],\r\n    ['Temporal Resolution', 'Temporal_Resolution']\r\n];\r\n\r\nconst tableMapping2 = [\r\n    ['Unit', 'Unit'],\r\n    ['Mean Value', 'Variable_Mean'],\r\n    ['Value Std', 'Variable_Std'],\r\n    ['Spatial Resolution', 'Spatial_Resolution'],\r\n    ['Start Latitude[\\xb0]', 'Lat_Min'],\r\n    ['End Latitude[\\xb0]', 'Lat_Max'],\r\n    ['Start Longitude[\\xb0]', 'Lon_Min'],\r\n    ['End Longitude[\\xb0]', 'Lon_Max']\r\n];\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        // width: '90%',\r\n        // margin: '0px auto 5px 10px',\r\n        padding: '10px',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(1),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        height: '100%',\r\n        maxHeight: '280px'\r\n    },\r\n    gridItem: {\r\n        // height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        verticalAlign: 'middle',\r\n        maxHeight: '280px'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        maxWidth: '80%',\r\n        maxHeight: '260px'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        tableLayout: 'fixed',\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '24px',\r\n        width: '100%'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black',\r\n        fontSize: '11px',\r\n        maxWidth: '100%',\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        paddingRight: '14px'\r\n    },\r\n\r\n    gridDetailTypography: {\r\n        fontSize: '11px',\r\n        whiteSpace: 'normal',\r\n        width: '100%',\r\n        display: 'block',\r\n    },\r\n\r\n    boldText: {\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n    rightGridItem: {\r\n        maxWidth: '100%',\r\n        paddingTop: '10px',\r\n        boxSizing: 'border-box'\r\n    },\r\n\r\n    datasetDescriptionButton: {\r\n        backgroundColor: '#FF8000',\r\n        color: 'white',\r\n        '&:hover': {\r\n            backgroundColor: '#ab5600',\r\n        },\r\n        fontSize: '12px',\r\n        maxWidth: '100%',\r\n    },\r\n    \r\n    buttonTextWrapper: {\r\n        textOverflow: 'ellipsis',\r\n        maxWidth: '100%',\r\n        overflow: 'hidden'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n                <Grid container className={classes.gridClass}>\r\n                    <Grid container item xs={10} spacing={2}>\r\n                        <Grid item xs={4} className={classes.gridItem}>\r\n                            <img src={props.context.datasets[props.data.Dataset_Name].Icon_URL} alt=\"Mission Icon\" className={classes.vizSampleImage}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4} className={classes.gridItem}>\r\n                            <Table className={classes.variableDetailTable} size='small'>\r\n                                <TableBody>\r\n                                    {tableMapping1.map((row, index) => (\r\n                                        <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell} title={props.data[row[1]]}>{props.data[row[1]]}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                        <TableRow key={tableMapping1.length + 1} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>Start Date</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data.Time_Min.slice(0,10)}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow key={tableMapping1.length + 2} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>End Date</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data.Time_Max.slice(0,10)}</TableCell>\r\n                                        </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4} className={classes.gridItem}>\r\n                            <Table className={classes.variableDetailTable} size='small'>\r\n                                <TableBody>\r\n                                    {tableMapping2.map((row, index) => (\r\n                                        <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                        <TableRow key={tableMapping2.length + 1} className={classes.variableDetailTableRow}>\r\n                                            <TableCell className={classes.variableDetailTableCell}>Maximum Depth[m]</TableCell>\r\n                                            <TableCell className={classes.variableDetailTableCell}>{props.data.Depth_Max || 'Surface Only'}</TableCell>\r\n                                        </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                <Grid container direction='column' item xs={2} alignContent='center' alignItems='center'>\r\n                    <Grid item xs={4} className={classes.rightGridItem}>\r\n                        <Typography variant='caption' className={`${classes.gridDetailTypography} ${classes.boldText}`}>\r\n                            Source:\r\n                        </Typography>\r\n                        <Typography variant='caption' className={classes.gridDetailTypography}>\r\n                            {props.data.Data_Source}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4} className={classes.rightGridItem}>\r\n                        <Typography variant='caption' className={`${classes.gridDetailTypography} ${classes.boldText}`}>\r\n                            Distributor:\r\n                        </Typography>\r\n                        <Typography variant='caption' className={classes.gridDetailTypography}>\r\n                            {props.data.Distributor}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4} className={classes.rightGridItem}>\r\n                        <Button \r\n                            variant='contained' \r\n                            className={classes.datasetDescriptionButton} \r\n                            onClick={() => props.context.handleDescribeDataset(props.data.Dataset_Name)}\r\n                        >\r\n                            <span className={classes.buttonTextWrapper}>Dataset Details</span>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst styles = (theme) => ({\r\n    markdown: {\r\n        '& img': {\r\n            maxWidth: '100%',\r\n            margin: '20px auto 20px auto',\r\n            display: 'block'\r\n        },\r\n        '& a': {\r\n            color: theme.palette.primary.main,\r\n            textDecoration: 'none'\r\n        }\r\n    }\r\n})\r\n\r\nconst DatasetDescriptionDialog = (props) => {\r\n    const { description, classes } = props;\r\n    return (\r\n        <React.Fragment>\r\n            { description ?\r\n            <Dialog open={Boolean(description)} onClose={props.clearDescription} maxWidth={false}>\r\n                <DialogTitle>{props.datasetName}</DialogTitle>\r\n                <DialogContent>\r\n                    <ReactMarkdown source={description} className={classes.markdown}/>\r\n                </DialogContent>\r\n            </Dialog> :\r\n            ''\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(DatasetDescriptionDialog));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = theme => ({\r\n  tooltip: {\r\n      color: theme.palette.secondary.main,\r\n      opacity: 1\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    showHelp: state.showHelp\r\n})\r\n\r\nconst ConnectedTooltip = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    if(!showHelp) {\r\n        return (\r\n            <React.Fragment>\r\n                {props.children}\r\n            </React.Fragment>\r\n        )}\r\n    else {\r\n        return (\r\n            <Tooltip \r\n                placement={props.placement} \r\n                open={showHelp} \r\n                title={props.title} \r\n                className={classes.tooltip}\r\n                classes={{\r\n                    popper: classes.tooltip\r\n                }}\r\n            >\r\n                {props.children}\r\n            </Tooltip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(ConnectedTooltip));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\nimport DatasetDescriptionDialog from './DatasetDescriptionDialog';\r\n\r\nimport stringify from 'csv-stringify/lib/sync';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper, Button, Grid, Tooltip } from '@material-ui/core';\r\n\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"Long_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"Variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"Table_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"Dataset_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"Make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"Sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"Study_Domain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"Process_Level\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"Spatial_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"Temporal_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"Unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'Keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '70vh', \r\n    width: '92%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '70px 2vw 30px 2vw',\r\n    padding: '20px'\r\n  },\r\n\r\n  downloadButton: {\r\n    margin: '6px 0 0 0',\r\n    textTransform: 'none',\r\n    color: 'black',\r\n    backgroundColor: '#FF8000',\r\n    '&:hover': {\r\n      backgroundColor: '#ab5600',\r\n  }\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: '',\r\n    describedDataset: ''\r\n  }\r\n\r\n  handleDescribeDataset = (dataset) => {\r\n    this.setState({...this.state, describedDataset: dataset})\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  onGridSizeChanged = (params) => {\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  handleDownloadCatalog = () => {\r\n    let csv = stringify(this.props.catalog, {\r\n      header: true\r\n    });\r\n\r\n    const blob = new Blob([csv], {type: 'text/csv'});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.setAttribute('hidden', '');\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `CMAP_Catalog.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  }\r\n\r\n  render = () => {\r\n    const { classes, datasets } = this.props;\r\n    const { describedDataset } = this.state;\r\n    const description = !datasets ? '' : !datasets[describedDataset] ? '' : datasets[describedDataset].Description;\r\n\r\n    return (\r\n      <Paper elevation={12} className={classes.gridPaper}>\r\n        <DatasetDescriptionDialog \r\n          description={description}\r\n          clearDescription={() => this.handleDescribeDataset('')}\r\n          datasetName={describedDataset}\r\n        />\r\n        <Grid container>\r\n          <Grid item xs={3}>\r\n\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <ConnectedTooltip placement title='Enter one or more search terms.' placement='top'>\r\n              <TextField              \r\n                className={classes.gridSearch}\r\n                autoFocus={true}\r\n                margin=\"normal\"\r\n                id=\"name\"\r\n                type=\"text\"\r\n                variant='outlined'\r\n                name='filterText'\r\n                value={this.state.filterText}\r\n                onChange={this.handleChange}\r\n                label=\"Search Variables\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </ConnectedTooltip>\r\n\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Tooltip placement='top' title='Download the full catalog in CSV format'>\r\n              <Button \r\n                className={classes.downloadButton}\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={this.handleDownloadCatalog}            \r\n              >\r\n                  Download\r\n              </Button>\r\n            </Tooltip>\r\n          </Grid>\r\n\r\n          <Grid item xs={1}>\r\n\r\n          </Grid>\r\n        </Grid>\r\n\r\n          \r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              onGridSizeChanged={this.onGridSizeChanged}\r\n              suppressDragLeaveHidesColumns= {true}\r\n              enableCellTextSelection={true}\r\n              suppressContextMenu={true}\r\n\r\n              // Additional props\r\n              context={{\r\n                datasets,\r\n                handleDescribeDataset: this.handleDescribeDataset\r\n              }}\r\n\r\n              // Setting related to styling\r\n              getRowStyle= {function(params) {\r\n                if (params.node.detail) {\r\n                    return { background: 'transparent' }\r\n                }\r\n              }}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n              // detailGrid\r\n              detailGridOptions= {{\r\n                enableCellTextSelection:true\r\n              }}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nimport { retrievalRequestSend, datasetRetrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog,\r\n    datasets: state.datasets\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend,\r\n    datasetRetrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.datasets) this.props.datasetRetrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog && this.props.datasets) return <AGGridWrapper catalog={this.props.catalog} datasets={this.props.datasets}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const validation = {\r\n    depth: {\r\n        depthOneIsLower: 'Cannot be larger than end',\r\n        depthOneOutOfBounds: 'Must be smaller than $',\r\n        depthTwoOutOfBounds: 'Must be larger than $',\r\n        negative: 'Cannot be negative'\r\n    },\r\n\r\n    date: {\r\n        dateOneIsLater: 'Cannot be after end',\r\n        dateOneOutOfBounds: 'Must be before $',\r\n        dateTwoOutOfBounds: 'Must be after $'\r\n    },\r\n\r\n    lat: {\r\n        latOneIsHigher: 'Cannot be larger than end.',\r\n        latOneOutOfBounds: 'Must be less than $',\r\n        latTwoOutOfBounds: 'Must be greater than $'\r\n    },\r\n\r\n    lon: {\r\n        lonOneIsHigher: 'Cannot be larger than end.',\r\n        lonOneOutOfBounds: 'Must be less than $',\r\n        lonTwoOutOfBounds: 'Must be greater than $'\r\n    },\r\n\r\n    type: {\r\n        dataIsIrregular: '$ is not available for sparse data',\r\n        dateRangeRequired: '$ requires a range of dates',\r\n        depthRangeRequired: '$ requires a range of depths',\r\n        surfaceOnlyDataset: '$ contains only surface data',\r\n        irregularOnly: 'Sparse map is only available for sparse data',\r\n        dataSizeTooLarge: 'Data set is too large for this visualization type.',\r\n        webGLContextLimit: 'Limit exceeded for sparse and heatmaps. Please delete one or more to proceed.'\r\n    },\r\n\r\n    generic: {\r\n        invalid: 'Invalid input',\r\n        dataSizeWarning: 'Wait time and application performance may be poor due to size of data.',\r\n        dataSizePrevent: 'Data set is too large. Please reduce date range or area size.',\r\n        variableMissing: 'Please select a variable',\r\n        vizTypeMissing: 'Please select a visualization type'\r\n    }\r\n}\r\n\r\nexport default validation;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    const { data } = props;\r\n\r\n    if(!data) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{data.Long_Name}</DialogTitle>\r\n            <DialogContent>\r\n                { data.Comment &&\r\n                    <DialogContentText>\r\n                        {data.Comment}\r\n                    </DialogContentText>\r\n                }\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Dataset</TableCell>\r\n                                <TableCell title={data.Dataset_Name}>{data.Dataset_Name.length > 25 ? data.Dataset_Name.slice(0,23) + '...' : data.Dataset_Name}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Table Name</TableCell>\r\n                                <TableCell title={data.Table_Name}>{data.Table_Name > 25 ? data.Table_Name.slice(0,23) + '...' : data.Table_Name}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Source</TableCell>\r\n                                <TableCell title={data.Data_Source}>{data.Data_Source > 25 ? data.Data_Source.slice(0,23) + '...' : data.Data_Source}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Distributor</TableCell>\r\n                                <TableCell title={data.Distributor}>{data.Distributor.length > 25 ? data.Distributor.slice(0,23) + '...' : data.Distributor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{data.Sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{data.Spatial_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{data.Temporal_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{data.Time_Min ? data.Time_Min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{data.Time_Max ? data.Time_Max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lat_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lat_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lon_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{data.Depth_Min ? `${data.Depth_Min}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{data.Depth_Max ? `${data.Depth_Max}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            {data.Variable_Min &&\r\n                                <TableRow>\r\n                                    <TableCell>Minimum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Min}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Max &&\r\n                                <TableRow>\r\n                                    <TableCell>Maximum Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Max}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Mean && \r\n                                <TableRow>\r\n                                    <TableCell>Mean Value({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Mean}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n\r\n                            {data.Variable_Std &&\r\n                                <TableRow>\r\n                                    <TableCell>Standard Deviation({data.Unit})</TableCell>\r\n                                    <TableCell>{data.Variable_Std}</TableCell>\r\n                                </TableRow>                            \r\n                            }\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);\r\n\r\n// Variable_Max: \"4.999\"\r\n// Variable_Mean: \"-0.0000008547\"\r\n// Variable_Min: \"-4.9956\"\r\n// Variable_Std: \"0.1428013424\"","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nconst mapTemporalResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [temporalResolutions.threeMinutes] : 1,\r\n        [temporalResolutions.sixHourly] : 1,\r\n        [temporalResolutions.daily] : 1,\r\n        [temporalResolutions.weekly] : 7,\r\n        [temporalResolutions.monthly] : 30,\r\n        [temporalResolutions.annual] : 365,\r\n        [temporalResolutions.irregular] : null,\r\n        [temporalResolutions.monthlyClimatology]: 30,\r\n        [temporalResolutions.threeDay]: 3,\r\n        [temporalResolutions.eightDayRunning]: 8,\r\n        [temporalResolutions.eightDays]: 8\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapTemporalResolutionToNumber;","const utcDateStringToLocal = (utcString) => {\r\n    let date = new Date(utcString);\r\n    let utcYear = date.getUTCFullYear();\r\n    let utcMonth = date.getUTCMonth();\r\n    let utcDate = date.getUTCDate();\r\n\r\n    let newDate = new Date();\r\n    newDate.setFullYear(utcYear, utcMonth, utcDate);\r\n    return newDate;\r\n}\r\n\r\nexport default utcDateStringToLocal;","\r\nconst darwinDepths = [\r\n    5,\r\n    15,\r\n    25,\r\n    35,\r\n    45,\r\n    55,\r\n    65,\r\n    75.005,\r\n    85.025,\r\n    95.095,\r\n    105.31,\r\n    115.87,\r\n    127.15,\r\n    139.74,\r\n    154.47,\r\n    172.4,\r\n    194.735,\r\n    222.71,\r\n    257.47,\r\n    299.93,\r\n    350.68,\r\n    409.93,\r\n    477.47,\r\n    552.71,\r\n    634.735,\r\n    722.4,\r\n    814.47,\r\n    909.74,\r\n    1007.155,\r\n    1105.905,\r\n    1205.535,\r\n    1306.205,\r\n    1409.15,\r\n    1517.095,\r\n    1634.175,\r\n    1765.135,\r\n    1914.15,\r\n    2084.035,\r\n    2276.225,\r\n    2491.25,\r\n    2729.25,\r\n    2990.25,\r\n    3274.25,\r\n    3581.25,\r\n    3911.25,\r\n    4264.25,\r\n    4640.25,\r\n    5039.25,\r\n    5461.25,\r\n    5906.25\r\n]\r\n\r\nconst piscesDepths = [\r\n    0.494024991989,\r\n    1.54137504101,\r\n    2.64566898346,\r\n    3.81949496269,\r\n    5.07822418213,\r\n    6.44061422348,\r\n    7.92956018448,\r\n    9.5729970932,\r\n    11.404999733,\r\n    13.4671401978,\r\n    15.8100700378,\r\n    18.4955596924,\r\n    21.5988197327,\r\n    25.2114105225,\r\n    29.4447307587,\r\n    34.4341506958,\r\n    40.3440513611,\r\n    47.3736915588,\r\n    55.764289856,\r\n    65.8072662354,\r\n    77.8538513184,\r\n    92.3260726929,\r\n    109.729301453,\r\n    130.666000366,\r\n    155.850692749,\r\n    186.125595093,\r\n    222.475204468,\r\n    266.040313721,\r\n    318.127410889,\r\n    380.213012695,\r\n    453.937713623,\r\n    541.088928223,\r\n    643.566772461,\r\n    763.333129883,\r\n    902.339294434,\r\n    1062.43994141,\r\n    1245.29101562,\r\n    1452.25097656,\r\n    1684.28405762,\r\n    1941.89294434,\r\n    2225.07788086,\r\n    2533.3359375,\r\n    2865.70288086,\r\n    3220.82006836,\r\n    3597.03198242,\r\n    3992.48388672,\r\n    4405.22412109,\r\n    4833.29101562,\r\n    5274.78417969,\r\n    5727.91699219\r\n]\r\n\r\nconst _piscesTables = [\r\n    'tblPisces_NRT',\r\n    'tblPisces_NRT_Calendar'\r\n]\r\n\r\nconst _darwinTable = [\r\n    'tblDarwin_Chl_Climatology',\r\n    'tblDarwin_Ecosystem',\r\n    'tblDarwin_Nutrient',\r\n    'tblDarwin_Nutrient_Climatology',\r\n    'tblDarwin_Ocean_Color',\r\n    'tblDarwin_Phytoplankton',\r\n    'tblDarwin_Plankton_Climatology'\r\n]\r\n\r\nconst piscesTable = new Set(_piscesTables);\r\nconst darwinTable = new Set(_darwinTable);\r\n\r\nconst exports = {\r\n    count: (field, depth1, depth2) => {\r\n        const { Table_Name: table } = field.data;\r\n        var count = 0;\r\n    \r\n        if(piscesTable.has(table)) {\r\n            for(let i = 0; i < piscesDepths.length; i++){\r\n                if(piscesDepths[i] > depth2) break;\r\n                if(piscesDepths[i] > depth1) count ++; \r\n            }\r\n        } else if (darwinTable.has(table)) {\r\n            for(let i = 0; i < darwinDepths.length; i++){\r\n                if(darwinDepths[i] > depth2) break;\r\n                if(darwinDepths[i] > depth1) count ++; \r\n            }\r\n        } else {}\r\n        return count;\r\n    },\r\n\r\n    piscesTable,\r\n    darwinTable,\r\n    piscesDepths,\r\n    darwinDepths\r\n}\r\n\r\nexport default exports;","import visualizationSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nexport default (charts) => {\r\n    let count = 0;\r\n    charts.forEach(chart => {\r\n        if(chart.subType === visualizationSubTypes.heatmap) count ++;\r\n        if(chart.subType === visualizationSubTypes.sparse){\r\n            count ++;\r\n            if(chart.data.variableValues.length > 10000) count +=3;\r\n        }\r\n    })\r\n    return count;\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { VariableSizeList as ReactWindowList } from \"react-window\";\r\n\r\nimport { Divider, ButtonGroup, Grid, IconButton, Icon, ListItem, MenuItem, Typography, Drawer, TextField, FormControl, InputLabel, Button, Tooltip} from '@material-ui/core';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { Cached, LibraryBooks, ArrowRight, ChevronLeft, ChevronRight, InsertChartOutlined, Language, Delete, CloudDownload, Info } from '@material-ui/icons';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { cruiseTrajectoryRequestSend, clearCharts, csvDownloadRequestSend } from '../Redux/actions/visualization';\r\nimport { snackbarOpen } from '../Redux/actions/ui';\r\n\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport depthUtils from '../Utility/depthCounter';\r\nimport countWebGLContexts from '../Utility/countWebGLContexts';\r\n\r\nimport ConnectedTooltip from './ConnectedTooltip';\r\n\r\nconst navDrawerWidth = 320;\r\n\r\nconst errorHeightAdjust = 23;\r\n\r\nconst styles = theme => ({\r\n    drawer: {\r\n        width: navDrawerWidth,\r\n        top: 32,\r\n        bottom: 'auto',\r\n        overflow: 'visible'\r\n    },\r\n\r\n    drawerPaper: {\r\n        width: navDrawerWidth,\r\n        height: '540px',\r\n        top: 'calc(50% - 270px)',\r\n        borderRadius: '0 4px 4px 0',\r\n        boxShadow: '2px 2px  2px 2px #242424',\r\n        border: 'none',\r\n        overflow: 'visible',\r\n        backgroundColor: '#424242'\r\n    },\r\n\r\n    drawerPaperError1: {\r\n        height: `${540 + errorHeightAdjust}px`\r\n    },\r\n\r\n    drawerPaperError2: {\r\n        height: `${540 + errorHeightAdjust * 2}px`\r\n    },\r\n\r\n    drawerPaperError3: {\r\n        height: `${540 + errorHeightAdjust * 3}px`\r\n    },\r\n\r\n    drawerPaperError4: {\r\n        height: `${540 + errorHeightAdjust * 4}px`\r\n    },\r\n\r\n    drawerPaperError5: {\r\n        height: `${540 + errorHeightAdjust * 5}px`\r\n    },\r\n\r\n  openPanelChevron: {\r\n    position: 'fixed',\r\n    left: '5px',\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  closePanelChevron: {\r\n    position: 'fixed',\r\n    left: navDrawerWidth + 5,\r\n    top: 'calc(50% - 8px)',\r\n    zIndex: 1100\r\n  },\r\n\r\n  groupedButtons: {\r\n      width: '50%',\r\n      border: '1px solid #313131',\r\n      borderRadius: 0,\r\n      backgroundColor: '#3c3c3c'\r\n  },\r\n\r\n  controlPanelForm: {\r\n      marginTop: theme.spacing(1)\r\n  },\r\n\r\n  tableStatsButton: {\r\n      borderRadius: 0,\r\n      paddingTop: '11px',\r\n      backgroundColor: '#424242'\r\n  },\r\n\r\n    formGridItem: {\r\n        borderLeft: '1px solid #313131',\r\n        backgroundColor: '#424242'\r\n    },\r\n\r\n  vizTypeSelectFormControl: {\r\n      width: '100%',\r\n      '&:disabled': {\r\n        backgroundColor: 'transparent'\r\n    }\r\n  },\r\n\r\n  depressed: {\r\n      boxShadow: 'inset 1px 1px 5px #1c1c1c'\r\n  },\r\n\r\n  padLeft: {\r\n      padding: '6px 0 2px 7px'\r\n  },\r\n\r\n  visualizeButton: {\r\n      height: '56px',\r\n      borderRadius: 0,\r\n      backgroundColor: '#424242',\r\n      color: theme.palette.primary.main,\r\n      fontVariant: 'normal',\r\n      '&:disabled': {\r\n        backgroundColor: 'transparent'\r\n    },\r\n      '&:hover': {backgroundColor: '#874400'}\r\n  },\r\n\r\n  helperText: {\r\n    color: 'yellow'\r\n  },\r\n\r\n  vizButtonTooltip: {\r\n    color: 'yellow'\r\n  },\r\n\r\n  datePickerInputAdornment: {\r\n      padding: 0\r\n  },\r\n\r\n  clearChartsButton: {\r\n      borderRadius: 0,\r\n      backgroundColor: '#3c3c3c',\r\n      width: '100%',\r\n      borderRight: '1px solid #313131'\r\n\r\n  },\r\n\r\n  resetSPParamsButton: {\r\n    borderRadius: 0,\r\n    backgroundColor: '#3c3c3c',\r\n    width: '100%',\r\n  },\r\n\r\n  datePicker: {\r\n      width: '100%'\r\n  }\r\n\r\n});\r\n\r\nconst overrideDisabledStyle = {\r\n    backgroundColor: 'transparent'\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    showHelp: state.showHelp,\r\n    datasets: state.datasets,\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseTrajectoryRequestSend,\r\n    clearCharts,\r\n    csvDownloadRequestSend,\r\n    snackbarOpen\r\n}\r\n\r\nconst getDatePlaceholder = (date) => {\r\n    if(isNaN(new Date(date)).valueOf()) return 'yyyy-MM-dd';\r\n    \r\n    let month  = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let year = date.getFullYear();\r\n    return [year, month < 10 ? '0' + month : month, day < 10 ? '0' + day : day].join('-');\r\n}\r\n\r\nconst groupHeaderHeight = 37;\r\nconst height = 35;\r\n\r\nconst reactWindowListRef = React.createRef();\r\nconst selectRef = React.createRef();\r\n\r\nclass MenuList extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n      if(reactWindowListRef.current) reactWindowListRef.current.resetAfterIndex(0);\r\n      if(!(this.props.children && this.props.children.length)) return;\r\n      let scrollOffset = 0;\r\n      let foundFocus = false;\r\n      this.props.children.forEach(child => {\r\n        if(foundFocus) return;\r\n\r\n        let count = groupHeaderHeight;\r\n        let groupHasFocus= false;\r\n        for(let i = 0; i < child.props.children.length; i++){\r\n          if(child.props.children[i].props.isFocused) {\r\n            foundFocus = true;\r\n            groupHasFocus = true;\r\n            break;\r\n          }\r\n          count += 37.6;\r\n        }\r\n\r\n        if(groupHasFocus) scrollOffset += count;\r\n        else scrollOffset += 37.6;\r\n      })\r\n      if(foundFocus) reactWindowListRef.current.scrollTo(scrollOffset > 150 ? scrollOffset - 150 : 0);\r\n    }\r\n\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n\r\n        if(!children || !children.length) return '';\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        const groupHeights = children.map(child => {\r\n          return child.props.children.some(grandChild => grandChild.props.isFocused) ? child.props.children.length * 37.6 + groupHeaderHeight : groupHeaderHeight;\r\n        });\r\n        const totalHeight = groupHeights.reduce((acc, cur) => acc + cur, 0);\r\n        const estimatedItemSize = totalHeight / children.length;\r\n        const getItemSize = index => groupHeights[index];\r\n\r\n        return (\r\n            <ReactWindowList\r\n                // height={(options.length == 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                height={totalHeight < 400 ? totalHeight :  400}\r\n                estimatedItemSize={estimatedItemSize}\r\n                itemCount={children.length}\r\n                itemSize={getItemSize}\r\n                initialScrollOffset={initialOffset || 0}\r\n                ref={reactWindowListRef}\r\n            >\r\n                {({ index, style }) => <div style={{...style}}>{children[index]}</div>}\r\n            </ReactWindowList>\r\n        );\r\n    }\r\n}\r\n\r\nclass Group extends Component {\r\n    render() {\r\n        const hasFocus = this.props.children.some(element => element.props.isFocused);\r\n        const sensor = this.props.children[0].props.data.data.Sensor;\r\n\r\n      return (\r\n          <React.Fragment>\r\n            <CustomHeading \r\n              {...this.props.headingProps} \r\n              headingLabel={this.props.data.label} \r\n              firstChild={this.props.children[0].props.data}\r\n              hasFocus={hasFocus}\r\n              sensor={sensor}\r\n              tableName={this.props.children[0].props.data.data.Table_Name}\r\n              selectProps={this.props.selectProps}\r\n            />\r\n            <div hidden={!hasFocus}>\r\n              {this.props.children.map(child => child)}\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n    }    \r\n}\r\n\r\nconst customHeadingStyles = (theme) => ({\r\n    customHeading: {\r\n        backgroundColor: 'rgba(0,0,0,.5)',\r\n        height: groupHeaderHeight,\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(122,67,0,.5)',\r\n        },\r\n        boxShadow: '0px 1px 1px 1px #242424'\r\n    },\r\n\r\n    icon: {\r\n        marginRight: '10px',\r\n        width: '30px'\r\n    },\r\n\r\n    typography: {\r\n        width: '650px'\r\n    }\r\n})\r\n\r\nconst _CustomHeading = props => {\r\n    const { classes, sensor, selectProps } = props;\r\n    let iconClass;\r\n\r\n    if(sensor === 'Satellite') iconClass = 'fa-satellite';\r\n    else if(sensor === 'Blend') iconClass = 'fa-laptop';\r\n    else iconClass = 'fa-ship';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <ListItem \r\n          button \r\n          alignItems='center' \r\n          onClick={() => selectRef.current.select.setState({focusedOption: props.hasFocus ? null : props.firstChild})}\r\n          className={classes.customHeading}\r\n        >\r\n            <Icon fontSize='small' color='inherit' className={`fas ${iconClass} ${classes.icon}`}></Icon>\r\n        <Typography className={classes.typography}>\r\n            {props.headingLabel.length > 70 ? props.headingLabel.slice(0,67) + '...' : props.headingLabel}\r\n        </Typography>\r\n\r\n        <Tooltip title='Download Data' placement='right'>\r\n            <IconButton \r\n                color='inherit' \r\n                onClick={(e) => {\r\n                    // selectProps.handleDownloadCsvClick(tableName, props.headingLabel);\r\n                    selectProps.handleSetDownloadTarget({dataset: props.headingLabel})\r\n                    selectProps.onAutoSuggestChange(props.headingLabel, {action: 'input-change'})\r\n                    e.stopPropagation();\r\n                }}>\r\n                <CloudDownload/>\r\n            </IconButton>\r\n        </Tooltip>\r\n\r\n        { selectProps.datasets[props.headingLabel] &&\r\n            <Tooltip title='Dataset Info' placement='right'>\r\n                <IconButton \r\n                    color='inherit' \r\n                    onClick={(e) => {\r\n                        window.open(selectProps.datasets[props.headingLabel].Doc_URL);\r\n                        e.stopPropagation();\r\n                    }}\r\n                >\r\n                    <Info/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        }\r\n        </ListItem>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\nconst CustomHeading = withStyles(customHeadingStyles)(_CustomHeading);\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n    <components.DropdownIndicator {...props}>\r\n        <ArrowRight/>\r\n    </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n      <components.Option \r\n        {...props} \r\n        innerProps={{\r\n            ...props.innerProps, \r\n            // Prevent focus / scroll events when mousing over options\r\n            onMouseMove: (e) => e.preventDefault(), \r\n            onMouseOver: (e) => e.preventDefault()\r\n        }}>\r\n    </components.Option>\r\n    )\r\n}\r\n\r\nconst GroupHeading = (props) => '';\r\n\r\nconst formatOptionLabel = (option, meta) => {\r\n    return option.label;\r\n}\r\n\r\nclass VizControlPanel extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.indexStrategy = new JsSearch.AllSubstringsIndexStrategy()\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        search.addIndex('Table_Name');\r\n        search.addIndex('Dataset_Name');\r\n        search.addIndex('Study_Domain');\r\n        search.addIndex('Spatial_Resolution');\r\n        search.addIndex('Temporal_Resolution');\r\n\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: '',\r\n            showControlPanel: true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search});\r\n        }\r\n    }\r\n\r\n    handleOpenControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: true})\r\n    }\r\n\r\n    handleCloseControlPanel = () => {\r\n        this.setState({...this.state, showControlPanel: false})\r\n    }      \r\n    \r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        var options = {};\r\n\r\n        items.forEach(item => {\r\n            if(!options[item.Dataset_Name]){\r\n                options[item.Dataset_Name] = {\r\n                    label: item.Dataset_Name,\r\n                    options: []\r\n                }\r\n            }\r\n\r\n            options[item.Dataset_Name].options.push({\r\n                value: item.Variable,\r\n                label: item.Long_Name.length < 80 ? item.Long_Name : item.Long_Name.slice(0,78) + '...',\r\n                data: item\r\n            })\r\n        });\r\n\r\n        let sortedOptions = Object.values(options).sort((opt1, opt2) => {\r\n            return opt1.label < opt2.label ? -1 : 1;\r\n        })\r\n\r\n        return sortedOptions;\r\n    }\r\n\r\n    estimateCsvSize = (datasetName) => {\r\n        // let members = [];\r\n        let count = 0;\r\n        this.props.catalog.forEach((member, i) => {\r\n            if(member.Dataset_Name === datasetName){\r\n                count += parseInt(member.Variable_Count) || 0;\r\n                // members.push(member);\r\n            }\r\n        })\r\n        return count;\r\n    }\r\n\r\n    handleDownloadCsvClick = (tableName, datasetName) => {\r\n        let query = `select%20*%20from%20${tableName}`;\r\n        let count = this.estimateCsvSize(datasetName);\r\n        if(count < 3000000){\r\n            this.props.csvDownloadRequestSend(query, datasetName);\r\n        } else {\r\n            this.props.snackbarOpen('Data set too large');\r\n        }\r\n    }\r\n\r\n    handleResetSPParams = () => {\r\n        this.props.resetSPParams();\r\n        this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') {\r\n            this.setState({...this.state, searchField: searchString});\r\n            selectRef.current.select.setState({focusedOption: null})\r\n        }\r\n        if(action.action ==='set-value') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, depth1, depth2, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        \r\n        const dayDiff = (date2 - date1) / 86400000;\r\n        \r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n        \r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const depthCount = depthUtils.count(fields, depth1, depth2) || 1;\r\n        \r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * depthCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDateValid = () => {\r\n        if(isNaN(new Date(this.props.dt1)).valueOf() || !this.props.dt1) return 'Start date is invalid';\r\n    }\r\n\r\n    checkEndDateValid = () => {\r\n        if(isNaN(new Date(this.props.dt2)).valueOf() || !this.props.dt1) return 'End date is invalid';\r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 > this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        return '';\r\n    }\r\n    \r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = (dataSize) => {\r\n        if(!this.props.selectedVizType) return '';\r\n        if(dataSize > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = (dataSize) => {\r\n        const webGLCount = countWebGLContexts(this.props.charts);\r\n        if(this.props.selectedVizType === vizSubTypes.heatmap && webGLCount > 14) return validation.type.webGLContextLimit;\r\n        if(this.props.selectedVizType === vizSubTypes.sparse && webGLCount > 11) return validation.type.webGLContextLimit;\r\n\r\n\r\n        if(this.props.selectedVizType !== vizSubTypes.histogram && this.props.selectedVizType !== vizSubTypes.heatmap && dataSize > 1200000){\r\n            return validation.generic.dataSizePrevent;\r\n        }\r\n        if(dataSize > 6000000) return validation.generic.dataSizePrevent;\r\n        if(!this.props.fields) return validation.generic.variableMissing;\r\n        if(!this.props.selectedVizType) return validation.generic.vizTypeMissing;\r\n        return ''}\r\n\r\n    handleShowChartsAndResize = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 30);\r\n        this.props.handleShowCharts();     \r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField, showControlPanel } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly,\r\n            showCharts,\r\n            handleShowGlobe,\r\n            handleChange,\r\n            handleLatLonChange,\r\n            datasets,\r\n            charts\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        const dataSize = this.estimateDataSize();\r\n\r\n        var catalogMinDate = fields && utcDateStringToLocal(fields.data.Time_Min).setHours(0,0,0,0);\r\n        var catalogMaxDate = fields && utcDateStringToLocal(fields.data.Time_Max).setHours(0,0,0,0);\r\n        var zeroedDT1 = dt1.setHours(0,0,0,0);\r\n        var zeroedDT2 = dt2.setHours(0,0,0,0);\r\n        \r\n        var minDate = fields ? catalogMinDate : '';\r\n\r\n        let minDateMessage = fields && zeroedDT2 < catalogMinDate ? 'End cannot be before dataset start date' : '';\r\n        var maxDateMessage;\r\n        var maxDate;\r\n\r\n        if(!fields){\r\n            maxDate = zeroedDT2;\r\n            maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after end' : '';\r\n        } else {\r\n            \r\n\r\n            if(catalogMaxDate < zeroedDT2){\r\n                maxDate = catalogMaxDate;\r\n                maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after dataset end date' : '';\r\n            } else {\r\n                maxDate = zeroedDT2;\r\n                maxDateMessage = zeroedDT1 > maxDate ? 'Start cannot be after end' : '';\r\n            }\r\n        }\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(dataSize),\r\n                this.checkGeneralPrevent(dataSize),\r\n                this.checkStartDateValid(),\r\n                this.checkEndDateValid()\r\n            ];\r\n        } else validations = Array(16).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage,\r\n            startDateValidMessage,\r\n            endDateValidMessage\r\n        ] = validations;\r\n\r\n        const checkDisableVisualizeList = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage,\r\n            minDateMessage,\r\n            maxDateMessage,\r\n            startDateValidMessage,\r\n            endDateValidMessage\r\n        ];\r\n\r\n        let cdvl = checkDisableVisualizeList;\r\n        let errorCount = 0;\r\n        \r\n        if(cdvl[0] || cdvl[1]) errorCount ++;\r\n        if(cdvl[2] || cdvl[3]) errorCount ++;\r\n        if(cdvl[4] || cdvl[5]) errorCount ++;\r\n        if(cdvl[7] || cdvl[9]) errorCount ++;\r\n        if(cdvl[8] || cdvl[10]) errorCount ++;\r\n\r\n        const errorSizeAdjust = errorCount > 0 ? 'drawerPaperError' + errorCount : '';\r\n\r\n        const checkDisableVisualize = () => {\r\n            for(let i = 0; i < checkDisableVisualizeList.length; i++){\r\n                if(checkDisableVisualizeList[i]) return checkDisableVisualizeList[i];\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        const disableVisualizeMessage = checkDisableVisualize();\r\n\r\n        const visualizeButtonTooltip = disableVisualizeMessage ? disableVisualizeMessage : generalWarnMessage ? generalWarnMessage : '';\r\n\r\n        return (\r\n            <div>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n\r\n                { showControlPanel ? \r\n\r\n                        <IconButton \r\n                            className={classes.closePanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleCloseControlPanel}>\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                :\r\n                    \r\n                        <IconButton \r\n                            className={classes.openPanelChevron} \r\n                            aria-label=\"toggle-panel\" \r\n                            color=\"primary\" \r\n                            onClick={this.handleOpenControlPanel}>\r\n                            <ChevronRight />\r\n                        </IconButton>\r\n                }\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={showControlPanel}\r\n                    classes={{\r\n                        paper: `${classes.drawerPaper} ${classes[errorSizeAdjust]}`,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >\r\n                    <ButtonGroup>\r\n                        <Tooltip title='Show Globe' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${!showCharts && classes.depressed}`} \r\n                                onClick={handleShowGlobe}\r\n                                color='inherit'\r\n                            >\r\n                                <Language/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        \r\n                        <Tooltip title='Show Charts' placement='top'>\r\n                            <IconButton \r\n                                className={`${classes.groupedButtons} ${showCharts && classes.depressed}`}\r\n                                onClick={this.handleShowChartsAndResize}\r\n                                color='inherit'\r\n                            >\r\n                                <InsertChartOutlined/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ButtonGroup>\r\n                    \r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            <Tooltip title='Clear Charts' placement='bottom'>\r\n                                <IconButton color='inherit' onClick={this.props.clearCharts} className={classes.clearChartsButton}>\r\n                                    <Delete/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <Tooltip title='Reset Parameters' placement='right'>\r\n                                <IconButton color='inherit' onClick={this.handleResetSPParams} className={classes.resetSPParamsButton}>\r\n                                    <Cached/>\r\n                                </IconButton>\r\n                            </Tooltip>                            \r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <form>\r\n                        <Grid container>\r\n                            <Grid item xs={10}>\r\n                                <ConnectedTooltip placement='top' title='Enter one or more search terms.'>\r\n                                    <Select\r\n                                        // onMenuOpen={() => {\r\n                                        //     setTimeout(() => selectRef.current.select.setState({...selectRef.current.select.state, focusedOption: null}), 1)\r\n                                            \r\n                                        // }}\r\n                                        formatOptionLabel={formatOptionLabel}\r\n                                        handleSetDownloadTarget={this.props.handleSetDownloadTarget}\r\n                                        handleTableStatsDialogOpen={this.handleTableStatsDialogOpen}\r\n                                        isLoading = {catalogRequestState === states.inProgress}\r\n                                        onAutoSuggestChange = {this.onAutoSuggestChange}\r\n                                        datasets = {datasets}\r\n                                        components={{\r\n                                            IndicatorSeparator:'',\r\n                                            DropdownIndicator,\r\n                                            GroupHeading,\r\n                                            Group,\r\n                                            Option,\r\n                                            MenuList,\r\n                                            // SingleValue\r\n                                        }}\r\n                                        handleDownloadCsvClick = {this.handleDownloadCsvClick}\r\n                                        escapeClearsValue\r\n                                        ref={selectRef}\r\n                                        onInputChange={this.onAutoSuggestChange}\r\n                                        filterOption={null}\r\n                                        className={classes.variableSelect}\r\n                                        isClearable\r\n                                        inputValue={this.state.searchField}\r\n                                        name=\"fields\"\r\n                                        label=\"Variables\"\r\n                                        options={options}\r\n                                        onChange={this.props.updateFields}\r\n                                        value={fields}\r\n                                        placeholder=\"Variable Search\"\r\n                                        styles={{\r\n                                            menu: provided => ({\r\n                                                ...provided, \r\n                                                zIndex: 1300, \r\n                                                top: '-8px',\r\n                                                left: navDrawerWidth,\r\n                                                width: '980px',\r\n                                                borderRadius: '4px',\r\n                                                boxShadow: '2px 2px 2px 2px #242424',\r\n                                                overflow: 'hidden',\r\n                                                backgroundColor: 'rgba(0,0,0,.5)',\r\n                                                backdropFilter: 'blur(5px)',\r\n                                            }),\r\n\r\n                                            valueContainer: provided => ({\r\n                                                ...provided,\r\n                                                padding: '0 0 0 6px',\r\n                                                fontWeight: 100\r\n                                            }),\r\n\r\n                                            input: provided => ({...provided,\r\n                                                color: 'white',\r\n                                                fontFamily: '\"Lato\", sans-serif'\r\n                                            }),\r\n\r\n                                            control: provided => ({...provided,\r\n                                                backgroundColor: '#424242',\r\n                                                border: 'none',\r\n                                                borderBottom: '1px solid #333333',\r\n                                                borderRadius: 0,\r\n                                                '&:hover': { borderColor: 'white' },\r\n                                                '&:focus-within': { borderColor: colors.orange },\r\n                                                height: '56px'\r\n                                            }),\r\n\r\n                                            placeholder: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                fontSize: '14px',\r\n                                                fontWeight: 300\r\n                                            }),\r\n\r\n                                            noOptionsMessage: provided => ({...provided,\r\n                                                fontFamily: '\"Lato\", sans-serif',\r\n                                                color: colors.orange,\r\n                                                backgroundColor: colors.backgroundGray\r\n                                            }),\r\n\r\n                                            option: (provided, { data, isFocused }) => {\r\n                                                return ({...provided,\r\n                                                    fontWeight: 400,\r\n                                                    fontSize: '16px',\r\n                                                    backgroundColor: 'transparent',\r\n                                                    color: isFocused ? colors.orange : 'white',\r\n                                                    '&:hover': { backgroundColor: 'rgba(122,67,0,.5)'},\r\n                                                    // '&:active': { backgroundColor: 'rgba(0,0,0,.5)', color: colors.orange},\r\n                                            })},\r\n\r\n                                            singleValue: (provided, state) => ({...provided,\r\n                                                color: 'white',\r\n                                                fontWeight: 400\r\n                                            })\r\n                                        }}\r\n                                        theme={theme => ({\r\n                                            ...theme,\r\n                                            colors: {\r\n                                            ...theme.colors,\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                </ConnectedTooltip>\r\n                            </Grid>\r\n                            <Grid item xs={2} className={classes.tableStatsButton}>\r\n                                <IconButton \r\n                                    size='small' \r\n                                    onClick={this.handleTableStatsDialogOpen}                                     \r\n                                    disabled={!fields}\r\n                                >\r\n                                    <LibraryBooks/>\r\n                                </IconButton>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder={getDatePlaceholder(dt1)}\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    maxDate={maxDate}\r\n                                    minDate={null}\r\n                                    maxDateMessage={maxDateMessage}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={12}>\r\n                                <KeyboardDatePicker\r\n                                    className={classes.datePicker}\r\n                                    placeholder={getDatePlaceholder(dt2)}\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={minDate}\r\n                                    maxDate={null}\r\n                                    minDateMessage={minDateMessage}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='filled'\r\n                                    variant='inline'\r\n                                    KeyboardButtonProps={{\r\n                                        className: classes.datePickerInputAdornment\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat1-input\"\r\n                                    error={Boolean(startLatMessage)}\r\n                                    label={\"Start Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat1}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startLatMessage}\r\n                                    name='lat1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lat2-input\"\r\n                                    error={Boolean(endLatMessage)}\r\n                                    label={\"End Lat(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lat2}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endLatMessage}\r\n                                    name='lat2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon1-input\"\r\n                                    error={Boolean(startLonMessage)}\r\n                                    label={\"Start Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon1}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startLonMessage}\r\n                                    name='lon1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"lon2-input\"\r\n                                    error={Boolean(endLonMessage)}\r\n                                    label={\"End Lon(\\xB0)\"}\r\n                                    className={classes.textField}\r\n                                    value={lon2}\r\n                                    onChange={handleLatLonChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endLonMessage}\r\n                                    name='lon2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"depth1-input\"\r\n                                    error={Boolean(startDepthMessage)}\r\n                                    label=\"Start Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth1}\r\n                                    onChange={handleChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={startDepthMessage}\r\n                                    name='depth1'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} className={classes.formGridItem}>\r\n                                <TextField\r\n                                    id=\"depth2-input\"\r\n                                    error={Boolean(endDepthMessage)}\r\n                                    label=\"End Depth(m)\"\r\n                                    className={classes.textField}\r\n                                    value={depth2}\r\n                                    onChange={handleChange}\r\n                                    FormHelperTextProps={{className: classes.helperText}}\r\n                                    helperText={endDepthMessage}\r\n                                    name='depth2'\r\n                                    InputProps={{className:classes.padLeft}}\r\n                                    InputLabelProps={{className:classes.padLeft}}\r\n                                >\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <FormControl variant='filled' className={classes.vizTypeSelectFormControl} disabled={!fields}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        className={classes.vizTypeSelectFormControl}\r\n                                        style={overrideDisabledStyle}\r\n                                        value={selectedVizType}\r\n                                        variant='filled'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'filled'\r\n                                        }}\r\n                                        >\r\n                                        {!heatmapMessage && <MenuItem value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>}\r\n                                        {!contourMessage && <MenuItem value={vizSubTypes.contourMap}>Contour Heatmap</MenuItem>}\r\n                                        {!sectionMapMessage && <MenuItem value={vizSubTypes.sectionMap}>Section Map</MenuItem>}\r\n                                        {!sectionMapMessage && <MenuItem value={vizSubTypes.contourSectionMap}>Contour Section Map</MenuItem>}\r\n                                        {!histogramMessage && <MenuItem value={vizSubTypes.histogram}>Histogram</MenuItem>}                      \r\n                                        {!timeSeriesMessage && <MenuItem value={vizSubTypes.timeSeries}>Time Series</MenuItem>}\r\n                                        {!depthProfileMessage && <MenuItem value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>}\r\n                                        {!sparseMapMessage && <MenuItem value={vizSubTypes.sparse}>Sparse Map</MenuItem>}\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Tooltip placement='right' title={visualizeButtonTooltip} className={classes.vizButtonTooltip}>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        className={classes.visualizeButton}\r\n                                        variant='contained'\r\n                                        onClick={() => this.props.onVisualize()}\r\n                                        disabled={Boolean(disableVisualizeMessage) || !fields || !selectedVizType}\r\n                                        fullWidth\r\n                                    >\r\n                                        Visualize\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </form>                    \r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography, Table, TableBody, TableCell, TableRow, TableHead, TableFooter } from '@material-ui/core';\r\n\r\nimport { tableStatsRequestSend, csvDownloadRequestSend } from '../Redux/actions/visualization';\r\n\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\nimport depthUtils from '../Utility/depthCounter';\r\n\r\nconst styles = (theme) => ({\r\n    tableFooter: {\r\n        fontSize: '11px',\r\n        margin: '5px 0px 0px 10px'\r\n    },\r\n\r\n    table: {\r\n        marginTop: '9px'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    datasets: state.datasets,\r\n    catalog: state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    tableStatsRequestSend,\r\n    csvDownloadRequestSend\r\n}\r\n\r\nclass DownloadConfirmationDialog extends Component {\r\n\r\n    componentDidUpdate = () => {\r\n        const { downloadTarget, datasets, catalog, tableStatsRequestSend } = this.props;\r\n        if(downloadTarget && datasets && !datasets[downloadTarget.dataset].tableStats){\r\n            const firstMember = catalog.find(item => item.Dataset_Name === downloadTarget.dataset);\r\n            tableStatsRequestSend(firstMember.Table_Name, downloadTarget.dataset);\r\n        }\r\n    }\r\n\r\n    handleFullDatasetDownload = (tableName) => {\r\n        let query = `select%20*%20from%20${tableName}`;\r\n        const fileName = this.props.downloadTarget.variable || this.props.downloadTarget.dataset;\r\n        this.props.csvDownloadRequestSend(query, fileName);\r\n    }\r\n\r\n    handleSubsetDownload = (tableName, dt1, dt2, lat1, lat2, lon1, lon2, depth1, depth2) => {\r\n        let query = `select * from ${tableName} where time between '${dt1}' and '${dt2}' and ` +\r\n            `lat between ${lat1} and ${lat2} and ` +\r\n            `lon between ${lon1} and ${lon2}`\r\n        console.log(query);\r\n        const fileName = this.props.downloadTarget.variable || this.props.downloadTarget.dataset;\r\n        this.props.csvDownloadRequestSend(query, fileName);\r\n    }\r\n\r\n    render() {\r\n        const { classes, datasets, downloadTarget, lat1, lat2, lon1, lon2, dt1, dt2, depth1, depth2, catalog } = this.props;\r\n\r\n        if(!downloadTarget || ! datasets ||  !catalog) return '';\r\n        \r\n        const tableStats = datasets[downloadTarget.dataset].tableStats;\r\n\r\n        if(!tableStats) return '';\r\n\r\n        const sampleMember = catalog.find(item => item.Dataset_Name === downloadTarget.dataset);\r\n        const { Lat_Min, Lat_Max, Lon_Min, Lon_Max, Time_Min, Time_Max, Depth_Min, Depth_Max } = sampleMember;\r\n        const latMin = parseFloat(Lat_Min);\r\n        const latMax = parseFloat(Lat_Max);\r\n        const lonMin = parseFloat(Lon_Min);\r\n        const lonMax = parseFloat(Lon_Max);\r\n        const timeMin = Date.parse(Time_Min);\r\n        const timeMax = Date.parse(Time_Max);\r\n\r\n        const subsetLat1 = lat1 < latMin ? latMin :\r\n            lat1 > latMax ? latMax :\r\n            lat1;\r\n\r\n        const subsetLat2 = lat2 < latMin ? latMin :\r\n        lat2 > latMax ? latMax :\r\n        lat2;\r\n\r\n        const subsetLon1 = lon1 < lonMin ? lonMin :\r\n            lon1 > lonMax ? lonMax :\r\n            lon1;\r\n\r\n        const subsetLon2 = lon2 < lonMin ? lonMin :\r\n            lon2 > lonMax ? lonMax :\r\n            lon2;\r\n\r\n        const subsetTime1 = dt1 < timeMin ? timeMin :\r\n            dt1 > timeMax ? timeMax :\r\n            dt1;\r\n\r\n        const subsetTime2 = dt2 < timeMin ? timeMin :\r\n            dt2 > timeMax ? timeMax:\r\n            dt2;\r\n\r\n        if(Depth_Max){\r\n            var depthMin = parseFloat(Depth_Min);\r\n            var depthMax = parseFloat(Depth_Max);\r\n\r\n            var subsetDepth1 = depth1 < depthMin ? depthMin : \r\n                depth1 > depthMax ? depthMax : \r\n                depth1;\r\n\r\n            var subsetDepth2 = depth2 < depthMin ? depthMin : \r\n                depth2 > depthMax ? depthMax : \r\n                depth2;\r\n        }        \r\n\r\n        const tableName = sampleMember.Table_Name;\r\n        \r\n        const totalRows = tableStats.lat.count;\r\n        const variableColumns = datasets[downloadTarget.dataset].Variables && datasets[downloadTarget.dataset].Variables.split(',').length;\r\n        const depthColumns = tableStats.depth ? 1 : 0;\r\n        const fixedColumns = 3;\r\n\r\n        const totalColumns = variableColumns + depthColumns + fixedColumns;\r\n\r\n        const totalDataPoints = totalRows * totalColumns;\r\n        const fullDataAvailable = totalDataPoints < 40000000;\r\n\r\n        var dateRatio;\r\n\r\n        if(sampleMember.Temporal_Resolution === temporalResolutions.monthlyClimatology){\r\n            const subsetMonths = new Date(subsetTime2).getMonth() - new Date(subsetTime1).getMonth();\r\n            dateRatio = (subsetMonths + 1) / 12;\r\n        } else {\r\n            var totalDays = (timeMax - timeMin) / 86400000 || 1;\r\n            var subsetDays = (subsetTime2 - subsetTime1) / 86400000 || 1;\r\n            dateRatio = totalDays > subsetDays ? subsetDays / totalDays : 1;\r\n        }\r\n\r\n        const totalLatSize = (latMax - latMin) || 1;\r\n        const subsetLatSize = (subsetLat2 - subsetLat1) || 1;\r\n        const latRatio = totalLatSize > subsetLatSize ? subsetLatSize / totalLatSize : 1;\r\n\r\n        const totalLonSize = (lonMax - lonMin) || 1;\r\n        const subsetLonSize = subsetLon2 > subsetLon1 ? (subsetLon2 - subsetLon1) || 1 : (subsetLon2 + 360 - subsetLon1) || 1;\r\n        const lonRatio = totalLonSize > subsetLonSize ? subsetLonSize / totalLonSize : 1;\r\n\r\n        var depthRatio = 1;\r\n\r\n        if(sampleMember.Depth_Max) {\r\n            console.log('Found Depth_Max');\r\n            if(depthUtils.piscesTable.has(sampleMember.Table_Name)){\r\n                console.log('Found Pisces')\r\n                let depthCount = depthUtils.count({data: sampleMember}, subsetDepth1, subsetDepth2);\r\n                depthRatio = depthCount / depthUtils.piscesDepths.length || 1;\r\n            } else if (depthUtils.darwinTable.has(sampleMember.Table_Name)){\r\n                console.log('Found darwin');\r\n                let depthCount = depthUtils.count({data: sampleMember}, subsetDepth1, subsetDepth2);\r\n                depthRatio = depthCount / depthUtils.darwinDepths.length || 1;\r\n            } else {\r\n                var totalDepthSize = depthMax - depthMin || 1;\r\n                var subsetDepthSize = subsetDepth2 - subsetDepth1 || 1;\r\n                depthRatio = subsetDepthSize > totalDepthSize ? 1 : subsetDepthSize / totalDepthSize;\r\n            }\r\n        }\r\n\r\n        // console.log(depthRatio);\r\n\r\n        const subsetDataPoints = Math.floor(totalDataPoints * dateRatio * latRatio * lonRatio * depthRatio);\r\n\r\n        const subsetAvailable = subsetDataPoints <= 20000000;\r\n\r\n        const timeString1 = new Date(subsetTime1).toISOString().slice(0,10);\r\n        const timeString2 = new Date(subsetTime2).toISOString().slice(0,10);\r\n        const timeStringMin = sampleMember.Temporal_Resolution === temporalResolutions.monthlyClimatology ? \r\n            'Monthly' : new Date(timeMin).toISOString().slice(0,10);\r\n        const timeStringMax = sampleMember.Temporal_Resolution === temporalResolutions.monthlyClimatology ? \r\n            'Monthly' : new Date(timeMax).toISOString().slice(0,10);\r\n\r\n        console.log('Total data points: ', totalDataPoints);\r\n        console.log('Total rows: ', totalRows);\r\n        console.log('Total columns: ', totalColumns)\r\n        console.log('Subset data points: ', subsetDataPoints);\r\n        console.log('Date Ratio: ', dateRatio);\r\n        console.log('Lat Ratio: ', latRatio);\r\n        console.log('Lon ratio: ', lonRatio);\r\n        console.log('Depth Ratio: ', depthRatio)\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <Dialog open={Boolean(downloadTarget)} onClose={() => this.props.handleSetDownloadTarget(null)} maxWidth={false}>\r\n                    <DialogTitle>Downloading {downloadTarget.variable && `${downloadTarget.variable} from `} {downloadTarget.dataset}</DialogTitle>\r\n                    \r\n                    <DialogContent>\r\n                        {fullDataAvailable ? \r\n                            `The full dataset is available for download.` :\r\n                            `The full dataset is too large for download.`\r\n                        }\r\n                    </DialogContent>\r\n                    \r\n                    <DialogContent>\r\n                        <Typography>\r\n                            The described subset contains approximately {subsetDataPoints} data points:\r\n                            {!subsetAvailable && 'This is over the limit of 20,000,000 data points. Please reduce lat, lon, time, or depth range to enable download.'}\r\n                        </Typography>\r\n\r\n                        <Table size='small'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Parameter</TableCell>\r\n                                    <TableCell>Subset Start</TableCell>\r\n                                    <TableCell>Subset End</TableCell>\r\n                                    <TableCell>Dataset Min</TableCell>\r\n                                    <TableCell>Dataset Max</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell>Time</TableCell>\r\n                                    <TableCell>{timeString1}</TableCell>\r\n                                    <TableCell>{timeString2}</TableCell>\r\n                                    <TableCell>{timeStringMin}</TableCell>\r\n                                    <TableCell>{timeStringMax}</TableCell>\r\n                                </TableRow>\r\n\r\n                                <TableRow>\r\n                                    <TableCell>Latitude[{'\\xb0'}]</TableCell>\r\n                                    <TableCell>{subsetLat1}</TableCell>\r\n                                    <TableCell>{subsetLat2}</TableCell>\r\n                                    <TableCell>{latMin}</TableCell>\r\n                                    <TableCell>{latMax}</TableCell>\r\n                                </TableRow>\r\n\r\n                                <TableRow>\r\n                                    <TableCell>Longitude[{'\\xb0'}]</TableCell>\r\n                                    <TableCell>{subsetLon1}</TableCell>\r\n                                    <TableCell>{subsetLon2}</TableCell>\r\n                                    <TableCell>{lonMin}</TableCell>\r\n                                    <TableCell>{lonMax}</TableCell>\r\n                                </TableRow>\r\n\r\n                                <TableRow>\r\n                                    <TableCell>Depth[m]</TableCell>\r\n                                    <TableCell>{isNaN(subsetDepth1) ? 'NA' : subsetDepth1}</TableCell>\r\n                                    <TableCell>{isNaN(subsetDepth2) ? 'NA' : subsetDepth2}</TableCell>\r\n                                    <TableCell>{isNaN(depthMin) ? 'NA' : depthMin}</TableCell>\r\n                                    <TableCell>{isNaN(depthMax) ? 'NA' : depthMax}</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                                \r\n                        </Table>\r\n\r\n                        <Typography className={classes.tableFooter}>\r\n                            *Subset start and end values may automatically adjust to fit dataset boundaries.\r\n                        </Typography>\r\n\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={() => this.props.handleSetDownloadTarget(null)}>\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        {subsetAvailable &&\r\n                            <Button onClick={() => this.handleSubsetDownload(tableName, timeString1, timeString2, subsetLat1, subsetLat2, subsetLon1, subsetLon2, subsetDepth1, subsetDepth2)}>\r\n                                Download Subset\r\n                            </Button>                            \r\n                        }\r\n\r\n                        {fullDataAvailable && \r\n                            <Button onClick={() => this.handleFullDatasetDownload(tableName)}>\r\n                                Download Full Dataset\r\n                            </Button>\r\n                        }\r\n                    </DialogActions>\r\n                </Dialog> \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DownloadConfirmationDialog));","export default (infoObject) => {\r\n\r\n    let lonRange = infoObject.lonMax - infoObject.lonMin;\r\n\r\n    let sectionSize;\r\n    if(lonRange < 2){\r\n        sectionSize = (lonRange / 6).toFixed(2);\r\n    } else {\r\n        sectionSize = Math.floor(lonRange / 6);\r\n    }\r\n\r\n    let tickvals = Array.from(Array(5), (e, i) => Math.ceil(infoObject.lonMin + ((i + 1) * sectionSize)));\r\n    let ticktext = tickvals.map(e => e > 180 ? e - 360 : e);\r\n\r\n    return {\r\n        tickmode: 'array',\r\n        tickvals,\r\n        ticktext\r\n    }\r\n}","import months from '../Enums/months';\r\n\r\nexport default (dateString, hasHour, isMonthly) => isMonthly ? months[parseInt(dateString)] : hasHour ? dateString.slice(0,10) + ' ' + dateString.slice(11,16): dateString.slice(0,10);","import colors from '../Enums/colors';\r\n\r\nexport default {\r\n    layout: {\r\n        font: {color: '#ffffff'},\r\n        paper_bgcolor: colors.backgroundGray,\r\n        // plot_bgcolor: 'transparent'\r\n    },\r\n\r\n    config: {\r\n        displaylogo: false\r\n    },\r\n\r\n    annotations: (distributor, height) => (\r\n        [\r\n            {\r\n                text: `Source: ${distributor.length < 30 ? \r\n                    distributor : \r\n                    distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                font: {\r\n                    color: 'white',\r\n                    size: 10\r\n                },\r\n                xref: 'paper',\r\n                yref: 'paper',\r\n                yshift: height ? 0 - height + 160 : -290,\r\n                showarrow: false,\r\n            }\r\n        ]\r\n    )\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DateRange, Waves, CloudDownload, Palette, SwapVert, Gamepad, LineWeight, Rotate90DegreesCcw, Info } from '@material-ui/icons';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { ButtonGroup } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    popover: {\r\n        width: '470px',\r\n        height: '120px',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5)\r\n    },\r\n\r\n    iconButton: {\r\n        boxShadow: '0px 1px 1px 1px #242424',\r\n    },\r\n\r\n    colorForm: {\r\n        width: '100%'\r\n    },\r\n\r\n    lastIcon: {\r\n        borderTopRightRadius: '10%',\r\n        borderBottomRightRadius: '10%'\r\n    },\r\n\r\n    buttonGroup: {\r\n        display: 'block',\r\n        margin: '0px auto 8px auto',\r\n        maxWidth: '700px'\r\n    },\r\n\r\n    depressed: {\r\n        boxShadow: 'inset 1px 1px 5px #262626'\r\n    },\r\n\r\n    colorscaleMenu: {\r\n        maxHeight: '400px'\r\n    },\r\n})\r\n\r\nconst colorscaleOptions = [\r\n    'Default',\r\n    'Greys', \r\n    'YlGnBu', \r\n    'Greens', \r\n    'YlOrRd',\r\n    'Bluered',\r\n    'RdBu',\r\n    'Reds',\r\n    'Blues',\r\n    'Picnic',\r\n    'Rainbow',\r\n    'Portland',\r\n    'Jet',\r\n    'Hot',\r\n    'Blackbody',\r\n    'Earth',\r\n    'Electric',\r\n    'Viridis',\r\n    'Cividis'];\r\n\r\nfunction usePreviousSize(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction usePreviousColor(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction usePreviousOpacity(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nconst ChartControlPanel = (props) => {\r\n\r\n    const { \r\n        classes, \r\n        onToggleSplitByDate,\r\n        splitByDate,\r\n        onToggleSplitByDepth,\r\n        splitByDepth,\r\n        onToggleSplitBySpace,\r\n        splitBySpace,\r\n        switchOrientation,\r\n        orientation, \r\n        downloadCsv, \r\n        handleZValueConfirm,\r\n        zValues,\r\n        markerOptions,\r\n        handleMarkerOptionsConfirm,\r\n    } = props;\r\n\r\n    const [paletteAnchorElement, setPaletteAnchorElement] = useState(null);\r\n\r\n    let handleOpenPalette = (event) => {\r\n        setPaletteAnchorElement(event.currentTarget);\r\n    }\r\n\r\n    // Local version, not from props\r\n    let handlePaletteChoice = (option) => {\r\n        setPaletteAnchorElement(null);\r\n        props.handlePaletteChoice(option);\r\n    }\r\n\r\n    const [zScalePopoverAnchorElement, setZScalePopoverAnchorElement] = React.useState(null);\r\n    const [localZMin, setLocalZMin] = React.useState(zValues && zValues[0]);\r\n    const [localZMax, setLocalZMax] = React.useState(zValues && zValues[1]);\r\n\r\n    const zScalePopoverOpen = Boolean(zScalePopoverAnchorElement);\r\n    const zScalePopoverID = zScalePopoverOpen ? 'zscale-popover' : undefined;\r\n\r\n    const handleZScalePopoverClose = () => {\r\n        setZScalePopoverAnchorElement(null);\r\n    };\r\n    \r\n    const checkLocalZMin = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMin)) return 'Invalid value';\r\n    }\r\n\r\n    const checkLocalZMax = () => {\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMax)) return 'Invalid value';\r\n    }\r\n\r\n    const zScaleValidations = [\r\n        checkLocalZMin(),\r\n        checkLocalZMax()\r\n    ];\r\n\r\n    const [\r\n        zMinMessage,\r\n        zMaxMessage\r\n    ] = zScaleValidations;\r\n\r\n    const handleLocalZConfirm = () => {\r\n        handleZValueConfirm([localZMin, localZMax]);\r\n        handleZScalePopoverClose();\r\n    }\r\n\r\n    const [markerOptionsAnchorElement, setMarkerOptionsAnchorElement] = React.useState(null);\r\n    const [localMarkerOpacity, setLocalMarkerOpacity] = React.useState(markerOptions && markerOptions.opacity);\r\n    const [localMarkerColor, setLocalMarkerColor] = React.useState(markerOptions && markerOptions.color);\r\n    const [localMarkerSize, setLocalMarkerSize] = React.useState(markerOptions && markerOptions.size);\r\n\r\n    if(markerOptions){\r\n        var previousOpacity = usePreviousOpacity(markerOptions.opacity);\r\n        var previousColor = usePreviousColor(markerOptions.color);\r\n        var previousSize = usePreviousSize(markerOptions.size);\r\n        \r\n        useEffect(() => {\r\n            if(markerOptions.opacity !== previousOpacity){\r\n                setLocalMarkerOpacity(markerOptions.opacity);\r\n            }\r\n    \r\n            if(markerOptions.color !== previousColor){\r\n                setLocalMarkerColor(markerOptions.color);\r\n            }\r\n    \r\n            if(markerOptions.size !== previousSize){\r\n                setLocalMarkerSize(markerOptions.size);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const markerPopoverOpen = Boolean(markerOptionsAnchorElement);\r\n    const markerPopoverID = markerPopoverOpen ? 'marker-popover' : undefined;\r\n\r\n    const handleMarkerOptionsClose = () => {\r\n        setMarkerOptionsAnchorElement(null);\r\n    }\r\n\r\n    const checkLocalMarkerOpacity = () => {\r\n        if(localMarkerOpacity < 0.1 || localMarkerOpacity > 1 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerOpacity)){\r\n            return 'Opacity should be 0.1 to 1'\r\n        }\r\n    }\r\n\r\n    const checkLocalMarkerSize = () => {\r\n        if(localMarkerSize < 1 || localMarkerSize > 18 || !/^[-+]?[0-9]*\\.?[0-9]+$/.test(localMarkerSize)){\r\n            return 'Size should be 1 to 18'\r\n        }\r\n    }\r\n\r\n    const markerOptionsValidations = [\r\n        checkLocalMarkerOpacity(),\r\n        checkLocalMarkerSize()\r\n    ]\r\n\r\n    const [\r\n        localMarkerOpacityMessage,\r\n        localMarkerSizeMessage\r\n    ] = markerOptionsValidations;\r\n\r\n    const handleLocalMarkerOptionsConfirm = () => {\r\n        handleMarkerOptionsConfirm({opacity: localMarkerOpacity, color: localMarkerColor, size: localMarkerSize});\r\n        handleMarkerOptionsClose();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup className={classes.buttonGroup}>\r\n\r\n                {Boolean(onToggleSplitByDate) && \r\n                    <Tooltip placement='top' title='Split By Date'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDate && classes.depressed}`} \r\n                            onClick={onToggleSplitByDate}\r\n                        >\r\n                            <DateRange/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n{/* \r\n                {Boolean(onToggleSplitByDepth) && \r\n                    <Tooltip placement='top' title='Split By Depth'>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitByDepth && classes.depressed}`} \r\n                            onClick={onToggleSplitByDepth}\r\n                        >\r\n                            <Waves/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                } */}\r\n\r\n                {Boolean(onToggleSplitBySpace) && \r\n                    <Tooltip placement='top' title={orientation === 'zonal' ? 'Split by Latitude' : 'Split by Longitude'}>\r\n                        <IconButton color='inherit' className={`${classes.iconButton} ${splitBySpace && classes.depressed}`} \r\n                            onClick={onToggleSplitBySpace}\r\n                        >\r\n                            <LineWeight/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {/* {Boolean(switchOrientation) && \r\n                    <Tooltip placement='top' title={orientation === 'zonal' ? 'Switch to Meridional' : 'Switch to Zonal'}>\r\n                        <IconButton color='inherit' className={classes.iconButton} \r\n                            onClick={switchOrientation}\r\n                        >\r\n                            <Rotate90DegreesCcw/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                } */}\r\n\r\n                <Tooltip placement='top' title='Download CSV'>\r\n                    <IconButton color='inherit' onClick={downloadCsv} className={classes.iconButton} >\r\n                        <CloudDownload/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n                {Boolean(handleZValueConfirm) &&\r\n                    <Tooltip title='Change Colorscale Range' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setZScalePopoverAnchorElement(event.currentTarget)} className={classes.iconButton}>\r\n                            <SwapVert/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                {Boolean(props.handlePaletteChoice) &&\r\n                    <Tooltip title='Change Palette' placement='top'>\r\n                        <IconButton disabled={!Boolean(props.handlePaletteChoice)} color='inherit' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                            <Palette/>\r\n                        </IconButton>                \r\n                    </Tooltip>      \r\n                }\r\n\r\n                {Boolean(props.handleMarkerOptionsConfirm) &&\r\n                    <Tooltip title='Marker Options' placement='top'>\r\n                        <IconButton color='inherit' onClick={(event) => setMarkerOptionsAnchorElement(event.currentTarget)} className={`${classes.iconButton} ${classes.lastIcon}`} >\r\n                            <Gamepad/>\r\n                        </IconButton>                \r\n                    </Tooltip>\r\n                }\r\n\r\n                {/* <Tooltip title='Plot Info' placement='top'>\r\n                    <IconButton color='inherit' onClick={() => console.log('Info!')} className={`${classes.iconButton}`} >\r\n                        <Info/>\r\n                    </IconButton>                \r\n                </Tooltip> */}\r\n                \r\n            </ButtonGroup>\r\n            \r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={paletteAnchorElement}\r\n                keepMounted\r\n                open={Boolean(paletteAnchorElement)}\r\n                onClose={() => setPaletteAnchorElement(null)}\r\n                className={classes.colorscaleMenu}\r\n            >\r\n                {colorscaleOptions.map((option, index) => (\r\n                    <MenuItem onClick={() => handlePaletteChoice(option === 'Default' ? 'heatmap' : option)} key={index}>{option}</MenuItem>\r\n                ))}\r\n                \r\n            </Menu>\r\n            \r\n            {/* zscale popover */}\r\n            <Popover\r\n                id={zScalePopoverID}\r\n                open={zScalePopoverOpen}\r\n                anchorEl={zScalePopoverAnchorElement}\r\n                onClose={handleZScalePopoverClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMinMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-min-input' >Min</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-min-input'\r\n                                    value={localZMin}\r\n                                    onChange={(event) => setLocalZMin(event.target.value)}\r\n                                    aria-describedby='local-zmin-error'\r\n                                    labelWidth={36}\r\n                                    name='local-zmin'\r\n                                />\r\n                                <FormHelperText id='local-zmin-error'>{zMinMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-max-input' >Max</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-max-input'\r\n                                    value={localZMax}\r\n                                    onChange={(event) => setLocalZMax(event.target.value)}\r\n                                    aria-describedby=\"local-zmax-error\"\r\n                                    labelWidth={36}\r\n                                    name='local-zmax'\r\n                                />\r\n                                <FormHelperText id=\"local-zmax-error\">{zMaxMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={7}>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleZScalePopoverClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalZConfirm}\r\n                                disabled={Boolean(zMinMessage || zMaxMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n                \r\n            {/* Marker popover */}\r\n            <Popover\r\n                id={markerPopoverID}\r\n                open={markerPopoverOpen}\r\n                anchorEl={markerOptionsAnchorElement}\r\n                onClose={handleMarkerOptionsClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(localMarkerOpacityMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-opacity' >Opacity</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='local-marker-opacity'\r\n                                    value={localMarkerOpacity}\r\n                                    onChange={(event) => setLocalMarkerOpacity(event.target.value)}\r\n                                    aria-describedby='local-marker-opacity'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-opacity'\r\n                                />\r\n                            <FormHelperText id=\"local-marker-opacity-error\">{localMarkerOpacityMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                // error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='local-marker-size' >Size</InputLabel>\r\n                                <OutlinedInput\r\n                                    error={Boolean(localMarkerSizeMessage)}\r\n                                    id='local-marker-size'\r\n                                    value={localMarkerSize}\r\n                                    onChange={(event) => setLocalMarkerSize(event.target.value)}\r\n                                    aria-describedby=\"local-marker-size\"\r\n                                    labelWidth={36}\r\n                                    name='local-marker-size'\r\n                                />\r\n                                <FormHelperText id=\"local-marker-size-error\">{localMarkerSizeMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                className={classes.colorForm}\r\n                            >\r\n                                <InputLabel htmlFor='z-min-input'>Color</InputLabel>\r\n                                <OutlinedInput\r\n                                    type='color'\r\n                                    id='marker-color'\r\n                                    value={localMarkerColor}\r\n                                    onChange={(event) => setLocalMarkerColor(event.target.value)}\r\n                                    aria-describedby='local-marker-color'\r\n                                    labelWidth={44}\r\n                                    name='local-marker-color'\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={1}></Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleMarkerOptionsClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleLocalMarkerOptionsConfirm}\r\n                                disabled={Boolean(localMarkerOpacityMessage || localMarkerSizeMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ChartControlPanel);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport handleDateString from '../../Utility/handleChartDatestring';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\nimport subTypes from '../../Enums/visualizationSubTypes';\r\n\r\nconst determineHeight = (infoObject) => {\r\n    const latRange = infoObject.latMax - infoObject.latMin;\r\n    const lonRange = infoObject.lonMax - infoObject.lonMin;\r\n    return (((latRange / lonRange) * 800) * .83) + 60;\r\n}\r\n// equal 608 wide, 670 high\r\n// height half 608 / 267\r\n\r\nconst handleContourMap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n    \r\n    // Handle axis labels when crossing 180th meridian\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    // let height = determineHeight(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        var hovertext = subset.map((value, i) => {\r\n            let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n            if(isNaN(value)) return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n                `<br>` +\r\n                `Lon: ${infoObject.lons[i] > 180 ? format('.2f')(infoObject.lons[i] - 360) : format('.2f')(infoObject.lons[i])}\\xb0`\r\n\r\n            return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n            `<br>` +\r\n            `Lon: ${infoObject.lons[i] > 180 ? format('.2f')(infoObject.lons[i] - 360) : format('.2f')(infoObject.lons[i])}\\xb0` + \r\n            '<br>' +\r\n            `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n        });\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n\r\n                    hoverinfo: 'text',\r\n                    hovertext,\r\n                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'contour',\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: infoObject.zMin > 1 && infoObject.zMin < 1000 ? '.2f' : '.2e'\r\n                    },\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    }\r\n                }\r\n            ]}\r\n\r\n            config={{...chartBase.config}}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: {\r\n                    text: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                },\r\n                xaxis: {title: 'Longitude', color: '#ffffff', ...xTicks},\r\n                yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                // annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHeatmap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 ? handleXTicks(infoObject) : {};\r\n\r\n    // let height = determineHeight(infoObject);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    zsmooth: subset.length < 20000 ? 'fast' : 'false',\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    colorscale: palette,\r\n                    autocolorscale: false,\r\n\r\n                    // hoverinfo: 'text',\r\n                    // hovertext,\r\n\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n                    \r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            config={{...chartBase.config}}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: {\r\n                    text: `${variableName} [${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                    font: {\r\n                        size: 16\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    title: 'Longitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Latitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n                // annotations: chartBase.annotations(infoObject.metadata.Distributor, height)\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SpaceTimeChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitByDepth, setSplitByDepth] = useState(true);\r\n    const [subTypeState, setSubTypeState] = useState(subType);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const subSets = data.generatePlotData(subTypeState, splitByDate, splitByDepth);\r\n    var plots;\r\n\r\n    switch(subTypeState){\r\n        case vizSubTypes.contourMap:\r\n            plots = handleContourMap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.heatmap:\r\n            plots = handleHeatmap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.histogram:\r\n            plots = handleHistogram(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        default:\r\n            plots = '';\r\n            break;        \r\n\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDepth = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDepth(!splitByDepth);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={subTypeState !== subTypes.histogram && handlePaletteChoice}\r\n                onToggleSplitByDepth={depths.size===1 ? null : onToggleSplitByDepth}\r\n                onToggleSplitByDate={dates.size===1 ? null : onToggleSplitByDate}\r\n                splitByDepth={splitByDepth}\r\n                splitByDate={splitByDate}\r\n                handleZValueConfirm={subTypeState !== subTypes.histogram && handleZValueConfirm}\r\n                zValues={subTypeState !== subTypes.histogram && zValues}\r\n                extent={subTypeState !== subTypes.histogram && extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plots}     \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SpaceTimeChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst TimeSeriesChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, dates, parameters, metadata } = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#ff1493', size: 12})\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    let hovertext = variableValues.map((value, i) => {\r\n        return `Time: ${dates[i].slice(0,10)}<br>${parameters.fields}: ${format('.2e')(value)} \\xb1 ${format('.2e')(stds[i])} [${metadata.Unit}]`;\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                        mode: 'lines+markers',\r\n                    x: dates,\r\n                    y: variableValues,\r\n                    error_y: {\r\n                        type: 'data',\r\n                        array: stds,\r\n                        opacity: 0.3,\r\n                        color: '#f2f2f2',\r\n                        visible: true\r\n                    },\r\n                    name: parameters.fields,\r\n                    type: 'scatter',\r\n                    line: {color: markerOptions.color},\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    },\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                  },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    plot_bgcolor: 'transparent',\r\n                    width: 800,\r\n                    height: 570,\r\n                    title: `${parameters.fields} [${metadata.Unit}]  ${parameters.dt1} to ${parameters.dt2}`,\r\n                  xaxis: {\r\n                      title: 'Time',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: parameters.fields,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(TimeSeriesChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst DepthProfileChart = (props) => {\r\n\r\n    const { classes, setLoadingMessage } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, depths, parameters, metadata } = data;\r\n\r\n    const [markerOptions, setMarkerOptions] = React.useState({opacity: .2, color:'#ff1493', size: 12})\r\n\r\n    let hovertext = variableValues.map((value, i) => {\r\n        return `Depth: ${format('.2f')(depths[i])} [m] <br>${parameters.fields}: ${format('.2e')(value)} \\xb1 ${format('.2e')(stds[i])} [${metadata.Unit}]`;\r\n    })\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }    \r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n                handleMarkerOptionsConfirm={handleMarkerOptionsConfirm}\r\n                markerOptions={markerOptions}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                    {   \r\n                        mode: 'lines+markers',\r\n                        y: depths,\r\n                        x: variableValues,\r\n                        error_x: {\r\n                            type: 'data',\r\n                            array: stds,\r\n                            opacity: 0.3,\r\n                            color: '#f2f2f2',\r\n                            visible: true\r\n                        },\r\n                        name: parameters.fields,\r\n                        type: 'scatter',\r\n\r\n                        marker: {\r\n                            line: {color: markerOptions.color},\r\n                            opacity: markerOptions.opacity,\r\n                            size: markerOptions.size,\r\n                            color: markerOptions.color\r\n                        },\r\n\r\n                        hoverinfo: 'text',\r\n                        hovertext\r\n                    },\r\n                ]}\r\n                config={{...chartBase.config}}\r\n                layout= {{\r\n                    ...chartBase.layout,\r\n                    plot_bgcolor: 'transparent',\r\n                    width: 800,\r\n                    height: 570,\r\n                    title: `${parameters.fields} [${metadata.Unit}]  ${parameters.depth1} to ${parameters.depth2} meters`,\r\n                  yaxis: {\r\n                      title: 'Depth[m]',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power',\r\n                      autorange:'reversed'\r\n                    },\r\n                  xaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: chartBase.annotations(metadata.Distributor)\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(DepthProfileChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport visualizationSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\n\r\nconst handleSectionMap = (subsets, infoObject, splitByDate, splitBySpace, orientation, palette, zMin, zMax) => {\r\n\r\n    const dates = Array.from(infoObject.dates);\r\n    const depths = Array.from(infoObject.depths);\r\n    const lats = Array.from(infoObject.lats);\r\n    const lons = Array.from(infoObject.lons);\r\n\r\n    const distinctMeridiansOrParallelsForSplitting = \r\n        orientation === 'zonal' ?\r\n        lats : \r\n        lons;\r\n\r\n    const mergedOrSplitAxis = \r\n        orientation === 'zonal' ?\r\n        'Latitude' :\r\n        'Longitude';\r\n\r\n    const xAxis = orientation === 'zonal' ?\r\n        'Longitude' :\r\n        'Latitude';\r\n\r\n    let xTicks = infoObject.parameters.lon1 > infoObject.parameters.lon2 && orientation === 'zonal' ? handleXTicks(infoObject) : {};\r\n\r\n\r\n    return subsets.map((subset, index) => {\r\n        let z = subset;\r\n        let x = [];\r\n        let y = [];\r\n\r\n        if(orientation === 'zonal'){\r\n            for(let i = 0; i < subset.length; i++){\r\n                x.push(lons[Math.floor(i / depths.length)])\r\n            }\r\n        } else {\r\n            for(let i = 0; i < subset.length; i++){\r\n                x.push(lats[Math.floor(i / depths.length)])\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < subset.length; i++){\r\n            y.push(depths[i % depths.length]);\r\n        }\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length < 2 ?\r\n            dates[0].slice(0,10) :\r\n            !splitByDate ? \r\n                'Merged Dates' : \r\n                splitBySpace ? \r\n                    dates[Math.floor(index/distinctMeridiansOrParallelsForSplitting.length)].slice(0, 10) : \r\n                    dates[index].slice(0,10);\r\n                \r\n        const spaceTitle = distinctMeridiansOrParallelsForSplitting.length <= 1 ? `${orientation === 'zonal' ? 'Lat' : 'Lon'} ${distinctMeridiansOrParallelsForSplitting[0]}\\xb0` : \r\n            !splitBySpace ? `Merged ${mergedOrSplitAxis}s` : \r\n            `${orientation === 'zonal' ? 'Lat' : 'Lon'} ${distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length]}\\xb0`;\r\n\r\n        let hovertext = z.map((value, i) => {\r\n            \r\n            if(orientation === 'zonal'){\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                if(isNaN(value)) return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                    `<br>` +\r\n                    `Lon: ${format('.2f')(x[i] > 180 ? x[i] - 360 : x[i])}\\xb0`\r\n    \r\n                return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                `<br>` +\r\n                `Lon: ${format('.2f')(x[i] > 180 ? x[i] - 360 : x[i])}\\xb0` + \r\n                '<br>' +\r\n                `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n            } else {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                if(isNaN(value)) return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                    `<br>` +\r\n                    `Lat: ${format('.2f')(x[i])}\\xb0`\r\n    \r\n                return `Depth: ${format('.2f')(y[i])} [m]` +\r\n                `<br>` +\r\n                `Lat: ${format('.2f')(x[i])}\\xb0` + \r\n                '<br>' +\r\n                `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n            }\r\n        });\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    zsmooth: subset.length < 20000 ? 'best' : 'fast',\r\n                    x,\r\n                    y,\r\n                    z,\r\n                    name: infoObject.parameters.fields,\r\n                    type: infoObject.subType === visualizationSubTypes.contourSectionMap ? 'contour' : 'heatmap',\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: '.2e'\r\n                    },\r\n\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName} [${infoObject.metadata.Unit}] ${spaceTitle} ${date}`,\r\n                xaxis: {\r\n                    title: `${xAxis}[\\xB0]`, \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    ...xTicks\r\n                },\r\n                yaxis: {\r\n                    title: 'Depth[m]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    autorange: 'reversed'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />\r\n        )\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SectionMapChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { dates, extent, lats, lons } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitBySpace, setSplitBySpace] = useState(false);\r\n    const [orientation, setOrientation] = useState(data.orientation);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    var spaces = orientation === 'zonal' ? lats : lons;\r\n\r\n    const subsets = data.generatePlotData(orientation, splitByDate, splitBySpace);\r\n    var plots = handleSectionMap(subsets, data, splitByDate, splitBySpace, orientation, palette, zMin, zMax);\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitBySpace = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitBySpace(!splitBySpace);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const switchOrientation = () => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setOrientation(orientation === 'zonal' ? 'meridional' : 'zonal');\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n            <ChartControlPanel\r\n                orientation={orientation}\r\n                switchOrientation={switchOrientation}\r\n                onToggleSplitBySpace={spaces.size === 1 ? null : onToggleSplitBySpace}\r\n                splitBySpace={splitBySpace}\r\n                onToggleSplitByDate={dates.size === 1 ? null : onToggleSplitByDate}\r\n                splitByDate={splitByDate}\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                downloadCsv={downloadCsv}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SectionMapChart));","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst SparseScatter = (props) => {\r\n    const {\r\n        xValues,\r\n        yValues,\r\n        markerOptions,\r\n        infoObject,\r\n        xTitle,\r\n        yTitle,\r\n        type\r\n    } = props;\r\n\r\n    const { parameters, metadata, hasDepth, variableValues, times, lats, lons, depths } = infoObject;\r\n\r\n    const title = `${parameters.fields} [${metadata.Unit}]`;\r\n    \r\n    var hovertext;\r\n\r\n    switch(type){\r\n        case 'time':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                let time= times[i].slice(0,20);\r\n                time = time.replace('T', ' ');\r\n                return `Time: ${time}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'latitude':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Lat: ${lats[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'longitude':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Lon: ${lons[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        case 'depth':\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                return `Depth: ${depths[i].toFixed(2)}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n            break;\r\n\r\n        default:\r\n            hovertext = variableValues.map((value, i) => {\r\n                let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n                let time= times[i].slice(0,20);\r\n                time = time.replace('T', ' ');\r\n                return `Time: ${time}<br>${parameters.fields}: ${format(formatter)(value)} [${metadata.Unit}]`\r\n            })\r\n        }\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n    \r\n            data={[\r\n                {\r\n                    x: xValues,\r\n                    y: yValues,\r\n                    mode: 'markers',\r\n                    name: parameters.fields,\r\n                    type: variableValues.length > 10000 ? 'scattergl' : 'scatter',\r\n                    // type: 'scatter',\r\n                    marker: {\r\n                        opacity: markerOptions.opacity,\r\n                        size: markerOptions.size,\r\n                        color: markerOptions.color\r\n                    },\r\n                    hoverinfo: 'text',\r\n                    hovertext\r\n                },\r\n            ]}\r\n            config={{...chartBase.config}}\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                plot_bgcolor: 'transparent',\r\n                width: 800,\r\n                height: 570,\r\n                title,\r\n                xaxis: {\r\n                    title: xTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: yTitle,\r\n                    color: '#ffffff',\r\n                    exponentformat: 'power',\r\n                    autorange: type === 'depth' ? 'reversed' : true\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)\r\n            }}            \r\n        />\r\n    )\r\n}\r\n\r\nexport default SparseScatter;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport SparseScatter from './SparseScatter';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst handleSparseMap = (infoObject, palette, zValues) => {\r\n\r\n    var hovertext = infoObject.variableValues.map((value, i) => {\r\n        let formatter = value > 1 && value < 1000 ? '.2f' : '.2e';\r\n\r\n        return `Lat: ${format('.2f')(infoObject.lats[i])}\\xb0` +\r\n        `<br>` +\r\n        `Lon: ${format('.2f')(infoObject.lons[i])}\\xb0` + \r\n        '<br>' +\r\n        `${infoObject.parameters.fields}: ${format(formatter)(value)} [${infoObject.metadata.Unit}]`;\r\n    });\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zValues[0],\r\n                    zmax: zValues[1],\r\n                    lon: infoObject.lons,\r\n                    lat: infoObject.lats,\r\n                    z: infoObject.variableValues,\r\n                    zmin:'',\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    radius: 6,                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'densitymapbox',\r\n                    \r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    },\r\n                }\r\n            ]}\r\n\r\n            layout= {{\r\n                ...chartBase.layout,\r\n                width: 800,\r\n                height: 570,\r\n                title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                mapbox: {\r\n                    style: \"white-bg\",\r\n                    layers: [\r\n                        {\r\n                            sourcetype: \"raster\",\r\n                            source: [\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"],\r\n                            below: \"traces\"\r\n                        }\r\n                    ],\r\n                    center: infoObject.center,\r\n                    zoom: infoObject.zoom\r\n                },\r\n\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)\r\n            }}\r\n            \r\n            config={{\r\n                ...chartBase.config,\r\n                mapboxAccessToken:\r\n                  \"pk.eyJ1IjoiZGVuaG9sdHoiLCJhIjoiY2p1ZW9obTNhMDVxZjQzcDRvMmdlcDN2aiJ9.HvLaX2bcradeE5T-lpTc8w\",\r\n                \r\n              }}\r\n        />)\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n\r\n    tabs: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n\r\n    tab: {\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        fontSize: '15px',\r\n        textTransform: 'none'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nfunction tabProps(index) {\r\n    return {\r\n      id: `sparse-tab-${index}`,\r\n      'aria-controls': `sparse-tab-${index}`,\r\n    };\r\n  }\r\n\r\nconst SparseTabPanel = (props) => {\r\n    const { children, selectedTab, index, controlPanelProps, } = props;\r\n    console.log(controlPanelProps)\r\n\r\n    return (\r\n        <div hidden={selectedTab !== index}>\r\n            <ChartControlPanel\r\n                // handlePaletteChoice={handlePaletteChoice}\r\n                // handleZValueConfirm={handleZValueConfirm}\r\n                // zValues={zValues}\r\n                // extent={data.extent}\r\n                // downloadCsv={downloadCsv}\r\n                {...controlPanelProps}\r\n            />\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst SparseMap = (props) => {\r\n\r\n    const { classes } = props;\r\n\r\n    const { data } = props.chart;\r\n\r\n    const [palette, setPalette] = useState('Heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [markerOptions, setMarkerOptions] = useState({opacity: .7, color:'#ff1493', size: 12});\r\n    const [tab, setTab] = useState(0);\r\n\r\n    const plot = handleSparseMap(data, palette, zValues)\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setTab(newValue)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handleMarkerOptionsConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setMarkerOptions(values);\r\n        }, 100)\r\n    }\r\n\r\n    const forceResize = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 30);        \r\n    }\r\n\r\n    const controlPanelProps = {\r\n        map: {\r\n            palette,\r\n            handlePaletteChoice,\r\n            zValues,\r\n            handleZValueConfirm,\r\n            downloadCsv\r\n        },\r\n\r\n        scatter: {\r\n            downloadCsv,\r\n            markerOptions,\r\n            setMarkerOptions,\r\n            handleMarkerOptionsConfirm\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Tabs \r\n                value={tab} \r\n                onChange={handleTabChange} \r\n                aria-label=\"Sparse tabs\" \r\n                centered\r\n                indicatorColor='primary'\r\n                className={classes.tabs}\r\n            >\r\n                <Tab label=\"Map\" {...tabProps(0)} className={classes.tab} onClick={forceResize}/>\r\n                <Tab label=\"By Time\" {...tabProps(1)} className={classes.tab}/>\r\n                <Tab label=\"By Lat\" {...tabProps(2)} className={classes.tab}/>\r\n                <Tab label=\"By Lon\" {...tabProps(3)} className={classes.tab}/>\r\n                {data.hasDepth && <Tab label=\"By Depth\" {...tabProps(4)} className={classes.tab}/>}\r\n            </Tabs>\r\n            <SparseTabPanel selectedTab={tab} index={0} controlPanelProps={controlPanelProps.map}>\r\n                {tab === 0 && plot}\r\n            </SparseTabPanel>\r\n            \r\n            <SparseTabPanel selectedTab={tab} index={1} controlPanelProps={controlPanelProps.scatter}>\r\n                {tab === 1 &&\r\n                    <SparseScatter\r\n                        xValues={data.times}\r\n                        yValues={data.variableValues}\r\n                        markerOptions={markerOptions}\r\n                        infoObject={data}\r\n                        xTitle='Time'\r\n                        yTitle={data.parameters.fields}\r\n                        type='time'\r\n                    />\r\n                }\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={2} controlPanelProps={controlPanelProps.scatter}>\r\n                {tab === 2 &&\r\n                    <SparseScatter\r\n                        xValues={data.lats}\r\n                        yValues={data.variableValues}\r\n                        markerOptions={markerOptions}\r\n                        infoObject={data}\r\n                        xTitle='Latitude'\r\n                        yTitle={data.parameters.fields}\r\n                        type='latitude'\r\n                    />                \r\n                }\r\n            </SparseTabPanel>\r\n\r\n            <SparseTabPanel selectedTab={tab} index={3} controlPanelProps={controlPanelProps.scatter}>\r\n                {tab === 3 && \r\n                    <SparseScatter\r\n                        xValues={data.lons}\r\n                        yValues={data.variableValues}\r\n                        markerOptions={markerOptions}\r\n                        infoObject={data}\r\n                        xTitle='Longitude'\r\n                        yTitle={data.parameters.fields}\r\n                        type='longitude'\r\n                    />                \r\n                }\r\n            </SparseTabPanel>\r\n\r\n            {data.hasDepth &&\r\n                <SparseTabPanel selectedTab={tab} index={4} controlPanelProps={controlPanelProps.scatter}>\r\n                    {tab === 4 &&\r\n                        <SparseScatter\r\n                            xValues={data.variableValues}\r\n                            yValues={data.depths}\r\n                            markerOptions={markerOptions}\r\n                            infoObject={data}\r\n                            xTitle={data.parameters.fields}\r\n                            yTitle='Depth'\r\n                            type='depth'\r\n                        />                    \r\n                    }\r\n                </SparseTabPanel>            \r\n            }\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseMap));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport handleXTicks from '../../Utility/handleXTicks';\r\nimport handleDateString from '../../Utility/handleChartDatestring';\r\nimport chartBase from '../../Utility/chartBase';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { format } from 'd3-format';\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n\r\n        const date = dates.length <= 1 ? handleDateString(dates[0], infoObject.hasHour, infoObject.isMonthly) :\r\n            !splitByDate ? infoObject.hasHour ? 'Merged times' : 'Merged Dates' : \r\n            splitByDepth ? handleDateString(dates[Math.floor(index/depths.length)], infoObject.hasHour, infoObject.isMonthly) : \r\n            handleDateString(dates[index], infoObject.hasHour, infoObject.isMonthly);\r\n\r\n        const depth = !infoObject.hasDepth ? 'Surface' :\r\n            depths.length === 1 ? depths[0] + 'm depth':\r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(infoObject.metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    },    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SparseHistogram = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { metadata, parameters } = data;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: data.variableValues,\r\n                    name: data.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            layout= {{\r\n                width: 800,\r\n                height: 570,\r\n                ...chartBase.layout,\r\n                title: `${parameters.fields} [${metadata.Unit}]`,\r\n                xaxis: {\r\n                    title: `${parameters.fields} [${metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                annotations: chartBase.annotations(metadata.Distributor)             \r\n            }}\r\n            config={{...chartBase.config}}\r\n        />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseHistogram));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { IconButton, Paper } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\n\r\nimport colors from '../Enums/colors';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nimport SpaceTimeChart from './ChartComponents/SpaceTimeChart';\r\nimport TimeSeriesChart from './ChartComponents/TimeSeriesChart';\r\nimport DepthProfileChart from './ChartComponents/DepthProfileChart';\r\nimport SectionMapChart from './ChartComponents/SectionMapChart';\r\nimport SparseMap from './ChartComponents/SparseMap';\r\nimport SparseHistogram from './ChartComponents/SparseHistogram';\r\n\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nimport { deleteChart } from '../Redux/actions/visualization';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  deleteChart\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsContainer: {\r\n        margin: '300px 0 0 100px'\r\n    },\r\n\r\n    chartPaper: {\r\n      margin: '60px auto 0px auto',\r\n      width: '1000px',\r\n      paddingTop: '16px'\r\n  },\r\n\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n    }\r\n})\r\n\r\nconst SamplePlot = () => {\r\n  let x = [0,0,0,0,0,1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4];\r\n  let y = [0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,0,1,2,5,9,];\r\n  let z = [0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,1,2,3,4,5,6,7,8,9];\r\n  // z = z.map(() => Math.floor(Math.random() * 100));\r\n  return (\r\n\r\n      <Plot\r\n      style= {{\r\n          position: 'relative',\r\n          display:'inline-block',\r\n          marginTop: '50px'\r\n      }}\r\n      \r\n      data={[\r\n          {   \r\n              x,\r\n              y,\r\n              z,\r\n              connectgaps: false,\r\n              zsmooth: 'best',\r\n              \r\n              name: 'Test',\r\n              type: 'heatmap',\r\n              contours: {\r\n                  showlabels: true,\r\n                  labelfont: {\r\n                      family: 'Raleway',\r\n                      size: 12,\r\n                      color: 'white',\r\n                  },\r\n                  labelformat: '.2e'\r\n              },\r\n              colorbar: {\r\n                  title: {\r\n                      text: `test`\r\n                  },\r\n                  exponentformat: 'power'\r\n              }\r\n          }\r\n      ]}\r\n      \r\n      layout= {{\r\n          font: {color: '#ffffff'},\r\n          margin: {\r\n            t: 50\r\n          },\r\n          title: {\r\n              text: `A sample chart title`,\r\n              // yanchor: 'bottom',\r\n              // y: .9,\r\n              // yref: 'container',\r\n              font: {\r\n                size: 18\r\n              }\r\n          },\r\n          paper_bgcolor: colors.backgroundGray,\r\n          xaxis: {title: 'Longitude', color: '#ffffff'},\r\n          yaxis: {title: 'Latitude', color: '#ffffff'},\r\n          annotations: [\r\n              {\r\n                  text: `test`,\r\n                      font: {\r\n                          color: 'white',\r\n                          size: 10\r\n                      },\r\n                      xref: 'paper',\r\n                      yref: 'paper',\r\n                      yshift: -202,\r\n                      showarrow: false,\r\n                  }\r\n              ]\r\n              \r\n          }}   \r\n          />\r\n          )\r\n      }\r\n\r\nconst closeChartStyles = {\r\n    closeChartIcon: {\r\n      float: 'right',\r\n      marginTop: '-16px'\r\n    }\r\n}\r\n\r\nconst _CloseChartIcon = (props) => {\r\n  const { classes } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton className={classes.closeChartIcon} color=\"inherit\" onClick={() => props.handleDeleteChart(props.chartIndex)} disableFocusRipple disableRipple>\r\n        <Close/>\r\n      </IconButton>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst CloseChartIcon = withStyles(closeChartStyles)(_CloseChartIcon);\r\n\r\nclass Charts extends Component {\r\n\r\n  handleDeleteChart = (chartIndex) => {\r\n    this.props.deleteChart(chartIndex);\r\n  }\r\n\r\n    render(){\r\n        const { classes, charts } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n              {/* <SamplePlot/>  */}\r\n                {charts.map((chart, index) => {\r\n                    switch(chart.data.parameters.spName){\r\n\r\n                        case storedProcedures.spaceTime:\r\n                          if(chart.subType === vizSubTypes.sparse) {\r\n                            return (\r\n                              <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                                <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                                <SparseMap chart={chart}/>\r\n                              </Paper>\r\n                            )\r\n                          } else if(chart.data.metadata.Spatial_Resolution === spatialResolutions.irregular) {\r\n                            return (\r\n                              <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                                <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                                <SparseHistogram chart={chart}/>\r\n                              </Paper>\r\n                            )\r\n                          }\r\n                          else return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                              <SpaceTimeChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.timeSeries:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                              <TimeSeriesChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.depthProfile:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                              <DepthProfileChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n\r\n                        case storedProcedures.sectionMap:\r\n                          return (\r\n                            <Paper elevation={12} className={classes.chartPaper} key={index}>\r\n                              <CloseChartIcon chartIndex={index} handleDeleteChart={this.handleDeleteChart}/>\r\n                              <SectionMapChart chart={chart}/>\r\n                            </Paper>\r\n                          )\r\n                        \r\n                        default:\r\n                          return '';\r\n                  }\r\n                })}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { cruiseListRequestSend, cruiseTrajectoryRequestSend, cruiseTrajectoryClear } from '../Redux/actions/visualization';\r\n\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    cruiseList: state.cruiseList,\r\n    getCruiseListState: state.getCruiseListState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    cruiseListRequestSend,\r\n    cruiseTrajectoryRequestSend,\r\n    cruiseTrajectoryClear\r\n}\r\n\r\nconst esriFonts = '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif';\r\nconst esriFontColor = 'white';\r\nconst esriBackgroundColor = '#424242';\r\nconst esriHoverFontColor = '#242424';\r\nconst esriHoverBackgroundColor = '#949393';\r\n\r\nconst styles = theme => ({\r\n    outerDiv: {\r\n        padding:'12px',\r\n        maxWidth: '260px',\r\n        backgroundColor: 'transparent',\r\n        color: esriFontColor,\r\n        borderRadius: '4px',\r\n        boxShadow: '2px',\r\n        position: 'relative',\r\n        backdropFilter: 'blur(2px)'\r\n    },\r\n\r\n    cruiseSelect: {\r\n        width: '260px',\r\n        borderRadius: '4px',\r\n    },\r\n\r\n    cruiseInfo: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        margin: '12px auto 0 auto',\r\n    },\r\n\r\n    cruiseInfoCell: {\r\n        color: esriFontColor,\r\n        fontFamily: esriFonts,\r\n        borderStyle: 'none',\r\n    },\r\n\r\n    // blurEffectDiv: {\r\n    //     filter: 'blur(5px)',\r\n    //     position: 'absolute',\r\n    //     top: '0px',\r\n    //     left: '0px',\r\n    //     right: '0px',\r\n    //     bottom: '0px',\r\n    //     zIndex: 99999999\r\n    // }\r\n})\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n      <components.Option \r\n        {...props} \r\n        innerProps={{\r\n            ...props.innerProps, \r\n            // Prevent focus / scroll events when mousing over options\r\n            onMouseMove: (e) => e.preventDefault(), \r\n            onMouseOver: (e) => e.preventDefault()\r\n        }}>\r\n    </components.Option>\r\n    )\r\n}\r\n\r\nconst cruiseSort =  (a,b) => a.Name < b.Name ? -1 : 1;\r\n\r\nclass CruiseSelector extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('ID');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Nickname');\r\n        search.addIndex('Name');\r\n        search.addIndex('Chief_Name');\r\n        search.addIndex('Keywords');\r\n        try{\r\n            if(props.cruiseList && props.cruiseList.length) search.addDocuments(props.cruiseList);\r\n        } catch(e) {\r\n            console.log(e);\r\n            console.log(props.cruiseList);\r\n        }\r\n\r\n        this.state = {\r\n            search,\r\n            searchField: '',\r\n            selectedCruise: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.cruiseList || !this.props.cruiseList.length) this.props.cruiseListRequestSend();\r\n    }\r\n\r\n    getSelectOptionsFromCruiseList = (list) => {\r\n        return list.map(item => ({\r\n            value: item.Name,\r\n            label: item.Name,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    handleCruiseSelect = (selection) => {\r\n        if(selection && selection.data){\r\n            const id = selection.data.ID;\r\n            this.props.cruiseTrajectoryRequestSend(id);\r\n        } else {this.props.cruiseTrajectoryClear()}\r\n\r\n        this.setState({...this.state, selectedCruise: selection});\r\n        this.props.updateParametersFromCruiseBoundary(selection);\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.cruiseList && prevProps.cruiseList.length) && (this.props.cruiseList && this.props.cruiseList.length)){\r\n            this.state.search.addDocuments(this.props.cruiseList);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    render(){\r\n\r\n        const { search, searchField, selectedCruise } = this.state;        \r\n        const { classes, cruiseList} = this.props;\r\n        \r\n        const options = searchField && cruiseList ? this.getSelectOptionsFromCruiseList(search.search(searchField).sort(cruiseSort)) \r\n            : cruiseList ? this.getSelectOptionsFromCruiseList(cruiseList) \r\n            : []\r\n\r\n        return (\r\n            <div id='cruise-selector' className={classes.outerDiv}>\r\n                <div className={classes.blurEffectDiv}></div>\r\n                <Select\r\n                    isLoading={this.props.getCruiseListState === states.inProgress}\r\n                    components={{\r\n                        IndicatorSeparator:'',\r\n                        Option,\r\n                        SingleValue,\r\n                    }}\r\n                    isClearable\r\n                    onInputChange={this.onAutoSuggestChange}\r\n                    // inputValue={this.state.searchField}\r\n                    filterOption={null}\r\n                    className={classes.cruiseSelect}\r\n                    escapeClearsValue\r\n                    label=\"Cruise\"\r\n                    options={options}\r\n                    onChange={this.handleCruiseSelect}\r\n                    value={this.state.selectedCruise}\r\n                    placeholder=\"Search Cruises\"\r\n                    styles={{\r\n                        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                        menuList: provided => ({...provided, backgroundColor: esriBackgroundColor}),\r\n\r\n                        input: provided => ({...provided,\r\n                            color: 'inherit',\r\n                            fontFamily: esriFonts\r\n                        }),\r\n\r\n                        control: provided => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            border: 'none',\r\n                            boxShadow: '1px 1px 1px 1px #242424',\r\n                            color: esriFontColor,\r\n                            borderRadius: 4,\r\n                            '&:hover': { \r\n                                border: `1px solid white`,\r\n                            },\r\n                            '&:focus-within': {\r\n                                borderColor: colors.orange\r\n                            }\r\n                        }),\r\n\r\n                        placeholder: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: colors.orange,\r\n                            fontSize: '14px'\r\n                        }),\r\n\r\n                        noOptionsMessage: provided => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: esriFontColor,\r\n                            backgroundColor: esriBackgroundColor\r\n                        }),\r\n\r\n                        option: (provided, state) => ({...provided,\r\n                            backgroundColor: esriBackgroundColor,\r\n                            color: state.isFocused ? colors.orange : 'white',\r\n                            '&:hover': { backgroundColor: 'rgba(122,67,0,.5)'}\r\n                        }),\r\n\r\n                        singleValue: (provided, state) => ({...provided,\r\n                            fontFamily: esriFonts,\r\n                            color: 'inherit',\r\n                            paddingRight: '20px',\r\n                        })\r\n                    }}\r\n                    theme={theme => ({\r\n                        ...theme,\r\n                        colors: {\r\n                            ...theme.colors,\r\n                            // Background color of hovered options\r\n                            primary25: '#e0e0e0',\r\n                            primary: '#212121',\r\n                        },\r\n                    })}\r\n                />\r\n                {selectedCruise &&\r\n                    <Table size='small' className={classes.cruiseInfo}>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Cruise:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Name}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    Nickname:\r\n                                </TableCell>\r\n                                <TableCell className={classes.cruiseInfoCell}>\r\n                                    {selectedCruise.data.Nickname}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            {\r\n                                selectedCruise.data.Start_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Start Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Start_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.End_Time &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        End Date:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.End_Time.slice(0,10)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Chief_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Chief Scientist:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Chief_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n\r\n                            {\r\n                                selectedCruise.data.Ship_Name &&\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        Ship:\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.cruiseInfoCell}>\r\n                                        {selectedCruise.data.Ship_Name}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CruiseSelector));","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\n\r\nimport CruiseSelector from './CruiseSelector';\r\nimport colors from '../Enums/colors';\r\n\r\nimport { throttle } from 'throttle-debounce';\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nconst drawButtonStyles = (theme) => ({\r\n    outerDiv: {\r\n        // padding:'12px 0 12px 0',\r\n        backgroundColor: 'transparent',\r\n        // width: '180px',\r\n        borderRadius: '4px',\r\n        marginRight: '20px'\r\n    },\r\n\r\n    drawButton: {\r\n        // border: '1px solid #333333',\r\n        border: `1px solid #333333`,\r\n        borderRadius: '4px',\r\n        color: colors.orange,\r\n        cursor: 'pointer',\r\n        padding: '6px',\r\n        width: '160px',\r\n        fontSize:'14px',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: '1px 1px 1px 1px #242424',\r\n        // backgroundColor: 'rgba(255, 128, 0, .8)',\r\n        // backgroundColor: 'transparent',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif',\r\n        '&:hover': { \r\n            borderColor: 'white'\r\n        },\r\n    },\r\n\r\n    helpText: {\r\n        marginTop: 0,\r\n        color: 'white',\r\n        fontFamily: '\"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif'\r\n    },\r\n\r\n    cancelButton: {\r\n        display: 'none',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nconst DrawButtonRaw = (props) => {\r\n    const { classes, showHelp } = props;\r\n\r\n    return (\r\n        <div className={classes.outerDiv} id='draw-region-div'>\r\n            {showHelp && <p className={classes.helpText}>Click once to draw <br/>and again to finish</p>}\r\n            <button id='draw-button' className={classes.drawButton}>\r\n                Select Region\r\n            </button>\r\n            <button id='cancel-button' className={`${classes.drawButton} ${classes.cancelButton}`}>\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DrawButton = withStyles(drawButtonStyles)(DrawButtonRaw);\r\n\r\nconst polygonSymbol = {\r\n    type: \"polygon-3d\",\r\n    symbolLayers: [\r\n        {\r\n            type: \"fill\",\r\n            material: {\r\n            color: [255, 128, 0, .3]\r\n            },\r\n            outline: {\r\n                color: [255, 128, 0, 1],\r\n                size: '2px'\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nconst polylineSymbol = {\r\n    type: \"line-3d\",\r\n        symbolLayers: [\r\n            {\r\n                type: \"line\",\r\n                size: \"3px\",\r\n                material: {\r\n                    color: {\r\n                        r: 51,\r\n                        g: 51,\r\n                        b: 204,\r\n                        a: 0\r\n                    }\r\n                },\r\n            }\r\n        ]\r\n}\r\n\r\nconst emptyExtent = {\r\n    xmin: 0,\r\n    xmax: 0,\r\n    ymin: 0,\r\n    ymax: 0\r\n}\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.sketchModel = new props.esriModules.SketchViewModel({\r\n            layer: props.regionLayer,\r\n            view: props.view,\r\n            polygonSymbol,\r\n            polylineSymbol,\r\n            defaultUpdateOptions: {\r\n                toggleToolOnClick: false,\r\n                tool: \"transform\"\r\n            }\r\n        })\r\n    }\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { view, esriModules, regionLayer, setShowHelp } = this.props;\r\n        var { sketchModel } = this;\r\n\r\n        // const updateOptions = {\r\n\r\n        // }\r\n\r\n        // var sketchModel = new esriModules.SketchViewModel({\r\n        //     layer: regionLayer,\r\n        //     view,\r\n        //     polygonSymbol,\r\n        //     defaultUpdateOptions: updateOptions\r\n        // })\r\n\r\n        var drawButton = document.getElementById('draw-button');\r\n        var cancelButton = document.getElementById('cancel-button');\r\n\r\n        let cr = this;\r\n\r\n        const throttledUpdate = throttle(75, (event) => {\r\n            if(event.state === 'active'){\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n            }\r\n        })\r\n\r\n        sketchModel.on(\"create\", (event) => {\r\n            if(event.graphic && event.graphic.visible) {\r\n                event.graphic.visible = false;\r\n            }\r\n            if(event.state === 'cancel'){\r\n                setShowHelp(false);\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n\r\n            if(event.state === \"complete\") {\r\n                setShowHelp(false);\r\n                this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphic.geometry.extent));\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });    \r\n\r\n        sketchModel.on('create', throttledUpdate)\r\n\r\n        sketchModel.on('update', (event) => {\r\n            if(event.toolEventInfo && event.toolEventInfo.type === 'move-stop'){\r\n                if(event.state === 'cancel') return;\r\n                // this.props.updateDomainFromGraphicExtent(esriModules.Utils.webMercatorToGeographic(event.graphics[0].geometry.extent));\r\n                this.props.updateDomainFromGraphicExtent(event.graphics[0].geometry.extent);\r\n                drawButton.style.display = 'inline-block';\r\n                cancelButton.style.display = 'none';\r\n            }\r\n        });   \r\n        \r\n        drawButton.addEventListener(\"click\", (event) => {\r\n                regionLayer.removeAll();\r\n                setShowHelp(true);\r\n                sketchModel.create('rectangle', {\r\n                    mode:'click'            \r\n                });\r\n                drawButton.style.display = 'none';\r\n                cancelButton.style.display = 'inline-block';\r\n        });\r\n\r\n        cancelButton.addEventListener('click', (event) => {\r\n            sketchModel.cancel();\r\n            setShowHelp(false);\r\n            drawButton.style.display = 'inline-block';\r\n            cancelButton.style.display = 'none';\r\n        })\r\n\r\n        view.ui.add('draw-region-div', 'bottom-right');\r\n        view.ui.add('cruise-selector', 'top-right');\r\n\r\n        view.ui.remove('zoom');\r\n        view.ui.remove('navigation-toggle');\r\n        view.ui.remove('compass');\r\n        view.ui.remove('attribution');\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst TrajectoryController = React.memo((props) => {\r\n    const { cruiseTrajectory, trajectoryLayer, esriModules } = props;\r\n    \r\n    if(cruiseTrajectory){\r\n        const { lons, lats } = cruiseTrajectory;\r\n\r\n        trajectoryLayer.removeAll();\r\n\r\n        var polyLines = [[]];\r\n        var lineIndex = 0;\r\n\r\n        let lonStart = lons[0];\r\n        let latStart = lats[0];\r\n        let maxDistance = 0;\r\n\r\n        // Create a new path array each time 180 lon is crossed\r\n        lons.forEach((lon, i) => {\r\n            let lat = lats[i];\r\n\r\n            let latDistance = Math.abs(lat - latStart);\r\n            let _lonDistance = Math.abs(lon - lonStart);\r\n            let lonDistance = _lonDistance > 180? 360 - _lonDistance : _lonDistance;\r\n\r\n            let distance = Math.sqrt(latDistance * latDistance + lonDistance * lonDistance);\r\n            maxDistance = distance > maxDistance ? distance : maxDistance;\r\n\r\n            polyLines[lineIndex].push([lon, lat]);\r\n\r\n            if(i < lons.length - 1){\r\n                if((lon > 160 && lon < 180) && (lons[i + 1] > -180 && lons[i + 1] < -160)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n\r\n                if((lon > -180 && lon < -160) && (lon[i + 1] > 160 && lon[i + 1] < 180)){\r\n                    polyLines.push([]);\r\n                    lineIndex ++;\r\n                }\r\n            }\r\n        })\r\n\r\n        var cruiseTrajectorySymbol = {\r\n            type: 'line-3d',\r\n            symbolLayers: [{\r\n                type: 'line',\r\n                material: { color: [255, 128, 0, 1] },\r\n                cap:  'round',\r\n                join: 'round',\r\n                size: 2\r\n            }]\r\n        }\r\n\r\n        polyLines.forEach(line => {\r\n\r\n            let cruiseTrajectoryGeometry = {\r\n                type: 'polyline',\r\n                paths: line\r\n            }\r\n\r\n            let graphic = new esriModules.Graphic({\r\n                geometry: cruiseTrajectoryGeometry,\r\n                symbol: cruiseTrajectorySymbol\r\n            });\r\n\r\n            trajectoryLayer.add(graphic);\r\n        })\r\n\r\n        try {\r\n            const center = [lons[0], lats[0]];\r\n\r\n            var zoom = 7 - Math.floor(maxDistance / 10);            \r\n    \r\n            props.view.goTo({\r\n                target: center,\r\n                zoom\r\n            }, {\r\n                maxDuration: 2500,\r\n                speedFactor: .5\r\n            });    \r\n\r\n        } catch(e) {console.log(e)}\r\n\r\n    } else {\r\n        trajectoryLayer.removeAll();\r\n\r\n        props.view.goTo({\r\n            target: [-140, 30],\r\n            zoom: 3\r\n        }, {\r\n            maxDuration: 2500,\r\n            speedFactor: .5\r\n        }); \r\n    }\r\n    return '';\r\n})\r\n\r\nclass MapContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showHelp: false\r\n        }\r\n        this.regionLayer = new props.esriModules.GraphicsLayer();\r\n        this.trajectoryLayer = new props.esriModules.GraphicsLayer();\r\n    }\r\n\r\n    render = () => {\r\n        const { classes, esriModules, spParams, cruiseTrajectory, globeUIRef } = this.props;\r\n\r\n\r\n        const lat1 = parseFloat(spParams.lat1);\r\n        const lat2 = parseFloat(spParams.lat2);\r\n        const lon1 = parseFloat(spParams.lon1);\r\n        let _lon2 = parseFloat(spParams.lon2);\r\n        const lon2 = _lon2 < lon1 ? _lon2 + 360 : _lon2;\r\n\r\n        this.regionLayer.removeAll();\r\n\r\n        var polygon = {\r\n            type: 'polygon', \r\n            rings: [\r\n                [lon1, lat1],\r\n                [lon2, lat1],\r\n                [lon2, lat2],\r\n                [lon1, lat2],\r\n                [lon1, lat1]\r\n            ]\r\n        };\r\n\r\n        let regionGraphic = new esriModules.Graphic({\r\n            geometry: polygon,\r\n            symbol: polygonSymbol\r\n        })\r\n\r\n        this.regionLayer.add(regionGraphic);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ \r\n                        basemap: 'satellite',\r\n                        layers: [\r\n                            this.regionLayer,\r\n                            this.trajectoryLayer\r\n                        ],\r\n\r\n                    }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3,\r\n                        highlightOptions: {\r\n                            haloOpacity: 0,\r\n                            haloColor: 'rgba(0, 0, 0, 0)',\r\n                            fillOpacity: 0,\r\n                            color: \"rgba(0, 0, 0, 0)\"\r\n                        }\r\n                    }}\r\n                >\r\n                    <TrajectoryController \r\n                        cruiseTrajectory={cruiseTrajectory}\r\n                        trajectoryLayer={this.trajectoryLayer}\r\n                        esriModules={esriModules}\r\n                    />\r\n                    <UiComponents\r\n                        updateDomainFromGraphicExtent = {this.props.updateDomainFromGraphicExtent}\r\n                        esriModules={esriModules}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                        regionLayer={this.regionLayer}\r\n                        setShowHelp={(showHelp) => this.setState({...this.state, showHelp})}\r\n                        ref={this.props.globeUIRef}\r\n                    />\r\n                </Scene>\r\n                <DrawButton showHelp={this.state.showHelp}/>\r\n                <CruiseSelector updateParametersFromCruiseBoundary={this.props.updateParametersFromCruiseBoundary}/>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MapContainer);","const cleanSPParams = ({depth1, depth2, dt1, dt2, fields, lat1, lat2, lon1, lon2, spName, tableName}) => ({\r\n    depth1: parseFloat(depth1),\r\n    depth2: parseFloat(depth2),\r\n    dt1,\r\n    dt2,\r\n    fields,\r\n    lat1: parseFloat(lat1),\r\n    lat2: parseFloat(lat2),\r\n    lon1: parseFloat(lon1),\r\n    lon2: parseFloat(lon2),\r\n    spName,\r\n    tableName,\r\n})\r\n\r\nexport default cleanSPParams;","const localDateToString = (date) => {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate()\r\n\r\n    let nYear = year.toString();\r\n    let nMonth = month < 10 ? '0' + month.toString() : month.toString();\r\n    let nDay = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return nYear + '-' + nMonth + '-' + nDay;\r\n}\r\n\r\nexport default localDateToString;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\nimport VizControlPanel from './VizControlPanel';\r\nimport DownloadConfirmationDialog from './DownloadConfirmationDialog';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend, cruiseListRequestSend, completedShowCharts } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend, datasetRetrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport { loadModules } from 'esri-loader';\r\n\r\nimport depthUtils from '../Utility/depthCounter';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport Charts from './Charts';\r\nimport MapContainer from './MapContainer';\r\nimport colors from '../Enums/colors'\r\nimport cleanSPParams from '../Utility/cleanSPParams';\r\nimport localDateToString from '../Utility/localDateToString';\r\nimport utcDateStringToLocal from '../Utility/utcDateStringToLocal';\r\nimport TopNavBar from './TopNavBar';\r\nimport temporalResolutions from '../Enums/temporalResolutions';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.sectionMap\r\n        },\r\n        [vizSubTypes.contourSectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.contourSectionMap\r\n        },\r\n        [vizSubTypes.timeSeries]: {\r\n            sp: storedProcedures.timeSeries,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: storedProcedures.depthProfile,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.heatmap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.heatmap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.contourMap\r\n        },\r\n        [vizSubTypes.sparse]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.sparse\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    loadingMessage: state.loadingMessage,\r\n    cruiseTrajectory: state.cruiseTrajectory,\r\n    cruiseList: state.cruiseList,\r\n    showChartsOnce: state.showChartsOnce,\r\n    datasets: state.datasets\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n    cruiseListRequestSend,\r\n    completedShowCharts,\r\n    datasetRetrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    background: {\r\n        backgroundColor: colors.backgroundGray\r\n    },\r\n\r\n    showCharts: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst baseSPParams = {\r\n    tableName: '',\r\n    fields: null,\r\n    depth1: 0,\r\n    depth2: 0,\r\n    dt1: new Date(),\r\n    dt2: new Date(),\r\n    lat1: 0,\r\n    lat2: 0,\r\n    lon1: 0,\r\n    lon2: 0,\r\n    selectedVizType: ''\r\n}\r\n\r\nclass Visualization extends Component {\r\n    globeUIRef = React.createRef();\r\n\r\n    state = {\r\n        filteredData: [],\r\n        opacity: 1,\r\n        showCharts: false,\r\n        showUI: false,\r\n        surfaceOnly: false,\r\n        irregularSpatialResolution: false,\r\n        downloadTarget: null,\r\n\r\n        spParams: baseSPParams\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n        if(!this.props.cruiseList) this.props.cruiseListRequestSend();\r\n        if(!this.props.datasets) this.props.datasetRetrievalRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'GraphicsLayer',\r\n            'SketchViewModel',\r\n            'Utils',\r\n            'Graphic',\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/layers/GraphicsLayer',\r\n            'esri/widgets/Sketch/SketchViewModel',\r\n            'esri/geometry/support/webMercatorUtils',\r\n            'esri/Graphic',\r\n        ], {version: 'next'});\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    handleSetDownloadTarget = (downloadTarget) => {\r\n        this.setState({...this.state, downloadTarget})\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.showChartsOnce) {\r\n            this.props.completedShowCharts();\r\n            this.setState({...this.state, showCharts: true})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleLatLonChange = (event) => {\r\n        this.setState({\r\n            ...this.state, \r\n            spParams: {...this.state.spParams, [event.target.name]: event.target.value},\r\n        })\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt1:newDate}});\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        if(date){\r\n            let newDate = new Date();\r\n            newDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n            this.setState({...this.state, spParams: {...this.state.spParams, dt2:newDate}});\r\n        }\r\n    }\r\n\r\n    onVisualize = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, selectedVizType } = this.state.spParams;\r\n\r\n        let mapping = mapVizType(selectedVizType);\r\n        let parameters = cleanSPParams({\r\n            depth1,\r\n            depth2,\r\n            dt1: localDateToString(dt1),\r\n            dt2: localDateToString(dt2),\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        });\r\n\r\n        let payload = {\r\n            parameters,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        if(fields) {\r\n            let surfaceOnly = !fields.data.Depth_Min;\r\n            let irregularSpatialResolution = fields.data.Spatial_Resolution === 'Irregular';\r\n\r\n            let dt1 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt1 : utcDateStringToLocal(fields.data.Time_Min);\r\n            let dt2 = fields.data.Temporal_Resolution === temporalResolutions.monthlyClimatology ?\r\n                this.state.spParams.dt2 : \r\n                irregularSpatialResolution ? utcDateStringToLocal(fields.data.Time_Max) :\r\n                utcDateStringToLocal(fields.data.Time_Min);\r\n\r\n            let lat1 = irregularSpatialResolution ? fields.data.Lat_Min : this.state.spParams.lat1;\r\n            let lat2 = irregularSpatialResolution ? fields.data.Lat_Max : this.state.spParams.lat2;\r\n            let lon1 = irregularSpatialResolution ? fields.data.Lon_Min : this.state.spParams.lon1;\r\n            let lon2 = irregularSpatialResolution ? fields.data.Lon_Max : this.state.spParams.lon2;\r\n            let depth1 = irregularSpatialResolution ? fields.data.Depth_Min || 0 : \r\n                depthUtils.piscesTable.has(fields.data.Table_Name) ? 0 :\r\n                depthUtils.darwinTable.has(fields.data.Table_Name) ? 0 : \r\n                this.state.spParams.depth1;\r\n\r\n            let depth2 = irregularSpatialResolution ? fields.data.Depth_Max || 0 : \r\n                depthUtils.piscesTable.has(fields.data.Table_Name) ? ((depthUtils.piscesDepths[0] + depthUtils.piscesDepths[1]) / 2).toFixed(2) :\r\n                depthUtils.darwinTable.has(fields.data.Table_Name) ? (depthUtils.darwinDepths[0] + depthUtils.darwinDepths[1]) : \r\n                this.state.spParams.depth2;\r\n\r\n            if(irregularSpatialResolution){\r\n                this.globeUIRef.current.props.view.goTo({\r\n                    target: [(parseFloat(lon1) + parseFloat(lon2)) / 2, (parseFloat(lat1) + parseFloat(lat2)) / 2],\r\n                    zoom: 3\r\n                }, {\r\n                    maxDuration: 2500,\r\n                    speedFactor: .5\r\n                }); \r\n            }\r\n\r\n            let tableName = fields.data.Table_Name;\r\n            \r\n            this.setState({...this.state,\r\n                surfaceOnly,\r\n                irregularSpatialResolution,\r\n                spParams: {...this.state.spParams, \r\n                    fields,\r\n                    dt1,\r\n                    dt2,\r\n                    lat1,\r\n                    lat2,\r\n                    lon1,\r\n                    lon2,\r\n                    depth1,\r\n                    depth2,\r\n                    tableName,\r\n                    selectedVizType: ''\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    updateParametersFromCruiseBoundary = (cruise) => {\r\n        if(cruise && this.state.spParams.fields){\r\n            this.props.snackbarOpen('Setting chart parameters to cruise boundaries.')\r\n            this.setState({...this.state,\r\n                spParams: {...this.state.spParams,\r\n                    lat1: cruise.data.Lat_Min,\r\n                    lat2: cruise.data.Lat_Max,\r\n                    lon1: cruise.data.Lon_Min,\r\n                    lon2: cruise.data.Lon_Max,\r\n                    dt1: utcDateStringToLocal(cruise.data.Start_Time),\r\n                    dt2: utcDateStringToLocal(cruise.data.End_Time)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleShowCharts = () => {\r\n        this.setState({...this.state, showCharts: true})\r\n    }\r\n\r\n    handleShowGlobe = () => {\r\n        this.setState({...this.state, showCharts: false})\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromGraphicExtent = (extent) => {\r\n        var _lon1 = extent.xmin > -180 ? extent.xmin : extent.xmin + 360;\r\n        var _lon2 = extent.xmax < 180 ? extent.xmax : extent.xmax - 360;\r\n\r\n        var newCoordinates = {\r\n            lat1: extent.ymin.toFixed(3),\r\n            lat2: extent.ymax.toFixed(3),\r\n            lon1: _lon1.toFixed(3),\r\n            lon2: _lon2.toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    resetSPParams = () => {\r\n        this.setState({...this.state, spParams: baseSPParams})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        return (\r\n            <div>\r\n                <TopNavBar/>\r\n                <DownloadConfirmationDialog\r\n                    {...this.state.spParams}\r\n                    downloadTarget={this.state.downloadTarget}\r\n                    handleSetDownloadTarget={this.handleSetDownloadTarget}\r\n                />\r\n\r\n                <VizControlPanel\r\n                    handleSetDownloadTarget={this.handleSetDownloadTarget}\r\n                    toggleChartView={this.toggleChartView}\r\n                    toggleShowUI={this.toggleShowUI}\r\n                    showCharts={this.state.showCharts}\r\n                    handleChange={this.handleChange}\r\n                    handleLatLonChange={this.handleLatLonChange}\r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                    {...this.state.spParams}\r\n                    surfaceOnly={this.state.surfaceOnly}\r\n                    irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                    showCharts={this.state.showCharts}\r\n                    handleShowCharts={this.handleShowCharts}\r\n                    handleShowGlobe={this.handleShowGlobe}\r\n                    resetSPParams={this.resetSPParams}\r\n                />\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer\r\n                            globeUIRef={this.globeUIRef}\r\n                            updateDomainFromGraphicExtent={this.updateDomainFromGraphicExtent}\r\n                            updateParametersFromCruiseBoundary={this.updateParametersFromCruiseBoundary}\r\n                            esriModules={this.state.esriModules}\r\n                            spParams={this.state.spParams}\r\n                            cruiseTrajectory={this.props.cruiseTrajectory}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                <div className={this.state.showCharts ? classes.showCharts : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password, or <Link onClick={this.handleClose} component={RouterLink} to={{pathname: '/register'}}>Register.</Link>\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Spinner from 'react-spinkit';\r\n\r\nconst styles = theme => ({\r\n    loader: {\r\n        backgroundColor: '#000000',\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        opacity: 0.5,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        zIndex: 9998\r\n    },\r\n\r\n    loaderContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItem: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 9999,\r\n        opacity: 1\r\n    },\r\n\r\n    spinnerText: {\r\n        zIndex: 10000,\r\n        color: '#FF8000',\r\n        marginTop: '25px',\r\n        opacity: 1\r\n    },\r\n\r\n    spinner: {\r\n        opacity: 1\r\n    }\r\n})\r\n\r\nconst LoadingOverlay = (props) => {\r\n    const { classes, loadingMessage } = props;\r\n\r\n    if(loadingMessage && loadingMessage.length){\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div className={classes.loaderContent}>\r\n                    <Spinner className={classes.spinner} color='#FF8000' name=\"ball-pulse-rise\" fadeIn='quarter'/>\r\n                    <Typography variant='h6' className={classes.spinnerText}>{loadingMessage}</Typography>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return '';\r\n\r\n}\r\n\r\nexport default withStyles(styles)(LoadingOverlay);","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper';\r\nimport LoadingOverlay from './LoadingOverlay';\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog,\r\n    loadingMessage: state.loadingMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n                <LoadingOverlay loadingMessage={this.props.loadingMessage}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nconst styles = theme => ({\r\n    landingWrapper: {\r\n        margin: '15vh auto'\r\n    },\r\n\r\n    welcomeMessage: {\r\n        color: '#ffffff',\r\n        maxWidth: '500px',\r\n        margin: `${theme.spacing(2)}px auto`\r\n    }\r\n})\r\n\r\nclass LandingPage extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.landingWrapper}>\r\n                <img \r\n                    src='/images/large_cmap_logo.png'\r\n                    height='290'\r\n                    width='600'\r\n                />\r\n                <Typography variant=\"body2\" component=\"p\" className={classes.welcomeMessage}>\r\n                    Welcome to Simons CMAP. This application is currently under heavy development, and some features may be incomplete.\r\n                </Typography>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingPage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport './App.scss';\n\nimport colors from './Enums/colors';\n\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\n\nimport Home from './Components/Home';\nimport Catalog from './Components/Catalog';\nimport Register from './Components/Register';\nimport Visualization from './Components/Visualization';\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\nimport LandingPage from './Components/LandingPage';\nimport TopNavBar from './Components/TopNavBar';\n\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    error: {\n      main: colors.errorYellow\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: colors.backgroundGray,\n      paper: colors.backgroundGray\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange,\n        borderRadius: '10%'\n      }\n    },\n\n    MuiListItemIcon: {\n      root: {\n        minWidth: '40px'\n      }\n    },\n\n    MuiFormHelperText: {\n      filled: {\n        paddingLeft: '1px',\n        paddingRight: '1px',\n        fontSize: '13px'\n      }\n    },\n\n    MuiListItem: {\n      gutters: {\n        paddingLeft: '6px',\n        paddingRight: '10px'\n      },\n\n      root: {\n        paddingTop: '4px',\n        paddingBottom: '4px'\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: 'transparent',\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },\n\n    MuiButtonGroup: {\n      groupedOutlined: {\n        '&:not(:first-child)': {\n          marginLeft: 0\n        }\n      }\n    },\n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiFilledInput: {\n      input: {\n        paddingLeft: '6px',\n      },\n\n      inputSelect: {\n        paddingBottom: '6px'\n      },\n\n      adornedEnd: {\n        paddingRight: '6px'\n      },\n\n      root: {\n        backgroundColor: 'transparent',\n        '&:hover': {\n          backgroundColor: 'transparent',\n        },\n        '&:disabled': {\n          backgroundColor: 'transparent',\n        }\n      }\n    }\n  }\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  loadingMessage: state.loadingMessage\n})\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.vizRef = React.createRef();\n  }\n\nrender() {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n        <BrowserRouter>\n          <GlobalUIComponentWrapper/>\n          <TopNavBar/>\n          <Switch>          \n            <Route exact path='/apikeymanagement' component={ Home } />\n            <Route exact path='/' component={ LandingPage } />\n            <Route exact path='/catalog' component={ Catalog } />\n            <Route exact path='/register' component={ Register } />\n            <Route exact path='/visualization' component={Visualization} />\n          </Switch>\n        </BrowserRouter>\n        </MuiThemeProvider>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n}\n\nexport default connect(mapStateToProps, null)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\n\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}