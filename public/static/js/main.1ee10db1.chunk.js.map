{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","Enums/visualizationTypes.js","config.js","api.js","Redux/sagas.js","Redux/store.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/TopNavBar.js","Components/Home.js","Components/GridDetail.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/visualizationSubTypes.js","Components/DataRetrievalForm.js","Components/DebugButton.js","Components/ClearVisualizationsButton.js","Components/GoBackButton.js","Components/Charts.js","Components/ToggleChartViewButton.js","Components/ToggleHideUIButton.js","Components/MapContainer.js","Components/Visualization.js","routes.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/GlobalUIComponentWrapper.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","initialState","catalog","snackbarIsOpen","snackbarMessage","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","sampleData","queryRequestState","storedProcedureRequestState","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addMap","addChart","clearMaps","types","map","chart","apiUrl","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","parameters","reduce","queryString","key","i","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","ndjsonParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","ndjson","on","push","sent","ok","abrupt","getReader","read","done","write","decode","value","stop","keyRetrieval","_callee2","_context2","json","keyCreation","_ref3","_callee3","description","_context3","trim","_x","apply","this","arguments","visualization","queryRequest","_ref4","_callee4","query","vizData","_context4","_x2","storedProcedureRequest","_ref5","_callee5","_context5","_x3","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_context6","_marked6","_context7","_marked7","_context8","visualizationActions","_marked8","_context9","console","log","fields","subType","vizTypes","_marked9","_context10","takeLatest","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","visualizationActionTypes","_marked17","_context18","_marked18","_context19","all","_marked19","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","withStyles","theme","centered","position","top","props","classes","react_default","createElement","CircularProgress","size","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleClick","handleChange","event","setState","target","Fragment","Paper","root","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","Grid","container","alignItems","justify","spacing","item","TextField","margin","id","name","onChange","placeholder","descriptionField","Button","disabled","length","color","onClick","Components_LoadingSpinner","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","useEffect","TopNavBar","defineProperty","handleLogOut","clearState","username","password","getCurrentPath","pathname","beepBoop","set","snacks","AppBar","Toolbar","Tabs","Tab","component","Link","to","label","firstName","lastName","withRouter","inlineBlock","display","Home","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","wrapper","height","infoCard","padding","gridClass","gridItem","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","variableDetailTable","marginLeft","marginRight","variableDetailTableRow","xs","src","imageSource","alt","dataSource","distributor","row","detailCellRendererParams","template","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","textAlign","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","handleColumnRowGroupChanged","columns","forEach","column","setColumnVisible","colId","render","gridWrapper","autoFocus","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","optional","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","subTypes","sectionMap","timeSeries","histogram","depthProfile","geospatialMap","contourMap","visualizationSpeedDialActions","icon","Map","vizSubTypes","Timeline","BarChart","Waves","Language","LeakAdd","DataRetrievalForm","visualizationSpeedDialOpen","filterVariables","variableWrapper","searchString","values","join","split","some","term","indexOf","handleVisualizationSpeedDialClose","handleVisualizationSpeedDialOpen","handleVisualizationSpeedDialClick","_this2","_this$props","depth1","depth2","dt1","dt2","lat1","lat2","lon1","lon2","options","variable","longName","showUI","displayNone","dataRetrievalFormPaper","react_select_browser_esm","isMulti","variableSelect","isClearable","escapeClearsValue","backspaceRemovesValue","updateFields","styles","menu","provided","zIndex","material_ui_pickers_esm","format","disableFuture","autoOk","handleStartDateChange","inputVariant","InputLabelProps","shrink","handleEndDateChange","SpeedDial","ariaLabel","ButtonProps","visualizeButton","visualizationSpeedDial","x","y","fill","fontVariant","visualizeButtonText","onBlur","onClose","onFocus","onMouseEnter","onMouseLeave","open","direction","SpeedDialAction","tooltipTitle","onVisualize","tooltipPlacement","dataRetrievalFormField","retrieveDataButton","borderRadius","backgroundColor","palette","dominantBaseline","textAnchor","buttonPaper","bottom","textDecoration","cursor","goBackText","statePieces","statePiece","clearCharts","Charts","processedCharts","lon","lat","z","contours","coloring","showlabels","labelfont","family","colorbar","text","metadata","unit","layout","xaxis","yaxis","handleContourMap","marker","handleHistogram","time","error_y","array","opacity","visible","line","handleTimeSeries","depth","autorange","handleSectionMap","handleDepthProfile","handleGeospatialMap","chartsWrapper","react_plotly_default","chartsWrapperUIHidden","showCharts","toggleChartView","toggleShowUI","UiComponents","shouldComponentUpdate","nextProps","nextState","measurementWidget","esriModules","AreaMeasurement3D","view","watch","updateMapFromDomain","viewModel","tool","model","viewData","positionsGeographic","ui","add","Search","React","MapContainer","esm","mapProperties","basemap","viewProperties","center","zoom","MapContainer_UiComponents","measurementPositions","mapVizType","vizType","_mapping","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","Visualization","filteredData","dateSliderPosition","pickedIndex","pickedLon","pickedLat","spParams","tableName","date","toISOString","slice","_this$state$spParams","mapping","spName","handleDateSliderChange","pickedInfo","datum","handleOpacitySliderChange","updateDomainFromMap","coordinates","lons","lats","newCoordinates","Math","min","max","esriModuleNames","loadModules","loadedModules","accumulator","currentValue","currentIndex","prevProps","_this$state","Components_DataRetrievalForm","assign","Components_GoBackButton","Components_ToggleChartViewButton","ToggleHideUIButton","Components_DebugButton","Components_ClearVisualizationsButton","Components_MapContainer","Components_Charts","routes","react_router_dom","react_router","exact","path","userLoginRequestSend","LoginDialog","handleLogin","handleClose","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","onSubmit","e","preventDefault","DialogActions","snackbarClose","Snackbar","autoHideDuration","anchorOrigin","horizontal","vertical","loginDialogWasCleared","GlobalUIComponentWrapper","componentDidUpdate","preProps","Components_LoginDialog","Components_SnackbarWrapper","createMuiTheme","secondary","main","grey","primary","typography","useNextVariants","fontFamily","overrides","MuiOutlinedInput","input","MuiFormControl","marginNormal","App","componentDidCatch","info","utils","DateFnsUtils","MuiThemeProvider","Components_GlobalUIComponentWrapper","hasError","LicenseManager","setLicenseKey","rootElement","document","getElementById","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ee10db1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload:\r\n    {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})","const types = {\r\n    map: 'map',\r\n    chart: 'chart'\r\n}\r\n\r\nexport default types;","// export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\nexport const apiUrl = 'https://simonscmap.dev';","import ndjson from 'ndjson';\r\n\r\nimport { apiUrl } from './config';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n    ndjsonParser.on('data', data => {\r\n        catalog.push(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/catalog/', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.queryRequest = async(query) => {\r\n    const decoder = new TextDecoder();\r\n    let vizData = [];\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n\r\n    ndjsonParser.on('data', data => {\r\n        vizData.push(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/dataretrieval/query?query=' + query, fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return vizData;\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(parameters) => {\r\n    const decoder = new TextDecoder();\r\n    let vizData = [];\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n\r\n    ndjsonParser.on('data', data => {\r\n        vizData.push(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/dataretrieval/sp?' + storedProcedureParametersToUri(parameters), fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\nexport default api;","import { put, takeLatest, all, call } from 'redux-saga/effects';\r\nimport Cookies from 'js-cookie';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport vizTypes from '../Enums/visualizationTypes';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){\r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(action){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    console.log(action);\r\n    console.log(`Retrieving ${action.payload.parameters.fields}`);\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload.parameters);\r\n    console.log(`Got ${action.payload.parameters.fields}`);\r\n    if(!result){\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen(\"Request failed\"));\r\n    } else {\r\n        yield put(visualizationActions.storedProcedureRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n        \r\n        if(action.payload.type === vizTypes.chart){\r\n            console.log('Added chart');\r\n            yield put(visualizationActions.addChart({...action.payload, data: result}));\r\n        } else if (action.payload.type === vizTypes.map){\r\n            yield put(visualizationActions.clearMaps());\r\n            console.log('Added map');\r\n            yield put(visualizationActions.addMap({...action.payload, data: result}));           \r\n        }\r\n    }\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n  \r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest()\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>           \r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Keys\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root}>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n            </Paper>\r\n            </React.Fragment>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires login. Please log in.</p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return state;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    getCurrentPath = () => {\r\n        switch(this.props.location.pathname){\r\n            case '/apikeymanagement': return 0;\r\n            case '/': return 1;\r\n            case '/visualization': return 2;\r\n            case '/register': return 3;\r\n            default: return 0;\r\n        }\r\n    };\r\n\r\n    // Debug button\r\n    beepBoop = () => {\r\n        console.log(this.props);\r\n        Cookies.set('hi','there');\r\n        Cookies.get();\r\n    };\r\n\r\n    snacks = () => {\r\n        console.log('Snacks');\r\n        this.props.snackbarOpen('Test');\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <Tabs value={this.getCurrentPath() || 0} onChange={this.handleChange}>\r\n                        <Tab key='0' component={Link} to={{pathname: '/apikeymanagement'}} label='API Keys' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='1' component={Link} to={{pathname: '/'}} label='Catalog' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='2' component={Link} to={{pathname: '/visualization'}} label='Visualization' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        {this.props.user ? '' : <Tab key='3' component={Link} to={{pathname: '/register'}} label='Register' onClick={this.props.restoreInterfaceDefaults}/>}\r\n                        {this.props.user ? '' : <Tab key='4' label='Log In' onClick={this.props.showLoginDialog}/>}\r\n                        {this.props.user ? <Tab key='5' label={`Welcome ${this.props.user.firstName} ${this.props.user.lastName}!`}/> : ''}\r\n                        {this.props.user ? <Tab key='4' label='Log Out' onClick={this.handleLogOut}/> : ''}                        \r\n                        <Tab key='6' label='Debug' onClick={this.beepBoop}/>\r\n                        <Tab key='7' label='Snacks!' onClick={this.snacks}/>\r\n                    </Tabs>                    \r\n                </Toolbar>\r\n                {/* <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/> */}\r\n            </AppBar>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.user) return <LoginRequiredPrompt/>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user && <ApiKeyManagement/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'variable'],\r\n    ['Spatial Resolution', 'spatialResolution'],\r\n    ['Temporal Resolution', 'temporalResolution'],\r\n    ['Unit', 'unit'],\r\n    ['Process Level', 'processLevel'],\r\n    ['Study Domain', 'studyDomain'],\r\n    ['SQL Table Name', 'tableName']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        margin: '-10px auto 0px auto',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(2),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing(2),\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        width: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n    console.log(props.data);\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={8} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={imageSource + 'viz_sample.png'} alt=\"Sample Visualization\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.datasetDescription}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.dataSource}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable} size='small'>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell>{row[0]}</TableCell>\r\n                                    <TableCell>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst detailCellRendererParams = {\r\n  template:\r\n    '<div style=\"height: 100%; box-sizing: border-box\" class=\"testClass\">' +\r\n      '  <div style=\"height: 10%;\">Call Details</div>' +\r\n      '  <div ref=\"eDetailGrid\" style=\"height: 90%;\"></div>' +\r\n    \"</div>\"\r\n}\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"longName\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"tableName\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"datasetName\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"studyDomain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"processLevel\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"spatialResolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"temporalResolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '600px', \r\n    width: '80%',\r\n    margin: '30px auto',\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n    return (\r\n        <div \r\n        className={classes.gridWrapper + \" ag-theme-material\"}\r\n\r\n        >\r\n          <TextField\r\n            autoFocus={true}\r\n            margin=\"normal\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            variant='outlined'\r\n            name='filterText'\r\n            value={this.state.filterText}\r\n            onChange={this.handleChange}\r\n            placeholder='Filter Variables'\r\n          />\r\n  \r\n          <AgGridReact\r\n            // General settings\r\n            columnDefs={columnDefs}\r\n            defaultColDef={defaultColDef}\r\n            rowData={this.props.catalog}\r\n            onGridReady={this.onGridReady}\r\n            suppressDragLeaveHidesColumns= {true}\r\n\r\n            //Settings related to grouping functionality\r\n            rowGroupPanelShow='always'\r\n            groupMultiAutoColumn={true}\r\n            onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n            autoGroupColumnDef={autoGroupColumnDef}\r\n\r\n            enableBrowserTooltips={true}\r\n\r\n            // Settings related to master/detail\r\n            masterDetail={true}\r\n            frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n            detailCellRenderer=\"myDetailCellRenderer\"\r\n            detailRowHeight={280}\r\n            detailCellRendererParams={detailCellRendererParams}\r\n          />\r\n        </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog) return <AGGridWrapper catalog={this.props.catalog}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n        else if(this.props.catalogRequestState === states.failed) return <p>Failed to get catalog. Have you tried turning it off and then on again?</p>\r\n        else return <p>I don't know how we got here. Please debug the catalog retrieval process.</p>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    geospatialMap: 'Geospatial Map',\r\n    contourMap: 'Contour Map'\r\n}\r\n\r\nexport default subTypes;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select from 'react-select';\r\n\r\n// import createFilterOptions from \"react-select-fast-filter-options\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\n\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport { \r\n    BarChart,\r\n    Map,\r\n    Timeline,\r\n    Waves,\r\n    Language,\r\n    LeakAdd\r\n} from '@material-ui/icons';\r\n\r\n// import vizTypes from '../Enums/visualizationTypes';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst styles = (theme) => ({\r\n    dataRetrievalFormPaper: {\r\n        width: '1200px',\r\n        height: '205px',\r\n        padding: theme.spacing(2.5),\r\n        // position:'fixed',\r\n        // top: '10px',\r\n        // left: '50%',\r\n        margin: '20px auto',\r\n        zIndex: 2,\r\n        paddingTop: theme.spacing(1.5)\r\n    },\r\n\r\n    dataRetrievalFormField: {\r\n        padding:`0px ${theme.spacing(1)}`\r\n    },\r\n\r\n    retrieveDataButton: {\r\n        margin:'10px auto'\r\n    },\r\n\r\n    variableSelect: {\r\n        margin: '0 30px 20px 30px'\r\n    },\r\n\r\n    visualizationSpeedDial: {\r\n        position: 'relative',\r\n        top: '5px',\r\n        left: '30px'\r\n    },\r\n\r\n    visualizeButton: {\r\n        borderRadius:'10%',\r\n        width: '100px',\r\n        height:'40px',\r\n        margin: 'auto 0',\r\n        backgroundColor: theme.palette\r\n    },\r\n\r\n    visualizeButtonText: {\r\n        dominantBaseline: \"middle\",\r\n        textAnchor: \"middle\"\r\n    },\r\n\r\n    displayNone: {\r\n        display: 'none'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nconst visualizationSpeedDialActions = [\r\n    {icon: <Map/>, name: vizSubTypes.sectionMap },\r\n    {icon: <Timeline/>, name: vizSubTypes.timeSeries},\r\n    {icon: <BarChart/>, name: vizSubTypes.histogram},\r\n    {icon: <Waves/>, name: vizSubTypes.depthProfile},\r\n    {icon: <Language/>, name: vizSubTypes.geospatialMap},\r\n    {icon: <LeakAdd/>, name: vizSubTypes.contourMap}\r\n];\r\n\r\n\r\n\r\nclass DataRetrievalForm extends Component {\r\n    state = {visualizationSpeedDialOpen: false}\r\n\r\n    // Includes every variable that returns true when filtering\r\n    // variableWrapper parameter is {label, value, variable object}\r\n    filterVariables = (variableWrapper, searchString) => {\r\n\r\n        // Create one string from all column values (using Boolean to remove falsey elements)\r\n        let values = Object.values(variableWrapper.data).filter(Boolean).join(' ');\r\n\r\n        let searchTerms = searchString.split(' ');\r\n\r\n        // array.some method will return a true as soon as we failed to\r\n        // find one search term, which we negate.\r\n        return !searchTerms.some(term => values.indexOf(term) === -1)\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        if(this.props.fields && this.props.fields.length) this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick= () => {\r\n        if(this.props.fields && this.props.fields.length) this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    render() {\r\n        const { classes, \r\n            fields, \r\n            // tableName,\r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,  } = this.props;\r\n\r\n        const options = (this.props.catalog && this.props.catalog.map(variable => ({\r\n            value: variable.variable,\r\n            label: variable.variable === variable.longName ? variable.variable : variable.variable + ' : ' + variable.longName,\r\n            data: variable\r\n        })))\r\n            || [];\r\n\r\n        return (\r\n            <div className={this.props.showUI ? '' : classes.displayNone}>\r\n                <Paper className={classes.dataRetrievalFormPaper}>\r\n                        <Select\r\n                            isMulti\r\n                            className={classes.variableSelect}\r\n                            isClearable\r\n                            autoFocus\r\n                            escapeClearsValue\r\n                            backspaceRemovesValue\r\n                            name=\"fields\"\r\n                            label=\"Variables\"\r\n                            options={options}\r\n                            onChange={this.props.updateFields}\r\n                            value={fields}\r\n                            placeholder=\"Variables\"\r\n                            styles={{\r\n                                menu: provided => ({ ...provided, zIndex: 9999 })\r\n                            }}\r\n                        />\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={3}>\r\n                                <DatePicker\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    disableFuture\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <DatePicker\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    disableFuture\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startDepth\"\r\n                                    label=\"Start Depth(m)\"\r\n                                    name=\"depth1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={depth1}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endDepth\"\r\n                                    label=\"End Depth(m)\"\r\n                                    name=\"depth2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={depth2}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startLat\"\r\n                                    label=\"Start Latitude(deg)\"\r\n                                    name=\"lat1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={lat1}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endLat\"\r\n                                    label=\"End Latitude(deg)\"\r\n                                    name=\"lat2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={lat2}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startLon\"\r\n                                    label=\"Start Longitude(deg)\"\r\n                                    name=\"lon1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={lon1}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endLon\"\r\n                                    label=\"End Longitude(deg)\"\r\n                                    name=\"lon2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={lon2}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>   \r\n                        </Grid>\r\n                        <SpeedDial\r\n                            ariaLabel=\"Visualization Speed Dial\"\r\n                            disabled\r\n                            ButtonProps={{\r\n                                variant: 'round',\r\n                                classes: {\r\n                                    root: classes.visualizeButton\r\n                                },\r\n                                color: 'primary'\r\n                            }}\r\n                            className={classes.visualizationSpeedDial}\r\n                            icon={<svg height=\"30\" width=\"200\">\r\n                                    <text x=\"50%\" y=\"50%\" fill='white' fontVariant='normal' className={classes.visualizeButtonText}>Visualize</text>\r\n                                </svg>}\r\n                            onBlur={this.handleVisualizationSpeedDialClose}\r\n                            onClick={this.handleVisualizationSpeedDialClick}\r\n                            onClose={this.handleVisualizationSpeedDialClose}\r\n                            onFocus={this.handleVisualizationSpeedDialOpen}\r\n                            onMouseEnter={this.handleVisualizationSpeedDialOpen}\r\n                            onMouseLeave={this.handleVisualizationSpeedDialClose}\r\n                            open={this.state.visualizationSpeedDialOpen}\r\n                            direction= 'right'\r\n                        >\r\n                            {visualizationSpeedDialActions.map(action => (                                   \r\n                                <SpeedDialAction\r\n                                    key={action.name}\r\n                                    icon={action.icon}\r\n                                    tooltipTitle={action.name}\r\n                                    onClick={() => this.props.onVisualize(action.name)}\r\n                                    tooltipPlacement='bottom'\r\n                                />\r\n                            ))}\r\n                        </SpeedDial>                            \r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataRetrievalForm));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    ...state\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        bottom: '10px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst DebugButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    const logState = () => {\r\n        props.statePieces.forEach(statePiece => {\r\n            console.log(statePiece);\r\n            console.log(props[statePiece]);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={logState}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Debug</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DebugButton));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { clearCharts, clearMaps } from '../Redux/actions/visualization';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    clearCharts,\r\n    clearMaps\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '250px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst ClearVisualizationsButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    const clearVisualizations = () => {\r\n        props.clearCharts();\r\n        props.clearMaps();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={clearVisualizations}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Clear</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ClearVisualizationsButton));\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '10px',\r\n        zIndex: 2,\r\n        textDecoration:'none'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst GoBackButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} component={Link} to={{pathname: '/'}}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Go Back</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(GoBackButton);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsWrapperUIHidden: {\r\n        margin: '60px 0 0 100px'\r\n    },\r\n\r\n    chartsWrapper: {\r\n        margin: '0 0 0 100px'\r\n    }\r\n})\r\n\r\nconst handleContourMap = (chart) => ({\r\n    data:[\r\n        {\r\n            x: chart.data.map(row => row.lon),\r\n            y: chart.data.map(row => row.lat),\r\n            z: chart.data.map(row => row[chart.parameters.fields]),\r\n            name: chart.parameters.fields,\r\n            type: 'contour',\r\n            contours: {\r\n                coloring: 'heatmap',\r\n                showlabels: true,\r\n                labelfont: {\r\n                    family: 'Raleway',\r\n                    size: 12,\r\n                    color: 'white',\r\n                }\r\n            },\r\n            colorbar: {\r\n                title: {\r\n                    text: `${chart.parameters.fields} - ${chart.metadata.unit}`\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    layout: {\r\n        title: `${chart.metadata.longName} - ${chart.subType}`,\r\n        xaxis: {title: 'Longitude'},\r\n        yaxis: {title: 'Latitude'}\r\n    }\r\n})\r\n\r\nconst handleHistogram = (chart) => ({        \r\n        data: [\r\n            {\r\n            x: chart.data.map(row => row[chart.parameters.fields]),\r\n            name: chart.parameters.fields,\r\n            type: 'histogram',\r\n            marker: {color: '#17becf'}\r\n            }\r\n        ],\r\n        layout: {\r\n            title: `${chart.metadata.longName} - ${chart.subType}`,\r\n            xaxis: {title: `${chart.parameters.fields} - ${chart.metadata.unit}`}\r\n        }          \r\n})\r\n\r\nconst handleTimeSeries = (chart) => ({\r\n    data: [\r\n      {\r\n      x: chart.data.map(row => row.time),\r\n      y: chart.data.map(row => row[chart.parameters.fields]),\r\n      error_y: {\r\n        type: 'data',\r\n        array: chart.data.map(row => row[chart.parameters.fields + '_std']),\r\n        opacity: 0.2,\r\n        color: 'gray',\r\n        visible: true\r\n      },\r\n      name: chart.parameters.fields,\r\n      type: 'scatter',\r\n      line: {color: '#e377c2'},\r\n      },\r\n    ],\r\n    layout: {\r\n      title: `${chart.metadata.longName} - ${chart.subType}`,\r\n      xaxis: {title: 'Time'},\r\n      yaxis: {title: chart.parameters.fields}\r\n    }\r\n  })\r\n\r\nconst handleSectionMap = (chart) => ({\r\n    data: [\r\n      {\r\n      x: chart.data.map(row => row.lat),\r\n      y: chart.data.map(row => row.depth),\r\n      z: chart.data.map(row => row[chart.parameters.fields]),\r\n      name: chart.parameters.fields,\r\n      type: 'heatmap',\r\n      }\r\n    ],\r\n    layout: {\r\n      title: `${chart.metadata.longName} - ${chart.subType}`,\r\n      xaxis: {title: 'Latitude'},\r\n      yaxis: {autorange: 'reversed', title: 'Depth [m]'}\r\n    }\r\n  })\r\n\r\nconst handleDepthProfile = (chart) => ({\r\n    data: [\r\n      {\r\n        x: chart.data.map(row => row.depth),\r\n        y: chart.data.map(row => row[chart.parameters.fields]),\r\n        error_y: {\r\n          type: 'data',\r\n          array: chart.data.map(row => row[chart.parameters.fields] + '_std'),\r\n          opacity: 0.2,\r\n          color: 'gray',\r\n          visible: true\r\n        },\r\n        name: chart.parameters.fields,\r\n        type: 'scatter',\r\n        line: {color: '#e377c2'},\r\n        },\r\n    ],\r\n    layout: {\r\n      title: `${chart.metadata.longName} - ${chart.subType}`,\r\n      xaxis: {title: 'Depth [m]'},\r\n      yaxis: {title: chart.parameters.fields}\r\n    }\r\n  })\r\n\r\nconst handleGeospatialMap = (chart) => ({\r\n    data:[\r\n        {\r\n            x: chart.data.map(row => row.lon),\r\n            y: chart.data.map(row => row.lat),\r\n            z: chart.data.map(row => row[chart.parameters.fields]),\r\n            name: chart.parameters.fields,\r\n            type: 'heatmap',\r\n            colorbar: {\r\n                title: {\r\n                    text: `${chart.parameters.fields} - ${chart.metadata.unit}`\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    layout: {\r\n        title: `${chart.metadata.longName} - ${chart.subType}`,\r\n                xaxis: {title: 'Longitude'},\r\n                yaxis: {title: 'Latitude'}\r\n    }    \r\n})\r\n\r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n\r\n        const { classes, charts } = this.props;\r\n\r\n        const processedCharts = charts.map(chart => {\r\n            switch(chart.subType){\r\n                case vizSubTypes.contourMap:\r\n                    return handleContourMap(chart);\r\n                case vizSubTypes.histogram:\r\n                    return handleHistogram(chart);\r\n                case vizSubTypes.timeSeries:\r\n                    return handleTimeSeries(chart);\r\n                case vizSubTypes.sectionMap:\r\n                    return handleSectionMap(chart);\r\n                case vizSubTypes.depthProfile:\r\n                    return handleDepthProfile(chart);\r\n                case vizSubTypes.geospatialMap:\r\n                    return handleGeospatialMap(chart);\r\n                default:\r\n                    console.log(`Subtype not found: ${chart.subType}`);\r\n                    return null;\r\n            }\r\n        })\r\n\r\n        return (\r\n            <div className={classes.chartsWrapper}>\r\n                {processedCharts.map((chart, index) => (\r\n                    <Plot\r\n                        key={index}\r\n                        layout= {chart.layout}\r\n                        data={chart.data}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '90px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst ToggleChartViewButton = (props) => {\r\n    const { classes, showCharts } = props;\r\n\r\n    return (\r\n        <div>            \r\n            <Paper className={classes.buttonPaper} onClick={props.toggleChartView}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>{showCharts ? 'Map' : 'Charts'}</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(ToggleChartViewButton));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '170px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst GoBackButton = (props) => {\r\n    const { classes, showUI } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={props.toggleShowUI}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>{showUI ? 'Hide UI' : 'Show UI'}</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(GoBackButton);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene, loadModules } from '@esri/react-arcgis';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '55vw',\r\n        height: '35vw',\r\n    }\r\n})\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() { \r\n        var measurementWidget = new this.props.esriModules.AreaMeasurement3D({view: this.props.view})\r\n        measurementWidget.watch('viewModel.measurement.area.text', () => {\r\n            this.props.updateMapFromDomain(measurementWidget.viewModel.tool.model.viewData.positionsGeographic);\r\n        })    \r\n    \r\n        this.props.view.ui.add(measurementWidget, 'top-right');\r\n        this.props.view.ui.add(new this.props.esriModules.Search({view: this.props.view}),'bottom-right')\r\n        // this.props.view.ui.add(new this.props.esriModules.Fullscreen({view: this.props.view}),'bottom-left')\r\n        return null;\r\n    }\r\n}\r\n\r\nclass MapContainer extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ basemap: 'satellite' }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3\r\n                    }}\r\n                >\r\n                    <UiComponents\r\n                        updateMapFromDomain={this.props.updateMapFromDomain}\r\n                        esriModules={{...this.props.esriModules}}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                    />\r\n                </Scene>    \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MapContainer));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizTypes from '../Enums/visualizationTypes';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\n// import VizTooltip from './VizTooltip';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport DataRetrievalForm from './DataRetrievalForm';\r\nimport DebugButton from './DebugButton';\r\nimport ClearVisualizationsButton from  './ClearVisualizationsButton';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { loadModules } from '@esri/react-arcgis';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport GoBackButton from './GoBackButton';\r\nimport Charts from './Charts';\r\nimport ToggleChartViewButton from './ToggleChartViewButton';\r\nimport ToggleHideUIButton from './ToggleHideUIButton';\r\nimport MapContainer from './MapContainer';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: 'uspSectionMap',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.sectionMap\r\n        }, \r\n        [vizSubTypes.timeSeries]: {\r\n            sp: 'uspTimeSeries',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: 'uspSpaceTime',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: 'uspDepthProfile',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.geospatialMap]: {\r\n            sp: 'uspSpaceTime',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.geospatialMap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: 'uspSpaceTime',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.contourMap\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    }\r\n})\r\n\r\nclass Visualization extends Component {\r\n\r\n    state = {\r\n        filteredData: [],\r\n        dateSliderPosition: 3,\r\n        variable: 'SiO2_darwin_3day',\r\n        opacity: 1,\r\n        pickedIndex: null,\r\n        pickedLon: null,\r\n        pickedLat: null,\r\n        showCharts: false,\r\n        showUI: true,\r\n\r\n        spParams: {\r\n            tableName: [],\r\n            fields:[],\r\n            depth1: '0',\r\n            depth2: '0',\r\n            dt1: '2017-05-15',\r\n            dt2: '2017-05-15',\r\n            lat1: '30',\r\n            lat2: '40',\r\n            lon1: '-60',\r\n            lon2: '-50'\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'Fullscreen',\r\n            'EsriSceneView',\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/widgets/Fullscreen',\r\n            'esri/views/SceneView',\r\n        ]);\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        // Filter data on starting date\r\n        if(!prevProps.sampleData && this.props.sampleData){\r\n            this.handleDateSliderChange(null, 3);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleStartDateChange = (date) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, dt1:date.toISOString().slice(0,10)}});\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, dt2:date.toISOString().slice(0,10)}});\r\n    }\r\n\r\n    onVisualize = (vizType) => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2 } = this.state.spParams;\r\n        let mapping = mapVizType(vizType);\r\n        let parameters = {\r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.map(field => field.value)[0],\r\n            tableName: this.state.spParams.fields && this.state.spParams.fields.map(field => field.data.tableName)[0],\r\n            spName: mapping.sp\r\n        };\r\n\r\n        let payload = {\r\n            parameters,\r\n            type: mapping.type,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields[0].data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    updateFields = (fields) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, fields}});\r\n    }\r\n\r\n    handleDateSliderChange = (event, value) => {\r\n        this.setState({...this.state, \r\n            dateSliderPosition: value,\r\n            pickedInfo: null,\r\n            filteredData: this.props.sampleData.filter(datum => datum.time === `1994-01-${this.state.dateSliderPosition > 9 ? this.state.dateSliderPosition : \"0\" + this.state.dateSliderPosition}T00:00:00.000Z`)\r\n        });\r\n    }\r\n\r\n    handleOpacitySliderChange = (event, value) => {\r\n        this.setState({...this.state, opacity: value})\r\n    }\r\n\r\n    toggleChartView = () => {\r\n        this.setState({...this.state, showCharts: !this.state.showCharts});\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromMap = (coordinates) => {\r\n        if(!coordinates || !coordinates.length) return null;\r\n        \r\n        var lons = coordinates.map(a => a[0]);\r\n        var lats = coordinates.map(a => a[1]);\r\n\r\n        var newCoordinates = {\r\n            lat1: Math.min(...lats),\r\n            lat2: Math.max(...lats),\r\n            lon1: Math.min(...lons),\r\n            lon2: Math.max(...lons)\r\n        };\r\n\r\n        this.setState({...this.state, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        const { lon1, lon2, lat1, lat2 } = this.state;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n \r\n        return (\r\n            <div>\r\n                <DataRetrievalForm \r\n                    handleChange={this.handleChange} \r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                   {...this.state.spParams}\r\n                />\r\n                <GoBackButton/>\r\n                <ToggleChartViewButton toggleChartView={this.toggleChartView} showCharts={this.state.showCharts}/>\r\n                <ToggleHideUIButton toggleShowUI={this.toggleShowUI} showUI={this.state.showUI}/>\r\n                <DebugButton statePieces={['maps','charts', 'storedProcedureRequestState']}/>\r\n                <ClearVisualizationsButton/>\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer \r\n                            updateMapFromDomain={this.updateDomainFromMap}\r\n                            measurementPositions={[[lon1, lat1, 0], [lon1, lat2, 0], [lon2, lat2, 0], [lon2, lat1, 0]]}\r\n                            esriModules={this.state.esriModules}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                {this.props.storedProcedureRequestState === states.inProgress && <LoadingSpinner customVariant='centered' size='36'/>}\r\n\r\n                <div className={this.state.showCharts ? '' : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));\r\n\r\n\r\n// Viz demo layers\r\n// new ColumnLayer({\r\n//     id: `SiO2-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 520000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [255,0,0] : [60,60,60],\r\n//     getElevation: d => d[this.state.variable],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'SiO2_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].SiO2_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`SiO2: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n//   }),\r\n\r\n//   new ColumnLayer({\r\n//     id: `DIN-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 50000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [0,255,0] : [60,60,60],\r\n//     getElevation: d => d['DIN_darwin_3day'],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'DIN_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].DIN_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`DIN: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n// }),\r\n\r\n// new ColumnLayer({\r\n//     id: `PO4-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 2000000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [43, 172, 219] : [60,60,60],\r\n//     getElevation: d => d['PO4_darwin_3day'],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'PO4_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].PO4_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`PO4: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n// })\r\n\r\n// Deck.gl stuff:\r\n\r\n// source: Natural Earth http://www.naturalearthdata.com/ via geojson.xyz\r\n// const COUNTRIES = 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_50m_admin_0_scale_rank.geojson';\r\n\r\n// const spatialResolutionToMetersMapping = {\r\n//     '1/12° X 1/12°': null,\r\n//     '1/2° X 1/2°': null,\r\n//     '1/25° X 1/25°': null,\r\n//     '1/4° X 1/4°': 30000,\r\n//     '1° X 1°': null,\r\n//     '4km X 4km': null,\r\n//     '70km X 70km': null,\r\n//     'Irregular': null\r\n// }\r\n\r\n// const ambientLight = new AmbientLight({\r\n//     color: [255, 255, 255],\r\n//     intensity: 1000000.0\r\n//   });\r\n\r\n// const lightingEffect = new LightingEffect({ambientLight});\r\n\r\n// const INITIAL_VIEW_STATE = {\r\n//   latitude: 35,\r\n//   longitude: -50,\r\n//   zoom: 3,\r\n//   bearing: 0,\r\n//   pitch: 10\r\n// };\r\n\r\n// let colormap = require('colormap')\r\n\r\n// const paletteSize = 48\r\n\r\n// let colors = colormap({\r\n//     colormap: 'hot',\r\n//     format: 'rba',\r\n//     alpha: [255,255],\r\n//     nshades: paletteSize\r\n// })\r\n\r\n// const minMax = (array, key) => {\r\n//     let min = array[0][key];\r\n//     let max = array[0][key];\r\n//     for(let i = 0; i < array.length; i ++){\r\n//         if(array[i][key] > max || max === null) max = array[i][key];\r\n//         if(array[i][key] < min || min === null) min = array[i][key];\r\n//     }\r\n//     return [min, max];\r\n// }\r\n\r\n// const handleGeoSpatialMap = (map) => {\r\n//     if(!map.data.length) {\r\n//         console.log(`No data in map ${map.parameters.fields}`);\r\n//         console.log(map);\r\n//         return;\r\n//     }\r\n\r\n//     let minAndMaxArray = minMax(map.data, map.parameters.fields);\r\n//     let min = minAndMaxArray[0];\r\n//     let max = minAndMaxArray[1];\r\n//     let step = (max - min) / paletteSize;\r\n//     console.log(min, max, step);\r\n\r\n//     console.log(`Rendering ${map.data.length} data points.`);\r\n\r\n//     const getColor = (row) => {\r\n//         let index = Math.floor((row[map.parameters.fields] - min) / step);\r\n//         return colors[index] ? colors[index].slice(0,3) : null;\r\n//     }\r\n\r\n//     return new PointCloudLayer({\r\n//     id: 'point-cloud-layer',\r\n//     data: map.data,\r\n//     pickable: false,\r\n//     coordinateSystem: COORDINATE_SYSTEM.LNGLAT,\r\n//     sizeUnits:'meters',\r\n//     pointSize: 28000,\r\n//     getPosition: d => d[map.parameters.fields] ? [d.lon, d.lat] : [600,600],\r\n//     getColor,\r\n//     opacity: 1,\r\n//     // material: null,\r\n//     parameters:{\r\n//         depthTest: false\r\n//       }\r\n//   })\r\n// }\r\n\r\n// const handleHexMap = (map) => {\r\n//     if(!map.data.length) {\r\n//         console.log(`No data in map ${map.parameters.fields}`);\r\n//         console.log(map);\r\n//         return;\r\n//     }\r\n\r\n//     console.log(`Binning and rendering ${map.data.length} data points.`);\r\n\r\n//     // const getColorWeight = (point) => point[map.parameters.fields];\r\n//     const reducer = (accumulator, point) => accumulator + point[map.parameters.fields];\r\n//     const getColorValue = (points) => {\r\n//         return points.reduce(reducer, 0)/points.length;\r\n//     }\r\n\r\n//     return new HexagonLayer({\r\n//     id: 'hexagon-later',\r\n//     radius: 30000,\r\n//     data: map.data,\r\n//     pickable: false,\r\n//     getColorValue,\r\n//     // colorAggregation: 'MEAN',\r\n//     // getColorWeight,\r\n//     getPosition: d => d[map.parameters.fields] ? [d.lon, d.lat] : [0,0],\r\n//   })\r\n// }\r\n\r\n/* <DeckGL \r\n                        // effects={[lightingEffect]}\r\n                        material={null}\r\n                        controller\r\n                        parameters={{\r\n                            depthTest: false\r\n                          }}\r\n                        initialViewState={INITIAL_VIEW_STATE}\r\n                        layers= {[\r\n                            new GeoJsonLayer({\r\n                                id:\"base-map\",\r\n                                data:COUNTRIES,\r\n                                stroked: true,\r\n                                filled: true,\r\n                                lineWidthMinPixels: 1,\r\n                                opacity: 1,\r\n                                getLineDashArray:[3, 3],\r\n                                getLineColor: [0,0,0],\r\n                                getFillColor: [60,60,60]\r\n                            }),\r\n                            ...processedMaps\r\n                        ]\r\n                        }\r\n                    >\r\n                    </DeckGL> */\r\n\r\n// Inside render function\r\n// const processedMaps = this.props.maps.map(map => {\r\n//     switch(map.subType){\r\n//         case subTypes.geospatialMap:\r\n//             return handleGeoSpatialMap(map);\r\n//         case subTypes.hexMap:\r\n//             return handleHexMap(map);\r\n//         default:\r\n//             console.log(`Unknown map type ${map.subType}`);\r\n//     }\r\n// })\r\n","import React from 'react'\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\r\n\r\nimport Home from './Components/Home';\r\nimport Catalog from './Components/Catalog';\r\nimport Register from './Components/Register';\r\nimport Visualization from './Components/Visualization';\r\n\r\nexport default props => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path='/apikeymanagement' component={ Home } />\r\n          <Route exact path='/' component={ Catalog } />\r\n          <Route exact path='/register' component={ Register } />\r\n          <Route exact path='/visualization' component={ Visualization } />\r\n        </Switch>\r\n    </BrowserRouter>\r\n  )","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password to log in.\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                autoHideDuration={3500} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SnackbarWrapper);","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper'\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React, { Component } from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\n\nimport './App.css';\nimport Routes from './routes';\n\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\n\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: grey[900]\n    },\n    primary: {\n      main: grey[600]\n    }\n  },\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n  overrides: {\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      }\n    },\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    }\n  }\n});\n\nclass App extends Component {\n\n  componentDidCatch = (error, info) => {\n    console.log('Error:');\n    console.log(error);\n    console.log('Info');\n    console.log(info);\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <div className=\"App\">\n          <MuiThemeProvider theme={theme}>\n            <GlobalUIComponentWrapper/>\n            <Routes />\n          </MuiThemeProvider>\n        </div>\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}