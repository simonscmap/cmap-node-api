{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","config.js","Enums/spatialResolutions.js","Utility/mapSpatialResolutionToNumber.js","Utility/GenerateSpatialArray.js","Utility/flattenArray.js","Utility/splitData.js","Utility/mergeArraysAndComputeMeans.js","Utility/mergeArrays.js","Enums/visualizationSubTypes.js","Classes/SpaceTimeData.js","Enums/storedProcedures.js","Classes/TimeSeriesData.js","Classes/DepthProfileData.js","Classes/SectionMapData.js","Classes/SparseData.js","api.js","Redux/sagas.js","Redux/store.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/TopNavBar.js","Components/Home.js","Components/GridDetail.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/colors.js","Enums/validation.js","Components/TableStatsDialog.js","Enums/temporalResolutions.js","Utility/mapTemporalResolutionToNumber.js","Components/DataRetrievalForm.js","Components/VizControlPanel.js","Components/ChartComponents/PaletteControls.js","Components/ChartComponents/ZValueControls.js","Components/ChartComponents/ChartControlPanel.js","Components/ChartComponents/SpaceTimeChart.js","Components/ChartComponents/TimeSeriesChart.js","Components/ChartComponents/DepthProfileChart.js","Components/ChartComponents/SectionMapChart.js","Components/ChartComponents/SparseMap.js","Components/Charts.js","Components/MapContainer.js","Utility/cleanSPParams.js","Components/Visualization.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/LoadingOverlay.js","Components/GlobalUIComponentWrapper.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","initialState","catalog","snackbarIsOpen","snackbarMessage","loadingMessage","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","tableStats","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","setLoadingMessage","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addChart","apiUrl","spatialResolutions","irregular","halfDegree","quarterDegree","twentyFifthDegree","fourKm","twelfthDegree","seventyKm","oneDegree","mapSpatialResolutionToNumber","resolution","_map","defineProperty","generateSpatialArray","start","end","arr","i","push","flattenArray","flattenedArray","length","j","splitData","changeInterval","numDistinct","Math","floor","mergeArraysAndComputeMeans","mergeTargetDistance","nextMergeStartDistance","numArraysPerMerge","mergedArrays","travelDistance","subArray","sum","count","k","mergeArrays","subTypes","sectionMap","timeSeries","histogram","depthProfile","heatmap","contourMap","sparse","SpaceTimeData","_this","this","classCallCheck","generateCsv","dates","Array","from","console","log","depths","hasDepth","csvArray","parameters","fields","variableValues","lats","lons","join","metadata","Set","lonStart","latStart","lonCount","latCount","zMin","zMax","extent","depthIndexAdjust","row","parseFloat","add","spatialResolution","Spatial_Resolution","lonsList","lon2","latsList","lat2","quantile","subType","splitByDate","splitByDepth","_this2","size","variableValueSubsets","depthInterval","dateInterval","map","subset","vizSubTypes","storedProcedures","spaceTime","TimeSeriesData","stds","lat","lon","depth","csvString","DepthProfileData","SectionMapData","orientation","latsDistinct","lonsDistinct","zonalPlotDepths","meridionalPlotDepths","depthsList","splitBySpace","spaceCount","lonInterval","latInterval","SparseData","Depth_Min","variableIndex","times","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","reduce","queryString","key","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","csvParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","CSVParser","columns","on","record","read","sent","ok","abrupt","getReader","done","write","decode","value","stop","keyRetrieval","_callee2","_context2","json","keyCreation","_ref3","_callee3","description","_context3","trim","_x","apply","arguments","visualization","storedProcedureRequest","_ref4","_callee4","vizData","_context4","t0","spName","_x2","getTableStats","_ref5","_callee5","tableName","_context5","_x3","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","queryRequest","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_context6","_marked6","_context7","_marked7","_context8","visualizationActions","query","_marked8","_context9","delay","finalize","_marked9","_context10","takeLatest","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","visualizationActionTypes","_marked17","_context18","_marked18","_context19","all","_marked19","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","withStyles","theme","centered","position","top","props","classes","react_default","createElement","CircularProgress","className","customVariant","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleClick","handleChange","event","setState","target","Fragment","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","Grid","container","alignItems","justify","spacing","item","TextField","margin","id","name","onChange","placeholder","descriptionField","Button","disabled","color","onClick","Components_LoadingSpinner","Component","connect","ownProps","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","useEffect","Link","component","RouterLink","to","pathname","TopNavBar","handleLogOut","clearState","username","password","getCurrentPath","AppBar","Toolbar","Tabs","Tab","label","firstName","lastName","withRouter","inlineBlock","display","Home","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","wrapper","height","infoCard","padding","gridClass","gridItem","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","variableDetailTable","marginLeft","marginRight","variableDetailTableRow","variableDetailTableCell","borderBottomColor","xs","src","imageSource","alt","Dataset_Description","Data_Source","Distributor","detailCellRendererParams","template","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","textAlign","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","handleColumnRowGroupChanged","forEach","column","setColumnVisible","colId","render","gridPaper","gridSearch","autoFocus","InputLabelProps","shrink","gridWrapper","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","optional","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","colors","orange","backgroundGray","aqua","validation","depthOneIsLower","depthOneOutOfBounds","depthTwoOutOfBounds","negative","date","dateOneIsLater","dateOneOutOfBounds","dateTwoOutOfBounds","latOneIsHigher","latOneOutOfBounds","latTwoOutOfBounds","lonOneIsHigher","lonOneOutOfBounds","lonTwoOutOfBounds","dataIsIrregular","dateRangeRequired","depthRangeRequired","surfaceOnlyDataset","irregularOnly","dataSizeTooLarge","generic","invalid","dataSizeWarning","dataSizePrevent","Dialog","open","onClose","DialogTitle","Variable","DialogContent","DialogContentText","Long_Name","Sensor","Temporal_Resolution","Time_Min","slice","Time_Max","Lat_Min","Lat_Max","Lon_Min","Depth_Max","temporalResolutions","threeMinutes","sixHourly","daily","weekly","monthly","annual","monthlyClimatology","threeDay","eightDayRunning","eightDays","mapTemporalResolutionToNumber","MenuList","_this$props","options","children","maxHeight","_getValue","getValue","slicedToArray","initialOffset","indexOf","dist_index_esm","style","backgroundColor","itemCount","itemSize","initialScrollOffset","_ref","DropdownIndicator","chunk_5d200a41_browser_esm","ArrowDropDown","SingleValue","assign","Option","DataRetrievalForm","componentDidUpdate","prevProps","search","addDocuments","filterVariables","variableWrapper","searchString","values","split","some","term","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","handleVisualizationSpeedDialClose","visualizationSpeedDialOpen","handleVisualizationSpeedDialOpen","handleVisualizationSpeedDialClick","getSelectOptionsFromCatalogItems","items","onAutoSuggestChange","searchField","estimateDataSize","_this$props2","dt1","dt2","lat1","lon1","selectedVizType","date1","Date","date2","res","dayDiff","checkStartDepth","surfaceOnly","depth1","depth2","replace","toFixed","checkEndDepth","checkStartDate","checkEndDate","checkStartLat","checkEndLat","checkStartLon","Lon_Max","checkEndLon","checkHeatmap","irregularSpatialResolution","checkContour","checkSection","checkHistogram","checkTimeSeries","checkDepthProfile","checkSparseMap","checkGeneralWarn","checkGeneralPrevent","JsSearch","searchIndex","addIndex","_this$state","_this$props3","_validations","fill","_validations2","startDepthMessage","endDepthMessage","startLatMessage","endLatMessage","startLonMessage","endLonMessage","heatmapMessage","contourMessage","sectionMapMessage","histogramMessage","timeSeriesMessage","depthProfileMessage","sparseMapMessage","generalWarnMessage","generalPreventMessage","parametersAreInvalid","showUI","displayNone","Components_TableStatsDialog","dataRetrievalFormPaper","shortenHeight","react_select_browser_esm","isLoading","components","IndicatorSeparator","isClearable","onInputChange","filterOption","variableSelect","escapeClearsValue","updateFields","styles","menu","provided","zIndex","input","fontFamily","control","border","&:hover","borderColor","&:focus-within","fontSize","noOptionsMessage","option","&:after","float","singleValue","paddingRight","primary25","primary","IconButton","LibraryBooks","datePickerGridSection","material_ui_pickers_esm","format","minDate","maxDate","autoOk","handleStartDateChange","inputVariant","handleEndDateChange","FormControl","InputLabel","htmlFor","OutlinedInput","aria-describedby","labelWidth","FormHelperText","vizTypeSelectFormControl","Select","inputProps","MenuItem","onVisualize","generalMessage","dataRetrievalFormField","retrieveDataButton","visualizationSpeedDial","visualizeButton","borderRadius","palette","visualizeButtonText","dominantBaseline","textAnchor","paddingLeft","vizSelect","clearCharts","panelPaper","bottom","textDecoration","cursor","iconButton","direction","Tooltip","toggleShowUI","Web","showCharts","toggleChartView","Language","InsertChartOutlined","Delete","colorscaleOptions","colorscaleMenu","iconButtonWrapper","_useState","useState","_useState2","paletteAnchorElement","setPaletteAnchorElement","handleOpenPalette","Palette","currentTarget","Menu","anchorEl","keepMounted","handlePaletteChoice","popover","paddingBottom","zValues","handleZValueConfirm","SwapVert","_React$useState","React","_React$useState2","popoverAnchorElement","setPopoverAnchorElement","_React$useState3","_React$useState4","localZMin","setLocalZMin","_React$useState5","_React$useState6","localZMax","setLocalZMax","handleClose","validations","zMinMessage","zMaxMessage","undefined","Popover","anchorOrigin","vertical","horizontal","transformOrigin","chartWrapper","boxShadow","buttonBlock","onToggleSplitByDate","onToggleSplitByDepth","downloadCsv","DateRange","Waves","CloudDownload","ChartComponents_ZValueControls","ChartComponents_PaletteControls","plots","_props$chart","chart","setSplitByDate","_useState3","_useState4","setSplitByDepth","_useState5","_useState6","subTypeState","_useState7","_useState8","setPalette","_useState9","_useState10","setZValues","_zValues","subSets","generatePlotData","subsets","infoObject","variableName","react_plotly_default","zauto","zmin","zmax","x","y","z","connectgaps","autocolorscale","colorscale","contours","coloring","showlabels","labelfont","family","labelformat","colorbar","text","Unit","exponentformat","layout","font","xaxis","yaxis","paper_bgcolor","annotations","xref","yref","yshift","showarrow","handleContourMap","zsmooth","handleHeatmap","handleHistogram","ChartComponents_ChartControlPanel","setTimeout","requestAnimationFrame","csv","blob","Blob","url","URL","createObjectURL","document","setAttribute","appendChild","click","removeChild","error_y","array","opacity","visible","line","distinctMeridiansOrParallelsForSplitting","xAxisLabel","spaceTitle","handleSectionMap","plot","mapbox","center","config","mapboxAccessToken","handleSparseMap","Charts","chartsContainer","ChartComponents_SparseMap","ChartComponents_SpaceTimeChart","ChartComponents_TimeSeriesChart","ChartComponents_DepthProfileChart","ChartComponents_SectionMapChart","UiComponents","shouldComponentUpdate","nextProps","nextState","measurementWidget","esriModules","AreaMeasurement3D","view","watch","updateDomainFromMap","viewModel","tool","model","viewData","positionsGeographic","ui","Search","MapContainer","esm","mapProperties","basemap","viewProperties","zoom","MapContainer_UiComponents","measurementPositions","cleanSPParams","mapVizType","vizType","_mapping","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","parseDate","mm","getUTCMonth","dd","getUTCDate","getUTCFullYear","Visualization","filteredData","spParams","dateString","_this$state$spParams","mapping","Table_Name","coordinates","newCoordinates","min","max","esriModuleNames","loadModules","loadedModules","accumulator","currentValue","currentIndex","background","Components_DataRetrievalForm","Components_VizControlPanel","Components_MapContainer","Components_Charts","userLoginRequestSend","LoginDialog","handleLogin","aria-labelledby","onSubmit","e","preventDefault","DialogActions","snackbarClose","centerText","Snackbar","autoHideDuration","loader","right","loaderContent","flexDirection","alignItem","spinnerText","spinner","dist","fadeIn","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","Components_LoginDialog","Components_SnackbarWrapper","Components_LoadingOverlay","routes","react_router_dom","Components_GlobalUIComponentWrapper","react_router","exact","path","createMuiTheme","typography","useNextVariants","contrastText","main","secondary","default","grey","paper","overrides","MuiIconButton","MuiToolbar","MuiOutlinedInput","&$focused","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","App","componentDidCatch","info","utils","DateFnsUtils","MuiThemeProvider","hasError","LicenseManager","setLicenseKey","rootElement","getElementById","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95ac1c69.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    case interfaceActionTypes.SET_LOADING_MESSAGE: return {...state, loadingMessage: action.payload.message}\r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\n\r\nexport const GET_TABLE_STATS = 'GET_TABLE_STATS';\r\nexport const GET_TABLE_STATS_REQUEST_PROCESSING = 'GET_TABLE_STATS_REQUEST_PROCESSING';\r\nexport const STORE_TABLE_STATS = 'STORE_TABLE_STATS';\r\n","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n    loadingMessage: '',\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    tableStats: {}\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';\r\n\r\nexport const SET_LOADING_MESSAGE = 'SET_LOADING_MESSAGE';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING: return {...state, getTableStatsRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.STORE_TABLE_STATS: return {...state,\r\n            getTableStatsRequestState: states.succeeded,\r\n            tableStats: {\r\n                ...state.tableStats,\r\n                ...action.payload.tableStats\r\n            }\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload: {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})\r\n\r\nexport const setLoadingMessage = (message) => ({\r\n    type:interfaceActionTypes.SET_LOADING_MESSAGE,\r\n    payload: {\r\n        message\r\n    }\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const getTableStats = (tableName) => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS,\r\n    payload: {\r\n        tableName\r\n    }\r\n})\r\n\r\nexport const getTableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storeTableStats = (tableStats) => ({\r\n    type: visualizationActionTypes.STORE_TABLE_STATS,\r\n    payload: {\r\n        tableStats\r\n    }\r\n})","export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\n// export const apiUrl = 'https://simonscmap.dev';","const spatialResolutions = {\r\n    irregular: 'Irregular',\r\n    halfDegree: '1/2° X 1/2°' ,\r\n    quarterDegree: '1/4° X 1/4°' ,\r\n    twentyFifthDegree: '1/25° X 1/25°' ,\r\n    fourKm: '4km X 4km',\r\n    twelfthDegree: '1/12° X 1/12°',\r\n    seventyKm: '70km X 70km',\r\n    oneDegree: '1° X 1°'\r\n}\r\n\r\nexport default spatialResolutions;","import spatialResolutions from '../Enums/spatialResolutions';\r\n\r\nconst mapSpatialResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [spatialResolutions.halfDegree] : .5,\r\n        [spatialResolutions.quarterDegree] : .25,\r\n        [spatialResolutions.twentyFifthDegree] : .04,\r\n        [spatialResolutions.fourKm] : .041672,\r\n        [spatialResolutions.twelfthDegree] : .083333,\r\n        [spatialResolutions.oneDegree] : 1,\r\n        [spatialResolutions.seventyKm] : .25\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapSpatialResolutionToNumber;","const generateSpatialArray = (start, resolution, end) => {\r\n    let arr = [];\r\n\r\n    for(let i = start; i <= end; i += resolution){\r\n        arr.push(i);\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nexport default generateSpatialArray;","// Flattens an array by 1 level\r\n// [[[],[]], [[],[]], [[],[]]] => [[], [], [], [], [], []]\r\n\r\nconst flattenArray = (arr) => {\r\n    let flattenedArray = [];\r\n\r\n    for(let i = 0; i < arr.length; i++){\r\n        for(let j = 0; j < arr[i].length; j++){\r\n            flattenedArray.push(arr[i][j]);\r\n        }\r\n    }\r\n\r\n    return flattenedArray;\r\n}\r\n\r\nexport default flattenArray;","// Interval number of indices between changes in this parameter, or in order words\r\n// how many times will we see the same value for this parameter in a row before it changes\r\n// as we iterate through the values array.\r\n// We use modulo for cases where data.length / interval is larger than the number of \r\n// distinct values for that parameter.\r\n\r\nconst splitData = (data, changeInterval, numDistinct) => {\r\n    var splitData = [];\r\n\r\n    for(let i = 0; i < numDistinct; i++){\r\n        splitData.push([]);\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n        let index = Math.floor(i / changeInterval) % numDistinct;\r\n        splitData[index].push(data[i]);\r\n    }\r\n\r\n    return splitData;\r\n}\r\n\r\nexport default splitData;","// mergeTargetDistance - number of hops between arrays being merged\r\n// mergeTargetNumber - number of arrays being merged - implicit\r\n// nextStartDistance - once a merge is complete how many hops to next start\r\nconst mergeArraysAndComputeMeans = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n    \r\n    // Find each merging start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        // Iterate through each value in the first array of this merge. Count\r\n        // the number of values summed so we can ignore nulls and compute a mean.\r\n        for(let j = 0; j < data[i].length; j ++){\r\n            let sum = 0;\r\n            let count = 0;\r\n\r\n            // Aggregate values of all merge targets\r\n            for(let k = i; k < i + (mergeTargetDistance * numArraysPerMerge); k += mergeTargetDistance){\r\n                if(data[k][j] !== null) {\r\n                    sum += data[k][j];\r\n                    count ++;\r\n                };\r\n            }\r\n            subArray.push(count < 1 ? null : sum / (count));\r\n        }\r\n\r\n        mergedArrays.push(subArray)\r\n    }\r\n\r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArraysAndComputeMeans;","const mergeArrays = (data, mergeTargetDistance, nextMergeStartDistance, numArraysPerMerge) => {\r\n    let mergedArrays = [];\r\n\r\n    let travelDistance = mergeTargetDistance * (numArraysPerMerge - 1);\r\n\r\n    // Find each merge start point\r\n    for(let i = 0; i + travelDistance < data.length; i += nextMergeStartDistance){\r\n        let subArray = [];\r\n\r\n        for(let j = i; j <= i + travelDistance; j += mergeTargetDistance){\r\n            subArray = [...subArray, ...data[j]];\r\n        }\r\n\r\n        mergedArrays.push(subArray);\r\n    }\r\n   \r\n    return mergedArrays;\r\n}\r\n\r\nexport default mergeArrays;\r\n\r\n","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    heatmap: 'Heatmap',\r\n    contourMap: 'Contour Map',\r\n    sparse: 'Sparse'\r\n}\r\n\r\nexport default subTypes;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\nimport mergeArrays from '../Utility/mergeArrays';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\n\r\nclass SpaceTimeData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = null;\r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n        this.lonStart = null;\r\n        this.latStart = null;\r\n        this.lonCount = null;\r\n        this.latCount = null;\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        // Only on first row\r\n        if(this.hasDepth === null) {\r\n            this.hasDepth = row.length === 5;\r\n            this.lonStart = parseFloat(row[2]);\r\n            this.latStart = parseFloat(row[1]);\r\n            this.depthIndexAdjust = this.hasDepth ? 1 : 0;\r\n        }\r\n\r\n        if(this.hasDepth){\r\n            this.depths.add(row[3]);\r\n        }\r\n\r\n        this.dates.add(row[0]);\r\n\r\n        this.variableValues.push(parseFloat(row[3 + this.depthIndexAdjust]));\r\n    }\r\n\r\n    finalize() {\r\n        const spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n\r\n        // Simple arrays of lats and lons\r\n        let lonsList = generateSpatialArray(this.lonStart, spatialResolution, this.parameters.lon2);\r\n        let latsList = generateSpatialArray(this.latStart, spatialResolution, this.parameters.lat2);\r\n\r\n        this.lonCount = lonsList.length;\r\n        this.latCount = latsList.length;\r\n\r\n        this.zMin = quantile(this.variableValues, .05);\r\n        this.zMax = quantile(this.variableValues, .95);\r\n        this.extent = extent(this.variableValues);\r\n\r\n        // Expanded arrays to be used in plots\r\n        let lats = [];\r\n        let lons = []\r\n\r\n        for(let i = 0; i < latsList.length; i ++){\r\n            for(let j = 0; j < lonsList.length; j++){\r\n                lats.push(latsList[i]);\r\n                lons.push(lonsList[j]);\r\n            }\r\n        }\r\n\r\n        this.lats = lats;\r\n        this.lons = lons;\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        if(this.depths.size === 0) this.depths.add('Surface');\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const latInterval = this.lonCount;\r\n        const depthInterval = latInterval * this.latCount;\r\n        const dateInterval = depthInterval * this.depths.size;\r\n\r\n        // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n        variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, depthInterval, this.depths.size));\r\n        variableValueSubsets = flattenArray(variableValueSubsets);\r\n\r\n        // Contour and heatmap compute mean variable values per lat and lon\r\n        // when not split by date and/or time\r\n        if(subType === vizSubTypes.contourMap || subType === vizSubTypes.heatmap) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    this.depths.size, \r\n                    this.depths.size\r\n                    );\r\n    \r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    this.depths.size, \r\n                    1, \r\n                    this.dates.size\r\n                    );\r\n    \r\n            } else {\r\n                variableValueSubsets = mergeArraysAndComputeMeans(\r\n                    variableValueSubsets, \r\n                    1, \r\n                    variableValueSubsets.length, \r\n                    variableValueSubsets.length\r\n                    );            \r\n            }\r\n        } \r\n        \r\n        // Histograms split and aggregate without computing means\r\n        else if (subType === vizSubTypes.histogram) {\r\n            if(splitByDate && splitByDepth) {\r\n                // pass\r\n            } else if (splitByDate){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets, \r\n                    1,\r\n                    this.depths.size,\r\n                    this.depths.size\r\n                    );\r\n            } else if (splitByDepth){\r\n                variableValueSubsets = mergeArrays(\r\n                    variableValueSubsets,\r\n                    this.depths.size,\r\n                    1,\r\n                    this.dates.size\r\n                );\r\n            } else {\r\n                variableValueSubsets = [this.variableValues];\r\n            }\r\n        }\r\n\r\n        // Nothing here yet\r\n        else {}\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        console.log(dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i]},${depths[Math.floor(i / (this.variableValues.length / (dates.length * depths.length))) % depths.length]},${this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i]},${this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SpaceTimeData;","const storedProcedures = {\r\n    sectionMap: 'uspSectionMap',\r\n    timeSeries: 'uspTimeSeries',\r\n    spaceTime: 'uspSpaceTime',\r\n    depthProfile: 'uspDepthProfile'\r\n}\r\n\r\nexport default storedProcedures;","class TimeSeriesData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.dates = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depth = null;\r\n        this.depthIndexAdjust = null;\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.depthIndexAdjust = row.length === 6 ? 1 : 0;\r\n            this.lat = row[1];\r\n            this.lon = row[2];\r\n            this.depth = row.length === 6 ? row[3] : false;\r\n        }\r\n\r\n        this.variableValues.push(row[3 + this.depthIndexAdjust]);\r\n        this.stds.push(row[4 + this.depthIndexAdjust]);\r\n        this.dates.push(row[0]);\r\n    }\r\n\r\n    finalize() {\r\n        if(this.depth === false) this.depth = 'Surface';\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }    \r\n\r\n    generateCsv() {\r\n        let csvString = `time,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.dates[i]},${this.variableValues[i]},${this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default TimeSeriesData;","class DepthProfileData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.variableValues = [];\r\n        this.stds = [];\r\n        this.lat = null;\r\n        this.lon = null;\r\n        this.depths = [];\r\n    }\r\n\r\n    add(row) {\r\n        if(this.lat === null){\r\n            this.lat = parseFloat(row[0]);\r\n            this.lon = parseFloat(row[1]);\r\n        }\r\n\r\n        this.variableValues.push(parseFloat(row[2]));\r\n        this.stds.push(parseFloat(row[3]));\r\n        this.depths.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        // pass\r\n    }\r\n\r\n    generatePlotData() {\r\n        return this.variableValues;\r\n    }\r\n    \r\n    generateCsv() {\r\n        let csvString = `depth,${this.parameters.fields},${this.parameters.fields}_std`;\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvString += `\\n${this.depths[i]},${this.variableValues[i]},${this.stds[i]}`;\r\n        }\r\n\r\n        return csvString;\r\n    }\r\n}\r\n\r\nexport default DepthProfileData;","import { quantile, extent } from 'd3-array';\r\n\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport generateSpatialArray from '../Utility/GenerateSpatialArray';\r\nimport flattenArray from '../Utility/flattenArray';\r\nimport splitData from '../Utility/splitData';\r\nimport mergeArraysAndComputeMeans from '../Utility/mergeArraysAndComputeMeans';\r\n\r\nclass SectionMapData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        \r\n        this.depths = new Set();\r\n        this.dates = new Set();\r\n        this.variableValues = [];\r\n        \r\n        this.lonStart = null;\r\n        this.latStart = null;\r\n        this.lonCount = null;\r\n        this.latCount = null;\r\n        \r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n\r\n        this.orientation = null;\r\n        \r\n        this.latsDistinct = null;\r\n        this.lonsDistinct = null;\r\n\r\n        this.lats = null;\r\n        this.lons = null;\r\n        this.zonalPlotDepths = null;\r\n        this.meridionalPlotDepths = null;\r\n    }\r\n\r\n    // time, lat, lon, depth, value\r\n    add(row) {\r\n        // Only on first row\r\n        if(this.latStart === null) {\r\n            this.latStart = parseFloat(row[1]);\r\n            this.lonStart = parseFloat(row[2]);\r\n        }\r\n\r\n        this.depths.add(row[3]);\r\n        this.dates.add(row[0]);\r\n\r\n        this.variableValues.push(parseFloat(row[4]));\r\n    }\r\n\r\n    finalize() {\r\n        const spatialResolution = mapSpatialResolutionToNumber(this.metadata.Spatial_Resolution);\r\n\r\n        // Simple arrays of lats and lons\r\n        let lonsList = generateSpatialArray(this.lonStart, spatialResolution, this.parameters.lon2);\r\n        let latsList = generateSpatialArray(this.latStart, spatialResolution, this.parameters.lat2);\r\n\r\n        this.lonCount = lonsList.length;\r\n        this.latCount = latsList.length;\r\n\r\n        this.lonsDistinct = lonsList;\r\n        this.latsDistinct = latsList;\r\n\r\n        this.zMin = quantile(this.variableValues, .05);\r\n        this.zMax = quantile(this.variableValues, .95);\r\n        this.extent = extent(this.variableValues);\r\n\r\n        // Expanded arrays to be used in plots\r\n        let lats = [];\r\n        let lons = []\r\n\r\n        for(let i = 0; i < latsList.length; i ++){\r\n            for(let j = 0; j < this.depths.size; j++){\r\n                lats.push(latsList[i]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < lonsList.length; i ++){\r\n            for(let j = 0; j < this.depths.size; j++){\r\n                lons.push(lonsList[i]);\r\n            }\r\n        }\r\n\r\n        this.lats = lats;\r\n        this.lons = lons;\r\n\r\n        let zonalPlotDepths = [];\r\n        let meridionalPlotDepths = [];\r\n        let depthsList = Array.from(this.depths).map(depth => parseFloat(depth));\r\n\r\n        for(let i = 0; i < this.latsDistinct.length; i++){\r\n            for(let j = depthsList.length - 1; j > -1; j--){\r\n                meridionalPlotDepths.push(depthsList[j]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < this.lonsDistinct.length; i++){\r\n            for(let j = depthsList.length - 1; j > -1; j--){\r\n                zonalPlotDepths.push(depthsList[j]);\r\n            }\r\n        }\r\n\r\n        this.zonalPlotDepths = zonalPlotDepths;\r\n        this.meridionalPlotDepths = meridionalPlotDepths;\r\n        \r\n        this.orientation = this.lonCount > this.latCount ? 'zonal' : 'meridional';\r\n    }\r\n\r\n    // Direction is meridional or zonal\r\n    generatePlotData(orientation, splitByDate, splitBySpace) {\r\n\r\n        // Intervals are the number of indices between each change for that parameter\r\n        // Intervals can change if you split out of order\r\n        const lonInterval = this.depths.size;\r\n        const latInterval = lonInterval * this.lonCount;\r\n        const dateInterval = latInterval * this.latCount;\r\n\r\n        // // an array of arrays containing variable values, each of which will become a chart\r\n        var variableValueSubsets;\r\n        \r\n        variableValueSubsets = splitData(this.variableValues, dateInterval, this.dates.size);\r\n\r\n        // either latCount or lonCount depending on orientation\r\n        let spaceCount;\r\n\r\n        if(orientation === 'zonal') {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, latInterval, this.latCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = this.latCount;\r\n        }\r\n\r\n        else {\r\n            variableValueSubsets = variableValueSubsets.map(subset => splitData(subset, lonInterval, this.lonCount));\r\n            variableValueSubsets = flattenArray(variableValueSubsets);\r\n            spaceCount = this.lonCount;\r\n        }\r\n\r\n        if(splitByDate && splitBySpace){\r\n            // pass\r\n        } else if (splitByDate){\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                spaceCount,\r\n                spaceCount\r\n            )\r\n        } else if (splitBySpace) {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                spaceCount,\r\n                1,\r\n                this.dates.size\r\n            )\r\n        } else {\r\n            variableValueSubsets = mergeArraysAndComputeMeans(\r\n                variableValueSubsets,\r\n                1,\r\n                variableValueSubsets.length,\r\n                variableValueSubsets.length\r\n            )\r\n        }\r\n\r\n        return variableValueSubsets;\r\n    }\r\n\r\n    generateCsv = () => {\r\n        let dates = Array.from(this.dates);\r\n        let depths = Array.from(this.depths);\r\n\r\n        var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n        for(let i = 0; i < this.variableValues.length; i++){\r\n            csvArray.push(`${dates[Math.floor(i / (this.variableValues.length / dates.length))]},${this.lats[i]},${this.lons[i]},${depths[i % depths.length]},${this.variableValues[i]}`);\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SectionMapData;","import { quantile, extent } from 'd3-array';\r\n\r\nclass SparseData {\r\n    constructor(payload) {\r\n        this.parameters = payload.parameters;\r\n        this.metadata = payload.metadata;\r\n        this.hasDepth = Boolean(payload.metadata.Depth_Min);\r\n        this.variableIndex = payload.metadata.Depth_Min ? 4 : 3;\r\n        this.depths = [];\r\n        this.times = [];\r\n        this.variableValues = [];\r\n        this.lats = [];\r\n        this.lons = [];\r\n        this.zMin = null;\r\n        this.zMax = null;\r\n        this.extent = [null, null];\r\n    }\r\n\r\n    add(row) {\r\n        if(row[this.variableIndex]){\r\n            this.times.push(row[0]);\r\n            this.lats.push(parseFloat(row[1]));\r\n            this.lons.push(parseFloat(row[2]));\r\n            if(this.hasDepth) this.depths.push(parseFloat(row[3]));\r\n            this.variableValues.push(parseFloat(row[this.variableIndex]));\r\n        }\r\n    }\r\n\r\n    finalize() {\r\n        this.zMin = quantile(this.variableValues, .05);\r\n        this.zMax = quantile(this.variableValues, .95);\r\n        this.extent = extent(this.variableValues);\r\n    }\r\n\r\n    generatePlotData(subType, splitByDate, splitByDepth) {\r\n        return this.variableValues;\r\n    }\r\n\r\n    generateCsv(){\r\n\r\n        if(this.hasDepth){\r\n            var csvArray = [`time,lat,lon,depth,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${this.depths[i]},${this.variableValues[i]}`);\r\n            }\r\n\r\n        } else {\r\n            var csvArray = [`time,lat,lon,${this.parameters.fields}`];\r\n\r\n            for(let i = 0; i < this.variableValues.length; i++){\r\n                csvArray.push(`${this.times[i]},${this.lats[i]},${this.lons[i]},${this.variableValues[i]}`);\r\n            }\r\n        }\r\n\r\n        return csvArray.join('\\n');\r\n    }\r\n}\r\n\r\nexport default SparseData;","import CSVParser from 'csv-parse';\r\n\r\nimport { apiUrl } from './config';\r\nimport SpaceTimeData from './Classes/SpaceTimeData';\r\n\r\nimport storedProcedures from './Enums/storedProcedures';\r\nimport TimeSeriesData from './Classes/TimeSeriesData';\r\nimport DepthProfileData from './Classes/DepthProfileData';\r\nimport SectionMapData from './Classes/SectionMapData';\r\nimport SparseData from './Classes/SparseData';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let csvParser = CSVParser({columns:true});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record\r\n        while (record = csvParser.read()) {\r\n            catalog.push(record)\r\n        }\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/catalog/new', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(payload) => {\r\n    const decoder = new TextDecoder();\r\n    var vizData;\r\n\r\n    switch(payload.parameters.spName) {\r\n        case storedProcedures.spaceTime:\r\n            if(payload.subType === 'Sparse') vizData = new SparseData(payload);\r\n            else vizData = new SpaceTimeData(payload);\r\n            break;\r\n\r\n        case storedProcedures.timeSeries:\r\n            vizData = new TimeSeriesData(payload);\r\n            break;\r\n\r\n        case storedProcedures.depthProfile:\r\n            vizData = new DepthProfileData(payload);\r\n            break;\r\n\r\n        case storedProcedures.sectionMap:\r\n            vizData = new SectionMapData(payload);\r\n            break;\r\n\r\n        default:\r\n            console.log('Unknown sproc name');\r\n    }\r\n\r\n    let response = await fetch(apiUrl + '/api/data/sp?' + storedProcedureParametersToUri(payload.parameters), fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let csvParser = CSVParser({from: 2});\r\n\r\n    csvParser.on('readable', function(){\r\n        let record;\r\n        while (record = csvParser.read()) {\r\n            vizData.add(record);\r\n        }\r\n    })\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            csvParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;\r\n}\r\n\r\nexport default api;\r\n\r\n// Test for splitData\r\n// let depthMap = {};\r\n//     let dateMap = {};\r\n\r\n//     let depthCount = 0;\r\n//     vizData.depths.forEach(depth => {\r\n//         depthMap[depth] = depthCount;\r\n//         depthCount ++;\r\n//     })\r\n\r\n//     let dateCount = 0;\r\n//     vizData.dates.forEach(date => {\r\n//         dateMap[date] = dateCount;\r\n//         dateCount ++;\r\n//     })\r\n    \r\n//     let splitData = vizData.generatePlotData(true,true);\r\n//     console.log(splitData);\r\n//     for(let i = 0; i < tempArr.length; i++){\r\n//         let theValue = tempArr[i].Fe\r\n//         let theIndex = dateMap[tempArr[i].time] * vizData.depths.size + depthMap[tempArr[i].depth];\r\n//         console.log(splitData[theIndex]);\r\n//         console.log(theValue);\r\n//         if(splitData[theIndex].includes(theValue)) console.log('correct');\r\n//         else {\r\n//             console.log('Incorrect'); \r\n//             return;\r\n//         }\r\n//     }\r\n\r\n//     console.log(depthMap);\r\n//     console.log(dateMap);","import { put, takeLatest, all, call, delay } from 'redux-saga/effects';\r\n// import { eventChannel } from 'redux-saga';\r\nimport Cookies from 'js-cookie';\r\n// import worker from '../worker';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    \r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){    \r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    \r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    \r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(action){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    \r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    \r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    \r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    yield put(interfaceActions.setLoadingMessage('Fetching Data'));\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload);\r\n    yield delay(50);\r\n    yield put(interfaceActions.setLoadingMessage('Processing Data'));\r\n    yield delay(70);\r\n    result.finalize();\r\n    // Result will be an object containing variable values and describing date shape\r\n    if(!result){\r\n        yield put(interfaceActions.setLoadingMessage(''));\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen(\"Request failed\"));\r\n    } else {\r\n        if(result.variableValues.length > 0){\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            yield put(visualizationActions.addChart({subType: action.payload.subType, data:result}));\r\n           \r\n        } else {\r\n            yield put(interfaceActions.setLoadingMessage(''));\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges. Try selecting a different date or depth range.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\n// function createWorkerChannel(worker) {\r\n//     return eventChannel(emit => {\r\n//         worker.onmessage = message => {\r\n//             emit(message);\r\n//         }\r\n\r\n//         const unsubscribe = () => {\r\n//             worker.teminate();\r\n//         }\r\n      \r\n//         return unsubscribe;\r\n//     })\r\n// }\r\n\r\n// function* watchWorkerChannel(){\r\n//     const workerChannel = yield call(createWorkerChannel, worker);\r\n\r\n//     while (true) {\r\n//         const message = yield take(workerChannel);\r\n//         yield put(message.data.type, message.data.payload);\r\n//         //   yield put({ type: INCOMING_PONG_PAYLOAD, payload })\r\n//         //   yield fork(pong, socket)\r\n//       }\r\n// }\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        // watchWorkerChannel(),\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>       \r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Keys\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n            </Paper>\r\n            </React.Fragment>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires a user account. Please <Link component={RouterLink} to={{pathname: '/apikeymanagement'}} onClick={() => props.showLoginDialog()}> log in\r\n            </Link> or <Link component={RouterLink} to={{pathname: '/register'}}> register\r\n            </Link>.\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return state;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    getCurrentPath = () => {\r\n        switch(this.props.location.pathname){\r\n            case '/apikeymanagement': return 0;\r\n            case '/': return 1;\r\n            case '/visualization': return 2;\r\n            case '/register': return 3;\r\n            default: return 0;\r\n        }\r\n    };\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <Tabs value={this.getCurrentPath() || 0} onChange={this.handleChange}>\r\n                        <Tab key='0' component={Link} to={{pathname: '/apikeymanagement'}} label='API Keys' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='1' component={Link} to={{pathname: '/'}} label='Catalog' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='2' component={Link} to={{pathname: '/visualization'}} label='Visualization' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        {this.props.user ? '' : <Tab key='3' component={Link} to={{pathname: '/register'}} label='Register' onClick={this.props.restoreInterfaceDefaults}/>}\r\n                        {this.props.user ? '' : <Tab key='4' label='Log In' onClick={this.props.showLoginDialog}/>}\r\n                        {this.props.user ? <Tab key='5' label={`Welcome ${this.props.user.firstName} ${this.props.user.lastName}!`}/> : ''}\r\n                        {this.props.user ? <Tab key='4' label='Log Out' onClick={this.handleLogOut}/> : ''}                        \r\n                    </Tabs>                    \r\n                </Toolbar>\r\n                {/* <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/> */}\r\n            </AppBar>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user ? <ApiKeyManagement/> : <LoginRequiredPrompt/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'Variable'],\r\n    ['Spatial Resolution', 'Spatial_Resolution'],\r\n    ['Temporal Resolution', 'Temporal_Resolution'],\r\n    ['Unit', 'Unit'],\r\n    ['Process Level', 'Process_Level'],\r\n    ['Study Domain', 'Study_Domain'],\r\n    ['SQL Table Name', 'Table_Name']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        margin: '-10px auto 0px auto',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(2),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing(2),\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        width: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={8} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={imageSource + 'viz_sample.png'} alt=\"Sample Visualization\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.Dataset_Description}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.Data_Source}\r\n                        </Typography> <br></br>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.Distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable} size='small'>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst detailCellRendererParams = {\r\n  template:\r\n    '<div style=\"height: 100%; box-sizing: border-box\" class=\"testClass\">' +\r\n      '  <div style=\"height: 10%;\">Call Details</div>' +\r\n      '  <div ref=\"eDetailGrid\" style=\"height: 90%;\"></div>' +\r\n    \"</div>\"\r\n}\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"Long_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"Variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"Table_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"Dataset_Name\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"Make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"Sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"Study_Domain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"Process_Level\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"Spatial_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"Temporal_Resolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"Unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'Keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '60vh', \r\n    width: '90%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '60px 5vw',\r\n    padding: '30px'\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n        <Paper elevation={12} className={classes.gridPaper}>\r\n          <TextField\r\n            className={classes.gridSearch}\r\n            autoFocus={true}\r\n            margin=\"normal\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            variant='outlined'\r\n            name='filterText'\r\n            value={this.state.filterText}\r\n            onChange={this.handleChange}\r\n            label=\"Variable Search\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n          />\r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              suppressDragLeaveHidesColumns= {true}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n              detailCellRendererParams={detailCellRendererParams}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog) return <AGGridWrapper catalog={this.props.catalog}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n        else if(this.props.catalogRequestState === states.failed) return <p>Failed to get catalog. Have you tried turning it off and then on again?</p>\r\n        else return <p>I don't know how we got here. Please debug the catalog retrieval process.</p>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const colors = {\r\n    orange: '#FF8000',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9'\r\n}\r\n\r\nexport default colors;","const validation = {\r\n    depth: {\r\n        depthOneIsLower: 'Start cannot be larger than end',\r\n        depthOneOutOfBounds: 'Start must be smaller than $',\r\n        depthTwoOutOfBounds: 'End must be larger than $',\r\n        negative: 'Depth cannot be negative'\r\n    },\r\n\r\n    date: {\r\n        dateOneIsLater: 'Start cannot be later than end',\r\n        dateOneOutOfBounds: 'Start must be before $',\r\n        dateTwoOutOfBounds: 'End must be after $'\r\n    },\r\n\r\n    lat: {\r\n        latOneIsHigher: 'Start cannot be larger than end.',\r\n        latOneOutOfBounds: 'Start must be less than $',\r\n        latTwoOutOfBounds: 'End must be greater than $'\r\n    },\r\n\r\n    lon: {\r\n        lonOneIsHigher: 'Start cannot be larger than end.',\r\n        lonOneOutOfBounds: 'Start must be less than $',\r\n        lonTwoOutOfBounds: 'End must be greater than $'\r\n    },\r\n\r\n    type: {\r\n        dataIsIrregular: '$ is not available for sparse data',\r\n        dateRangeRequired: '$ requires a range of dates',\r\n        depthRangeRequired: '$ requires a range of depths',\r\n        surfaceOnlyDataset: '$ contains only surface data',\r\n        irregularOnly: 'Sparse map is only available for sparse data',\r\n        dataSizeTooLarge: 'Data set is too large for this visualization type.'\r\n    },\r\n\r\n    generic: {\r\n        invalid: 'Invalid input',\r\n        dataSizeWarning: 'Wait time and application performance may be poor due to size of data.',\r\n        dataSizePrevent: 'Data set is too large. Please reduce date range or area size.'\r\n    }\r\n}\r\n\r\nexport default validation;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    const { data } = props;\r\n\r\n    if(!data) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{data.Variable}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {data.Long_Name}\r\n                </DialogContentText>\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{data.Sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{data.Spatial_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{data.Temporal_Resolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{data.Time_Min ? data.Time_Min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{data.Time_Max ? data.Time_Max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lat_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lat_Max}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{`${data.Lon_Min}\\xB0`}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{data.Depth_Min ? `${data.Depth_Min}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{data.Depth_Max ? `${data.Depth_Max}(m)` : 'Surface Only'}</TableCell>\r\n                            </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);","const temporalResolutions = {\r\n    threeMinutes: 'Three Minutes',\r\n    sixHourly: 'Six Hourly',\r\n    daily: 'Daily',\r\n    weekly: 'Weekly',\r\n    monthly: 'Monthly',\r\n    annual: 'Annual',\r\n    irregular: 'Irregular',\r\n    monthlyClimatology: 'Monthly Climatology',\r\n    threeDay: 'Three Days',\r\n    eightDayRunning: 'Eight Day Running',\r\n    eightDays: 'Eight Days '\r\n}\r\n\r\nexport default temporalResolutions;","import temporalResolutions from '../Enums/temporalResolutions';\r\n\r\nconst mapTemporalResolutionToNumber = (resolution) => {\r\n    let map = {\r\n        [temporalResolutions.threeMinutes] : 1,\r\n        [temporalResolutions.sixHourly] : 1,\r\n        [temporalResolutions.daily] : 1,\r\n        [temporalResolutions.weekly] : 7,\r\n        [temporalResolutions.monthly] : 30,\r\n        [temporalResolutions.annual] : 365,\r\n        [temporalResolutions.irregular] : null,\r\n        [temporalResolutions.monthlyClimatology]: 30,\r\n        [temporalResolutions.threeDay]: 3,\r\n        [temporalResolutions.eightDayRunning]: 8,\r\n        [temporalResolutions.eightDays]: 8\r\n    };\r\n\r\n    return map[resolution];\r\n}\r\n\r\nexport default mapTemporalResolutionToNumber;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as List } from \"react-window\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\nimport { ArrowDropDown, LibraryBooks } from '@material-ui/icons';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport validation from '../Enums/validation';\r\nimport TableStatsDialog from './TableStatsDialog';\r\nimport mapTemporalResolutionToNumber from '../Utility/mapTemporalResolutionToNumber';\r\nimport mapSpatialResolutionToNumber from '../Utility/mapSpatialResolutionToNumber';\r\nimport spatialResolutions from '../Enums/spatialResolutions';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst styles = (theme) => ({\r\n    dataRetrievalFormPaper: {\r\n        width: '1000px',\r\n        height: '260px',\r\n        padding: theme.spacing(2.5),\r\n        position:'fixed',\r\n        top: '10px',\r\n        left: '50%',\r\n        marginLeft: '-600px',\r\n        zIndex: 2,\r\n        paddingTop: theme.spacing(1.5),\r\n    },\r\n\r\n    dataRetrievalFormField: {\r\n        padding:`0px ${theme.spacing(1)}`\r\n    },\r\n\r\n    retrieveDataButton: {\r\n        margin:'10px auto'\r\n    },\r\n\r\n    variableSelect: {\r\n        margin: '0 30px 20px 30px'\r\n    },\r\n\r\n    visualizationSpeedDial: {\r\n        position: 'relative',\r\n        top: '5px',\r\n        left: '30px'\r\n    },\r\n\r\n    visualizeButton: {\r\n        borderRadius:'10%',\r\n        width: '100px',\r\n        height:'40px',\r\n        margin: 'auto 0',\r\n        backgroundColor: theme.palette\r\n    },\r\n\r\n    visualizeButtonText: {\r\n        dominantBaseline: \"middle\",\r\n        textAnchor: \"middle\"\r\n    },\r\n\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    datePickerGridSection: {\r\n        paddingLeft: '40px !important',\r\n        paddingRight: '40px !important'\r\n    },\r\n\r\n    shortenHeight: {\r\n        height: '60px'\r\n    },\r\n\r\n    vizSelect: {\r\n        minWidth: 120\r\n    },\r\n\r\n    gridItem: {\r\n        height: '48px'\r\n    },\r\n\r\n    generalMessage: {\r\n        textAlign: 'left'\r\n    },\r\n\r\n    vizTypeSelectFormControl: {\r\n        width: 150\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nclass MenuList extends Component {\r\n    render() {\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <List\r\n                style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length === 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <ArrowDropDown />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\n// Replace react-select option\r\nconst Option = (props) => {\r\n    return (\r\n        <components.Option {...props} className={props.className + ' fa-icon-cmap'}/>\r\n    )\r\n}\r\n\r\nclass DataRetrievalForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('Variable');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('Variable');\r\n        search.addIndex('Make');\r\n        search.addIndex('Sensor');\r\n        search.addIndex('Data_Source');\r\n        search.addIndex('Process_Level');\r\n        search.addIndex('Long_Name');\r\n        search.addIndex('Keywords');\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            visualizationSpeedDialOpen: false,\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    // When we get the catalog add them to the search\r\n    // This is not reactive - it mutates the search piece of state in \r\n    // a way that is not visible to react and will not trigger a re-render.\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    // Includes every variable that returns true when filtering\r\n    // variableWrapper parameter is {label, value, variable object}\r\n    filterVariables = (variableWrapper, searchString) => {\r\n\r\n        // Create one string from all column values (using Boolean to remove falsey elements)\r\n        let values = Object.values(variableWrapper.data).filter(Boolean).join(' ');\r\n\r\n        let searchTerms = searchString.split(' ');\r\n\r\n        // array.some method will return a true as soon as we failed to\r\n        // find one search term, which we negate.\r\n        return !searchTerms.some(term => values.indexOf(term) === -1)\r\n    }\r\n\r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.Variable,\r\n            label: item.Variable === item.Long_Name ? item.Variable : item.Variable + ' : ' + item.Long_Name,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n\r\n    estimateDataSize = () => {\r\n        const { dt1, dt2, lat1, lat2, lon1, lon2, fields, selectedVizType } = this.props;\r\n        if(!fields) return 0;\r\n        if(fields.data.Spatial_Resolution === spatialResolutions.irregular) return 0;\r\n        if(selectedVizType === vizSubTypes.timeSeries || selectedVizType === vizSubTypes.depthProfile) return 0;\r\n\r\n        const date1 = Date.parse(dt1);\r\n        const date2 = Date.parse(dt2);\r\n        const res = mapSpatialResolutionToNumber(fields.data.Spatial_Resolution);\r\n\r\n        const dayDiff = (date2 - date1) / 86400000;\r\n\r\n        const dateCount = Math.floor(dayDiff / mapTemporalResolutionToNumber(fields.data.Temporal_Resolution)) || 1;\r\n        const latCount = (lat2 - lat1) / res;\r\n        const lonCount = (lon2 - lon1) / res;\r\n\r\n        const pointCount = lonCount * latCount * dateCount;\r\n        return pointCount;\r\n    }\r\n\r\n    checkStartDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth1) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.fields.data.Depth_Max)) return validation.depth.depthOneOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Max).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkEndDepth = () => {\r\n        if(this.props.surfaceOnly) return '';\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.depth2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.depth2) < 0) return validation.depth.negative;\r\n        if(parseFloat(this.props.depth1) > parseFloat(this.props.depth2)) return validation.depth.depthOneIsLower;\r\n        if(parseFloat(this.props.depth2) < parseFloat(this.props.fields.data.Depth_Min)) return validation.depth.depthTwoOutOfBounds.replace('$', parseFloat(this.props.fields.data.Depth_Min).toFixed(2));\r\n        return ''; \r\n    }\r\n\r\n    checkStartDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt1 > this.props.fields.data.Time_Max) return validation.date.dateOneOutOfBounds.replace('$', this.props.fields.data.Time_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndDate = () => {\r\n        if(this.props.dt1 < this.props.dt2) return validation.date.dateOneIsLater;\r\n        if(this.props.dt2 < this.props.fields.data.Time_Min) return validation.date.dateTwoOutOfBounds.replace('$', this.props.fields.data.Time_Min);\r\n        return '';\r\n    }\r\n\r\n    checkStartLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) < -90 || parseFloat(this.props.lat1) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.fields.data.Lat_Max)) return validation.lat.latOneOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLat = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lat2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat2) < -90 || parseFloat(this.props.lat2) > 90) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lat1) > parseFloat(this.props.lat2)) return validation.lat.latOneIsHigher;\r\n        if(parseFloat(this.props.lat2) < parseFloat(this.props.fields.data.Lat_Min)) return validation.lat.latTwoOutOfBounds.replace('$', this.props.fields.data.Lat_Max);\r\n        return '';\r\n    }\r\n\r\n    checkStartLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon1)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) < -180 || parseFloat(this.props.lon1) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.fields.data.Lon_Max)) return validation.lon.lonOneOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkEndLon = () => {\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(this.props.lon2)) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon2) < -180 || parseFloat(this.props.lon2) > 180) return validation.generic.invalid;\r\n        if(parseFloat(this.props.lon1) > parseFloat(this.props.lon2)) return validation.lon.lonOneIsHigher;\r\n        if(parseFloat(this.props.lon2) < parseFloat(this.props.fields.data.Lon_Min)) return validation.lon.lonTwoOutOfBounds.replace('$', this.props.fields.data.Lon_Max);\r\n        return '';\r\n    }\r\n\r\n    checkHeatmap = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Heatmap');\r\n        return '';\r\n    }\r\n\r\n    checkContour = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Contour');\r\n        return '';\r\n    }\r\n\r\n    checkSection = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Section Map');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', \"Section Map\");\r\n        return '';\r\n    }\r\n\r\n    checkHistogram = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Histogram');\r\n        return '';\r\n    }\r\n\r\n    checkTimeSeries = () => {\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Time Series');\r\n        if(this.props.dt1 === this.props.dt2) return validation.type.dateRangeRequired.replace('$', 'Time Series');\r\n        return '';\r\n    }\r\n\r\n    checkDepthProfile = () => {\r\n        if(this.props.surfaceOnly) return validation.type.surfaceOnlyDataset.replace('$', this.props.fields.value);\r\n        if(this.props.irregularSpatialResolution) return validation.type.dataIsIrregular.replace('$', 'Depth Profile');\r\n        if(this.props.depth1 === this.props.depth2) return validation.type.depthRangeRequired.replace('$', 'Depth Profile');\r\n        return '';\r\n    }\r\n\r\n    checkSparseMap = () => {\r\n        if(!this.props.irregularSpatialResolution) return validation.type.irregularOnly;\r\n        return '';\r\n    }\r\n\r\n    checkGeneralWarn = () => {\r\n        if(this.estimateDataSize() > 1200000) return validation.generic.dataSizeWarning;\r\n        return ''\r\n    }\r\n\r\n    checkGeneralPrevent = () => {\r\n        if(this.estimateDataSize() > 50000000) return validation.generic.dataSizePrevent;\r\n        return ''\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField } = this.state;\r\n        \r\n        const { classes, \r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            selectedVizType,\r\n            catalog,\r\n            catalogRequestState,\r\n            surfaceOnly\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n\r\n        let validations;\r\n\r\n        if(fields) {\r\n            validations = [\r\n                this.checkStartDepth(),\r\n                this.checkEndDepth(),\r\n                this.checkStartDate(),\r\n                this.checkEndDate(),\r\n                this.checkStartLat(),\r\n                this.checkEndLat(),\r\n                this.checkStartLon(),\r\n                this.checkEndLon(),\r\n                this.checkHeatmap(),\r\n                this.checkContour(),\r\n                this.checkSection(),\r\n                this.checkHistogram(),\r\n                this.checkTimeSeries(),\r\n                this.checkDepthProfile(),\r\n                this.checkSparseMap(),\r\n                this.checkGeneralWarn(),\r\n                this.checkGeneralPrevent()\r\n            ];\r\n        } else validations = Array(17).fill('');\r\n\r\n        const [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startDateMessage,\r\n            endDateMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            heatmapMessage,\r\n            contourMessage,\r\n            sectionMapMessage,\r\n            histogramMessage,\r\n            timeSeriesMessage,\r\n            depthProfileMessage,\r\n            sparseMapMessage,\r\n            generalWarnMessage,\r\n            generalPreventMessage\r\n        ] = validations;\r\n\r\n        const parametersAreInvalid = [\r\n            startDepthMessage,\r\n            endDepthMessage,\r\n            startLatMessage,\r\n            endLatMessage,\r\n            startLonMessage,\r\n            endLonMessage,\r\n            generalPreventMessage\r\n        ].some(message => message.length);\r\n\r\n        //     if(isNaN(Date.parse(dt1))){\r\n        //         this.props.snackbarOpen('Please enter a valid starting date.');\r\n        //         return true;\r\n        //     }\r\n    \r\n        //     if(isNaN(Date.parse(dt2))){\r\n        //         this.props.snackbarOpen('Please enter a valid ending date.');\r\n        //         return true;\r\n        //     }\r\n    \r\n        //     return false;\r\n        // }\r\n\r\n        return (\r\n            <div className={this.props.showUI ? '' : classes.displayNone}>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    data={fields && fields.data}\r\n                />\r\n                <Paper className={classes.dataRetrievalFormPaper}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={11} className={classes.shortenHeight}>\r\n                            <Select\r\n                                isLoading = {catalogRequestState === states.inProgress}\r\n                                components={{\r\n                                    IndicatorSeparator:'',\r\n                                    DropdownIndicator,\r\n                                    Option,\r\n                                    MenuList,\r\n                                    SingleValue,\r\n                                }}\r\n                                isClearable\r\n                                onInputChange={this.onAutoSuggestChange}\r\n                                filterOption={null}\r\n                                className={classes.variableSelect}\r\n                                autoFocus\r\n                                escapeClearsValue\r\n                                name=\"fields\"\r\n                                label=\"Variables\"\r\n                                options={options}\r\n                                onChange={this.props.updateFields}\r\n                                value={fields}\r\n                                placeholder=\"Variable Search\"\r\n                                styles={{\r\n                                    menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                                    input: provided => ({...provided,\r\n                                        color: 'white',\r\n                                        fontFamily: '\"Lato\", sans-serif'\r\n                                    }),\r\n\r\n                                    control: provided => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        border: '1px solid #333333',\r\n                                        '&:hover': { borderColor: 'white' },\r\n                                        '&:focus-within': { borderColor: colors.orange },\r\n                                    }),\r\n\r\n                                    placeholder: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        fontSize: '14px'\r\n                                    }),\r\n\r\n                                    noOptionsMessage: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        backgroundColor: colors.backgroundGray\r\n                                    }),\r\n\r\n                                    option: (provided, state) => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        color: state.data.data.Sensor === 'Satellite' ? '#1acf02' : state.data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        '&:hover': { backgroundColor: '#383838' },\r\n                                        '&:after': { \r\n                                            content: state.data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            float: 'left'\r\n                                        },\r\n                                    }),\r\n\r\n                                    singleValue: (provided, state) => ({...provided,\r\n                                        fontFamily: state.data.data.Sensor === 'Satellite' ? 'Font Awesome 5 Free': '\"Lato\", sans-serif',\r\n                                        color: state.data.data.Sensor === 'Satellite' ? '#1acf02' : state.data.data.Sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        paddingRight: '20px',\r\n                                        '&:after': { \r\n                                            content: state.data.data.Sensor === 'Satellite' ? \"'\\f7bf'\" : state.data.data.Sensor === 'Blend' ? \"'\\f109'\" : \"'\\f21a'\",\r\n                                            fontSize: '18px',\r\n                                            position: 'relative',\r\n                                            left: '8px',\r\n                                            top: '3px'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n                                    colors: {\r\n                                    ...theme.colors,\r\n                                    // Background color of hovered options\r\n                                    primary25: '#e0e0e0',\r\n                                    primary: '#212121',\r\n                                    },\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={1}>\r\n                            <IconButton\r\n                                disabled={!fields}\r\n                                onClick={this.handleTableStatsDialogOpen}\r\n                            >\r\n                                <LibraryBooks/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    minDate={fields ? fields.data.Time_Min : ''}\r\n                                    maxDate={fields ? fields.data.Time_Max : ''}\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel htmlFor=\"depth1-input\" >Start Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth1-input\"\r\n                                        value={depth1}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth1-error\"\r\n                                        labelWidth={105}\r\n                                        name='depth1'\r\n                                    />\r\n                                    <FormHelperText id=\"depth1-error\">{startDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endDepthMessage)} \r\n                                    disabled={!fields || surfaceOnly}\r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"depth2-input\" >End Depth(m)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"depth2-input\"\r\n                                        value={depth2}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"depth2-error\"\r\n                                        labelWidth={95}\r\n                                        name='depth2'\r\n                                    />\r\n                                    <FormHelperText id=\"depth2-error\">{endDepthMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat1-input\" >{'Start Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat1-input\"\r\n                                        value={lat1}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"lat1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lat1'\r\n                                    />\r\n                                    <FormHelperText id=\"lat1-error\">{startLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLatMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lat2-input\" >{'End Lat(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lat2-input\"\r\n                                        value={lat2}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"lat2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lat2'\r\n                                    />\r\n                                    <FormHelperText id=\"lat2-error\">{endLatMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(startLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon1-input\" >{'Start Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon1-input\"\r\n                                        value={lon1}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"lon1-error\"\r\n                                        labelWidth={80}\r\n                                        name='lon1'\r\n                                    />\r\n                                    <FormHelperText id=\"lon1-error\">{startLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>  \r\n\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant='outlined'\r\n                                    error={Boolean(endLonMessage)} \r\n                                >\r\n                                    <InputLabel shrink htmlFor=\"lon2-input\" >{'End Lon(\\xB0)'}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"lon2-input\"\r\n                                        value={lon2}\r\n                                        onChange={this.props.handleChange}\r\n                                        aria-describedby=\"lon2-error\"\r\n                                        labelWidth={75}\r\n                                        name='lon2'\r\n                                    />\r\n                                    <FormHelperText id=\"lon2-error\">{endLonMessage}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid> \r\n\r\n                            <Grid item xs={2}>\r\n                                <FormControl variant='outlined' className={classes.vizTypeSelectFormControl}>\r\n                                    <InputLabel shrink htmlFor=\"vizSelector\" >Type</InputLabel>\r\n                                    <MUISelect\r\n                                        labelWidth={35}\r\n                                        value={selectedVizType}\r\n                                        variant='outlined'\r\n                                        onChange={this.props.handleChange}\r\n                                        inputProps={{\r\n                                            name: 'selectedVizType',\r\n                                            id: 'vizSelector',\r\n                                            variant: 'outlined'\r\n                                        }}\r\n                                        >\r\n                                        <MenuItem disabled={Boolean(heatmapMessage)} value={vizSubTypes.heatmap} title={heatmapMessage}>Heatmap</MenuItem>\r\n                                        <MenuItem disabled={Boolean(contourMessage)} value={vizSubTypes.contourMap}>Contour</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sectionMapMessage)} value={vizSubTypes.sectionMap}>Section Map</MenuItem>\r\n                                        <MenuItem disabled={Boolean(histogramMessage)} value={vizSubTypes.histogram}>Histogram</MenuItem>                                    \r\n                                        <MenuItem disabled={Boolean(timeSeriesMessage)} value={vizSubTypes.timeSeries}>Time Series</MenuItem>\r\n                                        <MenuItem disabled={Boolean(depthProfileMessage)} value={vizSubTypes.depthProfile}>Depth Profile</MenuItem>\r\n                                        <MenuItem disabled={Boolean(sparseMapMessage)} value={vizSubTypes.sparse}>Sparse Map</MenuItem>\r\n                                    </MUISelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2}>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={() => this.props.onVisualize()}\r\n                                    disabled={!selectedVizType || parametersAreInvalid || !fields}\r\n                                >\r\n                                    Visualize\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3}>\r\n                                <Typography variant='caption' color='error' className={classes.generalMessage}>\r\n                                    {generalPreventMessage || generalWarnMessage}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataRetrievalForm));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { InsertChartOutlined, Delete, Web, Language } from '@material-ui/icons';\r\n\r\nimport { clearCharts } from '../Redux/actions/visualization';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    clearCharts\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n    panelPaper: {\r\n        width: '27px',\r\n        // height: '240px',\r\n        padding: theme.spacing(0.3),\r\n        position:'fixed',\r\n        left: '15px',\r\n        bottom: '40vh',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer',\r\n        borderRadius: '5%',\r\n        backgroundColor: 'transparent'\r\n    },\r\n\r\n    iconButton: {\r\n        padding: theme.spacing(0.4),\r\n        marginLeft: '-2px',\r\n        marginTop: '-1px'\r\n    }\r\n})\r\n\r\nconst VizControlPanel = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.panelPaper}>\r\n                <Grid container direction='column'>\r\n\r\n                    <Tooltip title={props.showUI ? 'Hide UI' : 'Show UI'}>\r\n                        <IconButton color='secondary' onClick={props.toggleShowUI} className={classes.iconButton}>\r\n                            <Web/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    {props.showCharts? \r\n                        <Tooltip title='Show Globe'>\r\n                            <IconButton color='secondary' onClick={props.toggleChartView} className={classes.iconButton}>\r\n                                <Language/>\r\n                            </IconButton>\r\n                        </Tooltip>                \r\n                    :\r\n                        <Tooltip title='Show Charts'>\r\n                            <IconButton color={props.charts.length ? 'primary' : 'secondary'} onClick={props.toggleChartView} className={classes.iconButton}>\r\n                                <InsertChartOutlined/>\r\n                            </IconButton>\r\n                        </Tooltip>            \r\n                    }\r\n\r\n                    <Tooltip title='Clear Visualizations'>\r\n                        <IconButton color='secondary' onClick={props.clearCharts} className={classes.iconButton}>\r\n                            <Delete/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VizControlPanel));\r\n","import React, { useState } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Palette } from '@material-ui/icons';\r\n\r\nconst styles = theme => ({\r\n    colorscaleMenu: {\r\n        maxHeight: '400px'\r\n    },\r\n\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst colorscaleOptions = [\r\n    'Greys', \r\n    'YlGnBu', \r\n    'Greens', \r\n    'YlOrRd',\r\n    'Bluered',\r\n    'RdBu',\r\n    'Reds',\r\n    'Blues',\r\n    'Picnic',\r\n    'Rainbow',\r\n    'Portland',\r\n    'Jet',\r\n    'Hot',\r\n    'Blackbody',\r\n    'Earth',\r\n    'Electric',\r\n    'Viridis',\r\n    'Cividis'];\r\n\r\nconst PaletteControls = (props) => {\r\n\r\n    const { classes, disabled } = props;\r\n\r\n    const [paletteAnchorElement, setPaletteAnchorElement] = useState(null);\r\n\r\n    if(disabled){\r\n        return (\r\n            <Tooltip title='Change Palette'>\r\n                <div className={classes.iconButtonWrapper}>\r\n                <IconButton disabled={disabled} color='secondary' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                    <Palette/>\r\n                </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    let handleOpenPalette = (event) => {\r\n        setPaletteAnchorElement(event.currentTarget);\r\n    }\r\n\r\n    let handlePaletteChoice = (option) => {\r\n        setPaletteAnchorElement(null);\r\n        props.handlePaletteChoice(option);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title='Change Palette'>\r\n                <IconButton disabled={disabled} color='secondary' onClick={handleOpenPalette} className={classes.iconButton}>\r\n                    <Palette/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={paletteAnchorElement}\r\n                keepMounted\r\n                open={Boolean(paletteAnchorElement)}\r\n                onClose={() => setPaletteAnchorElement(null)}\r\n                className={classes.colorscaleMenu}\r\n            >\r\n                {colorscaleOptions.map((option, index) => (\r\n                    <MenuItem onClick={() => handlePaletteChoice(option)} key={index}>{option}</MenuItem>\r\n                ))}\r\n                \r\n            </Menu>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PaletteControls);","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { SwapVert } from '@material-ui/icons';\r\n\r\nconst styles = theme => ({\r\n    popover: {\r\n        width: '470px',\r\n        height: '110px',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5)\r\n    },\r\n\r\n        iconButtonWrapper: {\r\n            display: 'inline-block'\r\n        }\r\n\r\n})\r\n\r\nconst ZValueControls = (props) => {\r\n\r\n    const { classes, extent, zValues, handleZValueConfirm, disabled } = props;\r\n\r\n    if(disabled){\r\n        return (\r\n            <Tooltip title='Change Colorscale Range'>\r\n                <div className={classes.iconButtonWrapper}>\r\n                <IconButton disabled>\r\n                    <SwapVert/>\r\n                </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    const [popoverAnchorElement, setPopoverAnchorElement] = React.useState(null);\r\n    const [localZMin, setLocalZMin] = React.useState(zValues[0]);\r\n    const [localZMax, setLocalZMax] = React.useState(zValues[1]);\r\n\r\n    const handleClose = () => {\r\n        setPopoverAnchorElement(null);\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        handleZValueConfirm([localZMin, localZMax]);\r\n        handleClose();\r\n    }\r\n\r\n    const checkLocalZMin = () => {\r\n        if(localZMin < extent[0]) return `Minimum value is ${extent[0]}`;\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMin)) return 'Invalid value';\r\n    }\r\n\r\n    const checkLocalZMax = () => {\r\n        if(localZMax > extent[1]) return `Maximum value is ${extent[1]}`;\r\n        if(localZMin > localZMax) return `Min must be higher than max`;\r\n        if(!/^[-+]?[0-9]*\\.?[0-9]+$/.test(localZMax)) return 'Invalid value';\r\n    }\r\n\r\n    const validations = [\r\n        checkLocalZMin(),\r\n        checkLocalZMax()\r\n    ];\r\n\r\n    const [\r\n        zMinMessage,\r\n        zMaxMessage\r\n    ] = validations;\r\n\r\n    const open = Boolean(popoverAnchorElement);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title='Change Colorscale Range'>\r\n                <IconButton disabled={disabled} color='secondary' onClick={(event) => setPopoverAnchorElement(event.currentTarget)}>\r\n                    <SwapVert/>\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={popoverAnchorElement}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.popover}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMinMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-min-input' >Min</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-min-input'\r\n                                    value={localZMin}\r\n                                    onChange={(event) => setLocalZMin(event.target.value)}\r\n                                    aria-describedby='local-zmin-error'\r\n                                    labelWidth={50}\r\n                                    name='local-zmin'\r\n                                />\r\n                                <FormHelperText id='local-zmin-error'>{zMinMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                variant='outlined'\r\n                                error={Boolean(zMaxMessage)} \r\n                            >\r\n                                <InputLabel htmlFor='z-max-input' >Max</InputLabel>\r\n                                <OutlinedInput\r\n                                    id='z-max-input'\r\n                                    value={localZMax}\r\n                                    onChange={(event) => setLocalZMax(event.target.value)}\r\n                                    aria-describedby=\"local-zmax-error\"\r\n                                    labelWidth={50}\r\n                                    name='local-zmax'\r\n                                />\r\n                                <FormHelperText id=\"local-zmax-error\">{zMaxMessage}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={7}>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button onClick={handleClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={handleConfirm}\r\n                                disabled={Boolean(zMinMessage || zMaxMessage)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid> \r\n\r\n                        <Grid item xs={1}>\r\n                        </Grid>\r\n\r\n                    </Grid>                    \r\n                </div>\r\n            </Popover>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ZValueControls);","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { DateRange, Waves, CloudDownload } from '@material-ui/icons';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport PaletteControls from './PaletteControls';\r\nimport ZValueControls from './ZValueControls';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst ChartControlPanel = (props) => {\r\n\r\n    const { \r\n        classes, \r\n        handlePaletteChoice, \r\n        onToggleSplitByDate, \r\n        onToggleSplitByDepth, \r\n        downloadCsv, \r\n        splitByDepth, \r\n        splitByDate,\r\n        handleZValueConfirm,\r\n        zValues,\r\n        extent\r\n    } = props;\r\n\r\n    console.log(downloadCsv)\r\n    return (\r\n        <div className={classes.buttonBlock}>\r\n\r\n            <Tooltip title={splitByDate ? 'Merge Dates' : 'Split By Date'}>\r\n                <div className={classes.iconButtonWrapper}>\r\n                    <IconButton color='secondary' className={classes.iconButton} \r\n                        disabled={!Boolean(onToggleSplitByDate)} \r\n                        onClick={onToggleSplitByDate}\r\n                    >\r\n                        <DateRange/>\r\n                    </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n\r\n            <Tooltip title={splitByDepth ? 'Merge Depths' : 'Split By Depth'}>\r\n                <div className={classes.iconButtonWrapper}>\r\n                    <IconButton color='secondary' className={classes.iconButton} \r\n                        disabled={!Boolean(onToggleSplitByDepth)} \r\n                        onClick={onToggleSplitByDepth}\r\n                    >\r\n                        <Waves/>\r\n                    </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n\r\n            <Tooltip title='Download CSV'>\r\n                <div className={classes.iconButtonWrapper}>\r\n                    <IconButton color='secondary' onClick={downloadCsv} className={classes.iconButton} >\r\n                        <CloudDownload/>\r\n                    </IconButton>\r\n                </div>\r\n            </Tooltip>\r\n\r\n            <ZValueControls\r\n                disabled={!Boolean(handleZValueConfirm)}\r\n                zValues={zValues}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                extent={extent}\r\n            />\r\n            \r\n            <PaletteControls\r\n                disabled={!Boolean(handlePaletteChoice)}\r\n                handlePaletteChoice={handlePaletteChoice}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ChartControlPanel);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\nimport vizSubTypes from '../../Enums/visualizationSubTypes';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nconst handleContourMap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        \r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Merged Depths' : \r\n            depths[index % depths.length].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'contour',\r\n                    contours: {\r\n                        coloring: palette,\r\n                        showlabels: true,\r\n                        labelfont: {\r\n                            family: 'Raleway',\r\n                            size: 12,\r\n                            color: 'white',\r\n                        },\r\n                        labelformat: '.2e'\r\n                    },\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    }\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {title: 'Longitude', color: '#ffffff'},\r\n                yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHistogram = (subsets, infoObject, splitByDate, splitByDepth, palette) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = !splitByDate ? 'Aggregated Time' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Aggregated Depth' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {\r\n                    x: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'histogram'\r\n                }\r\n            ]}\r\n            \r\n            key={index}\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}  ${date}`,\r\n                xaxis: {\r\n                    title: `${infoObject.parameters.fields} [${infoObject.metadata.Unit}]`,\r\n                    exponentformat: 'power',\r\n                    color: '#ffffff'\r\n                },\r\n                yaxis:{\r\n                    color: '#ffffff',\r\n                    title: 'Frequency'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst handleHeatmap = (subsets, infoObject, splitByDate, splitByDepth, palette, zMin, zMax) => {\r\n\r\n    const depths = Array.from(infoObject.depths).map(depth => parseFloat(depth));\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = !splitByDate ? 'Merged Dates' : \r\n            splitByDepth ? dates[Math.floor(index/depths.length)].slice(0, 10) : dates[index].slice(0, 10);\r\n        const depth = !infoObject.hasDepth ? 'Surface' : \r\n            !splitByDepth ? 'Merged Depths' : \r\n            splitByDate ? depths[index % depths.length].toFixed(2) + 'm depth' : depths[index].toFixed(2) + 'm depth';\r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zMin,\r\n                    zmax: zMax,\r\n                    zsmooth: subset.length < 20000 ? 'fast' : 'false',\r\n                    x: infoObject.lons,\r\n                    y: infoObject.lats,\r\n                    z: subset,\r\n                    connectgaps: false,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    colorscale: palette,\r\n                    autocolorscale: false,\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    },\r\n                    \r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${depth}   ${date}`,\r\n                xaxis: {\r\n                    title: 'Longitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: 'Latitude[\\xB0]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />)\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    },\r\n    iconButtonWrapper: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SpaceTimeChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data, subType } = props.chart;\r\n    const { dates, depths, extent } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitByDepth, setSplitByDepth] = useState(false);\r\n    const [subTypeState, setSubTypeState] = useState(subType);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const subSets = data.generatePlotData(subTypeState, splitByDate, splitByDepth);\r\n    var plots;\r\n\r\n    switch(subTypeState){\r\n        case vizSubTypes.contourMap:\r\n            plots = handleContourMap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.heatmap:\r\n            plots = handleHeatmap(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        case vizSubTypes.histogram:\r\n            plots = handleHistogram(subSets, data, splitByDate, splitByDepth, palette, zMin, zMax);\r\n            break;\r\n\r\n        default:\r\n            plots = '';\r\n            break;        \r\n\r\n    }\r\n\r\n    const onToggleSplitByDate = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDate(!splitByDate);\r\n        }, 100)\r\n    }\r\n\r\n    const onToggleSplitByDepth = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setSplitByDepth(!splitByDepth);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                onToggleSplitByDepth={depths.size===1 ? null : onToggleSplitByDepth}\r\n                onToggleSplitByDate={dates.size===1 ? null : onToggleSplitByDate}\r\n                splitByDepth={splitByDepth}\r\n                splitByDate={splitByDate}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SpaceTimeChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst TimeSeriesChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, dates, parameters, metadata } = data;\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }  \r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                  x: dates,\r\n                  y: variableValues,\r\n                  error_y: {\r\n                    type: 'data',\r\n                    array: stds,\r\n                    opacity: 0.2,\r\n                    color: 'gray',\r\n                    visible: true\r\n                  },\r\n                  name: parameters.fields,\r\n                  type: 'scatter',\r\n                  line: {color: '#e377c2'},\r\n                  },\r\n                ]}\r\n\r\n                layout= {{\r\n                    title: `${parameters.fields}[${metadata.Unit}]  ${parameters.dt1} to ${parameters.dt2}`,\r\n\r\n                    paper_bgcolor: colors.backgroundGray,\r\n                    font: {\r\n                        color: '#ffffff'\r\n                    },\r\n                  xaxis: {\r\n                      title: 'Time',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: parameters.fields,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: [\r\n                    {\r\n                        text: `Source: ${metadata.Distributor.length < 30 ? \r\n                                metadata.Distributor : \r\n                                metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(TimeSeriesChart));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst DepthProfileChart = (props) => {\r\n\r\n    const { classes, setLoadingMessage } = props;\r\n    const { data } = props.chart;\r\n    const { stds, variableValues, depths, parameters, metadata } = data;\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }    \r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            <Plot\r\n                style= {{\r\n                    position: 'relative',\r\n                    display:'inline-block'\r\n                }}\r\n\r\n                data={[\r\n                  {\r\n                  x: depths,\r\n                  y: variableValues,\r\n                  error_y: {\r\n                    type: 'data',\r\n                    array: stds,\r\n                    opacity: 0.2,\r\n                    color: 'gray',\r\n                    visible: true\r\n                  },\r\n                  name: parameters.fields,\r\n                  type: 'scatter',\r\n                  line: {color: '#e377c2'},\r\n                  },\r\n                ]}\r\n\r\n                layout= {{\r\n                    title: `${parameters.fields}[${metadata.Unit}]  ${parameters.depth1} to ${parameters.depth2} meters`,\r\n\r\n                    paper_bgcolor: colors.backgroundGray,\r\n                    font: {\r\n                        color: '#ffffff'\r\n                    },\r\n                  xaxis: {\r\n                      title: 'Depth[m]',\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  yaxis: {\r\n                      title: `${parameters.fields}[${metadata.Unit}]`,\r\n                      color: '#ffffff',\r\n                      exponentformat: 'power'\r\n                    },\r\n                  annotations: [\r\n                    {\r\n                        text: `Source: ${metadata.Distributor.length < 30 ? \r\n                                metadata.Distributor : \r\n                                metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n                }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(DepthProfileChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nconst handleSectionMap = (subsets, infoObject, splitByDate, splitBySpace, orientation) => {\r\n\r\n    const dates = Array.from(infoObject.dates);\r\n\r\n    const distinctMeridiansOrParallelsForSplitting = \r\n        orientation === 'zonal' ?\r\n        infoObject.latsDistinct : \r\n        infoObject.lonsDistinct;\r\n\r\n    const xAxisLabel = \r\n        orientation === 'zonal' ?\r\n        'Longitude' : \r\n        'Latitude';\r\n\r\n    return subsets.map((subset, index) => {\r\n\r\n        const variableName = infoObject.parameters.fields;\r\n        const date = dates.length < 2 ?\r\n            dates[0] :\r\n            !splitByDate ? \r\n                'Merged Dates' : \r\n                splitBySpace ? \r\n                    dates[Math.floor(index/distinctMeridiansOrParallelsForSplitting.length)].slice(0, 10) : \r\n                    dates[index];\r\n                \r\n        const spaceTitle = distinctMeridiansOrParallelsForSplitting.length <= 1 ? distinctMeridiansOrParallelsForSplitting[0] : \r\n            !splitBySpace ? `Merged ${xAxisLabel}s` : \r\n            `${distinctMeridiansOrParallelsForSplitting[index % distinctMeridiansOrParallelsForSplitting.length]} ${orientation === 'zonal' ? \r\n            'Parallel' :\r\n            'Meridian'}`\r\n \r\n\r\n        return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n\r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: infoObject.zMin,\r\n                    zmax: infoObject.zMax,\r\n                    zsmooth: subset.length < 20000 ? 'best' : 'fast',\r\n                    x: orientation === 'zonal' ? infoObject.lons : infoObject.lats,\r\n                    y: orientation === 'zonal' ? infoObject.zonalPlotDepths : infoObject.meridionalPlotDepths,\r\n                    z: subset,\r\n                    name: infoObject.parameters.fields,\r\n                    type: 'heatmapgl',\r\n                    connectgaps: true,\r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat:'power'\r\n                    }\r\n                }\r\n            ]}                \r\n            key={index}\r\n\r\n            layout= {{\r\n                font: {color: '#ffffff'},\r\n                title: `${variableName}[${infoObject.metadata.Unit}]  ${spaceTitle}   ${date}`,\r\n                xaxis: {\r\n                    title: `${xAxisLabel}[\\xB0]`, \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                yaxis: {\r\n                    title: 'Depth[m]', \r\n                    color: '#ffffff',\r\n                    exponentformat: 'power'\r\n                },\r\n                paper_bgcolor: colors.backgroundGray,\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}   \r\n        />\r\n        )\r\n    })\r\n}\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst SectionMapChart = (props) => {\r\n\r\n    const { classes } = props;\r\n    const { data } = props.chart;\r\n    const { dates, extent, latsDistinct, lonsDistinct } = data;\r\n\r\n    const [splitByDate, setSplitByDate] = useState(false);\r\n    const [splitBySpace, setSplitBySpace] = useState(false);\r\n    const [orientation, setOrientation] = useState(data.orientation);\r\n    const [palette, setPalette] = useState('heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n    const [zMin, zMax] = zValues;\r\n\r\n    const numSpaceSplits = \r\n        orientation === 'zonal' ?\r\n        latsDistinct.length : \r\n        lonsDistinct.length\r\n\r\n    const splitOrientation = orientation === 'zonal' ?\r\n        'Longitudes' : \r\n        'Latitudes'\r\n\r\n    const alternateOrientation = orientation === 'zonal' ? 'meridional' : 'zonal';\r\n\r\n    const subsets = data.generatePlotData(orientation, splitByDate, splitBySpace);\r\n    var plots = handleSectionMap(subsets, data, splitByDate, splitBySpace, orientation);\r\n\r\n    const downloadCsv = () => {\r\n        setLoadingMessage('Processing Data');\r\n    \r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => setLoadingMessage(''));\r\n    \r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    const handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonBlock}>\r\n                {/* <Button {...buttonProps} disabled={dates.size === 1} onClick={() => setSplitByDate(!splitByDate)}>{splitByDate ? 'Merge Dates' : 'Split By Date'}</Button>\r\n                <Button {...buttonProps} disabled={numSpaceSplits === 1} onClick={() => setSplitBySpace(!splitBySpace)}>{splitBySpace ? `Merge ${splitOrientation}` : `Split By ${splitOrientation}`}</Button>\r\n                <Button {...buttonProps} disabled={numSpaceSplits === 1} onClick={() => setOrientation(alternateOrientation)}>Switch to {alternateOrientation}</Button> */}\r\n            <ChartControlPanel\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                downloadCsv={downloadCsv}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            </div>\r\n            {plots}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SectionMapChart));","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport ChartControlPanel from './ChartControlPanel';\r\n\r\nimport colors from '../../Enums/colors';\r\n\r\nimport { setLoadingMessage } from '../../Redux/actions/ui'; \r\n\r\nconst handleSparseMap = (infoObject, palette, zValues) => {\r\n\r\n    return (\r\n        <Plot\r\n            style= {{\r\n                position: 'relative',\r\n                display:'inline-block'\r\n            }}\r\n            \r\n            data={[\r\n                {   \r\n                    zauto: false,\r\n                    zmin: zValues[0],\r\n                    zmax: zValues[1],\r\n                    lon: infoObject.lons,\r\n                    lat: infoObject.lats,\r\n                    z: infoObject.variableValues,\r\n                    zmin:'',\r\n                    autocolorscale: false,\r\n                    colorscale: palette,\r\n                    radius: 6,                    \r\n                    name: infoObject.parameters.fields,\r\n                    type: 'densitymapbox',\r\n                    \r\n                    colorbar: {\r\n                        title: {\r\n                            text: `[${infoObject.metadata.Unit}]`\r\n                        },\r\n                        exponentformat: 'power'\r\n                    },\r\n                }\r\n            ]}\r\n\r\n            layout= {{\r\n                width: 600,\r\n                height: 400,\r\n                font: {color: '#ffffff'},\r\n                title: `${infoObject.parameters.fields}[${infoObject.metadata.Unit}]`,\r\n                // xaxis: {title: 'Longitude', color: '#ffffff'},\r\n                // yaxis: {title: 'Latitude', color: '#ffffff'},\r\n                paper_bgcolor: colors.backgroundGray,\r\n\r\n                mapbox: {\r\n                    style: 'basic',\r\n                    center: {\r\n                        lon: (infoObject.parameters.lon1 + infoObject.parameters.lon2) / 2,\r\n                        lat: (infoObject.parameters.lat1 + infoObject.parameters.lat2) / 2\r\n                    }\r\n                },\r\n\r\n                annotations: [\r\n                    {\r\n                        text: `Source: ${infoObject.metadata.Distributor.length < 30 ? \r\n                            infoObject.metadata.Distributor : \r\n                            infoObject.metadata.Distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                        font: {\r\n                            color: 'white',\r\n                            size: 10\r\n                        },\r\n                        xref: 'paper',\r\n                        yref: 'paper',\r\n                        yshift: -202,\r\n                        showarrow: false,\r\n                    }\r\n                ]\r\n\r\n            }}\r\n            \r\n            config={{\r\n                mapboxAccessToken:\r\n                  \"pk.eyJ1IjoiZGVuaG9sdHoiLCJhIjoiY2p1ZW9obTNhMDVxZjQzcDRvMmdlcDN2aiJ9.HvLaX2bcradeE5T-lpTc8w\"\r\n              }}\r\n        />)\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white'\r\n    },\r\n    buttonBlock: {\r\n        display:'block'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setLoadingMessage\r\n}\r\n\r\nconst buttonProps = {\r\n    size: 'small',\r\n    color: 'primary',\r\n    variant: 'contained'\r\n}\r\n\r\nconst SparseMap = (props) => {\r\n\r\n    const { classes } = props;\r\n\r\n    const { data } = props.chart;\r\n    const [palette, setPalette] = useState('Heatmap');\r\n    const [zValues, setZValues] = useState([data.zMin, data.zMax]);\r\n\r\n    const plot = handleSparseMap(data, palette, zValues)\r\n\r\n    let handlePaletteChoice = (option) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setPalette(option);\r\n        }, 100)\r\n    }\r\n\r\n    let handleZValueConfirm = (values) => {\r\n        props.setLoadingMessage('Re-rendering');\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n            setZValues(values);\r\n        }, 100)\r\n    }\r\n\r\n    const downloadCsv = () => {\r\n        props.setLoadingMessage('Processing Data');\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(() => props.setLoadingMessage(''));\r\n\r\n            let csv = data.generateCsv();\r\n            const blob = new Blob([csv], {type: 'text/csv'});\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.setAttribute('hidden', '');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', `${data.parameters.fields}.csv`);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChartControlPanel\r\n                handlePaletteChoice={handlePaletteChoice}\r\n                handleZValueConfirm={handleZValueConfirm}\r\n                zValues={zValues}\r\n                extent={data.extent}\r\n                downloadCsv={downloadCsv}\r\n            />\r\n            {plot}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SparseMap));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport colors from '../Enums/colors';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nimport SpaceTimeChart from './ChartComponents/SpaceTimeChart';\r\nimport TimeSeriesChart from './ChartComponents/TimeSeriesChart';\r\nimport DepthProfileChart from './ChartComponents/DepthProfileChart';\r\nimport SectionMapChart from './ChartComponents/SectionMapChart';\r\nimport SparseMap from './ChartComponents/SparseMap';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsContainer: {\r\n        margin: '300px 0 0 100px'\r\n    },\r\n\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n    }\r\n})\r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n        const { classes, charts } = this.props;\r\n\r\n        return (\r\n            <div className={classes.chartsContainer}>\r\n                {charts.map((chart, index) => {\r\n                    switch(chart.data.parameters.spName){\r\n                        case storedProcedures.spaceTime:\r\n                          if(chart.subType === vizSubTypes.sparse) return <SparseMap chart={chart} key={index}/>\r\n                          else return <SpaceTimeChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.timeSeries:\r\n                          return <TimeSeriesChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.depthProfile:\r\n                          return <DepthProfileChart chart={chart} key={index}/>\r\n\r\n                        case storedProcedures.sectionMap:\r\n                          return <SectionMapChart chart={chart} key={index}/>\r\n                        \r\n                        default:\r\n                          return '';\r\n                  }\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() { \r\n        var measurementWidget = new this.props.esriModules.AreaMeasurement3D({view: this.props.view})\r\n        measurementWidget.watch('viewModel.measurement.area.text', () => {\r\n            this.props.updateDomainFromMap(measurementWidget.viewModel.tool.model.viewData.positionsGeographic);\r\n        })    \r\n    \r\n        this.props.view.ui.add(measurementWidget, 'bottom-right');\r\n        this.props.view.ui.add(new this.props.esriModules.Search({view: this.props.view}),'bottom-right')\r\n        // this.props.view.ui.add(new this.props.esriModules.Fullscreen({view: this.props.view}),'bottom-left')\r\n        return null;\r\n    }\r\n}\r\n\r\nclass MapContainer extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ basemap: 'satellite' }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3\r\n                    }}\r\n                >\r\n                    <UiComponents\r\n                        updateDomainFromMap={this.props.updateDomainFromMap}\r\n                        esriModules={{...this.props.esriModules}}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                    />\r\n                </Scene>    \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MapContainer));","const cleanSPParams = ({depth1, depth2, dt1, dt2, fields, lat1, lat2, lon1, lon2, spName, tableName}) => ({\r\n    depth1: parseFloat(depth1),\r\n    depth2: parseFloat(depth2),\r\n    dt1: dt1,\r\n    dt2: dt2,\r\n    fields,\r\n    lat1: parseFloat(lat1),\r\n    lat2: parseFloat(lat2),\r\n    lon1: parseFloat(lon1),\r\n    lon2: parseFloat(lon2),\r\n    spName,\r\n    tableName,\r\n})\r\n\r\nexport default cleanSPParams;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport storedProcedures from '../Enums/storedProcedures';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport DataRetrievalForm from './DataRetrievalForm';\r\nimport VizControlPanel from './VizControlPanel';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { loadModules } from '@esri/react-arcgis';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport Charts from './Charts';\r\nimport MapContainer from './MapContainer';\r\nimport colors from '../Enums/colors'\r\nimport cleanSPParams from '../Utility/cleanSPParams';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: storedProcedures.sectionMap,\r\n            subType: vizSubTypes.sectionMap\r\n        }, \r\n        [vizSubTypes.timeSeries]: {\r\n            sp: storedProcedures.timeSeries,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: storedProcedures.depthProfile,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.heatmap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.heatmap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.contourMap\r\n        },\r\n        [vizSubTypes.sparse]: {\r\n            sp: storedProcedures.spaceTime,\r\n            subType: vizSubTypes.sparse\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    loadingMessage: state.loadingMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    background: {\r\n        backgroundColor: colors.backgroundGray\r\n    }\r\n})\r\n\r\nconst parseDate = (date) => {\r\n    var mm = date.getUTCMonth() + 1; // getMonth() is zero-based\r\n    var dd = date.getUTCDate();\r\n\r\n    return [date.getUTCFullYear(),\r\n        (mm>9 ? '' : '0') + mm,\r\n        (dd>9 ? '' : '0') + dd\r\n        ]\r\n        .join('-');    \r\n}\r\n\r\nclass Visualization extends Component {\r\n\r\n    state = {\r\n        filteredData: [],\r\n        opacity: 1,\r\n        showCharts: false,\r\n        showUI: true,\r\n        surfaceOnly: false,\r\n        irregularSpatialResolution: false,\r\n\r\n        spParams: {\r\n            tableName: '',\r\n            fields: null,\r\n            depth1: 0,\r\n            depth2: 3,\r\n            dt1: '2010-01-01',\r\n            dt2: '2010-01-01',\r\n            lat1: 0,\r\n            lat2: 0,\r\n            lon1: 0,\r\n            lon2: 0,\r\n            selectedVizType: ''\r\n        }\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'Fullscreen',\r\n            'EsriSceneView',\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/widgets/Fullscreen',\r\n            'esri/views/SceneView',\r\n        ]);\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleStartDateChange = (date) => {\r\n        let dateString = date instanceof Date ? parseDate(date) : date;\r\n        this.setState({...this.state, spParams: {...this.state.spParams, dt1:dateString}});\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        let dateString = date instanceof Date ? parseDate(date) : date;\r\n        this.setState({...this.state, spParams: {...this.state.spParams, dt2:dateString}});\r\n    }\r\n\r\n    onVisualize = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, selectedVizType } = this.state.spParams;\r\n    \r\n        let mapping = mapVizType(selectedVizType);\r\n        let parameters = cleanSPParams({\r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        });\r\n\r\n        let payload = {\r\n            parameters,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        if(fields) {\r\n            let surfaceOnly = !fields.data.Depth_Min;\r\n            let irregularSpatialResolution = fields.data.Spatial_Resolution === 'Irregular';\r\n\r\n            let depth1 = fields.data.Depth_Min || 0;\r\n            let depth2 = fields.data.Depth_Max || 0;\r\n            let lat1 = fields.data.Lat_Min;\r\n            let lat2 = fields.data.Lat_Max;\r\n            let lon1 = fields.data.Lon_Min;\r\n            let lon2 = fields.data.Lon_Max;\r\n            let dt1 = fields.data.Time_Min;\r\n            let dt2 = fields.data.Time_Max;\r\n\r\n            let selectedVizType = irregularSpatialResolution ? vizSubTypes.sparse : '';\r\n            \r\n            this.setState({...this.state,\r\n                surfaceOnly,\r\n                irregularSpatialResolution,\r\n                spParams: {...this.state.spParams, \r\n                    fields, \r\n                    tableName: fields.data.Table_Name,\r\n                    depth1,\r\n                    depth2,\r\n                    lat1,\r\n                    lat2,\r\n                    lon1,\r\n                    lon2,\r\n                    dt1,\r\n                    dt2,\r\n                    selectedVizType\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    toggleChartView = () => {\r\n        this.setState({...this.state, showCharts: !this.state.showCharts});\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromMap = (coordinates) => {\r\n        if(!coordinates || !coordinates.length) return null;\r\n        \r\n        var lons = coordinates.map(a => a[0]);\r\n        var lats = coordinates.map(a => a[1]);\r\n\r\n        var newCoordinates = {\r\n            lat1: Math.min(...lats).toFixed(3),\r\n            lat2: Math.max(...lats).toFixed(3),\r\n            lon1: Math.min(...lons).toFixed(3),\r\n            lon2: Math.max(...lons).toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, showUI: true, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        return (\r\n            <div className={classes.background}>\r\n                <DataRetrievalForm \r\n                    handleChange={this.handleChange} \r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                   {...this.state.spParams}\r\n                   surfaceOnly={this.state.surfaceOnly}\r\n                   irregularSpatialResolution={this.state.irregularSpatialResolution}\r\n                />\r\n                <VizControlPanel\r\n                    toggleChartView={this.toggleChartView}\r\n                    toggleShowUI={this.toggleShowUI}\r\n                    showCharts={this.state.showCharts}\r\n                    showUI={this.state.showUI}\r\n                />\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer \r\n                            updateDomainFromMap={this.updateDomainFromMap}\r\n                            // measurementPositions={[[lon1, lat1, 0], [lon1, lat2, 0], [lon2, lat2, 0], [lon2, lat1, 0]]}\r\n                            esriModules={this.state.esriModules}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                {this.props.storedProcedureRequestState === states.inProgress && <LoadingSpinner customVariant='centered' size='36'/>}\r\n\r\n                <div className={this.state.showCharts ? '' : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password, or <Link onClick={this.handleClose} component={RouterLink} to={{pathname: '/register'}}>Register.</Link>\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Spinner from 'react-spinkit';\r\n\r\nconst styles = theme => ({\r\n    loader: {\r\n        backgroundColor: '#000000',\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        opacity: 0.5,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        zIndex: 9998\r\n    },\r\n\r\n    loaderContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItem: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 9999,\r\n        opacity: 1\r\n    },\r\n\r\n    spinnerText: {\r\n        zIndex: 10000,\r\n        color: '#FF8000',\r\n        marginTop: '25px',\r\n        opacity: 1\r\n    },\r\n\r\n    spinner: {\r\n        opacity: 1\r\n    }\r\n})\r\n\r\nconst LoadingOverlay = (props) => {\r\n    const { classes, loadingMessage } = props;\r\n\r\n    if(loadingMessage && loadingMessage.length){\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div className={classes.loaderContent}>\r\n                    <Spinner className={classes.spinner} color='#FF8000' name=\"ball-pulse-rise\" fadeIn='quarter'/>\r\n                    <Typography variant='h6' className={classes.spinnerText}>{loadingMessage}</Typography>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return '';\r\n\r\n}\r\n\r\nexport default withStyles(styles)(LoadingOverlay);","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper';\r\nimport LoadingOverlay from './LoadingOverlay';\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog,\r\n    loadingMessage: state.loadingMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n                <LoadingOverlay loadingMessage={this.props.loadingMessage}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React from 'react'\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\r\n\r\nimport Home from './Components/Home';\r\nimport Catalog from './Components/Catalog';\r\nimport Register from './Components/Register';\r\nimport Visualization from './Components/Visualization';\r\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\r\n\r\nexport default props => (\r\n    <BrowserRouter>\r\n      <GlobalUIComponentWrapper/>\r\n      <Switch>          \r\n        <Route exact path='/apikeymanagement' component={ Home } />\r\n        <Route exact path='/' component={ Catalog } />\r\n        <Route exact path='/register' component={ Register } />\r\n        <Route exact path='/visualization' component={ Visualization } />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport grey from '@material-ui/core/colors/grey';\n\nimport './App.scss';\nimport Routes from './routes';\n\nimport colors from './Enums/colors';\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: grey[800],\n      paper: grey[800]\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: grey[800],\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },    \n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    }\n  }\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  loadingMessage: state.loadingMessage\n})\n\nclass App extends Component {\n\n  componentDidCatch = (error, info) => {\n    console.log('Error:');\n    console.log(error);\n    console.log('Info');\n    console.log(info);\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <div className=\"App\">\n          <MuiThemeProvider theme={theme}>\n            <Routes />\n          </MuiThemeProvider>\n        </div>\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, null)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\n\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}