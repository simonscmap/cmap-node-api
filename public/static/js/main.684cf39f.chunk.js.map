{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/actionTypes/visualization.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/Reducers/visualization.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","Redux/actions/visualization.js","Enums/visualizationTypes.js","config.js","api.js","Redux/sagas.js","Redux/store.js","Components/LoadingSpinner.js","Components/TopNavBar.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/Home.js","Components/GridDetail.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Enums/visualizationSubTypes.js","Enums/colors.js","Components/TableStatsDialog.js","Components/DataRetrievalForm.js","Components/DebugButton.js","Components/ClearVisualizationsButton.js","Components/GoBackButton.js","Components/Charts.js","Components/ToggleChartViewButton.js","Components/ToggleHideUIButton.js","Components/MapContainer.js","Components/Visualization.js","routes.js","Components/LoginDialog.js","Components/SnackbarWrapper.js","Components/GlobalUIComponentWrapper.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","QUERY_REQUEST_SEND","STORED_PROCEDURE_REQUEST_SEND","GET_TABLE_STATS","initialState","catalog","snackbarIsOpen","snackbarMessage","user","JSON","parse","Cookies","get","apiKeys","clearLoginDialog","maps","charts","sampleData","queryRequestState","storedProcedureRequestState","getTableStatsRequestState","tableStats","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","keys","message","layers","concat","toConsumableArray","newLayer","mapInfo","chartInfo","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","retrievalRequestSend","catalogActionTypes","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","queryRequestSuccess","data","queryRequestProcessing","storedProcedureRequestSuccess","storedProcedureRequestFailure","storedProcedureRequestProcessing","storeSampleData","addMap","addChart","clearMaps","getTableStatsRequestProcessing","storeTableStats","types","map","chart","apiUrl","fetchOptions","credentials","postOptions","method","headers","Content-Type","storedProcedureParametersToUri","parameters","reduce","queryString","key","i","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","ndjsonParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","ndjson","on","push","sent","ok","abrupt","getReader","read","done","write","decode","value","stop","keyRetrieval","_callee2","_context2","json","keyCreation","_ref3","_callee3","description","_context3","trim","_x","apply","this","arguments","visualization","queryRequest","_ref4","_callee4","query","vizData","_context4","_x2","storedProcedureRequest","_ref5","_callee5","_context5","_x3","getTableStats","_ref6","_callee6","tableName","_context6","_x4","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchKeyRetrieval","watchKeyCreationRequest","watchQueryRequest","watchStoredProcedureRequest","watchGetTableStats","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_marked4","catalogActions","_marked5","_marked6","_context7","_marked7","_context8","visualizationActions","_marked8","_context9","console","log","fields","length","subType","vizTypes","_marked9","_context10","defineProperty","_marked10","_context11","takeLatest","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","visualizationActionTypes","_marked18","_context19","_marked19","_context20","_marked20","_context21","all","_marked21","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","withStyles","theme","centered","position","top","props","classes","react_default","createElement","CircularProgress","size","className","customVariant","mapDispatchToProps","TopNavBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleChange","event","setState","target","name","handleLogOut","clearState","username","password","getCurrentPath","pathname","beepBoop","set","AppBar","Toolbar","Tabs","onChange","Tab","component","Link","to","label","onClick","firstName","lastName","Component","connect","ownProps","withRouter","inlineBlock","display","keyCreationRequestSend","ApiKeyManagement","componentDidMount","handleClick","Fragment","Paper","root","elevation","Typography","variant","apiKeyTableHeader","Divider","Table","table","TableHead","TableRow","TableCell","align","TableBody","apiKey","index","Description","showChildOnHover","keyTableCell","Api_Key","Grid","container","alignItems","justify","spacing","item","TextField","margin","id","placeholder","descriptionField","Button","disabled","color","Components_LoadingSpinner","width","marginTop","paddingTop","minWidth","marginBottom","visibility","&:hover span","useEffect","Home","Components_TopNavBar","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","wrapper","height","infoCard","padding","gridClass","gridItem","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","variableDetailTable","marginLeft","marginRight","variableDetailTableRow","variableDetailTableCell","borderBottomColor","xs","src","imageSource","alt","dataSource","distributor","row","detailCellRendererParams","template","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","textAlign","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","handleColumnRowGroupChanged","columns","forEach","column","setColumnVisible","colId","render","gridPaper","gridSearch","autoFocus","InputLabelProps","shrink","gridWrapper","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","inputFieldState","Card","inputFieldInfo","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","email","getCardInfo","optional","institute","department","country","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper","Step","StepLabel","instructions","Components_RegistrationCard","button","buttonProgress","left","Register","Components_RegistrationStepper","subTypes","sectionMap","timeSeries","histogram","depthProfile","geospatialMap","contourMap","colors","orange","backgroundGray","aqua","variableInfo","Dialog","open","onClose","DialogTitle","variable","DialogContent","DialogContentText","longName","sensor","spatialResolution","temporalResolution","time","min","slice","max","lat","lon","depth","visualizationSpeedDialActions","icon","Map","vizSubTypes","Timeline","BarChart","Waves","Language","LeakAdd","Option","chunk_5d200a41_browser_esm","MenuList","_this$props","options","children","maxHeight","_getValue","getValue","slicedToArray","initialOffset","indexOf","dist_index_esm","style","backgroundColor","itemCount","itemSize","initialScrollOffset","_ref","DropdownIndicator","ArrowDropDown","SingleValue","DataRetrievalForm","componentDidUpdate","prevProps","search","addDocuments","filterVariables","variableWrapper","searchString","values","join","split","some","term","handleTableStatsDialogClose","tableStatsDialogIsOpen","handleTableStatsDialogOpen","handleVisualizationSpeedDialClose","visualizationSpeedDialOpen","handleVisualizationSpeedDialOpen","handleVisualizationSpeedDialClick","getSelectOptionsFromCatalogItems","items","onAutoSuggestChange","searchField","JsSearch","searchIndex","addIndex","_this2","_this$state","_this$props2","depth1","depth2","dt1","dt2","lat1","lat2","lon1","lon2","depthIsInvalid","latIsInvalid","lonIsInvalid","showUI","displayNone","Components_TableStatsDialog","assign","dataRetrievalFormPaper","shortenHeight","react_select_browser_esm","isLoading","components","IndicatorSeparator","isClearable","onInputChange","filterOption","variableSelect","escapeClearsValue","updateFields","styles","menu","provided","zIndex","input","fontFamily","control","border","&:hover","borderColor","&:focus-within","fontSize","noOptionsMessage","option","&:after","float","singleValue","paddingRight","primary25","primary","IconButton","LibraryBooks","datePickerGridSection","material_ui_pickers_esm","format","disableFuture","autoOk","handleStartDateChange","inputVariant","handleEndDateChange","SpeedDial","ariaLabel","ButtonProps","visualizeButton","visualizationSpeedDial","x","y","fill","fontVariant","visualizeButtonText","onBlur","onFocus","onMouseEnter","onMouseLeave","direction","SpeedDialAction","tooltipTitle","onVisualize","tooltipPlacement","dataRetrievalFormField","retrieveDataButton","borderRadius","palette","dominantBaseline","textAnchor","paddingLeft","buttonPaper","bottom","textDecoration","cursor","goBackText","statePieces","statePiece","clearCharts","Charts","processedCharts","metadata","z","contours","coloring","showlabels","labelfont","family","colorbar","text","unit","layout","xaxis","yaxis","handleContourMap","marker","handleHistogram","month","error_y","array","opacity","visible","line","handleTimeSeries","autorange","handleSectionMap","handleDepthProfile","handleGeospatialMap","chartsContainer","chartWrapper","react_plotly_default","Number","font","paper_bgcolor","annotations","xref","yref","yshift","showarrow","boxShadow","citation","right","ChartsText","childClass","numberOfCharts","showCharts","toggleChartView","ToggleChartViewButton_ChartsText","toggleShowUI","UiComponents","shouldComponentUpdate","nextProps","nextState","measurementWidget","esriModules","AreaMeasurement3D","view","watch","updateDomainFromMap","viewModel","tool","model","viewData","positionsGeographic","ui","add","Search","React","MapContainer","esm","mapProperties","basemap","viewProperties","center","zoom","MapContainer_UiComponents","measurementPositions","mapVizType","vizType","_mapping","sp","queryRequestSend","storedProcedureRequestSend","storedProcedureInfo","isNaN","parseDate","date","mm","getUTCMonth","dd","getUTCDate","getDate","getUTCFullYear","Visualization","filteredData","dateSliderPosition","pickedIndex","pickedLon","pickedLat","spParams","dateString","Date","parametersAreInvalid","_this$state$spParams","_this$state$spParams2","mapping","spName","handleDateSliderChange","pickedInfo","datum","handleOpacitySliderChange","coordinates","lons","lats","newCoordinates","Math","toFixed","esriModuleNames","loadModules","loadedModules","accumulator","currentValue","currentIndex","Components_DataRetrievalForm","Components_GoBackButton","Components_ToggleChartViewButton","ToggleHideUIButton","Components_DebugButton","Components_ClearVisualizationsButton","Components_MapContainer","Components_Charts","routes","react_router_dom","react_router","exact","path","userLoginRequestSend","LoginDialog","handleLogin","handleClose","aria-labelledby","onSubmit","e","preventDefault","DialogActions","snackbarClose","centerText","Snackbar","autoHideDuration","anchorOrigin","horizontal","vertical","loginDialogWasCleared","GlobalUIComponentWrapper","preProps","Components_LoginDialog","Components_SnackbarWrapper","createMuiTheme","typography","useNextVariants","contrastText","main","secondary","background","default","grey","paper","overrides","MuiIconButton","MuiToolbar","MuiOutlinedInput","&$focused","MuiTableCell","MuiFormControl","marginNormal","MuiDialogContentText","MuiDialogTitle","App","componentDidCatch","info","utils","DateFnsUtils","MuiThemeProvider","Components_GlobalUIComponentWrapper","hasError","LicenseManager","setLicenseKey","rootElement","document","getElementById","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.684cf39f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\nexport const LOGIN_DIALOG_WAS_CLEARED = 'LOGIN_DIALOG_WAS_CLEARED'\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    default: return state;\r\n  }\r\n}","export const QUERY_REQUEST_SEND = 'QUERY REQUEST SEND';\r\nexport const QUERY_REQUEST_SUCCESS = 'QUERY REQUEST SUCCESS';\r\nexport const QUERY_REQUEST_FAILURE = 'QUERY REQUEST FAILURE';\r\nexport const QUERY_REQUEST_PROCESSING = 'QUERY REQUEST PROCESSING';\r\n\r\nexport const STORED_PROCEDURE_REQUEST_SEND = 'STORED_PROCEDURE_REQUEST_SEND';\r\nexport const STORED_PROCEDURE_REQUEST_SUCCESS = 'STORED_PROCEDURE_REQUEST_SUCCESS';\r\nexport const STORED_PROCEDURE_REQUEST_FAILURE = 'STORED_PROCEDURE_REQUEST_FAILURE';\r\nexport const STORED_PROCEDURE_REQUEST_PROCESSING = 'STORED_PROCEDURE_REQUEST_PROCESSING';\r\n\r\nexport const ADD_MAP = 'ADD_MAP';\r\nexport const ADD_CHART = 'ADD_CHART';\r\n\r\nexport const ADD_LAYER = 'ADD_LAYER';\r\n\r\nexport const STORE_SAMPLE_DATA = 'STORE_SAMPLE_DATA';\r\n\r\nexport const CLEAR_CHARTS = 'CLEAR_CHARTS';\r\nexport const CLEAR_MAPS = 'CLEAR_MAPS';\r\n\r\nexport const GET_TABLE_STATS = 'GET_TABLE_STATS';\r\nexport const GET_TABLE_STATS_REQUEST_PROCESSING = 'GET_TABLE_STATS_REQUEST_PROCESSING';\r\nexport const STORE_TABLE_STATS = 'STORE_TABLE_STATS';\r\n","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport visualization from './visualization';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    clearLoginDialog: false,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null,\r\n\r\n    // Visualization state pieces\r\n    maps: [],\r\n    charts: [],\r\n    sampleData: null,\r\n    queryRequestState: null,\r\n    storedProcedureRequestState: null,\r\n    getTableStatsRequestState: null,\r\n    tableStats: {}\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui, visualization);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null, apiKeys: null, clearLoginDialog: true}\r\n    case userActionTypes.LOGIN_DIALOG_WAS_CLEARED: return {...state, clearLoginDialog: false}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';","import states from '../../asyncRequestStates';\r\nimport * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport default function(state, action) {\r\n    switch(action.type) {\r\n        case visualizationActionTypes.QUERY_REQUEST_PROCESSING: return {...state, queryRequestState: states.inProgress};\r\n        case visualizationActionTypes.QUERY_REQUEST_FAILURE: return {...state, queryRequestState: states.failed};\r\n        case visualizationActionTypes.QUERY_REQUEST_SUCCESS: return {...state, queryRequestState: states.succeeded};\r\n        \r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING: return {...state, storedProcedureRequestState: states.inProgress}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE: return {...state, storedProcedureRequestState: states.failed}\r\n        case visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS: return {...state, storedProcedureRequestState: states.succeeded}\r\n\r\n\r\n        case visualizationActionTypes.ADD_LAYER: return { // Not currently in use\r\n            ...state,\r\n            layers: [...state.layers, action.payload.newLayer]\r\n        }\r\n\r\n        case visualizationActionTypes.STORE_SAMPLE_DATA: return {\r\n            ...state,\r\n            sampleData: action.payload.sampleData\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_MAP: return {\r\n            ...state,\r\n            maps: [...state.maps, action.payload.mapInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.ADD_CHART: return {\r\n            ...state,\r\n            charts: [...state.charts, action.payload.chartInfo]\r\n        }\r\n\r\n        case visualizationActionTypes.CLEAR_CHARTS: return {...state, charts: []}\r\n\r\n        case visualizationActionTypes.CLEAR_MAPS: return {...state, maps: []}\r\n\r\n        case visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING: return {...state, getTableStatsRequestState: states.inProgress}\r\n\r\n        case visualizationActionTypes.STORE_TABLE_STATS: return {...state,\r\n            getTableStatsRequestState: states.succeeded,\r\n            tableStats: {\r\n                ...state.tableStats,\r\n                ...action.payload.tableStats\r\n            }\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\nexport const loginDialogWasCleared = () => ({\r\n    type: userActionTypes.LOGIN_DIALOG_WAS_CLEARED\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload:\r\n    {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})","import * as visualizationActionTypes from '../actionTypes/visualization';\r\n\r\nexport const queryRequestSend = (query) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SEND,\r\n    payload: {\r\n        query\r\n    }\r\n})\r\n\r\nexport const queryRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const queryRequestFailure = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_FAILURE\r\n})\r\n\r\nexport const queryRequestProcessing = () => ({\r\n    type: visualizationActionTypes.QUERY_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storedProcedureRequestSend = (storedProcedureInfo) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND,\r\n    payload: {...storedProcedureInfo}\r\n})\r\n\r\nexport const storedProcedureRequestSuccess = (data) => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_SUCCESS,\r\n    payload: {\r\n        data\r\n    }\r\n})\r\n\r\nexport const storedProcedureRequestFailure = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_FAILURE\r\n})\r\n\r\nexport const storedProcedureRequestProcessing = () => ({\r\n    type: visualizationActionTypes.STORED_PROCEDURE_REQUEST_PROCESSING\r\n})\r\n\r\nexport const addLayer = (newLayer) => ({\r\n    type: visualizationActionTypes.ADD_LAYER,\r\n    payload: {\r\n        newLayer\r\n    }\r\n})\r\n\r\nexport const storeSampleData = sampleData => ({\r\n    type: visualizationActionTypes.STORE_SAMPLE_DATA,\r\n    payload: {\r\n        sampleData\r\n    }\r\n})\r\n\r\nexport const addMap = (mapInfo) => ({\r\n    type: visualizationActionTypes.ADD_MAP,\r\n    payload: {\r\n        mapInfo\r\n    }\r\n})\r\n\r\nexport const addChart = (chartInfo) => ({\r\n    type: visualizationActionTypes.ADD_CHART,\r\n    payload: {\r\n        chartInfo\r\n    }\r\n})\r\n\r\nexport const clearCharts = () => ({\r\n    type: visualizationActionTypes.CLEAR_CHARTS\r\n})\r\n\r\nexport const clearMaps = () => ({\r\n    type: visualizationActionTypes.CLEAR_MAPS\r\n})\r\n\r\nexport const getTableStats = (tableName) => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS,\r\n    payload: {\r\n        tableName\r\n    }\r\n})\r\n\r\nexport const getTableStatsRequestProcessing = () => ({\r\n    type: visualizationActionTypes.GET_TABLE_STATS_REQUEST_PROCESSING\r\n})\r\n\r\nexport const storeTableStats = (tableStats) => ({\r\n    type: visualizationActionTypes.STORE_TABLE_STATS,\r\n    payload: {\r\n        tableStats\r\n    }\r\n})","const types = {\r\n    map: 'map',\r\n    chart: 'chart'\r\n}\r\n\r\nexport default types;","// export const apiUrl = 'https://simonscmap.com'\r\n// export const apiUrl = 'http://localhost:8080';\r\nexport const apiUrl = 'https://simonscmap.dev';","import ndjson from 'ndjson';\r\n\r\nimport { apiUrl } from './config';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst storedProcedureParametersToUri = (parameters) => {\r\n    return Object.keys(parameters).reduce(function (queryString, key, i) {\r\n        return `${queryString}${i===0 ? '' : '&&'}${key}=${parameters[key]}`;\r\n      }, '');\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\napi.visualization = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n    ndjsonParser.on('data', data => {\r\n        catalog.push(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/catalog/', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\napi.visualization.queryRequest = async(query) => {\r\n    const decoder = new TextDecoder();\r\n    let vizData = [];\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n\r\n    ndjsonParser.on('data', data => {\r\n        vizData.push(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/dataretrieval/query?query=' + query, fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return vizData;\r\n}\r\n\r\napi.visualization.storedProcedureRequest = async(parameters) => {\r\n    const decoder = new TextDecoder();\r\n    let vizData = [];\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n\r\n    ndjsonParser.on('data', data => {\r\n        vizData.push(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/dataretrieval/sp?' + storedProcedureParametersToUri(parameters), fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n\r\n    return vizData;\r\n}\r\n\r\napi.visualization.getTableStats = async(tableName) => {\r\n    let response = await fetch(apiUrl + '/dataretrieval/tablestats?table=' + tableName, fetchOptions);\r\n    if(response.ok){\r\n        return await response.json();\r\n    } else return false;\r\n}\r\n\r\nexport default api;","import { put, takeLatest, all, call } from 'redux-saga/effects';\r\nimport Cookies from 'js-cookie';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\nimport * as visualizationActions from './actions/visualization';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog';\r\nimport * as visualizationActionTypes from './actionTypes/visualization';\r\n\r\nimport vizTypes from '../Enums/visualizationTypes';\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){\r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(action){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* queryRequest(action){\r\n    yield put(visualizationActions.queryRequestProcessing());\r\n    let result = yield call(api.visualization.queryRequest, action.payload.query);\r\n    yield put(visualizationActions.storeSampleData(result));\r\n    yield put(visualizationActions.queryRequestSuccess());\r\n}\r\n\r\nfunction* storedProcedureRequest(action){\r\n    console.log(action);\r\n    console.log(`Retrieving ${action.payload.parameters.fields}`);\r\n    yield put(visualizationActions.storedProcedureRequestProcessing());\r\n    let result = yield call(api.visualization.storedProcedureRequest, action.payload.parameters);\r\n    console.log(`Got ${action.payload.parameters.fields}`);\r\n    if(!result){\r\n        yield put(visualizationActions.storedProcedureRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen(\"Request failed\"));\r\n    } else {\r\n        if(result.length > 0){\r\n            yield put(visualizationActions.storedProcedureRequestSuccess());\r\n            yield put(interfaceActions.snackbarOpen(`${action.payload.subType} ${action.payload.parameters.fields} is ready`));\r\n            \r\n            if(action.payload.type === vizTypes.chart){\r\n                console.log('Added chart');\r\n                yield put(visualizationActions.addChart({...action.payload, data: result}));\r\n            } else if (action.payload.type === vizTypes.map){\r\n                yield put(visualizationActions.clearMaps());\r\n                console.log('Added map');\r\n                yield put(visualizationActions.addMap({...action.payload, data: result}));           \r\n            }            \r\n        } else {\r\n            yield put(interfaceActions.snackbarOpen(`No data found for ${action.payload.parameters.fields} in the requested ranges.`));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* getTableStats(action){\r\n    yield put(visualizationActions.getTableStatsRequestProcessing());\r\n    let result = yield call(api.visualization.getTableStats, action.payload.tableName);\r\n    if(result) {\r\n        yield put(visualizationActions.storeTableStats({[action.payload.tableName]:result}));\r\n    } else {\r\n        yield put(interfaceActions.snackbarOpen(`Failed to retrieve table stats for ${action.payload.tableName}`)); \r\n    }\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n\r\nfunction* watchQueryRequest(){\r\n    yield takeLatest(visualizationActionTypes.QUERY_REQUEST_SEND, queryRequest);\r\n}\r\n\r\nfunction* watchStoredProcedureRequest(){\r\n    yield takeLatest(visualizationActionTypes.STORED_PROCEDURE_REQUEST_SEND, storedProcedureRequest);\r\n}\r\n\r\nfunction* watchGetTableStats(){\r\n    yield takeLatest(visualizationActionTypes.GET_TABLE_STATS, getTableStats);\r\n}\r\n  \r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest(),\r\n        watchQueryRequest(),\r\n        watchStoredProcedureRequest(),\r\n        watchGetTableStats()\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n    centered: {\r\n        position: 'fixed',\r\n        top: '300px'\r\n    }\r\n})\r\n\r\nconst LoadingSpinner = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n    <CircularProgress size={props.size} className={classes[props.customVariant]}/>\r\n)}\r\n\r\nexport default withStyles(styles)(LoadingSpinner);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults, snackbarOpen } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return state;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults,\r\n    snackbarOpen\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    getCurrentPath = () => {\r\n        switch(this.props.location.pathname){\r\n            case '/apikeymanagement': return 0;\r\n            case '/': return 1;\r\n            case '/visualization': return 2;\r\n            case '/register': return 3;\r\n            default: return 0;\r\n        }\r\n    };\r\n\r\n    // Debug button\r\n    beepBoop = () => {\r\n        console.log(this.props);\r\n        Cookies.set('hi','there');\r\n        Cookies.get();\r\n    };\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <Tabs value={this.getCurrentPath() || 0} onChange={this.handleChange}>\r\n                        <Tab key='0' component={Link} to={{pathname: '/apikeymanagement'}} label='API Keys' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='1' component={Link} to={{pathname: '/'}} label='Catalog' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='2' component={Link} to={{pathname: '/visualization'}} label='Visualization' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        {this.props.user ? '' : <Tab key='3' component={Link} to={{pathname: '/register'}} label='Register' onClick={this.props.restoreInterfaceDefaults}/>}\r\n                        {this.props.user ? '' : <Tab key='4' label='Log In' onClick={this.props.showLoginDialog}/>}\r\n                        {this.props.user ? <Tab key='5' label={`Welcome ${this.props.user.firstName} ${this.props.user.lastName}!`}/> : ''}\r\n                        {this.props.user ? <Tab key='4' label='Log Out' onClick={this.handleLogOut}/> : ''}                        \r\n                        <Tab key='6' label='Debug' onClick={this.beepBoop}/>\r\n                    </Tabs>                    \r\n                </Toolbar>\r\n                {/* <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/> */}\r\n            </AppBar>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing(3),\r\n        margin:'auto',\r\n        paddingTop: theme.spacing(2)\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>       \r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root} elevation={6}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Keys\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root} elevation={6}>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={4}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n            </Paper>\r\n            </React.Fragment>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.showLoginDialog();\r\n    })\r\n    \r\n    return (\r\n        <p>This feature requires login. Please log in.</p>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginRequiredPrompt);\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\nimport TopNavBar from './TopNavBar';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.user) return <LoginRequiredPrompt/>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {this.props.user && <ApiKeyManagement/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'variable'],\r\n    ['Spatial Resolution', 'spatialResolution'],\r\n    ['Temporal Resolution', 'temporalResolution'],\r\n    ['Unit', 'unit'],\r\n    ['Process Level', 'processLevel'],\r\n    ['Study Domain', 'studyDomain'],\r\n    ['SQL Table Name', 'tableName']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        margin: '-10px auto 0px auto',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing(2),\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing(2),\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    vizSampleImage: {\r\n        width: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    },\r\n    variableDetailTableCell: {\r\n        color: '#FFF6EC',\r\n        borderBottomColor: 'black'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n    console.log(props.data);\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={8} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={imageSource + 'viz_sample.png'} alt=\"Sample Visualization\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.datasetDescription}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.dataSource}\r\n                        </Typography> <br></br>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable} size='small'>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{row[0]}</TableCell>\r\n                                    <TableCell className={classes.variableDetailTableCell}>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\n// import 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst detailCellRendererParams = {\r\n  template:\r\n    '<div style=\"height: 100%; box-sizing: border-box\" class=\"testClass\">' +\r\n      '  <div style=\"height: 10%;\">Call Details</div>' +\r\n      '  <div ref=\"eDetailGrid\" style=\"height: 90%;\"></div>' +\r\n    \"</div>\"\r\n}\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"longName\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"tableName\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"datasetName\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"studyDomain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"processLevel\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"spatialResolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"temporalResolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '60vh', \r\n    width: '90%',\r\n    margin: '0 auto'\r\n  },\r\n\r\n  gridSearch: {\r\n    margin: '0 auto 30px auto'\r\n  },\r\n\r\n  gridPaper: {\r\n    margin: '60px 5vw',\r\n    padding: '30px'\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n        <Paper elevation={12} className={classes.gridPaper}>\r\n          <TextField\r\n            className={classes.gridSearch}\r\n            autoFocus={true}\r\n            margin=\"normal\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            variant='outlined'\r\n            name='filterText'\r\n            value={this.state.filterText}\r\n            onChange={this.handleChange}\r\n            label=\"Variable Search\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n          />\r\n          <div className={classes.gridWrapper + \" ag-theme-material\"}>\r\n            <AgGridReact\r\n              // General settings\r\n              columnDefs={columnDefs}\r\n              defaultColDef={defaultColDef}\r\n              rowData={this.props.catalog}\r\n              onGridReady={this.onGridReady}\r\n              suppressDragLeaveHidesColumns= {true}\r\n\r\n              //Settings related to grouping functionality\r\n              rowGroupPanelShow='always'\r\n              groupMultiAutoColumn={true}\r\n              onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n              autoGroupColumnDef={autoGroupColumnDef}\r\n              enableBrowserTooltips={true}\r\n\r\n              // Settings related to master/detail\r\n              masterDetail={true}\r\n              frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n              detailCellRenderer=\"myDetailCellRenderer\"\r\n              detailRowHeight={280}\r\n              detailCellRendererParams={detailCellRendererParams}\r\n            />\r\n          </div>\r\n        </Paper>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog) return <AGGridWrapper catalog={this.props.catalog}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n        else if(this.props.catalogRequestState === states.failed) return <p>Failed to get catalog. Have you tried turning it off and then on again?</p>\r\n        else return <p>I don't know how we got here. Please debug the catalog retrieval process.</p>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={1}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\nimport TopNavBar from './TopNavBar';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing(1),\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopNavBar/>\r\n                <div className={classes.root}>\r\n                    \r\n                    <Stepper activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                        );\r\n                    })}\r\n                    </Stepper>\r\n                    <div>\r\n                    {activeStep === steps.length ? (\r\n                        <div>\r\n                        <Typography className={classes.instructions}>\r\n                            Registration Completed!\r\n                        </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <RegistrationCard \r\n                                inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                                inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div>\r\n                                <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.handleBack}\r\n                                className={classes.button}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleNext}\r\n                                    className={classes.button}\r\n                                    disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                                {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                                {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                                {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","const subTypes= {\r\n    sectionMap: 'Section Map',\r\n    timeSeries: 'Time Series',\r\n    histogram: 'Histogram',\r\n    depthProfile: 'Depth Profile',\r\n    geospatialMap: 'Geospatial Map',\r\n    contourMap: 'Contour Map'\r\n}\r\n\r\nexport default subTypes;","const colors = {\r\n    orange: '#FF8000',\r\n    backgroundGray: '#424242',\r\n    aqua: '#22A3B9'\r\n}\r\n\r\nexport default colors;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nconst TableStatsDialog = (props) => {\r\n    console.log(props);\r\n\r\n    const { classes, variableInfo, tableStats } = props;\r\n\r\n    if(!variableInfo || !tableStats) return '';\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle>{variableInfo.variable}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {variableInfo.longName}\r\n                </DialogContentText>\r\n                <Table size='small'>\r\n                    <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Sensor</TableCell>\r\n                                <TableCell>{variableInfo.sensor}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Spatial Resolution</TableCell>\r\n                                <TableCell>{variableInfo.spatialResolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Resolution</TableCell>\r\n                                <TableCell>{variableInfo.temporalResolution}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage Begin</TableCell>\r\n                                <TableCell>{tableStats.time.min ? tableStats.time.min.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Temporal Coverage End</TableCell>\r\n                                <TableCell>{tableStats.time.max ? tableStats.time.max.slice(0,10) : 'Irregular'}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage Begin</TableCell>\r\n                                <TableCell>{tableStats.lat.min}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lat Coverage End</TableCell>\r\n                                <TableCell>{tableStats.lat.max}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage Begin</TableCell>\r\n                                <TableCell>{tableStats.lon.min}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Lon Coverage End</TableCell>\r\n                                <TableCell>{tableStats.lon.max}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage Begin</TableCell>\r\n                                <TableCell>{tableStats.depth.min === null ? 'Surface Only' : tableStats.depth.min}</TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell>Depth Coverage End</TableCell>\r\n                                <TableCell>{tableStats.depth.min === null ? 'Surface Only' : tableStats.depth.max}</TableCell>\r\n                            </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TableStatsDialog);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport * as JsSearch from 'js-search';\r\nimport { FixedSizeList as List } from \"react-window\";\r\n\r\n// import createFilterOptions from \"react-select-fast-filter-options\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/TextField';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport { \r\n    BarChart,\r\n    Map,\r\n    Timeline,\r\n    Waves,\r\n    Language,\r\n    LeakAdd,\r\n    ArrowDropDown,\r\n    LibraryBooks\r\n} from '@material-ui/icons';\r\n\r\n// import vizTypes from '../Enums/visualizationTypes';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport states from '../asyncRequestStates';\r\nimport colors from '../Enums/colors';\r\nimport { Button } from '@material-ui/core';\r\nimport TableStatsDialog from './TableStatsDialog';\r\n\r\nconst styles = (theme) => ({\r\n    dataRetrievalFormPaper: {\r\n        width: '1200px',\r\n        height: '205px',\r\n        padding: theme.spacing(2.5),\r\n        position:'fixed',\r\n        top: '10px',\r\n        left: '50%',\r\n        marginLeft: '-600px',\r\n        zIndex: 2,\r\n        paddingTop: theme.spacing(1.5),\r\n    },\r\n\r\n    dataRetrievalFormField: {\r\n        padding:`0px ${theme.spacing(1)}`\r\n    },\r\n\r\n    retrieveDataButton: {\r\n        margin:'10px auto'\r\n    },\r\n\r\n    variableSelect: {\r\n        margin: '0 30px 20px 30px'\r\n    },\r\n\r\n    visualizationSpeedDial: {\r\n        position: 'relative',\r\n        top: '5px',\r\n        left: '30px'\r\n    },\r\n\r\n    visualizeButton: {\r\n        borderRadius:'10%',\r\n        width: '100px',\r\n        height:'40px',\r\n        margin: 'auto 0',\r\n        backgroundColor: theme.palette\r\n    },\r\n\r\n    visualizeButtonText: {\r\n        dominantBaseline: \"middle\",\r\n        textAnchor: \"middle\"\r\n    },\r\n\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n\r\n    datePickerGridSection: {\r\n        paddingLeft: '40px !important',\r\n        paddingRight: '40px !important'\r\n    },\r\n\r\n    shortenHeight: {\r\n        height: '60px'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    catalog: state.catalog,\r\n    catalogRequestState: state.catalogRequestState,\r\n    tableStats: state.tableStats\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nconst visualizationSpeedDialActions = [\r\n    {icon: <Map/>, name: vizSubTypes.sectionMap },\r\n    {icon: <Timeline/>, name: vizSubTypes.timeSeries},\r\n    {icon: <BarChart/>, name: vizSubTypes.histogram},\r\n    {icon: <Waves/>, name: vizSubTypes.depthProfile},\r\n    {icon: <Language/>, name: vizSubTypes.geospatialMap},\r\n    {icon: <LeakAdd/>, name: vizSubTypes.contourMap}\r\n];\r\n\r\nconst Option = (props) => {\r\n    return (\r\n        <div>\r\n            <components.Option {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Replace react-select menulist with react-window (virtualized) fixed size list\r\nconst height = 35;\r\nclass MenuList extends Component {\r\n    render() {\r\n        console.log('Rendering menulist');\r\n        const { options, children, maxHeight, getValue } = this.props;\r\n        const [value] = getValue();\r\n        const initialOffset = options.indexOf(value) * height;\r\n        \r\n        return (\r\n            <List\r\n                style={{backgroundColor: colors.backgroundGray}}\r\n                height={(options.length === 0 ? 35 : maxHeight > height * options.length ? height * options.length : maxHeight) || 35}\r\n                itemCount={children.length}\r\n                itemSize={height}\r\n                initialScrollOffset={initialOffset || 0}\r\n            >\r\n                {({ index, style }) => <div style={style}>{children[index]}</div>}\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\n// Replace react-select dropdown area with material version\r\nconst DropdownIndicator = (props) => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <ArrowDropDown />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n\r\n// Replace react-select selected option\r\nconst SingleValue = (props) => {\r\n    return (\r\n        <components.SingleValue {...props}/>\r\n    )\r\n}\r\n\r\nclass DataRetrievalForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var search = new JsSearch.Search('variable');\r\n        search.searchIndex = new JsSearch.UnorderedSearchIndex();\r\n        search.addIndex('variable');\r\n        search.addIndex('make');\r\n        search.addIndex('sensor');\r\n        search.addIndex('dataSource');\r\n        search.addIndex('processLevel');\r\n        search.addIndex('longName');\r\n        search.addIndex('keywords');\r\n        if(props.catalog) search.addDocuments(props.catalog);\r\n\r\n        this.state = {\r\n            visualizationSpeedDialOpen: false,\r\n            tableStatsDialogIsOpen: false,\r\n            search,\r\n            searchField: '',\r\n        }\r\n    }\r\n\r\n    // When we get the catalog add them to the search\r\n    // This is not reactive - it mutates the search piece of state in \r\n    // a way that is not visible to react and will not trigger a re-render.\r\n    componentDidUpdate = (prevProps) => {\r\n        if(!(prevProps.catalog && prevProps.catalog.length) && (this.props.catalog && this.props.catalog.length)){\r\n            this.state.search.addDocuments(this.props.catalog);\r\n            this.setState({search: this.state.search})\r\n        }\r\n    }\r\n\r\n    // Includes every variable that returns true when filtering\r\n    // variableWrapper parameter is {label, value, variable object}\r\n    filterVariables = (variableWrapper, searchString) => {\r\n\r\n        // Create one string from all column values (using Boolean to remove falsey elements)\r\n        let values = Object.values(variableWrapper.data).filter(Boolean).join(' ');\r\n\r\n        let searchTerms = searchString.split(' ');\r\n\r\n        // array.some method will return a true as soon as we failed to\r\n        // find one search term, which we negate.\r\n        return !searchTerms.some(term => values.indexOf(term) === -1)\r\n    }\r\n\r\n    handleTableStatsDialogClose = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: false})\r\n    }\r\n\r\n    handleTableStatsDialogOpen = () => {\r\n        this.setState({...this.state, tableStatsDialogIsOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClose = () => {\r\n        this.setState({visualizationSpeedDialOpen: false});\r\n    }\r\n\r\n    handleVisualizationSpeedDialOpen = () => {\r\n        this.setState({visualizationSpeedDialOpen: true});\r\n    }\r\n\r\n    handleVisualizationSpeedDialClick = () => {\r\n        this.setState({visualizationSpeedDialOpen: !this.state.visualizationSpeedDialOpen});\r\n    }\r\n\r\n    getSelectOptionsFromCatalogItems = (items) => {\r\n        return items.map(item => ({\r\n            value: item.variable,\r\n            label: item.variable === item.longName ? item.variable : item.variable + ' : ' + item.longName,\r\n            data: item\r\n        })) || []\r\n    }\r\n\r\n    onAutoSuggestChange = (searchString, action) => {\r\n        if(action.action === 'input-change') this.setState({...this.state, searchField: searchString});\r\n        if(action.action ==='set-value' || action.action === 'menu-close') this.setState({...this.state, searchField: ''});\r\n    }\r\n    \r\n    render() {      \r\n        const { search, searchField } = this.state;\r\n        \r\n        const { classes, \r\n            tableName,\r\n            fields, \r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            catalog,\r\n            depthIsInvalid,\r\n            latIsInvalid,\r\n            lonIsInvalid,\r\n            catalogRequestState\r\n        } = this.props;\r\n\r\n        const options = searchField && catalog ? this.getSelectOptionsFromCatalogItems(search.search(searchField)) \r\n            : catalog ? this.getSelectOptionsFromCatalogItems(catalog) \r\n            : []\r\n                \r\n        const tableStats = {\r\n            tableName,\r\n            tableStats: tableName && this.props.tableStats[tableName],\r\n            variableInfo: fields && fields.data\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.showUI ? '' : classes.displayNone}>\r\n                <TableStatsDialog\r\n                    open={this.state.tableStatsDialogIsOpen}\r\n                    onClose={this.handleTableStatsDialogClose}\r\n                    {...tableStats}\r\n                />\r\n                <Paper className={classes.dataRetrievalFormPaper}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={11} className={classes.shortenHeight}>\r\n                            <Select\r\n                                isLoading = {catalogRequestState === states.inProgress}\r\n                                components={{\r\n                                    IndicatorSeparator:'',\r\n                                    DropdownIndicator,\r\n                                    Option,\r\n                                    MenuList,\r\n                                    SingleValue,\r\n                                }}\r\n                                isClearable\r\n                                onInputChange={this.onAutoSuggestChange}\r\n                                filterOption={null}\r\n                                className={classes.variableSelect}\r\n                                autoFocus\r\n                                escapeClearsValue\r\n                                name=\"fields\"\r\n                                label=\"Variables\"\r\n                                options={options}\r\n                                onChange={this.props.updateFields}\r\n                                value={fields}\r\n                                placeholder=\"Variable Search\"\r\n                                styles={{\r\n                                    menu: provided => ({ ...provided, zIndex: 9999 }),\r\n\r\n                                    input: provided => ({...provided,\r\n                                        color: 'white',\r\n                                        fontFamily: '\"Lato\", sans-serif'\r\n                                    }),\r\n\r\n                                    control: provided => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        border: '1px solid #333333',\r\n                                        '&:hover': { borderColor: 'white' },\r\n                                        '&:focus-within': { borderColor: colors.orange },\r\n                                    }),\r\n\r\n                                    placeholder: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        fontSize: '14px'\r\n                                    }),\r\n\r\n                                    noOptionsMessage: provided => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: colors.orange,\r\n                                        backgroundColor: colors.backgroundGray\r\n                                    }),\r\n\r\n                                    option: (provided, state) => ({...provided,\r\n                                        backgroundColor: '#424242',\r\n                                        color: state.data.data.sensor === 'Satellite' ? '#1acf02' : state.data.data.sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        '&:hover': { backgroundColor: '#383838' },\r\n                                        '&:after': { \r\n                                            fontFamily: \"Material Icons\", \r\n                                            content: state.data.data.sensor === 'Satellite' ? '\"room\"' : state.data.data.sensor === 'Blend' ? '\"computer\"' : '\"directions_boat\"', \r\n                                            fontSize: '18px',\r\n                                            // position: 'relative',\r\n                                            // left: '20px',\r\n                                            // top:'2px',\r\n                                            float: 'left'\r\n\r\n                                        },\r\n                                    }),\r\n\r\n                                    singleValue: (provided, state) => ({...provided,\r\n                                        fontFamily: '\"Lato\", sans-serif',\r\n                                        color: state.data.data.sensor === 'Satellite' ? '#1acf02' : state.data.data.sensor === 'Blend' ? '#fce803' : '#009fd4',\r\n                                        paddingRight: '20px',\r\n                                        '&:after': { \r\n                                            fontFamily: \"Material Icons\", \r\n                                            content: state.data.data.sensor === 'Satellite' ? '\"room\"' : state.data.data.sensor === 'Blend' ? '\"computer\"' : '\"directions_boat\"', \r\n                                            fontSize: '18px',\r\n                                            position: 'relative',\r\n                                            left: '8px',\r\n                                            top: '3px'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n                                    colors: {\r\n                                    ...theme.colors,\r\n                                    // Background color of hovered options\r\n                                    primary25: '#e0e0e0',\r\n                                    primary: '#212121',\r\n                                    },\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={1}>\r\n                            <IconButton\r\n                                disabled={!this.props.tableStats[this.props.tableName]}\r\n                                onClick={this.handleTableStatsDialogOpen}\r\n                            >\r\n                                <LibraryBooks/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date\"\r\n                                    name=\"dt1\"\r\n                                    format='yyyy-MM-dd'\r\n                                    disableFuture\r\n                                    autoOk\r\n                                    value={dt1}\r\n                                    onChange={this.props.handleStartDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3} className={classes.datePickerGridSection}>\r\n                                <KeyboardDatePicker\r\n                                    placeholder='yyyy-MM-dd'\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date\"\r\n                                    name=\"dt2\"\r\n                                    format='yyyy-MM-dd'\r\n                                    disableFuture\r\n                                    autoOk\r\n                                    value={dt2}\r\n                                    onChange={this.props.handleEndDateChange}\r\n                                    inputVariant='outlined'\r\n                                    variant='inline'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startDepth\"\r\n                                    label=\"Start Depth(m)\"\r\n                                    name=\"depth1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={depthIsInvalid(this.props.depth1)}\r\n                                    value={depth1}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endDepth\"\r\n                                    label=\"End Depth(m)\"\r\n                                    name=\"depth2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={depthIsInvalid(this.props.depth2)}\r\n                                    value={depth2}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startLat\"\r\n                                    label=\"Start Latitude(deg)\"\r\n                                    name=\"lat1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={latIsInvalid(lat1)}\r\n                                    value={lat1}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endLat\"\r\n                                    label=\"End Latitude(deg)\"\r\n                                    name=\"lat2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={latIsInvalid(lat2)}\r\n                                    value={lat2}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"startLon\"\r\n                                    label=\"Start Longitude(deg)\"\r\n                                    name=\"lon1\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={lonIsInvalid(lon1)}\r\n                                    value={lon1}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>  \r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    id=\"endLon\"\r\n                                    label=\"End Longitude(deg)\"\r\n                                    name=\"lon2\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={lonIsInvalid(lon2)}\r\n                                    value={lon2}\r\n                                    onChange={this.props.handleChange}\r\n                                    variant='outlined'\r\n                                />\r\n                            </Grid>   \r\n                        </Grid>\r\n                        <SpeedDial\r\n                            ariaLabel=\"Visualization Speed Dial\"\r\n                            disabled\r\n                            ButtonProps={{\r\n                                variant: 'round',\r\n                                classes: {\r\n                                    root: classes.visualizeButton\r\n                                },\r\n                                color: 'secondary'\r\n                            }}\r\n                            className={classes.visualizationSpeedDial}\r\n                            icon={<svg height=\"30\" width=\"200\">\r\n                                    <text x=\"50%\" y=\"50%\" fill='white' fontVariant='normal' className={classes.visualizeButtonText}>Visualize</text>\r\n                                </svg>}\r\n                            onBlur={this.handleVisualizationSpeedDialClose}\r\n                            onClick={this.handleVisualizationSpeedDialClick}\r\n                            onClose={this.handleVisualizationSpeedDialClose}\r\n                            onFocus={this.handleVisualizationSpeedDialOpen}\r\n                            onMouseEnter={this.handleVisualizationSpeedDialOpen}\r\n                            onMouseLeave={this.handleVisualizationSpeedDialClose}\r\n                            open={this.state.visualizationSpeedDialOpen}\r\n                            direction= 'right'\r\n                        >\r\n                            {visualizationSpeedDialActions.map(action => (                                   \r\n                                <SpeedDialAction\r\n                                    key={action.name}\r\n                                    icon={action.icon}\r\n                                    tooltipTitle={action.name}\r\n                                    onClick={() => this.props.onVisualize(action.name)}\r\n                                    tooltipPlacement='bottom'\r\n                                />\r\n                            ))}\r\n                        </SpeedDial>                            \r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DataRetrievalForm));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    ...state\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        bottom: '10px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst DebugButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    const logState = () => {\r\n        props.statePieces.forEach(statePiece => {\r\n            console.log(statePiece);\r\n            console.log(props[statePiece]);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={logState}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Debug</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DebugButton));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { clearCharts, clearMaps } from '../Redux/actions/visualization';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    clearCharts,\r\n    clearMaps\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '250px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst ClearVisualizationsButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    const clearVisualizations = () => {\r\n        props.clearCharts();\r\n        props.clearMaps();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={clearVisualizations}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Clear</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ClearVisualizationsButton));\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '10px',\r\n        zIndex: 2,\r\n        textDecoration:'none'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst GoBackButton = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} component={Link} to={{pathname: '/'}}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>Go Back</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(GoBackButton);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\nimport { Paper, Typography } from '@material-ui/core';\r\n\r\nimport colors from '../Enums/colors';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    chartsContainer: {\r\n        margin: '260px 0 0 100px'\r\n    },\r\n\r\n    chartWrapper: {\r\n        display: 'inline-block',\r\n        backgroundColor: colors.backgroundGray,\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        margin: '20px',\r\n        color: 'white',\r\n        backgroundColor: colors.backgroundGray\r\n    },\r\n\r\n    citation: {\r\n        position: 'relative',\r\n        bottom: '20px',\r\n        right: '9px',\r\n        display: 'table',\r\n        margin: '0 auto 0 auto'\r\n    }\r\n})\r\n\r\nconst handleContourMap = (chart) => ({\r\n    parameters: chart.parameters,\r\n    metadata: chart.metadata,\r\n    subType: chart.subType,\r\n    data:[\r\n        {\r\n            x: chart.data.map(row => row.lon),\r\n            y: chart.data.map(row => row.lat),\r\n            z: chart.data.map(row => row[chart.parameters.fields]),\r\n            name: chart.parameters.fields,\r\n            type: 'contour',\r\n            contours: {\r\n                coloring: 'heatmap',\r\n                showlabels: true,\r\n                labelfont: {\r\n                    family: 'Raleway',\r\n                    size: 12,\r\n                    color: 'white',\r\n                }\r\n            },\r\n            colorbar: {\r\n                title: {\r\n                    text: `${chart.metadata.unit}`\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    layout: {\r\n        xaxis: {title: 'Longitude'},\r\n        yaxis: {title: 'Latitude'}\r\n    }\r\n})\r\n\r\nconst handleHistogram = (chart) => ({     \r\n        parameters: chart.parameters,\r\n        metadata: chart.metadata,   \r\n        subType: chart.subType,\r\n        data: [\r\n            {\r\n            x: chart.data.map(row => row[chart.parameters.fields]),\r\n            name: chart.parameters.fields,\r\n            type: 'histogram',\r\n            marker: {color: '#17becf'}\r\n            }\r\n        ],\r\n        layout: {\r\n            xaxis: {title: `${chart.metadata.unit}`}\r\n        }          \r\n})\r\n\r\nconst handleTimeSeries = (chart) => ({\r\n    parameters: chart.parameters,\r\n    metadata: chart.metadata,\r\n    subType: chart.subType,\r\n    data: [\r\n      {\r\n      x: chart.data.map(row => row.time || row.month),\r\n      y: chart.data.map(row => row[chart.parameters.fields]),\r\n      error_y: {\r\n        type: 'data',\r\n        array: chart.data.map(row => row[chart.parameters.fields + '_std']),\r\n        opacity: 0.2,\r\n        color: 'gray',\r\n        visible: true\r\n      },\r\n      name: chart.parameters.fields,\r\n      type: 'scatter',\r\n      line: {color: '#e377c2'},\r\n      },\r\n    ],\r\n    layout: {\r\n      xaxis: {title: chart.data[0].time ? 'Time' : 'Month'},\r\n      yaxis: {title: chart.parameters.fields}\r\n    }\r\n  })\r\n\r\nconst handleSectionMap = (chart) => ({\r\n    parameters: chart.parameters,\r\n    metadata: chart.metadata,\r\n    subType: chart.subType,\r\n    data: [\r\n      {\r\n      x: chart.data.map(row => row.lat),\r\n      y: chart.data.map(row => row.depth),\r\n      z: chart.data.map(row => row[chart.parameters.fields]),\r\n      name: chart.parameters.fields,\r\n      type: 'heatmap',\r\n      }\r\n    ],\r\n    layout: {\r\n      xaxis: {title: 'Latitude'},\r\n      yaxis: {autorange: 'reversed', title: 'Depth [m]'}\r\n    }\r\n  })\r\n\r\nconst handleDepthProfile = (chart) => ({\r\n    parameters: chart.parameters,\r\n    metadata: chart.metadata,\r\n    subType: chart.subType,\r\n    data: [\r\n      {\r\n        x: chart.data.map(row => row.depth),\r\n        y: chart.data.map(row => row[chart.parameters.fields]),\r\n        error_y: {\r\n          type: 'data',\r\n          array: chart.data.map(row => row[chart.parameters.fields] + '_std'),\r\n          opacity: 0.2,\r\n          color: 'gray',\r\n          visible: true\r\n        },\r\n        name: chart.parameters.fields,\r\n        type: 'scatter',\r\n        line: {color: '#e377c2'},\r\n        },\r\n    ],\r\n    layout: {\r\n      xaxis: {title: 'Depth [m]'},\r\n      yaxis: {title: chart.parameters.fields}\r\n    }\r\n  })\r\n\r\nconst handleGeospatialMap = (chart) => ({\r\n    parameters: chart.parameters,\r\n    metadata: chart.metadata,\r\n    subType: chart.subType,\r\n    data:[\r\n        {\r\n            x: chart.data.map(row => row.lon),\r\n            y: chart.data.map(row => row.lat),\r\n            z: chart.data.map(row => row[chart.parameters.fields]),\r\n            name: chart.parameters.fields,\r\n            type: 'heatmap',\r\n            colorbar: {\r\n                title: {\r\n                    text: `${chart.metadata.unit}`\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    layout: {\r\n        xaxis: {title: 'Longitude'},\r\n        yaxis: {title: 'Latitude'}\r\n    }    \r\n})\r\n\r\nclass Charts extends Component {\r\n\r\n    render(){\r\n\r\n        const { classes, charts } = this.props;\r\n\r\n        const processedCharts = charts.map(chart => {\r\n            switch(chart.subType){\r\n                case vizSubTypes.contourMap:\r\n                    return handleContourMap(chart);\r\n                case vizSubTypes.histogram:\r\n                    return handleHistogram(chart);\r\n                case vizSubTypes.timeSeries:\r\n                    return handleTimeSeries(chart);\r\n                case vizSubTypes.sectionMap:\r\n                    return handleSectionMap(chart);\r\n                case vizSubTypes.depthProfile:\r\n                    return handleDepthProfile(chart);\r\n                case vizSubTypes.geospatialMap:\r\n                    return handleGeospatialMap(chart);\r\n                default:\r\n                    console.log(`Subtype not found: ${chart.subType}`);\r\n                    return null;\r\n            }\r\n        })\r\n\r\n        return (\r\n            <div className={classes.chartsContainer}>\r\n                {processedCharts.map((chart, index) => (\r\n                    <div key={index} className={classes.chartWrapper}>\r\n                        <Plot\r\n                            style= {{\r\n                                position: 'relative',\r\n                                display:'inline-block'\r\n                            }}\r\n                            key={index}\r\n                            layout= {{...chart.layout,\r\n\r\n                                title: `${chart.parameters.fields} - ${chart.subType} - ${chart.parameters.dt1} - ${Number(chart.parameters.depth1) || 'Surface'}`,\r\n                                font: {... chart.layout.font,\r\n                                    color: '#ffffff'\r\n                                },\r\n    \r\n                                xaxis: {...chart.layout.xaxis,\r\n                                    color: '#ffffff'\r\n                                },\r\n    \r\n                                yaxis: {...chart.layout.yaxis,\r\n                                    color: '#ffffff'\r\n                                },\r\n    \r\n                                paper_bgcolor: colors.backgroundGray,\r\n\r\n                                annotations: [\r\n                                    {\r\n                                        text: `Source: ${chart.metadata.distributor.length < 30 ? \r\n                                                chart.metadata.distributor : \r\n                                                chart.metadata.distributor.slice(0,30)} -- Provided by Simons CMAP`,\r\n                                        font: {\r\n                                            color: 'white',\r\n                                            size: 10\r\n                                        },\r\n                                        xref: 'paper',\r\n                                        yref: 'paper',\r\n                                        yshift: -202,\r\n                                        showarrow: false,\r\n                                    }\r\n                                ]\r\n                            }}\r\n                            data={chart.data}\r\n                        />\r\n                        {/* <Typography className={classes.citation} align='center' variant='caption'>Test</Typography> */}\r\n                    </div>                    \r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Charts));","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport colors from '../Enums/colors';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '90px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    },\r\n\r\n    numberOfCharts: {\r\n        color: colors.orange\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    charts: state.charts\r\n})\r\n\r\nconst ChartsText = (props) => (\r\n    <React.Fragment>\r\n        Charts<span className={props.childClass}>{props.charts.length ? `(${props.charts.length})` : ''}</span>\r\n    </React.Fragment>\r\n)\r\n\r\nconst ToggleChartViewButton = (props) => {\r\n    const { classes, showCharts, charts } = props;\r\n\r\n    return (\r\n        <div>            \r\n            <Paper className={classes.buttonPaper} onClick={props.toggleChartView}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>{showCharts ? 'Globe' : <ChartsText charts={charts} childClass={classes.numberOfCharts}/>}</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(ToggleChartViewButton));","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n    buttonPaper: {\r\n        width: '60px',\r\n        height: '60px',\r\n        padding: theme.spacing(0.5),\r\n        position:'fixed',\r\n        left: '10px',\r\n        top: '170px',\r\n        zIndex: 2,\r\n        textDecoration:'none',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n    goBackText: {\r\n        marginTop:'0px'\r\n    }\r\n})\r\n\r\nconst GoBackButton = (props) => {\r\n    const { classes, showUI } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.buttonPaper} onClick={props.toggleShowUI}>\r\n                <img src=\"https://simonscmap.com/images/catalog/coverage_global.png\" alt=\"Globe\" height=\"36\" width=\"36\"/>\r\n                <h6 className={classes.goBackText}>{showUI ? 'Hide UI' : 'Show UI'}</h6>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(GoBackButton);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Scene } from '@esri/react-arcgis';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        margin: '0 auto 0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n    }\r\n})\r\n\r\nclass UiComponents extends React.Component {\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return false;\r\n    }\r\n\r\n    render() { \r\n        var measurementWidget = new this.props.esriModules.AreaMeasurement3D({view: this.props.view})\r\n        measurementWidget.watch('viewModel.measurement.area.text', () => {\r\n            this.props.updateDomainFromMap(measurementWidget.viewModel.tool.model.viewData.positionsGeographic);\r\n        })    \r\n    \r\n        this.props.view.ui.add(measurementWidget, 'bottom-right');\r\n        this.props.view.ui.add(new this.props.esriModules.Search({view: this.props.view}),'bottom-right')\r\n        // this.props.view.ui.add(new this.props.esriModules.Fullscreen({view: this.props.view}),'bottom-left')\r\n        return null;\r\n    }\r\n}\r\n\r\nclass MapContainer extends Component {\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <Scene\r\n                    mapProperties={{ basemap: 'satellite' }}\r\n                    viewProperties={{\r\n                        center: [-140, 30],\r\n                        zoom: 3\r\n                    }}\r\n                >\r\n                    <UiComponents\r\n                        updateDomainFromMap={this.props.updateDomainFromMap}\r\n                        esriModules={{...this.props.esriModules}}\r\n                        measurementPositions={this.props.measurementPositions}\r\n                    />\r\n                </Scene>    \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MapContainer));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport vizTypes from '../Enums/visualizationTypes';\r\nimport vizSubTypes from '../Enums/visualizationSubTypes';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n// import VisualizationController from './VisualizationController';\r\n// import VizTooltip from './VizTooltip';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport DataRetrievalForm from './DataRetrievalForm';\r\nimport DebugButton from './DebugButton';\r\nimport ClearVisualizationsButton from  './ClearVisualizationsButton';\r\n\r\nimport { showLoginDialog, snackbarOpen } from '../Redux/actions/ui';\r\nimport { queryRequestSend, storedProcedureRequestSend, getTableStats } from '../Redux/actions/visualization';\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { loadModules } from '@esri/react-arcgis';\r\n\r\n// import {COORDINATE_SYSTEM} from '@deck.gl/core';\r\n// import DeckGL, {GeoJsonLayer, ColumnLayer, GridLayer, PointCloudLayer} from 'deck.gl';\r\n// import {AmbientLight, LightingEffect} from '@deck.gl/core';\r\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\r\n\r\nimport GoBackButton from './GoBackButton';\r\nimport Charts from './Charts';\r\nimport ToggleChartViewButton from './ToggleChartViewButton';\r\nimport ToggleHideUIButton from './ToggleHideUIButton';\r\nimport MapContainer from './MapContainer';\r\n// import subTypes from '../Enums/visualizationSubTypes';\r\n\r\nconst mapVizType = (vizType) => {\r\n    const mapping = {\r\n        [vizSubTypes.sectionMap]: {\r\n            sp: 'uspSectionMap',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.sectionMap\r\n        }, \r\n        [vizSubTypes.timeSeries]: {\r\n            sp: 'uspTimeSeries',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.timeSeries\r\n        },\r\n        [vizSubTypes.histogram]: {\r\n            sp: 'uspSpaceTime',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.histogram\r\n        },\r\n        [vizSubTypes.depthProfile]: {\r\n            sp: 'uspDepthProfile',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.depthProfile\r\n        },\r\n        [vizSubTypes.geospatialMap]: {\r\n            sp: 'uspSpaceTime',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.geospatialMap\r\n        },\r\n        [vizSubTypes.contourMap]: {\r\n            sp: 'uspSpaceTime',\r\n            type: vizTypes.chart,\r\n            subType: vizSubTypes.contourMap\r\n        }\r\n    }\r\n\r\n    return mapping[vizType];\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user: state.user,\r\n    sampleData: state.sampleData,\r\n    queryRequestState: state.queryRequestState,\r\n    maps: state.maps,\r\n    charts: state.charts,\r\n    data: state.data,\r\n    storedProcedureRequestState: state.storedProcedureRequestState,\r\n    tableStats: state.tableStats\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    queryRequestSend,\r\n    retrievalRequestSend,\r\n    storedProcedureRequestSend,\r\n    snackbarOpen,\r\n    getTableStats\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    displayNone: {\r\n        display: 'none'\r\n    }\r\n})\r\n\r\nconst depthIsInvalid = (depth) => isNaN(depth) || depth < 0; \r\n\r\nconst lonIsInvalid = (lon) => isNaN(lon) || lon > 180 || lon < -180;\r\n\r\nconst latIsInvalid = (lat) => isNaN(lat) || lat > 90 || lat < -90;\r\n\r\nconst parseDate = (date) => {\r\n    var mm = date.getUTCMonth() + 1; // getMonth() is zero-based\r\n    var dd = date.getUTCDate();\r\n\r\n    console.log(date.getUTCDate());\r\n    console.log(date.getDate());\r\n\r\n    return [date.getUTCFullYear(),\r\n        (mm>9 ? '' : '0') + mm,\r\n        (dd>9 ? '' : '0') + dd\r\n        ]\r\n        .join('-');    \r\n}\r\n\r\nclass Visualization extends Component {\r\n\r\n    state = {\r\n        filteredData: [],\r\n        dateSliderPosition: 3,\r\n        variable: 'SiO2_darwin_3day',\r\n        opacity: 1,\r\n        pickedIndex: null,\r\n        pickedLon: null,\r\n        pickedLat: null,\r\n        showCharts: false,\r\n        showUI: true,\r\n\r\n        spParams: {\r\n            tableName: '',\r\n            fields: null,\r\n            depth1: '0',\r\n            depth2: '0',\r\n            dt1: '2017-05-15',\r\n            dt2: '2017-05-15',\r\n            lat1: '30',\r\n            lat2: '40',\r\n            lon1: '-60',\r\n            lon2: '-50'\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n\r\n        const esriModuleNames = [\r\n            'AreaMeasurement3D',\r\n            'Search',\r\n            'Fullscreen',\r\n            'EsriSceneView',\r\n        ];\r\n\r\n        var loadedModules = await loadModules([\r\n            'esri/widgets/AreaMeasurement3D',\r\n            'esri/widgets/Search',\r\n            'esri/widgets/Fullscreen',\r\n            'esri/views/SceneView',\r\n        ]);\r\n\r\n        var esriModules = esriModuleNames.reduce((accumulator, currentValue, currentIndex) => {\r\n            accumulator[currentValue] = loadedModules[currentIndex];\r\n            return accumulator;\r\n        }, {});\r\n\r\n        this.setState({...this.state, esriModules});\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        // Filter data on starting date\r\n        if(!prevProps.sampleData && this.props.sampleData){\r\n            this.handleDateSliderChange(null, 3);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, spParams: {...this.state.spParams, [event.target.name]: event.target.value}})\r\n    };\r\n\r\n    handleStartDateChange = (date) => {\r\n        let dateString = date instanceof Date ? parseDate(date) : date;\r\n        this.setState({...this.state, spParams: {...this.state.spParams, dt1:dateString}});\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        let dateString = date instanceof Date ? parseDate(date) : date;\r\n        this.setState({...this.state, spParams: {...this.state.spParams, dt2:dateString}});\r\n    }\r\n\r\n    parametersAreInvalid = () => {\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, fields } = this.state.spParams;\r\n\r\n        if(!fields){\r\n            console.log(fields)\r\n            this.props.snackbarOpen('Please select a variable.');\r\n            return true;\r\n        }\r\n\r\n        if(depthIsInvalid(depth1)){\r\n            this.props.snackbarOpen('Starting depth must be a positive number.');\r\n            return true;\r\n        } \r\n\r\n        if(depthIsInvalid(depth2)){\r\n            this.props.snackbarOpen('Ending depth must be a positive number.');\r\n            return true;\r\n        }\r\n\r\n        if(latIsInvalid(lat1)){\r\n            this.props.snackbarOpen('Please select a starting latitude between -90 and 90.');\r\n            return true;\r\n        }\r\n\r\n        if(latIsInvalid(lat2)){\r\n            this.props.snackbarOpen('Please select an ending latitude between -90 and 90.');\r\n            return true;\r\n        }\r\n\r\n        if(lonIsInvalid(lon1)){\r\n            this.props.snackbarOpen('Please select a starting longitude between -180 and 180.');\r\n            return true;\r\n        }\r\n\r\n        if(lonIsInvalid(lon2)){\r\n            this.props.snackbarOpen('Please select an ending longitude between -180 and 180.');\r\n            return true;\r\n        }\r\n\r\n        if(isNaN(Date.parse(dt1))){\r\n            this.props.snackbarOpen('Please enter a valid starting date.');\r\n            return true;\r\n        }\r\n\r\n        if(isNaN(Date.parse(dt2))){\r\n            this.props.snackbarOpen('Please enter a valid ending date.');\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    onVisualize = (vizType) => {\r\n        if(this.parametersAreInvalid()) return;\r\n        const { depth1, depth2, dt1, dt2, lat1, lat2, lon1, lon2, fields } = this.state.spParams;\r\n    \r\n        let mapping = mapVizType(vizType);\r\n        let parameters = {\r\n            depth1,\r\n            depth2,\r\n            dt1,\r\n            dt2,\r\n            lat1,\r\n            lat2,\r\n            lon1,\r\n            lon2,\r\n            fields: this.state.spParams.fields && this.state.spParams.fields.value,\r\n            tableName: this.state.spParams.fields && this.state.spParams.tableName,\r\n            spName: mapping.sp\r\n        };\r\n\r\n        let payload = {\r\n            parameters,\r\n            type: mapping.type,\r\n            subType: mapping.subType,\r\n            metadata: this.state.spParams.fields && this.state.spParams.fields.data\r\n        }\r\n    \r\n        this.props.storedProcedureRequestSend(payload);\r\n    }\r\n\r\n    // Update the \"fields\" state piece when the variables input changes\r\n    // Field in this case refers to a react-select option, which contains catalog metadata\r\n    updateFields = (fields) => {\r\n        if(fields) {\r\n            this.props.getTableStats(fields.data.tableName);\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: fields.data.tableName}});\r\n        } else {\r\n            this.setState({...this.state, spParams: {...this.state.spParams, fields, tableName: ''}})\r\n        }\r\n    }\r\n\r\n    handleDateSliderChange = (event, value) => {\r\n        this.setState({...this.state, \r\n            dateSliderPosition: value,\r\n            pickedInfo: null,\r\n            filteredData: this.props.sampleData.filter(datum => datum.time === `1994-01-${this.state.dateSliderPosition > 9 ? this.state.dateSliderPosition : \"0\" + this.state.dateSliderPosition}T00:00:00.000Z`)\r\n        });\r\n    }\r\n\r\n    handleOpacitySliderChange = (event, value) => {\r\n        this.setState({...this.state, opacity: value})\r\n    }\r\n\r\n    toggleChartView = () => {\r\n        this.setState({...this.state, showCharts: !this.state.showCharts});\r\n    }\r\n\r\n    toggleShowUI = () => {\r\n        this.setState({...this.state, showUI: !this.state.showUI});\r\n    }\r\n\r\n    updateDomainFromMap = (coordinates) => {\r\n        if(!coordinates || !coordinates.length) return null;\r\n        \r\n        var lons = coordinates.map(a => a[0]);\r\n        var lats = coordinates.map(a => a[1]);\r\n\r\n        var newCoordinates = {\r\n            lat1: Math.min(...lats).toFixed(3),\r\n            lat2: Math.max(...lats).toFixed(3),\r\n            lon1: Math.min(...lons).toFixed(3),\r\n            lon2: Math.max(...lons).toFixed(3)\r\n        };\r\n\r\n        this.setState({...this.state, showUI: true, spParams: {...this.state.spParams, ...newCoordinates}});\r\n    }\r\n\r\n    render(){\r\n        const { classes, tableStats } = this.props;\r\n\r\n        // const { lon1, lon2, lat1, lat2 } = this.state;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>\r\n\r\n        console.log(this.state.spParams.dt1);\r\n \r\n        return (\r\n            <div>\r\n                <DataRetrievalForm \r\n                    handleChange={this.handleChange} \r\n                    handleStartDateChange={this.handleStartDateChange} \r\n                    handleEndDateChange={this.handleEndDateChange} \r\n                    showUI={this.state.showUI}\r\n                    onVisualize={this.onVisualize}\r\n                    updateFields={this.updateFields}\r\n                    depthIsInvalid={depthIsInvalid}\r\n                    latIsInvalid={latIsInvalid}\r\n                    lonIsInvalid={lonIsInvalid}\r\n                   {...this.state.spParams}\r\n                />\r\n                <GoBackButton/>\r\n                <ToggleChartViewButton toggleChartView={this.toggleChartView} showCharts={this.state.showCharts}/>\r\n                <ToggleHideUIButton toggleShowUI={this.toggleShowUI} showUI={this.state.showUI}/>\r\n                <DebugButton statePieces={['maps','charts', 'storedProcedureRequestState', 'catalog']}/>\r\n                <ClearVisualizationsButton/>\r\n                { this.state.esriModules &&\r\n                    <div className={`${this.state.showCharts ? classes.displayNone : ''}`}>\r\n                        <MapContainer \r\n                            updateDomainFromMap={this.updateDomainFromMap}\r\n                            // measurementPositions={[[lon1, lat1, 0], [lon1, lat2, 0], [lon2, lat2, 0], [lon2, lat1, 0]]}\r\n                            esriModules={this.state.esriModules}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                {this.props.storedProcedureRequestState === states.inProgress && <LoadingSpinner customVariant='centered' size='36'/>}\r\n\r\n                <div className={this.state.showCharts ? '' : classes.displayNone}>\r\n                    <Charts/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));\r\n\r\n\r\n// Viz demo layers\r\n// new ColumnLayer({\r\n//     id: `SiO2-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 520000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [255,0,0] : [60,60,60],\r\n//     getElevation: d => d[this.state.variable],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'SiO2_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].SiO2_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`SiO2: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n//   }),\r\n\r\n//   new ColumnLayer({\r\n//     id: `DIN-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 50000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [0,255,0] : [60,60,60],\r\n//     getElevation: d => d['DIN_darwin_3day'],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'DIN_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].DIN_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`DIN: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n// }),\r\n\r\n// new ColumnLayer({\r\n//     id: `PO4-layer`,\r\n//     data: filteredData,\r\n//     diskResolution: 12,\r\n//     radius: 27000,\r\n//     extruded: true,\r\n//     pickable: true,\r\n//     autoHighlight: true,\r\n//     elevationScale: 2000000,\r\n//     getPosition: d => [d.lon, d.lat],\r\n//     getColor: d => d[this.state.variable] != null ? [43, 172, 219] : [60,60,60],\r\n//     getElevation: d => d['PO4_darwin_3day'],\r\n//     opacity: this.state.opacity,\r\n//     visible: this.state.variable === 'PO4_darwin_3day',\r\n//     onClick: (info) => {\r\n//         let value = filteredData[info.index].PO4_darwin_3day;\r\n//         if(value){\r\n//             this.setState({...this.state,\r\n//                 pickedInfo:`PO4: ${value.toPrecision(6)} mmol`,\r\n//                 pickedLon: info.object.lon,\r\n//                 pickedLat: info.object.lat\r\n//             })\r\n//         }\r\n//     }\r\n// })\r\n\r\n// Deck.gl stuff:\r\n\r\n// source: Natural Earth http://www.naturalearthdata.com/ via geojson.xyz\r\n// const COUNTRIES = 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_50m_admin_0_scale_rank.geojson';\r\n\r\n// const spatialResolutionToMetersMapping = {\r\n//     '1/12° X 1/12°': null,\r\n//     '1/2° X 1/2°': null,\r\n//     '1/25° X 1/25°': null,\r\n//     '1/4° X 1/4°': 30000,\r\n//     '1° X 1°': null,\r\n//     '4km X 4km': null,\r\n//     '70km X 70km': null,\r\n//     'Irregular': null\r\n// }\r\n\r\n// const ambientLight = new AmbientLight({\r\n//     color: [255, 255, 255],\r\n//     intensity: 1000000.0\r\n//   });\r\n\r\n// const lightingEffect = new LightingEffect({ambientLight});\r\n\r\n// const INITIAL_VIEW_STATE = {\r\n//   latitude: 35,\r\n//   longitude: -50,\r\n//   zoom: 3,\r\n//   bearing: 0,\r\n//   pitch: 10\r\n// };\r\n\r\n// let colormap = require('colormap')\r\n\r\n// const paletteSize = 48\r\n\r\n// let colors = colormap({\r\n//     colormap: 'hot',\r\n//     format: 'rba',\r\n//     alpha: [255,255],\r\n//     nshades: paletteSize\r\n// })\r\n\r\n// const minMax = (array, key) => {\r\n//     let min = array[0][key];\r\n//     let max = array[0][key];\r\n//     for(let i = 0; i < array.length; i ++){\r\n//         if(array[i][key] > max || max === null) max = array[i][key];\r\n//         if(array[i][key] < min || min === null) min = array[i][key];\r\n//     }\r\n//     return [min, max];\r\n// }\r\n\r\n// const handleGeoSpatialMap = (map) => {\r\n//     if(!map.data.length) {\r\n//         console.log(`No data in map ${map.parameters.fields}`);\r\n//         console.log(map);\r\n//         return;\r\n//     }\r\n\r\n//     let minAndMaxArray = minMax(map.data, map.parameters.fields);\r\n//     let min = minAndMaxArray[0];\r\n//     let max = minAndMaxArray[1];\r\n//     let step = (max - min) / paletteSize;\r\n//     console.log(min, max, step);\r\n\r\n//     console.log(`Rendering ${map.data.length} data points.`);\r\n\r\n//     const getColor = (row) => {\r\n//         let index = Math.floor((row[map.parameters.fields] - min) / step);\r\n//         return colors[index] ? colors[index].slice(0,3) : null;\r\n//     }\r\n\r\n//     return new PointCloudLayer({\r\n//     id: 'point-cloud-layer',\r\n//     data: map.data,\r\n//     pickable: false,\r\n//     coordinateSystem: COORDINATE_SYSTEM.LNGLAT,\r\n//     sizeUnits:'meters',\r\n//     pointSize: 28000,\r\n//     getPosition: d => d[map.parameters.fields] ? [d.lon, d.lat] : [600,600],\r\n//     getColor,\r\n//     opacity: 1,\r\n//     // material: null,\r\n//     parameters:{\r\n//         depthTest: false\r\n//       }\r\n//   })\r\n// }\r\n\r\n// const handleHexMap = (map) => {\r\n//     if(!map.data.length) {\r\n//         console.log(`No data in map ${map.parameters.fields}`);\r\n//         console.log(map);\r\n//         return;\r\n//     }\r\n\r\n//     console.log(`Binning and rendering ${map.data.length} data points.`);\r\n\r\n//     // const getColorWeight = (point) => point[map.parameters.fields];\r\n//     const reducer = (accumulator, point) => accumulator + point[map.parameters.fields];\r\n//     const getColorValue = (points) => {\r\n//         return points.reduce(reducer, 0)/points.length;\r\n//     }\r\n\r\n//     return new HexagonLayer({\r\n//     id: 'hexagon-later',\r\n//     radius: 30000,\r\n//     data: map.data,\r\n//     pickable: false,\r\n//     getColorValue,\r\n//     // colorAggregation: 'MEAN',\r\n//     // getColorWeight,\r\n//     getPosition: d => d[map.parameters.fields] ? [d.lon, d.lat] : [0,0],\r\n//   })\r\n// }\r\n\r\n/* <DeckGL \r\n                        // effects={[lightingEffect]}\r\n                        material={null}\r\n                        controller\r\n                        parameters={{\r\n                            depthTest: false\r\n                          }}\r\n                        initialViewState={INITIAL_VIEW_STATE}\r\n                        layers= {[\r\n                            new GeoJsonLayer({\r\n                                id:\"base-map\",\r\n                                data:COUNTRIES,\r\n                                stroked: true,\r\n                                filled: true,\r\n                                lineWidthMinPixels: 1,\r\n                                opacity: 1,\r\n                                getLineDashArray:[3, 3],\r\n                                getLineColor: [0,0,0],\r\n                                getFillColor: [60,60,60]\r\n                            }),\r\n                            ...processedMaps\r\n                        ]\r\n                        }\r\n                    >\r\n                    </DeckGL> */\r\n\r\n// Inside render function\r\n// const processedMaps = this.props.maps.map(map => {\r\n//     switch(map.subType){\r\n//         case subTypes.geospatialMap:\r\n//             return handleGeoSpatialMap(map);\r\n//         case subTypes.hexMap:\r\n//             return handleHexMap(map);\r\n//         default:\r\n//             console.log(`Unknown map type ${map.subType}`);\r\n//     }\r\n// })\r\n","import React from 'react'\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\r\n\r\nimport Home from './Components/Home';\r\nimport Catalog from './Components/Catalog';\r\nimport Register from './Components/Register';\r\nimport Visualization from './Components/Visualization';\r\n\r\nexport default props => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path='/apikeymanagement' component={ Home } />\r\n          <Route exact path='/' component={ Catalog } />\r\n          <Route exact path='/register' component={ Register } />\r\n          <Route exact path='/visualization' component={ Visualization } />\r\n        </Switch>\r\n    </BrowserRouter>\r\n  )","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password to log in.\r\n                    </DialogContentText>\r\n                    <form onSubmit={e => (e.preventDefault())}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            type=\"text\"\r\n                            variant='outlined'\r\n                            name='username'\r\n                            value={this.props.username}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"name\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant='outlined'\r\n                            name='password'\r\n                            value={this.props.password}\r\n                            onChange={this.props.handleChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div className={classes.wrapper}>\r\n                                <Button color=\"primary\" type='submit' onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                    Log In\r\n                                </Button>\r\n                                {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                            </div>\r\n                        </DialogActions>\r\n                    </form>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginDialog));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst styles = (theme) => {\r\n    return ({\r\n        centerText: {\r\n            textAlign: 'center'\r\n        }\r\n    })\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <Snackbar \r\n                className={classes.centerText}\r\n                autoHideDuration={4000} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n                anchorOrigin={{horizontal:'center', vertical:'top'}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackbarWrapper));","// This component is a wrapper and control center for\r\n// UI components that need to be accessible anywhere\r\n// in the application such as login dialog and snackbar.\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackbarWrapper from './SnackbarWrapper'\r\n\r\nimport { loginDialogWasCleared } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clearLoginDialog: state.clearLoginDialog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loginDialogWasCleared\r\n}\r\n\r\nclass GlobalUIComponentWrapper extends Component {\r\n\r\n    state = {\r\n        // Login dialog\r\n        username: '',\r\n        password: ''\r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.props.loginDialogWasCleared();\r\n    }\r\n\r\n    componentDidUpdate = (preProps) => {\r\n        if(this.props.clearLoginDialog) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n                <SnackbarWrapper/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalUIComponentWrapper));","import React, { Component } from 'react';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { shadows } from '@material-ui/system';\nimport grey from '@material-ui/core/colors/grey';\n\nimport './App.scss';\nimport Routes from './routes';\n\nimport GlobalUIComponentWrapper from './Components/GlobalUIComponentWrapper';\n\nimport colors from './Enums/colors';\n\nconst theme = createMuiTheme({\n  // aqua: #22A3B9\n  // orange: #FF8000\n\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n\n  palette: {\n    primary: {\n      contrastText: '#000000',\n      main: colors.orange\n    },\n\n    secondary: {\n      main: colors.aqua,\n      // contrastText: '#fff700',\n    },\n\n    background: {\n      default: grey[800],\n      paper: grey[800]\n    },\n\n    text: {\n      primary: '#ffffff',\n      secondary: colors.orange\n    }\n  },\n\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: colors.orange\n      }\n    },\n\n    MuiToolbar: {\n      root: {\n        backgroundColor: grey[800],\n        color: colors.orange\n      }\n    },\n\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      },\n\n      root: {\n        \"&$focused\": {\n          \"borderColor\": colors.orange\n        }\n      }\n    },    \n\n    MuiTableCell: {\n      root: {\n        borderBottomColor: \"rgba(0, 0, 0, 0.9)\"\n      }\n    },\n\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    },\n\n    MuiDialogContentText: {\n      root: {\n        color: 'white'\n      }\n    },\n\n    MuiDialogTitle: {\n      root: {\n        color: colors.orange\n      }\n    }\n  }\n});\n\nclass App extends Component {\n\n  componentDidCatch = (error, info) => {\n    console.log('Error:');\n    console.log(error);\n    console.log('Info');\n    console.log(info);\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <div className=\"App\">\n          <MuiThemeProvider theme={theme}>\n            <GlobalUIComponentWrapper/>\n            <Routes />\n          </MuiThemeProvider>\n        </div>\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\nLicenseManager.setLicenseKey(\"School_of_Oceanography_Simons_CMAP_1Devs_1Deployment_19_June_2020__MTU5MjUyMTIwMDAwMA==aec33f954c06d90afed06467402921bd\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}